

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Nov 09 16:52:32 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62   000000                     
    63                           ; Generated 06/04/2022 GMT
    64                           ; 
    65                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution. Publication is not required when
    79                           ;        this file is used in an embedded application.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F67K40 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97   000000                     
    98                           	psect	idataBANK1
    99   002046                     __pidataBANK1:
   100                           	callstack 0
   101                           
   102                           ;initializer for _month
   103   002046  001F               	dw	31
   104   002048  001C               	dw	28
   105   00204A  001F               	dw	31
   106   00204C  001E               	dw	30
   107   00204E  001F               	dw	31
   108   002050  001E               	dw	30
   109   002052  001F               	dw	31
   110   002054  001F               	dw	31
   111   002056  001E               	dw	30
   112   002058  001F               	dw	31
   113   00205A  001E               	dw	30
   114   00205C  001F               	dw	31
   115   000000                     _T0CON0bits	set	4053
   116   000000                     _T0CON1bits	set	4054
   117   000000                     _LATHbits	set	3968
   118   000000                     _CM1CON1bits	set	3793
   119                           
   120                           	psect	nvBANK0
   121   000089                     __pnvBANK0:
   122                           	callstack 0
   123   000089                     _year:
   124                           	callstack 0
   125   000089                     	ds	2
   126   00008B                     _day_of_month:
   127                           	callstack 0
   128   00008B                     	ds	2
   129   00008D                     _day_of_week:
   130                           	callstack 0
   131   00008D                     	ds	2
   132   00008F                     _day_of_year:
   133                           	callstack 0
   134   00008F                     	ds	2
   135   000091                     _month_num:
   136                           	callstack 0
   137   000091                     	ds	2
   138   000000                     _IPR0bits	set	3615
   139   000000                     _IPR2bits	set	3617
   140   000000                     _PIE0bits	set	3625
   141   000000                     _PIE2bits	set	3627
   142   000000                     _ANSELAbits	set	3730
   143   000000                     _TRISAbits	set	3969
   144   000000                     _TRISEbits	set	3973
   145   000000                     _TRISCbits	set	3971
   146   000000                     _TRISBbits	set	3970
   147   000000                     _TRISFbits	set	3974
   148   000000                     _TRISGbits	set	3975
   149   000000                     _DAC1CON0bits	set	3782
   150   000000                     _ADREFbits	set	3928
   151   000000                     _ADPCH	set	3935
   152   000000                     _ADRESH	set	3940
   153   000000                     _ADCON0bits	set	3936
   154   000000                     _LATAbits	set	3961
   155   000000                     _LATGbits	set	3967
   156   000000                     _TRISHbits	set	3976
   157   000000                     _TMR0L	set	4051
   158   000000                     _TMR0H	set	4052
   159   000000                     _INTCONbits	set	4082
   160   000000                     _LATEbits	set	3965
   161   000000                     _LATCbits	set	3963
   162   000000                     _LATBbits	set	3962
   163   000000                     _LATFbits	set	3966
   164   000000                     _CM1CON0bits	set	3792
   165   000000                     _CM1NCHbits	set	3794
   166   000000                     _DAC1CON1bits	set	3783
   167   000000                     _CM1PCHbits	set	3795
   168   000000                     _PIR0bits	set	3635
   169   000000                     _PIR2bits	set	3637
   170                           
   171                           	psect	smallconst
   172   000E00                     __psmallconst:
   173                           	callstack 0
   174   000E00  00                 	db	0
   175   000E01                     STR_1:
   176                           
   177                           ; BSR set to: 14
   178   000E01  25                 	db	37
   179   000E02  64                 	db	100	;'d'
   180   000E03  20                 	db	32
   181   000E04  25                 	db	37
   182   000E05  64                 	db	100	;'d'
   183   000E06  20                 	db	32
   184   000E07  00                 	db	0
   185   000E08  00                 	db	0	; dummy byte at the end
   186   000000                     
   187                           ; #config settings
   188                           
   189                           	psect	cinit
   190   001D06                     __pcinit:
   191                           	callstack 0
   192   001D06                     start_initialization:
   193                           	callstack 0
   194   001D06                     __initialization:
   195                           	callstack 0
   196                           
   197                           ; Initialize objects allocated to BANK1 (24 bytes)
   198                           ; load TBLPTR registers with __pidataBANK1
   199   001D06  0E46               	movlw	low __pidataBANK1
   200   001D08  6EF6               	movwf	tblptrl,c
   201   001D0A  0E20               	movlw	high __pidataBANK1
   202   001D0C  6EF7               	movwf	tblptrh,c
   203   001D0E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   204   001D10  6EF8               	movwf	tblptru,c
   205   001D12  EE01  F084         	lfsr	0,__pdataBANK1
   206   001D16  EE10 F018          	lfsr	1,24
   207   001D1A                     copy_data0:
   208   001D1A  0009               	tblrd		*+
   209   001D1C  CFF5 FFEE          	movff	tablat,postinc0
   210   001D20  50E5               	movf	postdec1,w,c
   211   001D22  50E1               	movf	fsr1l,w,c
   212   001D24  E1FA               	bnz	copy_data0
   213                           
   214                           ; Clear objects allocated to BANK1 (32 bytes)
   215   001D26  EE01  F064         	lfsr	0,__pbssBANK1
   216   001D2A  0E20               	movlw	32
   217   001D2C                     clear_0:
   218   001D2C  6AEE               	clrf	postinc0,c
   219   001D2E  06E8               	decf	wreg,f,c
   220   001D30  E1FD               	bnz	clear_0
   221                           
   222                           ; Clear objects allocated to BANK0 (10 bytes)
   223   001D32  EE00  F093         	lfsr	0,__pbssBANK0
   224   001D36  0E0A               	movlw	10
   225   001D38                     clear_1:
   226   001D38  6AEE               	clrf	postinc0,c
   227   001D3A  06E8               	decf	wreg,f,c
   228   001D3C  E1FD               	bnz	clear_1
   229                           
   230                           ; Clear objects allocated to COMRAM (3 bytes)
   231   001D3E  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   232   001D40  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   233   001D42  6A57               	clrf	__pbssCOMRAM& (0+255),c
   234   001D44                     end_of_initialization:
   235                           	callstack 0
   236   001D44                     __end_of__initialization:
   237                           	callstack 0
   238   001D44  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   239   001D46  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   240   001D48  0E00               	movlw	low (__Lsmallconst shr (0+16))
   241   001D4A  6EF8               	movwf	tblptru,c
   242   001D4C  0E0E               	movlw	high __Lsmallconst
   243   001D4E  6EF7               	movwf	tblptrh,c
   244   001D50  0100               	movlb	0
   245   001D52  EF88  F00C         	goto	_main	;jump to C main() function
   246                           
   247                           	psect	bssCOMRAM
   248   000057                     __pbssCOMRAM:
   249                           	callstack 0
   250   000057                     _prec:
   251                           	callstack 0
   252   000057                     	ds	2
   253   000059                     _flags:
   254                           	callstack 0
   255   000059                     	ds	1
   256                           
   257                           	psect	bssBANK0
   258   000093                     __pbssBANK0:
   259                           	callstack 0
   260   000093                     _width:
   261                           	callstack 0
   262   000093                     	ds	2
   263   000095                     _hours_in_day:
   264                           	callstack 0
   265   000095                     	ds	2
   266   000097                     _seconds_in_hour:
   267                           	callstack 0
   268   000097                     	ds	2
   269   000099                     _hour:
   270                           	callstack 0
   271   000099                     	ds	2
   272   00009B                     _seconds:
   273                           	callstack 0
   274   00009B                     	ds	2
   275                           
   276                           	psect	bssBANK1
   277   000164                     __pbssBANK1:
   278                           	callstack 0
   279   000164                     _dbuf:
   280                           	callstack 0
   281   000164                     	ds	32
   282                           
   283                           	psect	dataBANK1
   284   000184                     __pdataBANK1:
   285                           	callstack 0
   286   000184                     _month:
   287                           	callstack 0
   288   000184                     	ds	24
   289                           
   290                           	psect	cstackBANK1
   291   000100                     __pcstackBANK1:
   292                           	callstack 0
   293   000100                     main@strdate:
   294                           	callstack 0
   295                           
   296                           ; 100 bytes @ 0x0
   297   000100                     	ds	100
   298                           
   299                           	psect	cstackBANK0
   300   000060                     __pcstackBANK0:
   301                           	callstack 0
   302   000060                     ?_vfprintf:
   303                           	callstack 0
   304   000060                     vfprintf@fp:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x0
   308   000060                     	ds	2
   309   000062                     vfprintf@fmt:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x2
   313   000062                     	ds	2
   314   000064                     vfprintf@ap:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x4
   318   000064                     	ds	2
   319   000066                     ?_sprintf:
   320                           	callstack 0
   321   000066                     sprintf@s:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x6
   325   000066                     	ds	2
   326   000068                     sprintf@fmt:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x8
   330   000068                     	ds	6
   331   00006E                     sprintf@ap:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0xE
   335   00006E                     	ds	2
   336   000070                     sprintf@f:
   337                           	callstack 0
   338                           
   339                           ; 11 bytes @ 0x10
   340   000070                     	ds	11
   341   00007B                     time2String@buf:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x1B
   345   00007B                     	ds	2
   346   00007D                     time2String@h:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x1D
   350   00007D                     	ds	2
   351   00007F                     time2String@s:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0x1F
   355   00007F                     	ds	2
   356   000081                     time2String@d:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x21
   360   000081                     	ds	2
   361   000083                     time2String@m:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x23
   365   000083                     	ds	2
   366   000085                     time2String@y:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x25
   370   000085                     	ds	2
   371   000087                     ??_time2String:
   372                           
   373                           ; 1 bytes @ 0x27
   374   000087                     	ds	2
   375                           
   376                           	psect	cstackCOMRAM
   377   000001                     __pcstackCOMRAM:
   378                           	callstack 0
   379   000001                     ??_HighISR:
   380   000001                     
   381                           ; 1 bytes @ 0x0
   382   000001                     	ds	1
   383   000002                     ??_LowISR:
   384                           
   385                           ; 1 bytes @ 0x1
   386   000002                     	ds	3
   387   000005                     ?___wmul:
   388                           	callstack 0
   389   000005                     ?___awdiv:
   390                           	callstack 0
   391   000005                     ?___aodiv:
   392                           	callstack 0
   393   000005                     ?___aomod:
   394                           	callstack 0
   395   000005                     LCD_sendnibble@number:
   396                           	callstack 0
   397   000005                     LEDarray_disp_bin@number:
   398                           	callstack 0
   399   000005                     ___wmul@multiplier:
   400                           	callstack 0
   401   000005                     ___awdiv@dividend:
   402                           	callstack 0
   403   000005                     fputc@c:
   404                           	callstack 0
   405   000005                     ___aodiv@dividend:
   406                           	callstack 0
   407   000005                     ___aomod@dividend:
   408                           	callstack 0
   409                           
   410                           ; 8 bytes @ 0x4
   411   000005                     	ds	1
   412   000006                     LCD_sendbyte@type:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0x5
   416   000006                     	ds	1
   417   000007                     ??_LEDarray_disp_bin:
   418   000007                     LCD_sendbyte@Byte:
   419                           	callstack 0
   420   000007                     ___wmul@multiplicand:
   421                           	callstack 0
   422   000007                     ___awdiv@divisor:
   423                           	callstack 0
   424   000007                     fputc@fp:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x6
   428   000007                     	ds	1
   429   000008                     ??_LCD_Init:
   430   000008                     LCD_setline@line:
   431                           	callstack 0
   432   000008                     LCD_sendstring@string:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x7
   436   000008                     	ds	1
   437   000009                     ??_fputc:
   438   000009                     ___awdiv@counter:
   439                           	callstack 0
   440   000009                     ___wmul@product:
   441                           	callstack 0
   442   000009                     LEDarray_disp_bin@led_arr:
   443                           	callstack 0
   444                           
   445                           ; 18 bytes @ 0x8
   446   000009                     	ds	1
   447   00000A                     ___awdiv@sign:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x9
   451   00000A                     	ds	1
   452   00000B                     ?_sunrise:
   453                           	callstack 0
   454   00000B                     ?_sunset:
   455                           	callstack 0
   456   00000B                     ___awdiv@quotient:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0xA
   460   00000B                     	ds	2
   461   00000D                     ??_sunrise:
   462   00000D                     ??_sunset:
   463   00000D                     ___aodiv@divisor:
   464                           	callstack 0
   465   00000D                     ___aomod@divisor:
   466                           	callstack 0
   467                           
   468                           ; 8 bytes @ 0xC
   469   00000D                     	ds	1
   470   00000E                     sunrise@prevState:
   471                           	callstack 0
   472   00000E                     sunset@prevState:
   473                           	callstack 0
   474   00000E                     fputs@s:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0xD
   478   00000E                     	ds	2
   479   000010                     sunrise@sunrise_time:
   480                           	callstack 0
   481   000010                     sunset@sunset_time:
   482                           	callstack 0
   483   000010                     fputs@fp:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0xF
   487   000010                     	ds	2
   488   000012                     fputs@c:
   489                           	callstack 0
   490   000012                     time_adjuster@sunrise_time:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x11
   494   000012                     	ds	1
   495   000013                     fputs@i:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x12
   499   000013                     	ds	1
   500   000014                     time_adjuster@sunset_time:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x13
   504   000014                     	ds	1
   505   000015                     ___aodiv@counter:
   506                           	callstack 0
   507   000015                     ___aomod@counter:
   508                           	callstack 0
   509   000015                     pad@fp:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x14
   513   000015                     	ds	1
   514   000016                     ___aodiv@sign:
   515                           	callstack 0
   516   000016                     ___aomod@sign:
   517                           	callstack 0
   518   000016                     time_adjuster@solarnoon:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x15
   522   000016                     	ds	1
   523   000017                     ?_abs:
   524                           	callstack 0
   525   000017                     pad@buf:
   526                           	callstack 0
   527   000017                     abs@a:
   528                           	callstack 0
   529   000017                     ___aodiv@quotient:
   530                           	callstack 0
   531                           
   532                           ; 8 bytes @ 0x16
   533   000017                     	ds	1
   534   000018                     time_adjuster@adjustment:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x17
   538   000018                     	ds	1
   539   000019                     ??_abs:
   540   000019                     pad@p:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x18
   544   000019                     	ds	2
   545   00001B                     ??_pad:
   546   00001B                     LEDarray_disp_bin@mask:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x1A
   550   00001B                     	ds	1
   551   00001C                     pad@i:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x1B
   555   00001C                     	ds	1
   556   00001D                     LEDarray_disp_bin@ctr:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x1C
   560   00001D                     	ds	1
   561   00001E                     pad@w:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0x1D
   565   00001E                     	ds	1
   566   00001F                     ??_increment:
   567                           
   568                           ; 1 bytes @ 0x1E
   569   00001F                     	ds	1
   570   000020                     dtoa@fp:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x1F
   574   000020                     	ds	2
   575   000022                     dtoa@d:
   576                           	callstack 0
   577                           
   578                           ; 8 bytes @ 0x21
   579   000022                     	ds	8
   580   00002A                     ??_dtoa:
   581                           
   582                           ; 1 bytes @ 0x29
   583   00002A                     	ds	8
   584   000032                     _dtoa$2033:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x31
   588   000032                     	ds	2
   589   000034                     dtoa@p:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x33
   593   000034                     	ds	2
   594   000036                     dtoa@w:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x35
   598   000036                     	ds	2
   599   000038                     dtoa@n:
   600                           	callstack 0
   601                           
   602                           ; 8 bytes @ 0x37
   603   000038                     	ds	8
   604   000040                     dtoa@s:
   605                           	callstack 0
   606                           
   607                           ; 1 bytes @ 0x3F
   608   000040                     	ds	1
   609   000041                     dtoa@i:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x40
   613   000041                     	ds	2
   614   000043                     vfpfcnvrt@fp:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x42
   618   000043                     	ds	2
   619   000045                     vfpfcnvrt@fmt:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x44
   623   000045                     	ds	2
   624   000047                     vfpfcnvrt@ap:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x46
   628   000047                     	ds	2
   629   000049                     ??_vfpfcnvrt:
   630                           
   631                           ; 1 bytes @ 0x48
   632   000049                     	ds	2
   633   00004B                     vfpfcnvrt@convarg:
   634                           	callstack 0
   635                           
   636                           ; 8 bytes @ 0x4A
   637   00004B                     	ds	8
   638   000053                     vfpfcnvrt@cp:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x52
   642   000053                     	ds	2
   643   000055                     vfprintf@cfmt:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x54
   647   000055                     	ds	2
   648   000057                     
   649                           ; 1 bytes @ 0x56
   650 ;;
   651 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   652 ;;
   653 ;; *************** function _main *****************
   654 ;; Defined at:
   655 ;;		line 19 in file "main.c"
   656 ;; Parameters:    Size  Location     Type
   657 ;;		None
   658 ;; Auto vars:     Size  Location     Type
   659 ;;  strdate       100    0[BANK1 ] unsigned char [100]
   660 ;;  strtime       100    0        unsigned char [100]
   661 ;; Return value:  Size  Location     Type
   662 ;;                  1    wreg      void 
   663 ;; Registers used:
   664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   665 ;; Tracked objects:
   666 ;;		On entry : 0/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   671 ;;      Locals:         0       0     100       0       0       0       0       0       0       0       0       0       
      +0       0       0
   672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   673 ;;      Totals:         0       0     100       0       0       0       0       0       0       0       0       0       
      +0       0       0
   674 ;;Total ram usage:      100 bytes
   675 ;; Hardware stack levels required when called: 11
   676 ;; This function calls:
   677 ;;		_ADC_init
   678 ;;		_Comp1_init_falling_edge
   679 ;;		_Comp1_init_rising_edge
   680 ;;		_Interrupts_init
   681 ;;		_LCD_Init
   682 ;;		_LCD_setline
   683 ;;		_LEDarray_init
   684 ;;		_Timer0_init
   685 ;;		_day1_init
   686 ;;		_daylightsavings
   687 ;;		_increment
   688 ;;		_poweroff
   689 ;;		_streetLightInit
   690 ;;		_sunrise
   691 ;;		_sunset
   692 ;;		_test_day
   693 ;;		_time2String
   694 ;;		_time_adjuster
   695 ;; This function is called by:
   696 ;;		Startup code after reset
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           	psect	text0
   701   001910                     __ptext0:
   702                           	callstack 0
   703   001910                     _main:
   704                           	callstack 20
   705   001910                     
   706                           ;main.c: 21:     streetLightInit();
   707   001910  EC53  F010         	call	_streetLightInit	;wreg free
   708                           
   709                           ;main.c: 22:     LEDarray_init();
   710   001914  ECCF  F00F         	call	_LEDarray_init	;wreg free
   711   001918                     
   712                           ;main.c: 23:     Timer0_init();
   713   001918  EC06  F010         	call	_Timer0_init	;wreg free
   714   00191C                     
   715                           ;main.c: 24:     Comp1_init_rising_edge();
   716   00191C  ECE2  F00F         	call	_Comp1_init_rising_edge	;wreg free
   717   001920                     
   718                           ;main.c: 25:     Comp1_init_falling_edge();
   719   001920  ECF4  F00F         	call	_Comp1_init_falling_edge	;wreg free
   720   001924                     
   721                           ;main.c: 26:     Interrupts_init();
   722   001924  EC43  F010         	call	_Interrupts_init	;wreg free
   723                           
   724                           ;main.c: 27:     ADC_init();
   725   001928  EC16  F010         	call	_ADC_init	;wreg free
   726                           
   727                           ;main.c: 28:     day1_init();
   728   00192C  EC15  F00F         	call	_day1_init	;wreg free
   729   001930                     
   730                           ;main.c: 29:     LCD_Init();
   731   001930  EC37  F00C         	call	_LCD_Init	;wreg free
   732   001934                     
   733                           ;main.c: 30:     char strtime[100];;main.c: 31:     char strdate[100];;main.c: 32:     t
      +                          est_day();
   734   001934  EC2F  F010         	call	_test_day	;wreg free
   735   001938                     l282:
   736                           
   737                           ;main.c: 35:         LCD_setline(1);
   738   001938  0E01               	movlw	1
   739   00193A  EC8A  F00F         	call	_LCD_setline
   740   00193E                     
   741                           ;main.c: 36:         time2String(strdate, hour,seconds,day_of_month, month_num,year);
   742   00193E  0E00               	movlw	low main@strdate
   743   001940  0100               	movlb	0	; () banked
   744   001942  6F7B               	movwf	time2String@buf& (0+255),b
   745   001944  0E01               	movlw	high main@strdate
   746   001946  6F7C               	movwf	(time2String@buf+1)& (0+255),b
   747   001948  C099  F07D         	movff	_hour,time2String@h
   748   00194C  C09A  F07E         	movff	_hour+1,time2String@h+1
   749   001950  C09B  F07F         	movff	_seconds,time2String@s
   750   001954  C09C  F080         	movff	_seconds+1,time2String@s+1
   751   001958  C08B  F081         	movff	_day_of_month,time2String@d
   752   00195C  C08C  F082         	movff	_day_of_month+1,time2String@d+1
   753   001960  C091  F083         	movff	_month_num,time2String@m
   754   001964  C092  F084         	movff	_month_num+1,time2String@m+1
   755   001968  C089  F085         	movff	_year,time2String@y
   756   00196C  C08A  F086         	movff	_year+1,time2String@y+1
   757   001970  EC2F  F00E         	call	_time2String	;wreg free
   758   001974                     
   759                           ;main.c: 37:         increment();
   760   001974  EC60  F00A         	call	_increment	;wreg free
   761   001978                     
   762                           ;main.c: 38:         poweroff();
   763   001978  EC34  F00F         	call	_poweroff	;wreg free
   764   00197C                     
   765                           ;main.c: 39:         sunrise();
   766   00197C  ECC4  F00D         	call	_sunrise	;wreg free
   767   001980                     
   768                           ;main.c: 40:         sunset();
   769   001980  EC8D  F00D         	call	_sunset	;wreg free
   770   001984                     
   771                           ;main.c: 41:         time_adjuster(sunrise(),sunset());
   772   001984  ECC4  F00D         	call	_sunrise	;wreg free
   773   001988  C00B  F012         	movff	?_sunrise,time_adjuster@sunrise_time
   774   00198C  C00C  F013         	movff	?_sunrise+1,time_adjuster@sunrise_time+1
   775   001990  EC8D  F00D         	call	_sunset	;wreg free
   776   001994  C00B  F014         	movff	?_sunset,time_adjuster@sunset_time
   777   001998  C00C  F015         	movff	?_sunset+1,time_adjuster@sunset_time+1
   778   00199C  EC55  F00D         	call	_time_adjuster	;wreg free
   779   0019A0                     
   780                           ;main.c: 42:         daylightsavings();
   781   0019A0  ECD6  F00C         	call	_daylightsavings	;wreg free
   782   0019A4  EF9C  F00C         	goto	l282
   783   0019A8  EF38  F000         	goto	start
   784   0019AC                     __end_of_main:
   785                           	callstack 0
   786                           
   787 ;; *************** function _time_adjuster *****************
   788 ;; Defined at:
   789 ;;		line 116 in file "Functions.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;  sunrise_time    2   17[COMRAM] int 
   792 ;;  sunset_time     2   19[COMRAM] int 
   793 ;; Auto vars:     Size  Location     Type
   794 ;;  adjustment      2   23[COMRAM] int 
   795 ;;  solarnoon       2   21[COMRAM] int 
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, status,2, status,0, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   805 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   806 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   808 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   809 ;;Total ram usage:        8 bytes
   810 ;; Hardware stack levels used: 1
   811 ;; Hardware stack levels required when called: 3
   812 ;; This function calls:
   813 ;;		___awdiv
   814 ;; This function is called by:
   815 ;;		_main
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           	psect	text1
   820   001AAA                     __ptext1:
   821                           	callstack 0
   822   001AAA                     _time_adjuster:
   823                           	callstack 27
   824   001AAA                     
   825                           ;Functions.c: 118:     int adjustment = 0;
   826   001AAA  0E00               	movlw	0
   827   001AAC  6E19               	movwf	(time_adjuster@adjustment+1)^0,c
   828   001AAE  0E00               	movlw	0
   829   001AB0  6E18               	movwf	time_adjuster@adjustment^0,c
   830   001AB2                     
   831                           ;Functions.c: 119:     solarnoon = (sunrise_time + sunset_time) / 2;
   832   001AB2  5014               	movf	time_adjuster@sunset_time^0,w,c
   833   001AB4  2412               	addwf	time_adjuster@sunrise_time^0,w,c
   834   001AB6  6E05               	movwf	___awdiv@dividend^0,c
   835   001AB8  5015               	movf	(time_adjuster@sunset_time+1)^0,w,c
   836   001ABA  2013               	addwfc	(time_adjuster@sunrise_time+1)^0,w,c
   837   001ABC  6E06               	movwf	(___awdiv@dividend+1)^0,c
   838   001ABE  0E00               	movlw	0
   839   001AC0  6E08               	movwf	(___awdiv@divisor+1)^0,c
   840   001AC2  0E02               	movlw	2
   841   001AC4  6E07               	movwf	___awdiv@divisor^0,c
   842   001AC6  ECD5  F00B         	call	___awdiv	;wreg free
   843   001ACA  C005  F016         	movff	?___awdiv,time_adjuster@solarnoon
   844   001ACE  C006  F017         	movff	?___awdiv+1,time_adjuster@solarnoon+1
   845   001AD2                     
   846                           ;Functions.c: 120:     adjustment = (12 * 3600) - solarnoon;
   847   001AD2  5016               	movf	time_adjuster@solarnoon^0,w,c
   848   001AD4  08C0               	sublw	192
   849   001AD6  6E18               	movwf	time_adjuster@adjustment^0,c
   850   001AD8  5017               	movf	(time_adjuster@solarnoon+1)^0,w,c
   851   001ADA  A0D8               	btfss	status,0,c
   852   001ADC  2AE8               	incf	wreg,f,c
   853   001ADE  08A8               	sublw	168
   854   001AE0  6E19               	movwf	(time_adjuster@adjustment+1)^0,c
   855   001AE2                     
   856                           ;Functions.c: 121:     if (hour == 11 && seconds == 1800)
   857   001AE2  0E0B               	movlw	11
   858   001AE4  0100               	movlb	0	; () banked
   859   001AE6  1999               	xorwf	_hour& (0+255),w,b
   860   001AE8  119A               	iorwf	(_hour+1)& (0+255),w,b
   861   001AEA  A4D8               	btfss	status,2,c
   862   001AEC  EF7A  F00D         	goto	u2561
   863   001AF0  EF7C  F00D         	goto	u2560
   864   001AF4                     u2561:
   865   001AF4  EF8C  F00D         	goto	l401
   866   001AF8                     u2560:
   867   001AF8                     
   868                           ; BSR set to: 0
   869   001AF8  0E08               	movlw	8
   870   001AFA  199B               	xorwf	_seconds& (0+255),w,b
   871   001AFC  E107               	bnz	u2571
   872   001AFE  0E07               	movlw	7
   873   001B00  199C               	xorwf	(_seconds+1)& (0+255),w,b
   874   001B02  A4D8               	btfss	status,2,c
   875   001B04  EF86  F00D         	goto	u2571
   876   001B08  EF88  F00D         	goto	u2570
   877   001B0C                     u2571:
   878   001B0C  EF8C  F00D         	goto	l401
   879   001B10                     u2570:
   880   001B10                     
   881                           ; BSR set to: 0
   882                           ;Functions.c: 122:         seconds += adjustment;
   883   001B10  5018               	movf	time_adjuster@adjustment^0,w,c
   884   001B12  279B               	addwf	_seconds& (0+255),f,b
   885   001B14  5019               	movf	(time_adjuster@adjustment+1)^0,w,c
   886   001B16  239C               	addwfc	(_seconds+1)& (0+255),f,b
   887   001B18                     l401:
   888                           
   889                           ; BSR set to: 0
   890   001B18  0012               	return		;funcret
   891   001B1A                     __end_of_time_adjuster:
   892                           	callstack 0
   893                           
   894 ;; *************** function ___awdiv *****************
   895 ;; Defined at:
   896 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;  dividend        2    4[COMRAM] int 
   899 ;;  divisor         2    6[COMRAM] int 
   900 ;; Auto vars:     Size  Location     Type
   901 ;;  quotient        2   10[COMRAM] int 
   902 ;;  sign            1    9[COMRAM] unsigned char 
   903 ;;  counter         1    8[COMRAM] unsigned char 
   904 ;; Return value:  Size  Location     Type
   905 ;;                  2    4[COMRAM] int 
   906 ;; Registers used:
   907 ;;		wreg, status,2, status,0
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   913 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   914 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   916 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   917 ;;Total ram usage:        8 bytes
   918 ;; Hardware stack levels used: 1
   919 ;; Hardware stack levels required when called: 2
   920 ;; This function calls:
   921 ;;		Nothing
   922 ;; This function is called by:
   923 ;;		_time_adjuster
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           	psect	text2
   928   0017AA                     __ptext2:
   929                           	callstack 0
   930   0017AA                     ___awdiv:
   931                           	callstack 27
   932   0017AA  0E00               	movlw	0
   933   0017AC  6E0A               	movwf	___awdiv@sign^0,c
   934   0017AE  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
   935   0017B0  EFDE  F00B         	goto	u2390
   936   0017B4  EFDC  F00B         	goto	u2391
   937   0017B8                     u2391:
   938   0017B8  EFE4  F00B         	goto	l2808
   939   0017BC                     u2390:
   940   0017BC  6C07               	negf	___awdiv@divisor^0,c
   941   0017BE  1E08               	comf	(___awdiv@divisor+1)^0,f,c
   942   0017C0  B0D8               	btfsc	status,0,c
   943   0017C2  2A08               	incf	(___awdiv@divisor+1)^0,f,c
   944   0017C4  0E01               	movlw	1
   945   0017C6  6E0A               	movwf	___awdiv@sign^0,c
   946   0017C8                     l2808:
   947   0017C8  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
   948   0017CA  EFEB  F00B         	goto	u2400
   949   0017CE  EFE9  F00B         	goto	u2401
   950   0017D2                     u2401:
   951   0017D2  EFF1  F00B         	goto	l2814
   952   0017D6                     u2400:
   953   0017D6  6C05               	negf	___awdiv@dividend^0,c
   954   0017D8  1E06               	comf	(___awdiv@dividend+1)^0,f,c
   955   0017DA  B0D8               	btfsc	status,0,c
   956   0017DC  2A06               	incf	(___awdiv@dividend+1)^0,f,c
   957   0017DE  0E01               	movlw	1
   958   0017E0  1A0A               	xorwf	___awdiv@sign^0,f,c
   959   0017E2                     l2814:
   960   0017E2  0E00               	movlw	0
   961   0017E4  6E0C               	movwf	(___awdiv@quotient+1)^0,c
   962   0017E6  0E00               	movlw	0
   963   0017E8  6E0B               	movwf	___awdiv@quotient^0,c
   964   0017EA  5007               	movf	___awdiv@divisor^0,w,c
   965   0017EC  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
   966   0017EE  B4D8               	btfsc	status,2,c
   967   0017F0  EFFC  F00B         	goto	u2411
   968   0017F4  EFFE  F00B         	goto	u2410
   969   0017F8                     u2411:
   970   0017F8  EF26  F00C         	goto	l2836
   971   0017FC                     u2410:
   972   0017FC  0E01               	movlw	1
   973   0017FE  6E09               	movwf	___awdiv@counter^0,c
   974   001800  EF06  F00C         	goto	l2822
   975   001804                     l2820:
   976   001804  90D8               	bcf	status,0,c
   977   001806  3607               	rlcf	___awdiv@divisor^0,f,c
   978   001808  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
   979   00180A  2A09               	incf	___awdiv@counter^0,f,c
   980   00180C                     l2822:
   981   00180C  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
   982   00180E  EF0B  F00C         	goto	u2421
   983   001812  EF0D  F00C         	goto	u2420
   984   001816                     u2421:
   985   001816  EF02  F00C         	goto	l2820
   986   00181A                     u2420:
   987   00181A                     l2824:
   988   00181A  90D8               	bcf	status,0,c
   989   00181C  360B               	rlcf	___awdiv@quotient^0,f,c
   990   00181E  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
   991   001820  5007               	movf	___awdiv@divisor^0,w,c
   992   001822  5C05               	subwf	___awdiv@dividend^0,w,c
   993   001824  5008               	movf	(___awdiv@divisor+1)^0,w,c
   994   001826  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
   995   001828  A0D8               	btfss	status,0,c
   996   00182A  EF19  F00C         	goto	u2431
   997   00182E  EF1B  F00C         	goto	u2430
   998   001832                     u2431:
   999   001832  EF20  F00C         	goto	l2832
  1000   001836                     u2430:
  1001   001836  5007               	movf	___awdiv@divisor^0,w,c
  1002   001838  5E05               	subwf	___awdiv@dividend^0,f,c
  1003   00183A  5008               	movf	(___awdiv@divisor+1)^0,w,c
  1004   00183C  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  1005   00183E  800B               	bsf	___awdiv@quotient^0,0,c
  1006   001840                     l2832:
  1007   001840  90D8               	bcf	status,0,c
  1008   001842  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  1009   001844  3207               	rrcf	___awdiv@divisor^0,f,c
  1010   001846  2E09               	decfsz	___awdiv@counter^0,f,c
  1011   001848  EF0D  F00C         	goto	l2824
  1012   00184C                     l2836:
  1013   00184C  500A               	movf	___awdiv@sign^0,w,c
  1014   00184E  B4D8               	btfsc	status,2,c
  1015   001850  EF2C  F00C         	goto	u2441
  1016   001854  EF2E  F00C         	goto	u2440
  1017   001858                     u2441:
  1018   001858  EF32  F00C         	goto	l2840
  1019   00185C                     u2440:
  1020   00185C  6C0B               	negf	___awdiv@quotient^0,c
  1021   00185E  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  1022   001860  B0D8               	btfsc	status,0,c
  1023   001862  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  1024   001864                     l2840:
  1025   001864  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  1026   001868  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  1027   00186C  0012               	return		;funcret
  1028   00186E                     __end_of___awdiv:
  1029                           	callstack 0
  1030                           
  1031 ;; *************** function _time2String *****************
  1032 ;; Defined at:
  1033 ;;		line 132 in file "LCD.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;  buf             2   27[BANK0 ] PTR unsigned char 
  1036 ;;		 -> main@strdate(100), 
  1037 ;;  h               2   29[BANK0 ] unsigned int 
  1038 ;;  s               2   31[BANK0 ] unsigned int 
  1039 ;;  d               2   33[BANK0 ] unsigned int 
  1040 ;;  m               2   35[BANK0 ] unsigned int 
  1041 ;;  y               2   37[BANK0 ] unsigned int 
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;		None
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  1    wreg      void 
  1046 ;; Registers used:
  1047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1053 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1055 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1056 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1057 ;;Total ram usage:       14 bytes
  1058 ;; Hardware stack levels used: 1
  1059 ;; Hardware stack levels required when called: 10
  1060 ;; This function calls:
  1061 ;;		_LCD_sendstring
  1062 ;;		_sprintf
  1063 ;;		_sunrise
  1064 ;;		_sunset
  1065 ;; This function is called by:
  1066 ;;		_main
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           	psect	text3
  1071   001C5E                     __ptext3:
  1072                           	callstack 0
  1073   001C5E                     _time2String:
  1074                           	callstack 20
  1075   001C5E                     
  1076                           ;LCD.c: 139:     sprintf(buf,"%d %d ",sunrise(), sunset());
  1077   001C5E  C07B  F066         	movff	time2String@buf,sprintf@s
  1078   001C62  C07C  F067         	movff	time2String@buf+1,sprintf@s+1
  1079   001C66  0E01               	movlw	low STR_1
  1080   001C68  0100               	movlb	0	; () banked
  1081   001C6A  6F68               	movwf	sprintf@fmt& (0+255),b
  1082   001C6C  0E0E               	movlw	high STR_1
  1083   001C6E  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  1084   001C70  ECC4  F00D         	call	_sunrise	;wreg free
  1085   001C74  C00B  F06A         	movff	?_sunrise,?_sprintf+4
  1086   001C78  C00C  F06B         	movff	?_sunrise+1,?_sprintf+5
  1087   001C7C  EC8D  F00D         	call	_sunset	;wreg free
  1088   001C80  C00B  F06C         	movff	?_sunset,?_sprintf+6
  1089   001C84  C00C  F06D         	movff	?_sunset+1,?_sprintf+7
  1090   001C88  EC5A  F00E         	call	_sprintf	;wreg free
  1091   001C8C                     
  1092                           ;LCD.c: 140:     LCD_sendstring(buf);
  1093   001C8C  C07B  F008         	movff	time2String@buf,LCD_sendstring@string
  1094   001C90  C07C  F009         	movff	time2String@buf+1,LCD_sendstring@string+1
  1095   001C94  EC70  F00F         	call	_LCD_sendstring	;wreg free
  1096   001C98                     
  1097                           ;LCD.c: 141:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1098   001C98  0E52               	movlw	82
  1099   001C9A  0100               	movlb	0	; () banked
  1100   001C9C  6F88               	movwf	(??_time2String+1)& (0+255),b
  1101   001C9E  0E2B               	movlw	43
  1102   001CA0  6F87               	movwf	??_time2String& (0+255),b
  1103   001CA2  0E00               	movlw	0
  1104   001CA4                     u2677:
  1105   001CA4  2EE8               	decfsz	wreg,f,c
  1106   001CA6  D7FE               	bra	u2677
  1107   001CA8  2F87               	decfsz	??_time2String& (0+255),f,b
  1108   001CAA  D7FC               	bra	u2677
  1109   001CAC  2F88               	decfsz	(??_time2String+1)& (0+255),f,b
  1110   001CAE  D7FA               	bra	u2677
  1111   001CB0  F000               	nop	
  1112   001CB2  0012               	return		;funcret
  1113   001CB4                     __end_of_time2String:
  1114                           	callstack 0
  1115                           
  1116 ;; *************** function _sunset *****************
  1117 ;; Defined at:
  1118 ;;		line 103 in file "Functions.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  sunset_time     2   15[COMRAM] int 
  1123 ;;  prevState       2   13[COMRAM] int 
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  2   10[COMRAM] int 
  1126 ;; Registers used:
  1127 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1133 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1134 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1135 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1136 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1137 ;;Total ram usage:        7 bytes
  1138 ;; Hardware stack levels used: 1
  1139 ;; Hardware stack levels required when called: 3
  1140 ;; This function calls:
  1141 ;;		___wmul
  1142 ;; This function is called by:
  1143 ;;		_main
  1144 ;;		_time2String
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text4
  1149   001B1A                     __ptext4:
  1150                           	callstack 0
  1151   001B1A                     _sunset:
  1152                           	callstack 26
  1153   001B1A                     
  1154                           ;Functions.c: 104:     int prevState = LATHbits.LATH3;
  1155   001B1A  B680               	btfsc	128,3,c	;volatile
  1156   001B1C  EF92  F00D         	goto	u2351
  1157   001B20  EF96  F00D         	goto	u2350
  1158   001B24                     u2351:
  1159   001B24  6A0D               	clrf	??_sunset^0,c
  1160   001B26  2A0D               	incf	??_sunset^0,f,c
  1161   001B28  EF97  F00D         	goto	u2358
  1162   001B2C                     u2350:
  1163   001B2C  6A0D               	clrf	??_sunset^0,c
  1164   001B2E                     u2358:
  1165   001B2E  500D               	movf	??_sunset^0,w,c
  1166   001B30  6E0E               	movwf	sunset@prevState^0,c
  1167   001B32  6A0F               	clrf	(sunset@prevState+1)^0,c
  1168                           
  1169                           ;Functions.c: 107:     if (16 <= hour <= 20) {
  1170   001B34  0E00               	movlw	0
  1171   001B36  6E11               	movwf	(sunset@sunset_time+1)^0,c
  1172   001B38  0E00               	movlw	0
  1173   001B3A  6E10               	movwf	sunset@sunset_time^0,c
  1174   001B3C                     
  1175                           ;Functions.c: 108:         if (prevState == 0 && LATHbits.LATH3 == 1)
  1176   001B3C  500E               	movf	sunset@prevState^0,w,c
  1177   001B3E  100F               	iorwf	(sunset@prevState+1)^0,w,c
  1178   001B40  A4D8               	btfss	status,2,c
  1179   001B42  EFA5  F00D         	goto	u2361
  1180   001B46  EFA7  F00D         	goto	u2360
  1181   001B4A                     u2361:
  1182   001B4A  EFBF  F00D         	goto	l2776
  1183   001B4E                     u2360:
  1184   001B4E  A680               	btfss	128,3,c	;volatile
  1185   001B50  EFAC  F00D         	goto	u2371
  1186   001B54  EFAE  F00D         	goto	u2370
  1187   001B58                     u2371:
  1188   001B58  EFBF  F00D         	goto	l2776
  1189   001B5C                     u2370:
  1190   001B5C                     
  1191                           ;Functions.c: 109:             sunset_time = seconds + (hour * 3600);
  1192   001B5C  C099  F005         	movff	_hour,___wmul@multiplier
  1193   001B60  C09A  F006         	movff	_hour+1,___wmul@multiplier+1
  1194   001B64  0E0E               	movlw	14
  1195   001B66  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  1196   001B68  0E10               	movlw	16
  1197   001B6A  6E07               	movwf	___wmul@multiplicand^0,c
  1198   001B6C  ECBC  F00F         	call	___wmul	;wreg free
  1199   001B70  0100               	movlb	0	; () banked
  1200   001B72  519B               	movf	_seconds& (0+255),w,b
  1201   001B74  2405               	addwf	?___wmul^0,w,c
  1202   001B76  6E10               	movwf	sunset@sunset_time^0,c
  1203   001B78  519C               	movf	(_seconds+1)& (0+255),w,b
  1204   001B7A  2006               	addwfc	(?___wmul+1)^0,w,c
  1205   001B7C  6E11               	movwf	(sunset@sunset_time+1)^0,c
  1206   001B7E                     l2776:
  1207                           
  1208                           ;Functions.c: 111:     return sunset_time;
  1209   001B7E  C010  F00B         	movff	sunset@sunset_time,?_sunset
  1210   001B82  C011  F00C         	movff	sunset@sunset_time+1,?_sunset+1
  1211   001B86  0012               	return		;funcret
  1212   001B88                     __end_of_sunset:
  1213                           	callstack 0
  1214                           
  1215 ;; *************** function _sunrise *****************
  1216 ;; Defined at:
  1217 ;;		line 90 in file "Functions.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;		None
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;  sunrise_time    2   15[COMRAM] int 
  1222 ;;  prevState       2   13[COMRAM] int 
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  2   10[COMRAM] int 
  1225 ;; Registers used:
  1226 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1232 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1233 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1234 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1235 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1236 ;;Total ram usage:        7 bytes
  1237 ;; Hardware stack levels used: 1
  1238 ;; Hardware stack levels required when called: 3
  1239 ;; This function calls:
  1240 ;;		___wmul
  1241 ;; This function is called by:
  1242 ;;		_main
  1243 ;;		_time2String
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text5
  1248   001B88                     __ptext5:
  1249                           	callstack 0
  1250   001B88                     _sunrise:
  1251                           	callstack 26
  1252   001B88                     
  1253                           ;Functions.c: 91:     int prevState = LATHbits.LATH3;
  1254   001B88  B680               	btfsc	128,3,c	;volatile
  1255   001B8A  EFC9  F00D         	goto	u2321
  1256   001B8E  EFCD  F00D         	goto	u2320
  1257   001B92                     u2321:
  1258   001B92  6A0D               	clrf	??_sunrise^0,c
  1259   001B94  2A0D               	incf	??_sunrise^0,f,c
  1260   001B96  EFCE  F00D         	goto	u2328
  1261   001B9A                     u2320:
  1262   001B9A  6A0D               	clrf	??_sunrise^0,c
  1263   001B9C                     u2328:
  1264   001B9C  500D               	movf	??_sunrise^0,w,c
  1265   001B9E  6E0E               	movwf	sunrise@prevState^0,c
  1266   001BA0  6A0F               	clrf	(sunrise@prevState+1)^0,c
  1267                           
  1268                           ;Functions.c: 94:     if (5 <= hour <= 8) {
  1269   001BA2  0E00               	movlw	0
  1270   001BA4  6E11               	movwf	(sunrise@sunrise_time+1)^0,c
  1271   001BA6  0E00               	movlw	0
  1272   001BA8  6E10               	movwf	sunrise@sunrise_time^0,c
  1273   001BAA                     
  1274                           ;Functions.c: 95:         if (prevState == 1 && LATHbits.LATH3 == 0)
  1275   001BAA  040E               	decf	sunrise@prevState^0,w,c
  1276   001BAC  100F               	iorwf	(sunrise@prevState+1)^0,w,c
  1277   001BAE  A4D8               	btfss	status,2,c
  1278   001BB0  EFDC  F00D         	goto	u2331
  1279   001BB4  EFDE  F00D         	goto	u2330
  1280   001BB8                     u2331:
  1281   001BB8  EFF6  F00D         	goto	l2764
  1282   001BBC                     u2330:
  1283   001BBC  B680               	btfsc	128,3,c	;volatile
  1284   001BBE  EFE3  F00D         	goto	u2341
  1285   001BC2  EFE5  F00D         	goto	u2340
  1286   001BC6                     u2341:
  1287   001BC6  EFF6  F00D         	goto	l2764
  1288   001BCA                     u2340:
  1289   001BCA                     
  1290                           ;Functions.c: 96:             sunrise_time = seconds + (hour * 3600);
  1291   001BCA  C099  F005         	movff	_hour,___wmul@multiplier
  1292   001BCE  C09A  F006         	movff	_hour+1,___wmul@multiplier+1
  1293   001BD2  0E0E               	movlw	14
  1294   001BD4  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  1295   001BD6  0E10               	movlw	16
  1296   001BD8  6E07               	movwf	___wmul@multiplicand^0,c
  1297   001BDA  ECBC  F00F         	call	___wmul	;wreg free
  1298   001BDE  0100               	movlb	0	; () banked
  1299   001BE0  519B               	movf	_seconds& (0+255),w,b
  1300   001BE2  2405               	addwf	?___wmul^0,w,c
  1301   001BE4  6E10               	movwf	sunrise@sunrise_time^0,c
  1302   001BE6  519C               	movf	(_seconds+1)& (0+255),w,b
  1303   001BE8  2006               	addwfc	(?___wmul+1)^0,w,c
  1304   001BEA  6E11               	movwf	(sunrise@sunrise_time+1)^0,c
  1305   001BEC                     l2764:
  1306                           
  1307                           ;Functions.c: 98:     return sunrise_time;
  1308   001BEC  C010  F00B         	movff	sunrise@sunrise_time,?_sunrise
  1309   001BF0  C011  F00C         	movff	sunrise@sunrise_time+1,?_sunrise+1
  1310   001BF4  0012               	return		;funcret
  1311   001BF6                     __end_of_sunrise:
  1312                           	callstack 0
  1313                           
  1314 ;; *************** function ___wmul *****************
  1315 ;; Defined at:
  1316 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;  multiplier      2    4[COMRAM] unsigned int 
  1319 ;;  multiplicand    2    6[COMRAM] unsigned int 
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;  product         2    8[COMRAM] unsigned int 
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  2    4[COMRAM] unsigned int 
  1324 ;; Registers used:
  1325 ;;		wreg, status,2, status,0, prodl, prodh
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1331 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1332 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1334 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1335 ;;Total ram usage:        6 bytes
  1336 ;; Hardware stack levels used: 1
  1337 ;; Hardware stack levels required when called: 2
  1338 ;; This function calls:
  1339 ;;		Nothing
  1340 ;; This function is called by:
  1341 ;;		_sunrise
  1342 ;;		_sunset
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           	psect	text6
  1347   001F78                     __ptext6:
  1348                           	callstack 0
  1349   001F78                     ___wmul:
  1350                           	callstack 26
  1351   001F78  5005               	movf	___wmul@multiplier^0,w,c
  1352   001F7A  0207               	mulwf	___wmul@multiplicand^0,c
  1353   001F7C  CFF3 F009          	movff	prodl,___wmul@product
  1354   001F80  CFF4 F00A          	movff	prodh,___wmul@product+1
  1355   001F84  5005               	movf	___wmul@multiplier^0,w,c
  1356   001F86  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  1357   001F88  50F3               	movf	243,w,c
  1358   001F8A  260A               	addwf	(___wmul@product+1)^0,f,c
  1359   001F8C  5006               	movf	(___wmul@multiplier+1)^0,w,c
  1360   001F8E  0207               	mulwf	___wmul@multiplicand^0,c
  1361   001F90  50F3               	movf	243,w,c
  1362   001F92  260A               	addwf	(___wmul@product+1)^0,f,c
  1363   001F94  C009  F005         	movff	___wmul@product,?___wmul
  1364   001F98  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  1365   001F9C  0012               	return		;funcret
  1366   001F9E                     __end_of___wmul:
  1367                           	callstack 0
  1368                           
  1369 ;; *************** function _sprintf *****************
  1370 ;; Defined at:
  1371 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;  s               2    6[BANK0 ] PTR unsigned char 
  1374 ;;		 -> main@strdate(100), 
  1375 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  1376 ;;		 -> STR_1(7), 
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;  f              11   16[BANK0 ] struct _IO_FILE
  1379 ;;  ap              2   14[BANK0 ] PTR void [1]
  1380 ;;		 -> ?_sprintf(2), 
  1381 ;;  ret             2    0        int 
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  2    6[BANK0 ] int 
  1384 ;; Registers used:
  1385 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1391 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1392 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1394 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1395 ;;Total ram usage:       21 bytes
  1396 ;; Hardware stack levels used: 1
  1397 ;; Hardware stack levels required when called: 9
  1398 ;; This function calls:
  1399 ;;		_vfprintf
  1400 ;; This function is called by:
  1401 ;;		_time2String
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	text7
  1406   001CB4                     __ptext7:
  1407                           	callstack 0
  1408   001CB4                     _sprintf:
  1409                           	callstack 20
  1410   001CB4  0E6A               	movlw	low (?_sprintf+4)
  1411   001CB6  0100               	movlb	0	; () banked
  1412   001CB8  6F6E               	movwf	sprintf@ap& (0+255),b
  1413   001CBA  0E00               	movlw	high (?_sprintf+4)
  1414   001CBC  6F6F               	movwf	(sprintf@ap+1)& (0+255),b
  1415   001CBE  C066  F070         	movff	sprintf@s,sprintf@f
  1416   001CC2  C067  F071         	movff	sprintf@s+1,sprintf@f+1
  1417   001CC6                     
  1418                           ; BSR set to: 0
  1419   001CC6  0E00               	movlw	0
  1420   001CC8  6F74               	movwf	(sprintf@f+4)& (0+255),b
  1421   001CCA  0E00               	movlw	0
  1422   001CCC  6F73               	movwf	(sprintf@f+3)& (0+255),b
  1423   001CCE                     
  1424                           ; BSR set to: 0
  1425   001CCE  0E00               	movlw	0
  1426   001CD0  6F7A               	movwf	(sprintf@f+10)& (0+255),b
  1427   001CD2  0E00               	movlw	0
  1428   001CD4  6F79               	movwf	(sprintf@f+9)& (0+255),b
  1429   001CD6                     
  1430                           ; BSR set to: 0
  1431   001CD6  0E70               	movlw	low sprintf@f
  1432   001CD8  6F60               	movwf	vfprintf@fp& (0+255),b
  1433   001CDA  0E00               	movlw	high sprintf@f
  1434   001CDC  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  1435   001CDE  C068  F062         	movff	sprintf@fmt,vfprintf@fmt
  1436   001CE2  C069  F063         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1437   001CE6  0E6E               	movlw	low sprintf@ap
  1438   001CE8  6F64               	movwf	vfprintf@ap& (0+255),b
  1439   001CEA  0E00               	movlw	high sprintf@ap
  1440   001CEC  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
  1441   001CEE  ECAB  F00E         	call	_vfprintf	;wreg free
  1442   001CF2  0100               	movlb	0	; () banked
  1443   001CF4  5173               	movf	(sprintf@f+3)& (0+255),w,b
  1444   001CF6  2566               	addwf	sprintf@s& (0+255),w,b
  1445   001CF8  6ED9               	movwf	fsr2l,c
  1446   001CFA  5174               	movf	(sprintf@f+4)& (0+255),w,b
  1447   001CFC  2167               	addwfc	(sprintf@s+1)& (0+255),w,b
  1448   001CFE  6EDA               	movwf	fsr2h,c
  1449   001D00  0E00               	movlw	0
  1450   001D02  6EDF               	movwf	indf2,c
  1451   001D04                     
  1452                           ; BSR set to: 0
  1453   001D04  0012               	return		;funcret
  1454   001D06                     __end_of_sprintf:
  1455                           	callstack 0
  1456                           
  1457 ;; *************** function _vfprintf *****************
  1458 ;; Defined at:
  1459 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1462 ;;		 -> sprintf@f(11), 
  1463 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1464 ;;		 -> STR_1(7), 
  1465 ;;  ap              2    4[BANK0 ] PTR PTR void 
  1466 ;;		 -> sprintf@ap(2), 
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;  cfmt            2   84[COMRAM] PTR unsigned char 
  1469 ;;		 -> STR_1(7), 
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  2    0[BANK0 ] int 
  1472 ;; Registers used:
  1473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1479 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1480 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1482 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1483 ;;Total ram usage:        8 bytes
  1484 ;; Hardware stack levels used: 1
  1485 ;; Hardware stack levels required when called: 8
  1486 ;; This function calls:
  1487 ;;		_vfpfcnvrt
  1488 ;; This function is called by:
  1489 ;;		_sprintf
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493                           	psect	text8
  1494   001D56                     __ptext8:
  1495                           	callstack 0
  1496   001D56                     _vfprintf:
  1497                           	callstack 20
  1498   001D56                     
  1499                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1500   001D56  C062  F055         	movff	vfprintf@fmt,vfprintf@cfmt
  1501   001D5A  C063  F056         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1502                           
  1503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1504   001D5E  EFBF  F00E         	goto	l2726
  1505   001D62                     l2724:
  1506                           
  1507                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1508   001D62  C060  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1509   001D66  C061  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1510   001D6A  0E55               	movlw	low vfprintf@cfmt
  1511   001D6C  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1512   001D6E  0E00               	movlw	high vfprintf@cfmt
  1513   001D70  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1514   001D72  C064  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1515   001D76  C065  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1516   001D7A  ECB9  F009         	call	_vfpfcnvrt	;wreg free
  1517   001D7E                     l2726:
  1518                           
  1519                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1520   001D7E  C055  FFF6         	movff	vfprintf@cfmt,tblptrl
  1521   001D82  C056  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1522   001D86                     	if	0	;tblptru may be non-zero
  1523   001D86                     	endif
  1524   001D86                     	if	0	;tblptru may be non-zero
  1525   001D86                     	endif
  1526   001D86  0008               	tblrd		*
  1527   001D88  50F5               	movf	tablat,w,c
  1528   001D8A  0900               	iorlw	0
  1529   001D8C  A4D8               	btfss	status,2,c
  1530   001D8E  EFCB  F00E         	goto	u2201
  1531   001D92  EFCD  F00E         	goto	u2200
  1532   001D96                     u2201:
  1533   001D96  EFB1  F00E         	goto	l2724
  1534   001D9A                     u2200:
  1535   001D9A                     
  1536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1537   001D9A  0E00               	movlw	0
  1538   001D9C  0100               	movlb	0	; () banked
  1539   001D9E  6F61               	movwf	(?_vfprintf+1)& (0+255),b
  1540   001DA0  0E00               	movlw	0
  1541   001DA2  6F60               	movwf	?_vfprintf& (0+255),b
  1542   001DA4                     
  1543                           ; BSR set to: 0
  1544   001DA4  0012               	return		;funcret
  1545   001DA6                     __end_of_vfprintf:
  1546                           	callstack 0
  1547                           
  1548 ;; *************** function _vfpfcnvrt *****************
  1549 ;; Defined at:
  1550 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1553 ;;		 -> sprintf@f(11), 
  1554 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1555 ;;		 -> vfprintf@cfmt(2), 
  1556 ;;  ap              2   70[COMRAM] PTR PTR void 
  1557 ;;		 -> sprintf@ap(2), 
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;  convarg         8   74[COMRAM] struct .
  1560 ;;  cp              2   82[COMRAM] PTR unsigned char 
  1561 ;;		 -> STR_1(7), 
  1562 ;;  i               2    0        int 
  1563 ;;  done            2    0        int 
  1564 ;;  c               1    0        unsigned char 
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  1    wreg      void 
  1567 ;; Registers used:
  1568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1574 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1575 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1576 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1577 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1578 ;;Total ram usage:       18 bytes
  1579 ;; Hardware stack levels used: 1
  1580 ;; Hardware stack levels required when called: 7
  1581 ;; This function calls:
  1582 ;;		_dtoa
  1583 ;;		_fputc
  1584 ;; This function is called by:
  1585 ;;		_vfprintf
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           
  1589                           	psect	text9
  1590   001372                     __ptext9:
  1591                           	callstack 0
  1592   001372                     _vfpfcnvrt:
  1593                           	callstack 20
  1594   001372                     
  1595                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1596   001372  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1597   001376  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1598   00137A  CFDE FFF6          	movff	postinc2,tblptrl
  1599   00137E  CFDD FFF7          	movff	postdec2,tblptrh
  1600   001382                     	if	0	;tblptru may be non-zero
  1601   001382                     	endif
  1602   001382                     	if	0	;tblptru may be non-zero
  1603   001382                     	endif
  1604   001382  0008               	tblrd		*
  1605   001384  50F5               	movf	tablat,w,c
  1606   001386  0A25               	xorlw	37
  1607   001388  A4D8               	btfss	status,2,c
  1608   00138A  EFC9  F009         	goto	u2161
  1609   00138E  EFCB  F009         	goto	u2160
  1610   001392                     u2161:
  1611   001392  EF4B  F00A         	goto	l2700
  1612   001396                     u2160:
  1613   001396                     
  1614                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1615   001396  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1616   00139A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1617   00139E  2ADE               	incf	postinc2,f,c
  1618   0013A0  0E00               	movlw	0
  1619   0013A2  22DD               	addwfc	postdec2,f,c
  1620   0013A4                     
  1621                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1622   0013A4  0E00               	movlw	0
  1623   0013A6  0100               	movlb	0	; () banked
  1624   0013A8  6F94               	movwf	(_width+1)& (0+255),b
  1625   0013AA  0E00               	movlw	0
  1626   0013AC  6F93               	movwf	_width& (0+255),b
  1627   0013AE  C093  F059         	movff	_width,_flags
  1628   0013B2                     
  1629                           ; BSR set to: 0
  1630                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1631   0013B2  6857               	setf	_prec^0,c
  1632   0013B4  6858               	setf	(_prec+1)^0,c
  1633   0013B6                     
  1634                           ; BSR set to: 0
  1635                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1636   0013B6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1637   0013BA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1638   0013BE  CFDE F053          	movff	postinc2,vfpfcnvrt@cp
  1639   0013C2  CFDD F054          	movff	postdec2,vfpfcnvrt@cp+1
  1640   0013C6                     
  1641                           ; BSR set to: 0
  1642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1643   0013C6  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1644   0013CA  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1645   0013CE                     	if	0	;tblptru may be non-zero
  1646   0013CE                     	endif
  1647   0013CE                     	if	0	;tblptru may be non-zero
  1648   0013CE                     	endif
  1649   0013CE  0008               	tblrd		*
  1650   0013D0  50F5               	movf	tablat,w,c
  1651   0013D2  0A64               	xorlw	100
  1652   0013D4  B4D8               	btfsc	status,2,c
  1653   0013D6  EFEF  F009         	goto	u2171
  1654   0013DA  EFF1  F009         	goto	u2170
  1655   0013DE                     u2171:
  1656   0013DE  EFFF  F009         	goto	l2690
  1657   0013E2                     u2170:
  1658   0013E2                     
  1659                           ; BSR set to: 0
  1660   0013E2  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1661   0013E6  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1662   0013EA                     	if	0	;tblptru may be non-zero
  1663   0013EA                     	endif
  1664   0013EA                     	if	0	;tblptru may be non-zero
  1665   0013EA                     	endif
  1666   0013EA  0008               	tblrd		*
  1667   0013EC  50F5               	movf	tablat,w,c
  1668   0013EE  0A69               	xorlw	105
  1669   0013F0  A4D8               	btfss	status,2,c
  1670   0013F2  EFFD  F009         	goto	u2181
  1671   0013F6  EFFF  F009         	goto	u2180
  1672   0013FA                     u2181:
  1673   0013FA  EF42  F00A         	goto	l2696
  1674   0013FE                     u2180:
  1675   0013FE                     l2690:
  1676                           
  1677                           ; BSR set to: 0
  1678                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1679   0013FE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1680   001402  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1681   001406  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1682   00140A  0E02               	movlw	2
  1683   00140C  26DE               	addwf	postinc2,f,c
  1684   00140E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1685   001412  0E00               	movlw	0
  1686   001414  22DD               	addwfc	postdec2,f,c
  1687   001416  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1688   00141A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1689   00141E  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg
  1690   001422  CFDD F04C          	movff	postdec2,vfpfcnvrt@convarg+1
  1691   001426  0E00               	movlw	0
  1692   001428  BE4C               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1693   00142A  0EFF               	movlw	-1
  1694   00142C  6E4D               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1695   00142E  6E4E               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1696   001430  6E4F               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1697   001432  6E50               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1698   001434  6E51               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1699   001436  6E52               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1700                           
  1701                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1702   001438  0E01               	movlw	1
  1703   00143A  2453               	addwf	vfpfcnvrt@cp^0,w,c
  1704   00143C  6E49               	movwf	??_vfpfcnvrt^0,c
  1705   00143E  0E00               	movlw	0
  1706   001440  2054               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1707   001442  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1708   001444  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1709   001448  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1710   00144C  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  1711   001450  C04A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1712   001454                     
  1713                           ; BSR set to: 0
  1714                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1715   001454  C043  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  1716   001458  C044  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1717   00145C  C04B  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  1718   001460  C04C  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1719   001464  C04D  F024         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1720   001468  C04E  F025         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1721   00146C  C04F  F026         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1722   001470  C050  F027         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1723   001474  C051  F028         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1724   001478  C052  F029         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1725   00147C  EC05  F007         	call	_dtoa	;wreg free
  1726   001480  EF5F  F00A         	goto	l1198
  1727   001484                     l2696:
  1728                           
  1729                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1730   001484  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1731   001488  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1732   00148C  2ADE               	incf	postinc2,f,c
  1733   00148E  0E00               	movlw	0
  1734   001490  22DD               	addwfc	postdec2,f,c
  1735   001492  EF5F  F00A         	goto	l1198
  1736   001496                     l2700:
  1737                           
  1738                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1739   001496  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1740   00149A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1741   00149E  CFDE FFF6          	movff	postinc2,tblptrl
  1742   0014A2  CFDD FFF7          	movff	postdec2,tblptrh
  1743   0014A6                     	if	0	;tblptru may be non-zero
  1744   0014A6                     	endif
  1745   0014A6                     	if	0	;tblptru may be non-zero
  1746   0014A6                     	endif
  1747   0014A6  0008               	tblrd		*
  1748   0014A8  50F5               	movf	tablat,w,c
  1749   0014AA  6E05               	movwf	fputc@c^0,c
  1750   0014AC  6A06               	clrf	(fputc@c+1)^0,c
  1751   0014AE  C043  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1752   0014B2  C044  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1753   0014B6  EC70  F00B         	call	_fputc	;wreg free
  1754   0014BA  EF42  F00A         	goto	l2696
  1755   0014BE                     l1198:
  1756   0014BE  0012               	return		;funcret
  1757   0014C0                     __end_of_vfpfcnvrt:
  1758                           	callstack 0
  1759                           
  1760 ;; *************** function _dtoa *****************
  1761 ;; Defined at:
  1762 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  1765 ;;		 -> sprintf@f(11), 
  1766 ;;  d               8   33[COMRAM] long long 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  n               8   55[COMRAM] long long 
  1769 ;;  i               2   64[COMRAM] int 
  1770 ;;  w               2   53[COMRAM] int 
  1771 ;;  p               2   51[COMRAM] int 
  1772 ;;  s               1   63[COMRAM] unsigned char 
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  1    wreg      void 
  1775 ;; Registers used:
  1776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1782 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1783 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1784 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1785 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1786 ;;Total ram usage:       35 bytes
  1787 ;; Hardware stack levels used: 1
  1788 ;; Hardware stack levels required when called: 6
  1789 ;; This function calls:
  1790 ;;		___aodiv
  1791 ;;		___aomod
  1792 ;;		_abs
  1793 ;;		_pad
  1794 ;; This function is called by:
  1795 ;;		_vfpfcnvrt
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text10
  1800   000E0A                     __ptext10:
  1801                           	callstack 0
  1802   000E0A                     _dtoa:
  1803                           	callstack 20
  1804   000E0A                     
  1805                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1806   000E0A  C022  F038         	movff	dtoa@d,dtoa@n
  1807   000E0E  C023  F039         	movff	dtoa@d+1,dtoa@n+1
  1808   000E12  C024  F03A         	movff	dtoa@d+2,dtoa@n+2
  1809   000E16  C025  F03B         	movff	dtoa@d+3,dtoa@n+3
  1810   000E1A  C026  F03C         	movff	dtoa@d+4,dtoa@n+4
  1811   000E1E  C027  F03D         	movff	dtoa@d+5,dtoa@n+5
  1812   000E22  C028  F03E         	movff	dtoa@d+6,dtoa@n+6
  1813   000E26  C029  F03F         	movff	dtoa@d+7,dtoa@n+7
  1814   000E2A                     
  1815                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1816   000E2A  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  1817   000E2C  EF1A  F007         	goto	u2021
  1818   000E30  EF1D  F007         	goto	u2020
  1819   000E34                     u2021:
  1820   000E34  0E01               	movlw	1
  1821   000E36  EF1E  F007         	goto	u2030
  1822   000E3A                     u2020:
  1823   000E3A  0E00               	movlw	0
  1824   000E3C                     u2030:
  1825   000E3C  6E40               	movwf	dtoa@s^0,c
  1826   000E3E                     
  1827                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1828   000E3E  5040               	movf	dtoa@s^0,w,c
  1829   000E40  B4D8               	btfsc	status,2,c
  1830   000E42  EF25  F007         	goto	u2041
  1831   000E46  EF27  F007         	goto	u2040
  1832   000E4A                     u2041:
  1833   000E4A  EF37  F007         	goto	l2612
  1834   000E4E                     u2040:
  1835   000E4E                     
  1836                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1837   000E4E  1E3F               	comf	(dtoa@n+7)^0,f,c
  1838   000E50  1E3E               	comf	(dtoa@n+6)^0,f,c
  1839   000E52  1E3D               	comf	(dtoa@n+5)^0,f,c
  1840   000E54  1E3C               	comf	(dtoa@n+4)^0,f,c
  1841   000E56  1E3B               	comf	(dtoa@n+3)^0,f,c
  1842   000E58  1E3A               	comf	(dtoa@n+2)^0,f,c
  1843   000E5A  1E39               	comf	(dtoa@n+1)^0,f,c
  1844   000E5C  6C38               	negf	dtoa@n^0,c
  1845   000E5E  0E00               	movlw	0
  1846   000E60  2239               	addwfc	(dtoa@n+1)^0,f,c
  1847   000E62  223A               	addwfc	(dtoa@n+2)^0,f,c
  1848   000E64  223B               	addwfc	(dtoa@n+3)^0,f,c
  1849   000E66  223C               	addwfc	(dtoa@n+4)^0,f,c
  1850   000E68  223D               	addwfc	(dtoa@n+5)^0,f,c
  1851   000E6A  223E               	addwfc	(dtoa@n+6)^0,f,c
  1852   000E6C  223F               	addwfc	(dtoa@n+7)^0,f,c
  1853   000E6E                     l2612:
  1854                           
  1855                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1856   000E6E  BE58               	btfsc	(_prec+1)^0,7,c
  1857   000E70  EF44  F007         	goto	u2050
  1858   000E74  5058               	movf	(_prec+1)^0,w,c
  1859   000E76  E106               	bnz	u2051
  1860   000E78  0457               	decf	_prec^0,w,c
  1861   000E7A  B0D8               	btfsc	status,0,c
  1862   000E7C  EF42  F007         	goto	u2051
  1863   000E80  EF44  F007         	goto	u2050
  1864   000E84                     u2051:
  1865   000E84  EF4A  F007         	goto	l1177
  1866   000E88                     u2050:
  1867   000E88  0E00               	movlw	0
  1868   000E8A  6E35               	movwf	(dtoa@p+1)^0,c
  1869   000E8C  0E01               	movlw	1
  1870   000E8E  6E34               	movwf	dtoa@p^0,c
  1871   000E90  EF4E  F007         	goto	l1179
  1872   000E94                     l1177:
  1873   000E94  C057  F034         	movff	_prec,dtoa@p
  1874   000E98  C058  F035         	movff	_prec+1,dtoa@p+1
  1875   000E9C                     l1179:
  1876                           
  1877                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1878   000E9C  C093  F036         	movff	_width,dtoa@w
  1879   000EA0  C094  F037         	movff	_width+1,dtoa@w+1
  1880   000EA4                     
  1881                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1882   000EA4  5040               	movf	dtoa@s^0,w,c
  1883   000EA6  B4D8               	btfsc	status,2,c
  1884   000EA8  EF58  F007         	goto	u2061
  1885   000EAC  EF5A  F007         	goto	u2060
  1886   000EB0                     u2061:
  1887   000EB0  EF71  F007         	goto	l1180
  1888   000EB4                     u2060:
  1889   000EB4                     
  1890                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1891   000EB4  0636               	decf	dtoa@w^0,f,c
  1892   000EB6  A0D8               	btfss	status,0,c
  1893   000EB8  0637               	decf	(dtoa@w+1)^0,f,c
  1894   000EBA                     
  1895                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1896   000EBA  5040               	movf	dtoa@s^0,w,c
  1897   000EBC  A4D8               	btfss	status,2,c
  1898   000EBE  EF63  F007         	goto	u2071
  1899   000EC2  EF65  F007         	goto	u2070
  1900   000EC6                     u2071:
  1901   000EC6  EF6B  F007         	goto	l2624
  1902   000ECA                     u2070:
  1903   000ECA  0E00               	movlw	0
  1904   000ECC  6E33               	movwf	(_dtoa$2033+1)^0,c
  1905   000ECE  0E2B               	movlw	43
  1906   000ED0  6E32               	movwf	_dtoa$2033^0,c
  1907   000ED2  EF6F  F007         	goto	l2626
  1908   000ED6                     l2624:
  1909   000ED6  0E00               	movlw	0
  1910   000ED8  6E33               	movwf	(_dtoa$2033+1)^0,c
  1911   000EDA  0E2D               	movlw	45
  1912   000EDC  6E32               	movwf	_dtoa$2033^0,c
  1913   000EDE                     l2626:
  1914   000EDE  C032  F040         	movff	_dtoa$2033,dtoa@s
  1915   000EE2                     l1180:
  1916                           
  1917                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1918   000EE2  0E00               	movlw	0
  1919   000EE4  6E42               	movwf	(dtoa@i+1)^0,c
  1920   000EE6  0E1F               	movlw	31
  1921   000EE8  6E41               	movwf	dtoa@i^0,c
  1922   000EEA                     
  1923                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1924   000EEA  0E00               	movlw	0
  1925   000EEC  0101               	movlb	1	; () banked
  1926   000EEE  6F83               	movwf	(_dbuf+31)& (0+255),b
  1927                           
  1928                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1929   000EF0  EFF6  F007         	goto	l2640
  1930   000EF4                     l2630:
  1931                           
  1932                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1933   000EF4  0641               	decf	dtoa@i^0,f,c
  1934   000EF6  A0D8               	btfss	status,0,c
  1935   000EF8  0642               	decf	(dtoa@i+1)^0,f,c
  1936   000EFA                     
  1937                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1938   000EFA  0E64               	movlw	low _dbuf
  1939   000EFC  2441               	addwf	dtoa@i^0,w,c
  1940   000EFE  6ED9               	movwf	fsr2l,c
  1941   000F00  0E01               	movlw	high _dbuf
  1942   000F02  2042               	addwfc	(dtoa@i+1)^0,w,c
  1943   000F04  6EDA               	movwf	fsr2h,c
  1944   000F06  C038  F005         	movff	dtoa@n,___aomod@dividend
  1945   000F0A  C039  F006         	movff	dtoa@n+1,___aomod@dividend+1
  1946   000F0E  C03A  F007         	movff	dtoa@n+2,___aomod@dividend+2
  1947   000F12  C03B  F008         	movff	dtoa@n+3,___aomod@dividend+3
  1948   000F16  C03C  F009         	movff	dtoa@n+4,___aomod@dividend+4
  1949   000F1A  C03D  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  1950   000F1E  C03E  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  1951   000F22  C03F  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  1952   000F26  0E0A               	movlw	10
  1953   000F28  6E0D               	movwf	___aomod@divisor^0,c
  1954   000F2A  0E00               	movlw	0
  1955   000F2C  6E0E               	movwf	(___aomod@divisor+1)^0,c
  1956   000F2E  0E00               	movlw	0
  1957   000F30  6E0F               	movwf	(___aomod@divisor+2)^0,c
  1958   000F32  0E00               	movlw	0
  1959   000F34  6E10               	movwf	(___aomod@divisor+3)^0,c
  1960   000F36  0E00               	movlw	0
  1961   000F38  6E11               	movwf	(___aomod@divisor+4)^0,c
  1962   000F3A  0E00               	movlw	0
  1963   000F3C  6E12               	movwf	(___aomod@divisor+5)^0,c
  1964   000F3E  0E00               	movlw	0
  1965   000F40  6E13               	movwf	(___aomod@divisor+6)^0,c
  1966   000F42  0E00               	movlw	0
  1967   000F44  6E14               	movwf	(___aomod@divisor+7)^0,c
  1968   000F46  EC07  F009         	call	___aomod	;wreg free
  1969   000F4A  C005  F02A         	movff	?___aomod,??_dtoa
  1970   000F4E  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  1971   000F52  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  1972   000F56  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  1973   000F5A  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  1974   000F5E  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  1975   000F62  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  1976   000F66  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  1977   000F6A  C02A  F017         	movff	??_dtoa,abs@a
  1978   000F6E  C02B  F018         	movff	??_dtoa+1,abs@a+1
  1979   000F72  ECF5  F00E         	call	_abs	;wreg free
  1980   000F76  5017               	movf	?_abs^0,w,c
  1981   000F78  0F30               	addlw	48
  1982   000F7A  6EDF               	movwf	indf2,c
  1983   000F7C                     
  1984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1985   000F7C  0634               	decf	dtoa@p^0,f,c
  1986   000F7E  A0D8               	btfss	status,0,c
  1987   000F80  0635               	decf	(dtoa@p+1)^0,f,c
  1988   000F82                     
  1989                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1990   000F82  0636               	decf	dtoa@w^0,f,c
  1991   000F84  A0D8               	btfss	status,0,c
  1992   000F86  0637               	decf	(dtoa@w+1)^0,f,c
  1993   000F88                     
  1994                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1995   000F88  C038  F005         	movff	dtoa@n,___aodiv@dividend
  1996   000F8C  C039  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  1997   000F90  C03A  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  1998   000F94  C03B  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  1999   000F98  C03C  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  2000   000F9C  C03D  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  2001   000FA0  C03E  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  2002   000FA4  C03F  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  2003   000FA8  0E0A               	movlw	10
  2004   000FAA  6E0D               	movwf	___aodiv@divisor^0,c
  2005   000FAC  0E00               	movlw	0
  2006   000FAE  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  2007   000FB0  0E00               	movlw	0
  2008   000FB2  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  2009   000FB4  0E00               	movlw	0
  2010   000FB6  6E10               	movwf	(___aodiv@divisor+3)^0,c
  2011   000FB8  0E00               	movlw	0
  2012   000FBA  6E11               	movwf	(___aodiv@divisor+4)^0,c
  2013   000FBC  0E00               	movlw	0
  2014   000FBE  6E12               	movwf	(___aodiv@divisor+5)^0,c
  2015   000FC0  0E00               	movlw	0
  2016   000FC2  6E13               	movwf	(___aodiv@divisor+6)^0,c
  2017   000FC4  0E00               	movlw	0
  2018   000FC6  6E14               	movwf	(___aodiv@divisor+7)^0,c
  2019   000FC8  EC43  F008         	call	___aodiv	;wreg free
  2020   000FCC  C005  F038         	movff	?___aodiv,dtoa@n
  2021   000FD0  C006  F039         	movff	?___aodiv+1,dtoa@n+1
  2022   000FD4  C007  F03A         	movff	?___aodiv+2,dtoa@n+2
  2023   000FD8  C008  F03B         	movff	?___aodiv+3,dtoa@n+3
  2024   000FDC  C009  F03C         	movff	?___aodiv+4,dtoa@n+4
  2025   000FE0  C00A  F03D         	movff	?___aodiv+5,dtoa@n+5
  2026   000FE4  C00B  F03E         	movff	?___aodiv+6,dtoa@n+6
  2027   000FE8  C00C  F03F         	movff	?___aodiv+7,dtoa@n+7
  2028   000FEC                     l2640:
  2029                           
  2030                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2031   000FEC  BE42               	btfsc	(dtoa@i+1)^0,7,c
  2032   000FEE  EF01  F008         	goto	u2081
  2033   000FF2  5042               	movf	(dtoa@i+1)^0,w,c
  2034   000FF4  E108               	bnz	u2080
  2035   000FF6  0441               	decf	dtoa@i^0,w,c
  2036   000FF8  A0D8               	btfss	status,0,c
  2037   000FFA  EF01  F008         	goto	u2081
  2038   000FFE  EF03  F008         	goto	u2080
  2039   001002                     u2081:
  2040   001002  EF1F  F008         	goto	l2646
  2041   001006                     u2080:
  2042   001006  5038               	movf	dtoa@n^0,w,c
  2043   001008  1039               	iorwf	(dtoa@n+1)^0,w,c
  2044   00100A  103A               	iorwf	(dtoa@n+2)^0,w,c
  2045   00100C  103B               	iorwf	(dtoa@n+3)^0,w,c
  2046   00100E  103C               	iorwf	(dtoa@n+4)^0,w,c
  2047   001010  103D               	iorwf	(dtoa@n+5)^0,w,c
  2048   001012  103E               	iorwf	(dtoa@n+6)^0,w,c
  2049   001014  103F               	iorwf	(dtoa@n+7)^0,w,c
  2050   001016  A4D8               	btfss	status,2,c
  2051   001018  EF10  F008         	goto	u2091
  2052   00101C  EF12  F008         	goto	u2090
  2053   001020                     u2091:
  2054   001020  EF7A  F007         	goto	l2630
  2055   001024                     u2090:
  2056   001024  BE35               	btfsc	(dtoa@p+1)^0,7,c
  2057   001026  EF1F  F008         	goto	u2100
  2058   00102A  5035               	movf	(dtoa@p+1)^0,w,c
  2059   00102C  E106               	bnz	u2101
  2060   00102E  0434               	decf	dtoa@p^0,w,c
  2061   001030  B0D8               	btfsc	status,0,c
  2062   001032  EF1D  F008         	goto	u2101
  2063   001036  EF1F  F008         	goto	u2100
  2064   00103A                     u2101:
  2065   00103A  EF7A  F007         	goto	l2630
  2066   00103E                     u2100:
  2067   00103E                     l2646:
  2068                           
  2069                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2070   00103E  5040               	movf	dtoa@s^0,w,c
  2071   001040  B4D8               	btfsc	status,2,c
  2072   001042  EF25  F008         	goto	u2111
  2073   001046  EF27  F008         	goto	u2110
  2074   00104A                     u2111:
  2075   00104A  EF32  F008         	goto	l2652
  2076   00104E                     u2110:
  2077   00104E                     
  2078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2079   00104E  0641               	decf	dtoa@i^0,f,c
  2080   001050  A0D8               	btfss	status,0,c
  2081   001052  0642               	decf	(dtoa@i+1)^0,f,c
  2082   001054                     
  2083                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2084   001054  0E64               	movlw	low _dbuf
  2085   001056  2441               	addwf	dtoa@i^0,w,c
  2086   001058  6ED9               	movwf	fsr2l,c
  2087   00105A  0E01               	movlw	high _dbuf
  2088   00105C  2042               	addwfc	(dtoa@i+1)^0,w,c
  2089   00105E  6EDA               	movwf	fsr2h,c
  2090   001060  C040  FFDF         	movff	dtoa@s,indf2
  2091   001064                     l2652:
  2092                           
  2093                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2094   001064  C020  F015         	movff	dtoa@fp,pad@fp
  2095   001068  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  2096   00106C  0E64               	movlw	low _dbuf
  2097   00106E  2441               	addwf	dtoa@i^0,w,c
  2098   001070  6E17               	movwf	pad@buf^0,c
  2099   001072  0E01               	movlw	high _dbuf
  2100   001074  2042               	addwfc	(dtoa@i+1)^0,w,c
  2101   001076  6E18               	movwf	(pad@buf+1)^0,c
  2102   001078  C036  F019         	movff	dtoa@w,pad@p
  2103   00107C  C037  F01A         	movff	dtoa@w+1,pad@p+1
  2104   001080  EC18  F00D         	call	_pad	;wreg free
  2105   001084  0012               	return		;funcret
  2106   001086                     __end_of_dtoa:
  2107                           	callstack 0
  2108                           
  2109 ;; *************** function _pad *****************
  2110 ;; Defined at:
  2111 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  2114 ;;		 -> sprintf@f(11), 
  2115 ;;  buf             2   22[COMRAM] PTR unsigned char 
  2116 ;;		 -> dbuf(32), 
  2117 ;;  p               2   24[COMRAM] int 
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;  w               2   29[COMRAM] int 
  2120 ;;  i               2   27[COMRAM] int 
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2130 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2131 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2132 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2133 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2134 ;;Total ram usage:       11 bytes
  2135 ;; Hardware stack levels used: 1
  2136 ;; Hardware stack levels required when called: 5
  2137 ;; This function calls:
  2138 ;;		_fputc
  2139 ;;		_fputs
  2140 ;; This function is called by:
  2141 ;;		_dtoa
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           	psect	text11
  2146   001A30                     __ptext11:
  2147                           	callstack 0
  2148   001A30                     _pad:
  2149                           	callstack 20
  2150   001A30                     
  2151                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2152   001A30  BE1A               	btfsc	(pad@p+1)^0,7,c
  2153   001A32  EF1D  F00D         	goto	u1991
  2154   001A36  EF1F  F00D         	goto	u1990
  2155   001A3A                     u1991:
  2156   001A3A  EF25  F00D         	goto	l2584
  2157   001A3E                     u1990:
  2158   001A3E  C019  F01E         	movff	pad@p,pad@w
  2159   001A42  C01A  F01F         	movff	pad@p+1,pad@w+1
  2160   001A46  EF29  F00D         	goto	l1168
  2161   001A4A                     l2584:
  2162   001A4A  0E00               	movlw	0
  2163   001A4C  6E1F               	movwf	(pad@w+1)^0,c
  2164   001A4E  0E00               	movlw	0
  2165   001A50  6E1E               	movwf	pad@w^0,c
  2166   001A52                     l1168:
  2167                           
  2168                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2169   001A52  0E00               	movlw	0
  2170   001A54  6E1D               	movwf	(pad@i+1)^0,c
  2171   001A56  0E00               	movlw	0
  2172   001A58  6E1C               	movwf	pad@i^0,c
  2173                           
  2174                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2175   001A5A  EF3B  F00D         	goto	l2590
  2176   001A5E                     l2586:
  2177                           
  2178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2179   001A5E  0E00               	movlw	0
  2180   001A60  6E06               	movwf	(fputc@c+1)^0,c
  2181   001A62  0E20               	movlw	32
  2182   001A64  6E05               	movwf	fputc@c^0,c
  2183   001A66  C015  F007         	movff	pad@fp,fputc@fp
  2184   001A6A  C016  F008         	movff	pad@fp+1,fputc@fp+1
  2185   001A6E  EC70  F00B         	call	_fputc	;wreg free
  2186   001A72                     
  2187                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2188   001A72  4A1C               	infsnz	pad@i^0,f,c
  2189   001A74  2A1D               	incf	(pad@i+1)^0,f,c
  2190   001A76                     l2590:
  2191                           
  2192                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2193   001A76  501E               	movf	pad@w^0,w,c
  2194   001A78  5C1C               	subwf	pad@i^0,w,c
  2195   001A7A  501D               	movf	(pad@i+1)^0,w,c
  2196   001A7C  0A80               	xorlw	128
  2197   001A7E  6E1B               	movwf	??_pad^0,c
  2198   001A80  501F               	movf	(pad@w+1)^0,w,c
  2199   001A82  0A80               	xorlw	128
  2200   001A84  581B               	subwfb	??_pad^0,w,c
  2201   001A86  A0D8               	btfss	status,0,c
  2202   001A88  EF48  F00D         	goto	u2001
  2203   001A8C  EF4A  F00D         	goto	u2000
  2204   001A90                     u2001:
  2205   001A90  EF2F  F00D         	goto	l2586
  2206   001A94                     u2000:
  2207   001A94                     
  2208                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2209   001A94  C017  F00E         	movff	pad@buf,fputs@s
  2210   001A98  C018  F00F         	movff	pad@buf+1,fputs@s+1
  2211   001A9C  C015  F010         	movff	pad@fp,fputs@fp
  2212   001AA0  C016  F011         	movff	pad@fp+1,fputs@fp+1
  2213   001AA4  ECD3  F00E         	call	_fputs	;wreg free
  2214   001AA8  0012               	return		;funcret
  2215   001AAA                     __end_of_pad:
  2216                           	callstack 0
  2217                           
  2218 ;; *************** function _fputs *****************
  2219 ;; Defined at:
  2220 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;  s               2   13[COMRAM] PTR const unsigned char 
  2223 ;;		 -> dbuf(32), 
  2224 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  2225 ;;		 -> sprintf@f(11), 
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;  i               2   18[COMRAM] int 
  2228 ;;  c               1   17[COMRAM] unsigned char 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  2   13[COMRAM] int 
  2231 ;; Registers used:
  2232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2238 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2239 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2241 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2242 ;;Total ram usage:        7 bytes
  2243 ;; Hardware stack levels used: 1
  2244 ;; Hardware stack levels required when called: 4
  2245 ;; This function calls:
  2246 ;;		_fputc
  2247 ;; This function is called by:
  2248 ;;		_pad
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           	psect	text12
  2253   001DA6                     __ptext12:
  2254                           	callstack 0
  2255   001DA6                     _fputs:
  2256                           	callstack 20
  2257   001DA6  0E00               	movlw	0
  2258   001DA8  6E14               	movwf	(fputs@i+1)^0,c
  2259   001DAA  0E00               	movlw	0
  2260   001DAC  6E13               	movwf	fputs@i^0,c
  2261   001DAE  EFE4  F00E         	goto	l2498
  2262   001DB2                     l2494:
  2263   001DB2  C012  F005         	movff	fputs@c,fputc@c
  2264   001DB6  6A06               	clrf	(fputc@c+1)^0,c
  2265   001DB8  C010  F007         	movff	fputs@fp,fputc@fp
  2266   001DBC  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  2267   001DC0  EC70  F00B         	call	_fputc	;wreg free
  2268   001DC4  4A13               	infsnz	fputs@i^0,f,c
  2269   001DC6  2A14               	incf	(fputs@i+1)^0,f,c
  2270   001DC8                     l2498:
  2271   001DC8  5013               	movf	fputs@i^0,w,c
  2272   001DCA  240E               	addwf	fputs@s^0,w,c
  2273   001DCC  6ED9               	movwf	fsr2l,c
  2274   001DCE  5014               	movf	(fputs@i+1)^0,w,c
  2275   001DD0  200F               	addwfc	(fputs@s+1)^0,w,c
  2276   001DD2  6EDA               	movwf	fsr2h,c
  2277   001DD4  50DF               	movf	indf2,w,c
  2278   001DD6  6E12               	movwf	fputs@c^0,c
  2279   001DD8  5012               	movf	fputs@c^0,w,c
  2280   001DDA  A4D8               	btfss	status,2,c
  2281   001DDC  EFF2  F00E         	goto	u1851
  2282   001DE0  EFF4  F00E         	goto	u1850
  2283   001DE4                     u1851:
  2284   001DE4  EFD9  F00E         	goto	l2494
  2285   001DE8                     u1850:
  2286   001DE8  0012               	return		;funcret
  2287   001DEA                     __end_of_fputs:
  2288                           	callstack 0
  2289                           
  2290 ;; *************** function _fputc *****************
  2291 ;; Defined at:
  2292 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;  c               2    4[COMRAM] int 
  2295 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  2296 ;;		 -> sprintf@f(11), 
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;		None
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  2    4[COMRAM] int 
  2301 ;; Registers used:
  2302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2308 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2310 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2311 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2312 ;;Total ram usage:        9 bytes
  2313 ;; Hardware stack levels used: 1
  2314 ;; Hardware stack levels required when called: 3
  2315 ;; This function calls:
  2316 ;;		_putch
  2317 ;; This function is called by:
  2318 ;;		_pad
  2319 ;;		_vfpfcnvrt
  2320 ;;		_fputs
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           	psect	text13
  2325   0016E0                     __ptext13:
  2326                           	callstack 0
  2327   0016E0                     _fputc:
  2328                           	callstack 23
  2329   0016E0  5007               	movf	fputc@fp^0,w,c
  2330   0016E2  1008               	iorwf	(fputc@fp+1)^0,w,c
  2331   0016E4  B4D8               	btfsc	status,2,c
  2332   0016E6  EF77  F00B         	goto	u1811
  2333   0016EA  EF79  F00B         	goto	u1810
  2334   0016EE                     u1811:
  2335   0016EE  EF82  F00B         	goto	l2482
  2336   0016F2                     u1810:
  2337   0016F2  5007               	movf	fputc@fp^0,w,c
  2338   0016F4  1008               	iorwf	(fputc@fp+1)^0,w,c
  2339   0016F6  A4D8               	btfss	status,2,c
  2340   0016F8  EF80  F00B         	goto	u1821
  2341   0016FC  EF82  F00B         	goto	u1820
  2342   001700                     u1821:
  2343   001700  EF87  F00B         	goto	l2484
  2344   001704                     u1820:
  2345   001704                     l2482:
  2346   001704  5005               	movf	fputc@c^0,w,c
  2347   001706  EC56  F010         	call	_putch
  2348   00170A  EFD4  F00B         	goto	l1223
  2349   00170E                     l2484:
  2350   00170E  EE20 F009          	lfsr	2,9
  2351   001712  5007               	movf	fputc@fp^0,w,c
  2352   001714  26D9               	addwf	fsr2l,f,c
  2353   001716  5008               	movf	(fputc@fp+1)^0,w,c
  2354   001718  22DA               	addwfc	fsr2h,f,c
  2355   00171A  50DE               	movf	postinc2,w,c
  2356   00171C  10DE               	iorwf	postinc2,w,c
  2357   00171E  B4D8               	btfsc	status,2,c
  2358   001720  EF94  F00B         	goto	u1831
  2359   001724  EF96  F00B         	goto	u1830
  2360   001728                     u1831:
  2361   001728  EFB1  F00B         	goto	l2488
  2362   00172C                     u1830:
  2363   00172C  EE20 F009          	lfsr	2,9
  2364   001730  5007               	movf	fputc@fp^0,w,c
  2365   001732  26D9               	addwf	fsr2l,f,c
  2366   001734  5008               	movf	(fputc@fp+1)^0,w,c
  2367   001736  22DA               	addwfc	fsr2h,f,c
  2368   001738  EE10 F003          	lfsr	1,3
  2369   00173C  5007               	movf	fputc@fp^0,w,c
  2370   00173E  26E1               	addwf	fsr1l,f,c
  2371   001740  5008               	movf	(fputc@fp+1)^0,w,c
  2372   001742  22E2               	addwfc	fsr1h,f,c
  2373   001744  50DE               	movf	postinc2,w,c
  2374   001746  5CE6               	subwf	postinc1,w,c
  2375   001748  50E6               	movf	postinc1,w,c
  2376   00174A  0A80               	xorlw	128
  2377   00174C  6E0D               	movwf	(??_fputc+4)^0,c
  2378   00174E  50DE               	movf	postinc2,w,c
  2379   001750  0A80               	xorlw	128
  2380   001752  580D               	subwfb	(??_fputc+4)^0,w,c
  2381   001754  B0D8               	btfsc	status,0,c
  2382   001756  EFAF  F00B         	goto	u1841
  2383   00175A  EFB1  F00B         	goto	u1840
  2384   00175E                     u1841:
  2385   00175E  EFD4  F00B         	goto	l1223
  2386   001762                     u1840:
  2387   001762                     l2488:
  2388   001762  EE20 F003          	lfsr	2,3
  2389   001766  5007               	movf	fputc@fp^0,w,c
  2390   001768  26D9               	addwf	fsr2l,f,c
  2391   00176A  5008               	movf	(fputc@fp+1)^0,w,c
  2392   00176C  22DA               	addwfc	fsr2h,f,c
  2393   00176E  CFDE F009          	movff	postinc2,??_fputc
  2394   001772  CFDD F00A          	movff	postdec2,??_fputc+1
  2395   001776  C007  FFD9         	movff	fputc@fp,fsr2l
  2396   00177A  C008  FFDA         	movff	fputc@fp+1,fsr2h
  2397   00177E  CFDE F00B          	movff	postinc2,??_fputc+2
  2398   001782  CFDD F00C          	movff	postdec2,??_fputc+3
  2399   001786  5009               	movf	??_fputc^0,w,c
  2400   001788  240B               	addwf	(??_fputc+2)^0,w,c
  2401   00178A  6ED9               	movwf	fsr2l,c
  2402   00178C  500A               	movf	(??_fputc+1)^0,w,c
  2403   00178E  200C               	addwfc	(??_fputc+3)^0,w,c
  2404   001790  6EDA               	movwf	fsr2h,c
  2405   001792  C005  FFDF         	movff	fputc@c,indf2
  2406   001796  EE20 F003          	lfsr	2,3
  2407   00179A  5007               	movf	fputc@fp^0,w,c
  2408   00179C  26D9               	addwf	fsr2l,f,c
  2409   00179E  5008               	movf	(fputc@fp+1)^0,w,c
  2410   0017A0  22DA               	addwfc	fsr2h,f,c
  2411   0017A2  2ADE               	incf	postinc2,f,c
  2412   0017A4  0E00               	movlw	0
  2413   0017A6  22DD               	addwfc	postdec2,f,c
  2414   0017A8                     l1223:
  2415   0017A8  0012               	return		;funcret
  2416   0017AA                     __end_of_fputc:
  2417                           	callstack 0
  2418                           
  2419 ;; *************** function _putch *****************
  2420 ;; Defined at:
  2421 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;  c               1    wreg     unsigned char 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;  c               1    0[COMRAM] unsigned char 
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  1    wreg      void 
  2428 ;; Registers used:
  2429 ;;		wreg
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2439 ;;Total ram usage:        0 bytes
  2440 ;; Hardware stack levels used: 1
  2441 ;; Hardware stack levels required when called: 2
  2442 ;; This function calls:
  2443 ;;		Nothing
  2444 ;; This function is called by:
  2445 ;;		_fputc
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           	psect	text14
  2450   0020AC                     __ptext14:
  2451                           	callstack 0
  2452   0020AC                     _putch:
  2453                           	callstack 23
  2454   0020AC  0012               	return		;funcret
  2455   0020AE                     __end_of_putch:
  2456                           	callstack 0
  2457                           
  2458 ;; *************** function _abs *****************
  2459 ;; Defined at:
  2460 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;  a               2   22[COMRAM] int 
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;		None
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  2   22[COMRAM] int 
  2467 ;; Registers used:
  2468 ;;		wreg, status,2, status,0
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2474 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2476 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2477 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2478 ;;Total ram usage:        4 bytes
  2479 ;; Hardware stack levels used: 1
  2480 ;; Hardware stack levels required when called: 2
  2481 ;; This function calls:
  2482 ;;		Nothing
  2483 ;; This function is called by:
  2484 ;;		_dtoa
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text15
  2489   001DEA                     __ptext15:
  2490                           	callstack 0
  2491   001DEA                     _abs:
  2492                           	callstack 23
  2493   001DEA  BE18               	btfsc	(abs@a+1)^0,7,c
  2494   001DEC  EF02  F00F         	goto	u2010
  2495   001DF0  5018               	movf	(abs@a+1)^0,w,c
  2496   001DF2  E106               	bnz	u2011
  2497   001DF4  0417               	decf	abs@a^0,w,c
  2498   001DF6  B0D8               	btfsc	status,0,c
  2499   001DF8  EF00  F00F         	goto	u2011
  2500   001DFC  EF02  F00F         	goto	u2010
  2501   001E00                     u2011:
  2502   001E00  EF10  F00F         	goto	l1208
  2503   001E04                     u2010:
  2504   001E04  C017  F019         	movff	abs@a,??_abs
  2505   001E08  C018  F01A         	movff	abs@a+1,??_abs+1
  2506   001E0C  1E19               	comf	??_abs^0,f,c
  2507   001E0E  1E1A               	comf	(??_abs+1)^0,f,c
  2508   001E10  4A19               	infsnz	??_abs^0,f,c
  2509   001E12  2A1A               	incf	(??_abs+1)^0,f,c
  2510   001E14  C019  F017         	movff	??_abs,?_abs
  2511   001E18  C01A  F018         	movff	??_abs+1,?_abs+1
  2512   001E1C  EF14  F00F         	goto	l1211
  2513   001E20                     l1208:
  2514   001E20  C017  F017         	movff	abs@a,?_abs
  2515   001E24  C018  F018         	movff	abs@a+1,?_abs+1
  2516   001E28                     l1211:
  2517   001E28  0012               	return		;funcret
  2518   001E2A                     __end_of_abs:
  2519                           	callstack 0
  2520                           
  2521 ;; *************** function ___aomod *****************
  2522 ;; Defined at:
  2523 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;  dividend        8    4[COMRAM] long long 
  2526 ;;  divisor         8   12[COMRAM] long long 
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;  sign            1   21[COMRAM] unsigned char 
  2529 ;;  counter         1   20[COMRAM] unsigned char 
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  8    4[COMRAM] long long 
  2532 ;; Registers used:
  2533 ;;		wreg, status,2, status,0
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2539 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2540 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2542 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2543 ;;Total ram usage:       18 bytes
  2544 ;; Hardware stack levels used: 1
  2545 ;; Hardware stack levels required when called: 2
  2546 ;; This function calls:
  2547 ;;		Nothing
  2548 ;; This function is called by:
  2549 ;;		_dtoa
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           
  2553                           	psect	text16
  2554   00120E                     __ptext16:
  2555                           	callstack 0
  2556   00120E                     ___aomod:
  2557                           	callstack 23
  2558   00120E  0E00               	movlw	0
  2559   001210  6E16               	movwf	___aomod@sign^0,c
  2560   001212  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  2561   001214  EF10  F009         	goto	u1930
  2562   001218  EF0E  F009         	goto	u1931
  2563   00121C                     u1931:
  2564   00121C  EF22  F009         	goto	l2552
  2565   001220                     u1930:
  2566   001220  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2567   001222  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2568   001224  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2569   001226  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2570   001228  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2571   00122A  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2572   00122C  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2573   00122E  6C05               	negf	___aomod@dividend^0,c
  2574   001230  0E00               	movlw	0
  2575   001232  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2576   001234  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2577   001236  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2578   001238  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2579   00123A  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2580   00123C  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2581   00123E  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2582   001240  0E01               	movlw	1
  2583   001242  6E16               	movwf	___aomod@sign^0,c
  2584   001244                     l2552:
  2585   001244  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  2586   001246  EF29  F009         	goto	u1940
  2587   00124A  EF27  F009         	goto	u1941
  2588   00124E                     u1941:
  2589   00124E  EF39  F009         	goto	l2556
  2590   001252                     u1940:
  2591   001252  1E14               	comf	(___aomod@divisor+7)^0,f,c
  2592   001254  1E13               	comf	(___aomod@divisor+6)^0,f,c
  2593   001256  1E12               	comf	(___aomod@divisor+5)^0,f,c
  2594   001258  1E11               	comf	(___aomod@divisor+4)^0,f,c
  2595   00125A  1E10               	comf	(___aomod@divisor+3)^0,f,c
  2596   00125C  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  2597   00125E  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  2598   001260  6C0D               	negf	___aomod@divisor^0,c
  2599   001262  0E00               	movlw	0
  2600   001264  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  2601   001266  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  2602   001268  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  2603   00126A  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  2604   00126C  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  2605   00126E  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  2606   001270  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  2607   001272                     l2556:
  2608   001272  500D               	movf	___aomod@divisor^0,w,c
  2609   001274  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  2610   001276  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  2611   001278  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  2612   00127A  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  2613   00127C  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  2614   00127E  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  2615   001280  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  2616   001282  B4D8               	btfsc	status,2,c
  2617   001284  EF46  F009         	goto	u1951
  2618   001288  EF48  F009         	goto	u1950
  2619   00128C                     u1951:
  2620   00128C  EF90  F009         	goto	l2572
  2621   001290                     u1950:
  2622   001290  0E01               	movlw	1
  2623   001292  6E15               	movwf	___aomod@counter^0,c
  2624   001294  EF56  F009         	goto	l2562
  2625   001298                     l2560:
  2626   001298  90D8               	bcf	status,0,c
  2627   00129A  360D               	rlcf	___aomod@divisor^0,f,c
  2628   00129C  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  2629   00129E  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  2630   0012A0  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  2631   0012A2  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  2632   0012A4  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  2633   0012A6  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  2634   0012A8  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  2635   0012AA  2A15               	incf	___aomod@counter^0,f,c
  2636   0012AC                     l2562:
  2637   0012AC  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  2638   0012AE  EF5B  F009         	goto	u1961
  2639   0012B2  EF5D  F009         	goto	u1960
  2640   0012B6                     u1961:
  2641   0012B6  EF4C  F009         	goto	l2560
  2642   0012BA                     u1960:
  2643   0012BA                     l2564:
  2644   0012BA  500D               	movf	___aomod@divisor^0,w,c
  2645   0012BC  5C05               	subwf	___aomod@dividend^0,w,c
  2646   0012BE  500E               	movf	(___aomod@divisor+1)^0,w,c
  2647   0012C0  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  2648   0012C2  500F               	movf	(___aomod@divisor+2)^0,w,c
  2649   0012C4  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  2650   0012C6  5010               	movf	(___aomod@divisor+3)^0,w,c
  2651   0012C8  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  2652   0012CA  5011               	movf	(___aomod@divisor+4)^0,w,c
  2653   0012CC  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  2654   0012CE  5012               	movf	(___aomod@divisor+5)^0,w,c
  2655   0012D0  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  2656   0012D2  5013               	movf	(___aomod@divisor+6)^0,w,c
  2657   0012D4  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  2658   0012D6  5014               	movf	(___aomod@divisor+7)^0,w,c
  2659   0012D8  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  2660   0012DA  A0D8               	btfss	status,0,c
  2661   0012DC  EF72  F009         	goto	u1971
  2662   0012E0  EF74  F009         	goto	u1970
  2663   0012E4                     u1971:
  2664   0012E4  EF84  F009         	goto	l2568
  2665   0012E8                     u1970:
  2666   0012E8  500D               	movf	___aomod@divisor^0,w,c
  2667   0012EA  5E05               	subwf	___aomod@dividend^0,f,c
  2668   0012EC  500E               	movf	(___aomod@divisor+1)^0,w,c
  2669   0012EE  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  2670   0012F0  500F               	movf	(___aomod@divisor+2)^0,w,c
  2671   0012F2  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  2672   0012F4  5010               	movf	(___aomod@divisor+3)^0,w,c
  2673   0012F6  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  2674   0012F8  5011               	movf	(___aomod@divisor+4)^0,w,c
  2675   0012FA  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  2676   0012FC  5012               	movf	(___aomod@divisor+5)^0,w,c
  2677   0012FE  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  2678   001300  5013               	movf	(___aomod@divisor+6)^0,w,c
  2679   001302  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  2680   001304  5014               	movf	(___aomod@divisor+7)^0,w,c
  2681   001306  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  2682   001308                     l2568:
  2683   001308  90D8               	bcf	status,0,c
  2684   00130A  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  2685   00130C  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  2686   00130E  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  2687   001310  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  2688   001312  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  2689   001314  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  2690   001316  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  2691   001318  320D               	rrcf	___aomod@divisor^0,f,c
  2692   00131A  2E15               	decfsz	___aomod@counter^0,f,c
  2693   00131C  EF5D  F009         	goto	l2564
  2694   001320                     l2572:
  2695   001320  5016               	movf	___aomod@sign^0,w,c
  2696   001322  B4D8               	btfsc	status,2,c
  2697   001324  EF96  F009         	goto	u1981
  2698   001328  EF98  F009         	goto	u1980
  2699   00132C                     u1981:
  2700   00132C  EFA8  F009         	goto	l2576
  2701   001330                     u1980:
  2702   001330  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2703   001332  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2704   001334  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2705   001336  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2706   001338  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2707   00133A  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2708   00133C  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2709   00133E  6C05               	negf	___aomod@dividend^0,c
  2710   001340  0E00               	movlw	0
  2711   001342  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2712   001344  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2713   001346  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2714   001348  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2715   00134A  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2716   00134C  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2717   00134E  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2718   001350                     l2576:
  2719   001350  C005  F005         	movff	___aomod@dividend,?___aomod
  2720   001354  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  2721   001358  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  2722   00135C  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  2723   001360  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  2724   001364  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  2725   001368  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  2726   00136C  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  2727   001370  0012               	return		;funcret
  2728   001372                     __end_of___aomod:
  2729                           	callstack 0
  2730                           
  2731 ;; *************** function ___aodiv *****************
  2732 ;; Defined at:
  2733 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;  dividend        8    4[COMRAM] long long 
  2736 ;;  divisor         8   12[COMRAM] long long 
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;  quotient        8   22[COMRAM] long long 
  2739 ;;  sign            1   21[COMRAM] unsigned char 
  2740 ;;  counter         1   20[COMRAM] unsigned char 
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  8    4[COMRAM] long long 
  2743 ;; Registers used:
  2744 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2750 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2751 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2753 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2754 ;;Total ram usage:       26 bytes
  2755 ;; Hardware stack levels used: 1
  2756 ;; Hardware stack levels required when called: 2
  2757 ;; This function calls:
  2758 ;;		Nothing
  2759 ;; This function is called by:
  2760 ;;		_dtoa
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           	psect	text17
  2765   001086                     __ptext17:
  2766                           	callstack 0
  2767   001086                     ___aodiv:
  2768                           	callstack 23
  2769   001086  0E00               	movlw	0
  2770   001088  6E16               	movwf	___aodiv@sign^0,c
  2771   00108A  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  2772   00108C  EF4C  F008         	goto	u1860
  2773   001090  EF4A  F008         	goto	u1861
  2774   001094                     u1861:
  2775   001094  EF5E  F008         	goto	l2508
  2776   001098                     u1860:
  2777   001098  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  2778   00109A  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  2779   00109C  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  2780   00109E  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  2781   0010A0  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  2782   0010A2  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  2783   0010A4  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  2784   0010A6  6C0D               	negf	___aodiv@divisor^0,c
  2785   0010A8  0E00               	movlw	0
  2786   0010AA  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  2787   0010AC  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  2788   0010AE  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  2789   0010B0  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  2790   0010B2  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  2791   0010B4  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  2792   0010B6  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  2793   0010B8  0E01               	movlw	1
  2794   0010BA  6E16               	movwf	___aodiv@sign^0,c
  2795   0010BC                     l2508:
  2796   0010BC  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  2797   0010BE  EF65  F008         	goto	u1870
  2798   0010C2  EF63  F008         	goto	u1871
  2799   0010C6                     u1871:
  2800   0010C6  EF77  F008         	goto	l2514
  2801   0010CA                     u1870:
  2802   0010CA  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  2803   0010CC  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  2804   0010CE  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  2805   0010D0  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  2806   0010D2  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  2807   0010D4  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  2808   0010D6  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  2809   0010D8  6C05               	negf	___aodiv@dividend^0,c
  2810   0010DA  0E00               	movlw	0
  2811   0010DC  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  2812   0010DE  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  2813   0010E0  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  2814   0010E2  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  2815   0010E4  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  2816   0010E6  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  2817   0010E8  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  2818   0010EA  0E01               	movlw	1
  2819   0010EC  1A16               	xorwf	___aodiv@sign^0,f,c
  2820   0010EE                     l2514:
  2821   0010EE  EE20  F017         	lfsr	2,___aodiv@quotient
  2822   0010F2  0E07               	movlw	7
  2823   0010F4                     u1881:
  2824   0010F4  6ADE               	clrf	postinc2,c
  2825   0010F6  06E8               	decf	wreg,f,c
  2826   0010F8  E2FD               	bc	u1881
  2827   0010FA  500D               	movf	___aodiv@divisor^0,w,c
  2828   0010FC  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  2829   0010FE  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  2830   001100  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  2831   001102  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  2832   001104  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  2833   001106  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  2834   001108  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  2835   00110A  B4D8               	btfsc	status,2,c
  2836   00110C  EF8A  F008         	goto	u1891
  2837   001110  EF8C  F008         	goto	u1890
  2838   001114                     u1891:
  2839   001114  EFDE  F008         	goto	l2536
  2840   001118                     u1890:
  2841   001118  0E01               	movlw	1
  2842   00111A  6E15               	movwf	___aodiv@counter^0,c
  2843   00111C  EF9A  F008         	goto	l2522
  2844   001120                     l2520:
  2845   001120  90D8               	bcf	status,0,c
  2846   001122  360D               	rlcf	___aodiv@divisor^0,f,c
  2847   001124  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  2848   001126  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  2849   001128  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  2850   00112A  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  2851   00112C  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  2852   00112E  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  2853   001130  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  2854   001132  2A15               	incf	___aodiv@counter^0,f,c
  2855   001134                     l2522:
  2856   001134  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  2857   001136  EF9F  F008         	goto	u1901
  2858   00113A  EFA1  F008         	goto	u1900
  2859   00113E                     u1901:
  2860   00113E  EF90  F008         	goto	l2520
  2861   001142                     u1900:
  2862   001142                     l2524:
  2863   001142  90D8               	bcf	status,0,c
  2864   001144  3617               	rlcf	___aodiv@quotient^0,f,c
  2865   001146  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  2866   001148  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  2867   00114A  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  2868   00114C  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  2869   00114E  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  2870   001150  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  2871   001152  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  2872   001154  500D               	movf	___aodiv@divisor^0,w,c
  2873   001156  5C05               	subwf	___aodiv@dividend^0,w,c
  2874   001158  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2875   00115A  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  2876   00115C  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2877   00115E  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  2878   001160  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2879   001162  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  2880   001164  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2881   001166  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  2882   001168  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2883   00116A  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  2884   00116C  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2885   00116E  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  2886   001170  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2887   001172  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  2888   001174  A0D8               	btfss	status,0,c
  2889   001176  EFBF  F008         	goto	u1911
  2890   00117A  EFC1  F008         	goto	u1910
  2891   00117E                     u1911:
  2892   00117E  EFD2  F008         	goto	l2532
  2893   001182                     u1910:
  2894   001182  500D               	movf	___aodiv@divisor^0,w,c
  2895   001184  5E05               	subwf	___aodiv@dividend^0,f,c
  2896   001186  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2897   001188  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  2898   00118A  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2899   00118C  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  2900   00118E  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2901   001190  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  2902   001192  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2903   001194  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  2904   001196  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2905   001198  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  2906   00119A  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2907   00119C  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  2908   00119E  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2909   0011A0  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  2910   0011A2  8017               	bsf	___aodiv@quotient^0,0,c
  2911   0011A4                     l2532:
  2912   0011A4  90D8               	bcf	status,0,c
  2913   0011A6  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  2914   0011A8  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  2915   0011AA  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  2916   0011AC  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  2917   0011AE  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  2918   0011B0  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  2919   0011B2  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  2920   0011B4  320D               	rrcf	___aodiv@divisor^0,f,c
  2921   0011B6  2E15               	decfsz	___aodiv@counter^0,f,c
  2922   0011B8  EFA1  F008         	goto	l2524
  2923   0011BC                     l2536:
  2924   0011BC  5016               	movf	___aodiv@sign^0,w,c
  2925   0011BE  B4D8               	btfsc	status,2,c
  2926   0011C0  EFE4  F008         	goto	u1921
  2927   0011C4  EFE6  F008         	goto	u1920
  2928   0011C8                     u1921:
  2929   0011C8  EFF6  F008         	goto	l2540
  2930   0011CC                     u1920:
  2931   0011CC  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  2932   0011CE  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  2933   0011D0  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  2934   0011D2  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  2935   0011D4  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  2936   0011D6  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  2937   0011D8  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  2938   0011DA  6C17               	negf	___aodiv@quotient^0,c
  2939   0011DC  0E00               	movlw	0
  2940   0011DE  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  2941   0011E0  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  2942   0011E2  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  2943   0011E4  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  2944   0011E6  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  2945   0011E8  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  2946   0011EA  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  2947   0011EC                     l2540:
  2948   0011EC  C017  F005         	movff	___aodiv@quotient,?___aodiv
  2949   0011F0  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  2950   0011F4  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  2951   0011F8  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  2952   0011FC  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  2953   001200  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  2954   001204  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  2955   001208  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  2956   00120C  0012               	return		;funcret
  2957   00120E                     __end_of___aodiv:
  2958                           	callstack 0
  2959                           
  2960 ;; *************** function _LCD_sendstring *****************
  2961 ;; Defined at:
  2962 ;;		line 109 in file "LCD.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  string          2    7[COMRAM] PTR unsigned char 
  2965 ;;		 -> main@strdate(100), 
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;		None
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  1    wreg      void 
  2970 ;; Registers used:
  2971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2977 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2980 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2981 ;;Total ram usage:        2 bytes
  2982 ;; Hardware stack levels used: 1
  2983 ;; Hardware stack levels required when called: 5
  2984 ;; This function calls:
  2985 ;;		_LCD_sendbyte
  2986 ;; This function is called by:
  2987 ;;		_time2String
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           	psect	text18
  2992   001EE0                     __ptext18:
  2993                           	callstack 0
  2994   001EE0                     _LCD_sendstring:
  2995                           	callstack 24
  2996   001EE0                     
  2997                           ;LCD.c: 111: {;LCD.c: 112:  while(*string != 0){
  2998   001EE0  EF7D  F00F         	goto	l2786
  2999   001EE4                     l2782:
  3000                           
  3001                           ;LCD.c: 113:   LCD_sendbyte(*string++,1);
  3002   001EE4  0E01               	movlw	1
  3003   001EE6  6E06               	movwf	LCD_sendbyte@type^0,c
  3004   001EE8  C008  FFD9         	movff	LCD_sendstring@string,fsr2l
  3005   001EEC  C009  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  3006   001EF0  50DF               	movf	indf2,w,c
  3007   001EF2  ECA4  F00F         	call	_LCD_sendbyte
  3008   001EF6  4A08               	infsnz	LCD_sendstring@string^0,f,c
  3009   001EF8  2A09               	incf	(LCD_sendstring@string+1)^0,f,c
  3010   001EFA                     l2786:
  3011                           
  3012                           ;LCD.c: 112:  while(*string != 0){
  3013   001EFA  C008  FFD9         	movff	LCD_sendstring@string,fsr2l
  3014   001EFE  C009  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  3015   001F02  50DF               	movf	indf2,w,c
  3016   001F04  A4D8               	btfss	status,2,c
  3017   001F06  EF87  F00F         	goto	u2381
  3018   001F0A  EF89  F00F         	goto	u2380
  3019   001F0E                     u2381:
  3020   001F0E  EF72  F00F         	goto	l2782
  3021   001F12                     u2380:
  3022   001F12  0012               	return		;funcret
  3023   001F14                     __end_of_LCD_sendstring:
  3024                           	callstack 0
  3025                           
  3026 ;; *************** function _test_day *****************
  3027 ;; Defined at:
  3028 ;;		line 23 in file "Functions.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;		None
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;		None
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  1    wreg      void 
  3035 ;; Registers used:
  3036 ;;		wreg, status,2
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3046 ;;Total ram usage:        0 bytes
  3047 ;; Hardware stack levels used: 1
  3048 ;; Hardware stack levels required when called: 2
  3049 ;; This function calls:
  3050 ;;		Nothing
  3051 ;; This function is called by:
  3052 ;;		_main
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           	psect	text19
  3057   00205E                     __ptext19:
  3058                           	callstack 0
  3059   00205E                     _test_day:
  3060                           	callstack 28
  3061   00205E                     
  3062                           ;Functions.c: 24:     seconds_in_hour = 1;
  3063   00205E  0E00               	movlw	0
  3064   002060  0100               	movlb	0	; () banked
  3065   002062  6F98               	movwf	(_seconds_in_hour+1)& (0+255),b
  3066   002064  0E01               	movlw	1
  3067   002066  6F97               	movwf	_seconds_in_hour& (0+255),b
  3068                           
  3069                           ;Functions.c: 25:     hours_in_day = 24;
  3070   002068  0E00               	movlw	0
  3071   00206A  6F96               	movwf	(_hours_in_day+1)& (0+255),b
  3072   00206C  0E18               	movlw	24
  3073   00206E  6F95               	movwf	_hours_in_day& (0+255),b
  3074   002070                     
  3075                           ; BSR set to: 0
  3076   002070  0012               	return		;funcret
  3077   002072                     __end_of_test_day:
  3078                           	callstack 0
  3079                           
  3080 ;; *************** function _streetLightInit *****************
  3081 ;; Defined at:
  3082 ;;		line 16 in file "Functions.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;		None
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;		None
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  1    wreg      void 
  3089 ;; Registers used:
  3090 ;;		None
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3100 ;;Total ram usage:        0 bytes
  3101 ;; Hardware stack levels used: 1
  3102 ;; Hardware stack levels required when called: 2
  3103 ;; This function calls:
  3104 ;;		Nothing
  3105 ;; This function is called by:
  3106 ;;		_main
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           	psect	text20
  3111   0020A6                     __ptext20:
  3112                           	callstack 0
  3113   0020A6                     _streetLightInit:
  3114                           	callstack 28
  3115   0020A6                     
  3116                           ;Functions.c: 17:     LATHbits.LATH3 = 0;
  3117   0020A6  9680               	bcf	128,3,c	;volatile
  3118                           
  3119                           ;Functions.c: 18:     TRISHbits.TRISH3 = 0;
  3120   0020A8  9688               	bcf	136,3,c	;volatile
  3121   0020AA  0012               	return		;funcret
  3122   0020AC                     __end_of_streetLightInit:
  3123                           	callstack 0
  3124                           
  3125 ;; *************** function _poweroff *****************
  3126 ;; Defined at:
  3127 ;;		line 73 in file "Functions.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;		None
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;		None
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  1    wreg      void 
  3134 ;; Registers used:
  3135 ;;		wreg, status,2, status,0
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3145 ;;Total ram usage:        0 bytes
  3146 ;; Hardware stack levels used: 1
  3147 ;; Hardware stack levels required when called: 2
  3148 ;; This function calls:
  3149 ;;		Nothing
  3150 ;; This function is called by:
  3151 ;;		_main
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           	psect	text21
  3156   001E68                     __ptext21:
  3157                           	callstack 0
  3158   001E68                     _poweroff:
  3159                           	callstack 28
  3160   001E68                     
  3161                           ;Functions.c: 74:     if (1 <= hour && hour < 5) LATHbits.LATH3 = 0;
  3162   001E68  0100               	movlb	0	; () banked
  3163   001E6A  BF9A               	btfsc	(_hour+1)& (0+255),7,b
  3164   001E6C  EF40  F00F         	goto	u2541
  3165   001E70  519A               	movf	(_hour+1)& (0+255),w,b
  3166   001E72  E108               	bnz	u2540
  3167   001E74  0599               	decf	_hour& (0+255),w,b
  3168   001E76  A0D8               	btfss	status,0,c
  3169   001E78  EF40  F00F         	goto	u2541
  3170   001E7C  EF42  F00F         	goto	u2540
  3171   001E80                     u2541:
  3172   001E80  EF51  F00F         	goto	l384
  3173   001E84                     u2540:
  3174   001E84                     
  3175                           ; BSR set to: 0
  3176   001E84  BF9A               	btfsc	(_hour+1)& (0+255),7,b
  3177   001E86  EF50  F00F         	goto	u2550
  3178   001E8A  519A               	movf	(_hour+1)& (0+255),w,b
  3179   001E8C  E107               	bnz	u2551
  3180   001E8E  0E05               	movlw	5
  3181   001E90  5D99               	subwf	_hour& (0+255),w,b
  3182   001E92  B0D8               	btfsc	status,0,c
  3183   001E94  EF4E  F00F         	goto	u2551
  3184   001E98  EF50  F00F         	goto	u2550
  3185   001E9C                     u2551:
  3186   001E9C  EF51  F00F         	goto	l384
  3187   001EA0                     u2550:
  3188   001EA0                     
  3189                           ; BSR set to: 0
  3190   001EA0  9680               	bcf	128,3,c	;volatile
  3191   001EA2                     l384:
  3192                           
  3193                           ; BSR set to: 0
  3194   001EA2  0012               	return		;funcret
  3195   001EA4                     __end_of_poweroff:
  3196                           	callstack 0
  3197                           
  3198 ;; *************** function _increment *****************
  3199 ;; Defined at:
  3200 ;;		line 36 in file "Functions.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;		None
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;		None
  3205 ;; Return value:  Size  Location     Type
  3206 ;;                  1    wreg      void 
  3207 ;; Registers used:
  3208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3209 ;; Tracked objects:
  3210 ;;		On entry : 0/0
  3211 ;;		On exit  : 0/0
  3212 ;;		Unchanged: 0/0
  3213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3216 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3217 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3218 ;;Total ram usage:        2 bytes
  3219 ;; Hardware stack levels used: 1
  3220 ;; Hardware stack levels required when called: 3
  3221 ;; This function calls:
  3222 ;;		_LEDarray_disp_bin
  3223 ;; This function is called by:
  3224 ;;		_main
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228                           	psect	text22
  3229   0014C0                     __ptext22:
  3230                           	callstack 0
  3231   0014C0                     _increment:
  3232                           	callstack 27
  3233   0014C0                     
  3234                           ;Functions.c: 38:     if (year % 4 == 0) month[1] = 29;
  3235   0014C0  0E03               	movlw	3
  3236   0014C2  0100               	movlb	0	; () banked
  3237   0014C4  1589               	andwf	_year& (0+255),w,b
  3238   0014C6  6E1F               	movwf	??_increment^0,c
  3239   0014C8  0E00               	movlw	0
  3240   0014CA  158A               	andwf	(_year+1)& (0+255),w,b
  3241   0014CC  6E20               	movwf	(??_increment+1)^0,c
  3242   0014CE  501F               	movf	??_increment^0,w,c
  3243   0014D0  1020               	iorwf	(??_increment+1)^0,w,c
  3244   0014D2  A4D8               	btfss	status,2,c
  3245   0014D4  EF6E  F00A         	goto	u2471
  3246   0014D8  EF70  F00A         	goto	u2470
  3247   0014DC                     u2471:
  3248   0014DC  EF75  F00A         	goto	l2948
  3249   0014E0                     u2470:
  3250   0014E0                     
  3251                           ; BSR set to: 0
  3252   0014E0  0E00               	movlw	0
  3253   0014E2  0101               	movlb	1	; () banked
  3254   0014E4  6F87               	movwf	(_month+3)& (0+255),b
  3255   0014E6  0E1D               	movlw	29
  3256   0014E8  6F86               	movwf	(_month+2)& (0+255),b
  3257   0014EA                     l2948:
  3258                           
  3259                           ;Functions.c: 39:     if (year % 4 != 0) month[1] = 28;
  3260   0014EA  0E03               	movlw	3
  3261   0014EC  0100               	movlb	0	; () banked
  3262   0014EE  1589               	andwf	_year& (0+255),w,b
  3263   0014F0  6E1F               	movwf	??_increment^0,c
  3264   0014F2  0E00               	movlw	0
  3265   0014F4  158A               	andwf	(_year+1)& (0+255),w,b
  3266   0014F6  6E20               	movwf	(??_increment+1)^0,c
  3267   0014F8  501F               	movf	??_increment^0,w,c
  3268   0014FA  1020               	iorwf	(??_increment+1)^0,w,c
  3269   0014FC  B4D8               	btfsc	status,2,c
  3270   0014FE  EF83  F00A         	goto	u2481
  3271   001502  EF85  F00A         	goto	u2480
  3272   001506                     u2481:
  3273   001506  EF8A  F00A         	goto	l2952
  3274   00150A                     u2480:
  3275   00150A                     
  3276                           ; BSR set to: 0
  3277   00150A  0E00               	movlw	0
  3278   00150C  0101               	movlb	1	; () banked
  3279   00150E  6F87               	movwf	(_month+3)& (0+255),b
  3280   001510  0E1C               	movlw	28
  3281   001512  6F86               	movwf	(_month+2)& (0+255),b
  3282   001514                     l2952:
  3283                           
  3284                           ;Functions.c: 42:     if (seconds == seconds_in_hour) {
  3285   001514  0100               	movlb	0	; () banked
  3286   001516  5197               	movf	_seconds_in_hour& (0+255),w,b
  3287   001518  199B               	xorwf	_seconds& (0+255),w,b
  3288   00151A  E107               	bnz	u2491
  3289   00151C  5198               	movf	(_seconds_in_hour+1)& (0+255),w,b
  3290   00151E  199C               	xorwf	(_seconds+1)& (0+255),w,b
  3291   001520  A4D8               	btfss	status,2,c
  3292   001522  EF95  F00A         	goto	u2491
  3293   001526  EF97  F00A         	goto	u2490
  3294   00152A                     u2491:
  3295   00152A  EFA4  F00A         	goto	l2960
  3296   00152E                     u2490:
  3297   00152E                     
  3298                           ; BSR set to: 0
  3299                           ;Functions.c: 43:         hour++;
  3300   00152E  4B99               	infsnz	_hour& (0+255),f,b
  3301   001530  2B9A               	incf	(_hour+1)& (0+255),f,b
  3302   001532                     
  3303                           ; BSR set to: 0
  3304                           ;Functions.c: 44:         LEDarray_disp_bin(hour);
  3305   001532  C099  F005         	movff	_hour,LEDarray_disp_bin@number
  3306   001536  C09A  F006         	movff	_hour+1,LEDarray_disp_bin@number+1
  3307   00153A  ECFC  F00A         	call	_LEDarray_disp_bin	;wreg free
  3308   00153E                     
  3309                           ;Functions.c: 45:         seconds = 0;
  3310   00153E  0E00               	movlw	0
  3311   001540  0100               	movlb	0	; () banked
  3312   001542  6F9C               	movwf	(_seconds+1)& (0+255),b
  3313   001544  0E00               	movlw	0
  3314   001546  6F9B               	movwf	_seconds& (0+255),b
  3315   001548                     l2960:
  3316                           
  3317                           ; BSR set to: 0
  3318                           ;Functions.c: 49:     if (hour == hours_in_day) {
  3319   001548  5195               	movf	_hours_in_day& (0+255),w,b
  3320   00154A  1999               	xorwf	_hour& (0+255),w,b
  3321   00154C  E107               	bnz	u2501
  3322   00154E  5196               	movf	(_hours_in_day+1)& (0+255),w,b
  3323   001550  199A               	xorwf	(_hour+1)& (0+255),w,b
  3324   001552  A4D8               	btfss	status,2,c
  3325   001554  EFAE  F00A         	goto	u2501
  3326   001558  EFB0  F00A         	goto	u2500
  3327   00155C                     u2501:
  3328   00155C  EFBA  F00A         	goto	l2966
  3329   001560                     u2500:
  3330   001560                     
  3331                           ; BSR set to: 0
  3332                           ;Functions.c: 50:         day_of_year++;
  3333   001560  4B8F               	infsnz	_day_of_year& (0+255),f,b
  3334   001562  2B90               	incf	(_day_of_year+1)& (0+255),f,b
  3335                           
  3336                           ;Functions.c: 51:         day_of_week++;
  3337   001564  4B8D               	infsnz	_day_of_week& (0+255),f,b
  3338   001566  2B8E               	incf	(_day_of_week+1)& (0+255),f,b
  3339                           
  3340                           ;Functions.c: 52:         day_of_month++;
  3341   001568  4B8B               	infsnz	_day_of_month& (0+255),f,b
  3342   00156A  2B8C               	incf	(_day_of_month+1)& (0+255),f,b
  3343   00156C                     
  3344                           ; BSR set to: 0
  3345                           ;Functions.c: 53:         hour = 0;
  3346   00156C  0E00               	movlw	0
  3347   00156E  6F9A               	movwf	(_hour+1)& (0+255),b
  3348   001570  0E00               	movlw	0
  3349   001572  6F99               	movwf	_hour& (0+255),b
  3350   001574                     l2966:
  3351                           
  3352                           ; BSR set to: 0
  3353                           ;Functions.c: 57:     if (day_of_week == 8)
  3354   001574  0E08               	movlw	8
  3355   001576  198D               	xorwf	_day_of_week& (0+255),w,b
  3356   001578  118E               	iorwf	(_day_of_week+1)& (0+255),w,b
  3357   00157A  A4D8               	btfss	status,2,c
  3358   00157C  EFC2  F00A         	goto	u2511
  3359   001580  EFC4  F00A         	goto	u2510
  3360   001584                     u2511:
  3361   001584  EFC8  F00A         	goto	l2970
  3362   001588                     u2510:
  3363   001588                     
  3364                           ; BSR set to: 0
  3365                           ;Functions.c: 58:         day_of_week = 1;
  3366   001588  0E00               	movlw	0
  3367   00158A  6F8E               	movwf	(_day_of_week+1)& (0+255),b
  3368   00158C  0E01               	movlw	1
  3369   00158E  6F8D               	movwf	_day_of_week& (0+255),b
  3370   001590                     l2970:
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;Functions.c: 61:     if (day_of_month == month[month_num - 1] + 1) {
  3374   001590  90D8               	bcf	status,0,c
  3375   001592  3591               	rlcf	_month_num& (0+255),w,b
  3376   001594  6ED9               	movwf	fsr2l,c
  3377   001596  3592               	rlcf	(_month_num+1)& (0+255),w,b
  3378   001598  6EDA               	movwf	fsr2h,c
  3379   00159A  0E82               	movlw	low (_month+65534)
  3380   00159C  26D9               	addwf	fsr2l,f,c
  3381   00159E  0E01               	movlw	high (_month+65534)
  3382   0015A0  22DA               	addwfc	fsr2h,f,c
  3383   0015A2  CFDE F01F          	movff	postinc2,??_increment
  3384   0015A6  CFDD F020          	movff	postdec2,??_increment+1
  3385   0015AA  0E01               	movlw	1
  3386   0015AC  261F               	addwf	??_increment^0,f,c
  3387   0015AE  0E00               	movlw	0
  3388   0015B0  2220               	addwfc	(??_increment+1)^0,f,c
  3389   0015B2  518B               	movf	_day_of_month& (0+255),w,b
  3390   0015B4  181F               	xorwf	??_increment^0,w,c
  3391   0015B6  E107               	bnz	u2521
  3392   0015B8  518C               	movf	(_day_of_month+1)& (0+255),w,b
  3393   0015BA  1820               	xorwf	(??_increment+1)^0,w,c
  3394   0015BC  A4D8               	btfss	status,2,c
  3395   0015BE  EFE3  F00A         	goto	u2521
  3396   0015C2  EFE5  F00A         	goto	u2520
  3397   0015C6                     u2521:
  3398   0015C6  EFEB  F00A         	goto	l2976
  3399   0015CA                     u2520:
  3400   0015CA                     
  3401                           ; BSR set to: 0
  3402                           ;Functions.c: 62:         day_of_month = 1;
  3403   0015CA  0E00               	movlw	0
  3404   0015CC  6F8C               	movwf	(_day_of_month+1)& (0+255),b
  3405   0015CE  0E01               	movlw	1
  3406   0015D0  6F8B               	movwf	_day_of_month& (0+255),b
  3407   0015D2                     
  3408                           ; BSR set to: 0
  3409                           ;Functions.c: 63:         month_num++;
  3410   0015D2  4B91               	infsnz	_month_num& (0+255),f,b
  3411   0015D4  2B92               	incf	(_month_num+1)& (0+255),f,b
  3412   0015D6                     l2976:
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;Functions.c: 65:     if (month_num == 13) {
  3416   0015D6  0E0D               	movlw	13
  3417   0015D8  1991               	xorwf	_month_num& (0+255),w,b
  3418   0015DA  1192               	iorwf	(_month_num+1)& (0+255),w,b
  3419   0015DC  A4D8               	btfss	status,2,c
  3420   0015DE  EFF3  F00A         	goto	u2531
  3421   0015E2  EFF5  F00A         	goto	u2530
  3422   0015E6                     u2531:
  3423   0015E6  EFFB  F00A         	goto	l380
  3424   0015EA                     u2530:
  3425   0015EA                     
  3426                           ; BSR set to: 0
  3427                           ;Functions.c: 66:         month_num = 1;
  3428   0015EA  0E00               	movlw	0
  3429   0015EC  6F92               	movwf	(_month_num+1)& (0+255),b
  3430   0015EE  0E01               	movlw	1
  3431   0015F0  6F91               	movwf	_month_num& (0+255),b
  3432   0015F2                     
  3433                           ; BSR set to: 0
  3434                           ;Functions.c: 67:         year++;
  3435   0015F2  4B89               	infsnz	_year& (0+255),f,b
  3436   0015F4  2B8A               	incf	(_year+1)& (0+255),f,b
  3437   0015F6                     l380:
  3438                           
  3439                           ; BSR set to: 0
  3440   0015F6  0012               	return		;funcret
  3441   0015F8                     __end_of_increment:
  3442                           	callstack 0
  3443                           
  3444 ;; *************** function _LEDarray_disp_bin *****************
  3445 ;; Defined at:
  3446 ;;		line 38 in file "LEDarray.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;  number          2    4[COMRAM] unsigned int 
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;  ctr             2   28[COMRAM] int 
  3451 ;;  led_arr        18    8[COMRAM] int [9]
  3452 ;;  mask            2   26[COMRAM] int 
  3453 ;; Return value:  Size  Location     Type
  3454 ;;                  1    wreg      void 
  3455 ;; Registers used:
  3456 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3457 ;; Tracked objects:
  3458 ;;		On entry : 0/0
  3459 ;;		On exit  : 0/0
  3460 ;;		Unchanged: 0/0
  3461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3462 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3463 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3464 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3465 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3466 ;;Total ram usage:       26 bytes
  3467 ;; Hardware stack levels used: 1
  3468 ;; Hardware stack levels required when called: 2
  3469 ;; This function calls:
  3470 ;;		Nothing
  3471 ;; This function is called by:
  3472 ;;		_increment
  3473 ;;		_LEDarray_disp_dec
  3474 ;;		_LEDarray_disp_PPM
  3475 ;;		_incrementseconds
  3476 ;; This function uses a non-reentrant model
  3477 ;;
  3478                           
  3479                           	psect	text23
  3480   0015F8                     __ptext23:
  3481                           	callstack 0
  3482   0015F8                     _LEDarray_disp_bin:
  3483                           	callstack 27
  3484   0015F8                     
  3485                           ;LEDarray.c: 38: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 39: {;LEDarray.
      +                          c: 43:     int mask= 0b000000001;
  3486   0015F8  0E00               	movlw	0
  3487   0015FA  6E1C               	movwf	(LEDarray_disp_bin@mask+1)^0,c
  3488   0015FC  0E01               	movlw	1
  3489   0015FE  6E1B               	movwf	LEDarray_disp_bin@mask^0,c
  3490                           
  3491                           ;LEDarray.c: 44:     int led_arr[9];;LEDarray.c: 45:     for(int ctr=0;ctr<9;ctr++){
  3492   001600  0E00               	movlw	0
  3493   001602  6E1E               	movwf	(LEDarray_disp_bin@ctr+1)^0,c
  3494   001604  0E00               	movlw	0
  3495   001606  6E1D               	movwf	LEDarray_disp_bin@ctr^0,c
  3496   001608                     l2738:
  3497                           
  3498                           ;LEDarray.c: 46:         if (number & mask)
  3499   001608  5005               	movf	LEDarray_disp_bin@number^0,w,c
  3500   00160A  141B               	andwf	LEDarray_disp_bin@mask^0,w,c
  3501   00160C  6E07               	movwf	??_LEDarray_disp_bin^0,c
  3502   00160E  5006               	movf	(LEDarray_disp_bin@number+1)^0,w,c
  3503   001610  141C               	andwf	(LEDarray_disp_bin@mask+1)^0,w,c
  3504   001612  6E08               	movwf	(??_LEDarray_disp_bin+1)^0,c
  3505   001614  5007               	movf	??_LEDarray_disp_bin^0,w,c
  3506   001616  1008               	iorwf	(??_LEDarray_disp_bin+1)^0,w,c
  3507   001618  B4D8               	btfsc	status,2,c
  3508   00161A  EF11  F00B         	goto	u2211
  3509   00161E  EF13  F00B         	goto	u2210
  3510   001622                     u2211:
  3511   001622  EF22  F00B         	goto	l2742
  3512   001626                     u2210:
  3513   001626                     
  3514                           ;LEDarray.c: 47:             led_arr[ctr]=1;
  3515   001626  90D8               	bcf	status,0,c
  3516   001628  341D               	rlcf	LEDarray_disp_bin@ctr^0,w,c
  3517   00162A  6ED9               	movwf	fsr2l,c
  3518   00162C  341E               	rlcf	(LEDarray_disp_bin@ctr+1)^0,w,c
  3519   00162E  6EDA               	movwf	fsr2h,c
  3520   001630  0E09               	movlw	low LEDarray_disp_bin@led_arr
  3521   001632  26D9               	addwf	fsr2l,f,c
  3522   001634  0E00               	movlw	high LEDarray_disp_bin@led_arr
  3523   001636  22DA               	addwfc	fsr2h,f,c
  3524   001638  0E01               	movlw	1
  3525   00163A  6EDE               	movwf	postinc2,c
  3526   00163C  0E00               	movlw	0
  3527   00163E  6EDD               	movwf	postdec2,c
  3528   001640  EF2F  F00B         	goto	l2744
  3529   001644                     l2742:
  3530                           
  3531                           ;LEDarray.c: 50:             led_arr[ctr]=0;
  3532   001644  90D8               	bcf	status,0,c
  3533   001646  341D               	rlcf	LEDarray_disp_bin@ctr^0,w,c
  3534   001648  6ED9               	movwf	fsr2l,c
  3535   00164A  341E               	rlcf	(LEDarray_disp_bin@ctr+1)^0,w,c
  3536   00164C  6EDA               	movwf	fsr2h,c
  3537   00164E  0E09               	movlw	low LEDarray_disp_bin@led_arr
  3538   001650  26D9               	addwf	fsr2l,f,c
  3539   001652  0E00               	movlw	high LEDarray_disp_bin@led_arr
  3540   001654  22DA               	addwfc	fsr2h,f,c
  3541   001656  0E00               	movlw	0
  3542   001658  6EDE               	movwf	postinc2,c
  3543   00165A  0E00               	movlw	0
  3544   00165C  6EDD               	movwf	postdec2,c
  3545   00165E                     l2744:
  3546                           
  3547                           ;LEDarray.c: 52:         mask<<=1;
  3548   00165E  90D8               	bcf	status,0,c
  3549   001660  361B               	rlcf	LEDarray_disp_bin@mask^0,f,c
  3550   001662  361C               	rlcf	(LEDarray_disp_bin@mask+1)^0,f,c
  3551   001664                     
  3552                           ;LEDarray.c: 53:     }
  3553   001664  4A1D               	infsnz	LEDarray_disp_bin@ctr^0,f,c
  3554   001666  2A1E               	incf	(LEDarray_disp_bin@ctr+1)^0,f,c
  3555   001668  BE1E               	btfsc	(LEDarray_disp_bin@ctr+1)^0,7,c
  3556   00166A  EF40  F00B         	goto	u2221
  3557   00166E  501E               	movf	(LEDarray_disp_bin@ctr+1)^0,w,c
  3558   001670  E109               	bnz	u2220
  3559   001672  0E09               	movlw	9
  3560   001674  5C1D               	subwf	LEDarray_disp_bin@ctr^0,w,c
  3561   001676  A0D8               	btfss	status,0,c
  3562   001678  EF40  F00B         	goto	u2221
  3563   00167C  EF42  F00B         	goto	u2220
  3564   001680                     u2221:
  3565   001680  EF04  F00B         	goto	l2738
  3566   001684                     u2220:
  3567   001684                     
  3568                           ;LEDarray.c: 55:     LATGbits.LATG0 = led_arr[0];
  3569   001684  B009               	btfsc	LEDarray_disp_bin@led_arr^0,0,c
  3570   001686  D002               	bra	u2235
  3571   001688  907F               	bcf	127,0,c	;volatile
  3572   00168A  D001               	bra	u2236
  3573   00168C                     u2235:
  3574   00168C  807F               	bsf	127,0,c	;volatile
  3575   00168E                     u2236:
  3576                           
  3577                           ;LEDarray.c: 56:     LATGbits.LATG1 = led_arr[1];
  3578   00168E  B00B               	btfsc	(LEDarray_disp_bin@led_arr+2)^0,0,c
  3579   001690  D002               	bra	u2245
  3580   001692  927F               	bcf	127,1,c	;volatile
  3581   001694  D001               	bra	u2246
  3582   001696                     u2245:
  3583   001696  827F               	bsf	127,1,c	;volatile
  3584   001698                     u2246:
  3585                           
  3586                           ;LEDarray.c: 57:     LATAbits.LATA2 = led_arr[2];
  3587   001698  B00D               	btfsc	(LEDarray_disp_bin@led_arr+4)^0,0,c
  3588   00169A  D002               	bra	u2255
  3589   00169C  9479               	bcf	121,2,c	;volatile
  3590   00169E  D001               	bra	u2256
  3591   0016A0                     u2255:
  3592   0016A0  8479               	bsf	121,2,c	;volatile
  3593   0016A2                     u2256:
  3594                           
  3595                           ;LEDarray.c: 58:     LATFbits.LATF6 = led_arr[3];
  3596   0016A2  B00F               	btfsc	(LEDarray_disp_bin@led_arr+6)^0,0,c
  3597   0016A4  D002               	bra	u2265
  3598   0016A6  9C7E               	bcf	126,6,c	;volatile
  3599   0016A8  D001               	bra	u2266
  3600   0016AA                     u2265:
  3601   0016AA  8C7E               	bsf	126,6,c	;volatile
  3602   0016AC                     u2266:
  3603                           
  3604                           ;LEDarray.c: 59:     LATAbits.LATA4 = led_arr[4];
  3605   0016AC  B011               	btfsc	(LEDarray_disp_bin@led_arr+8)^0,0,c
  3606   0016AE  D002               	bra	u2275
  3607   0016B0  9879               	bcf	121,4,c	;volatile
  3608   0016B2  D001               	bra	u2276
  3609   0016B4                     u2275:
  3610   0016B4  8879               	bsf	121,4,c	;volatile
  3611   0016B6                     u2276:
  3612                           
  3613                           ;LEDarray.c: 60:     LATAbits.LATA5 = led_arr[5];
  3614   0016B6  B013               	btfsc	(LEDarray_disp_bin@led_arr+10)^0,0,c
  3615   0016B8  D002               	bra	u2285
  3616   0016BA  9A79               	bcf	121,5,c	;volatile
  3617   0016BC  D001               	bra	u2286
  3618   0016BE                     u2285:
  3619   0016BE  8A79               	bsf	121,5,c	;volatile
  3620   0016C0                     u2286:
  3621                           
  3622                           ;LEDarray.c: 61:     LATFbits.LATF0 = led_arr[6];
  3623   0016C0  B015               	btfsc	(LEDarray_disp_bin@led_arr+12)^0,0,c
  3624   0016C2  D002               	bra	u2295
  3625   0016C4  907E               	bcf	126,0,c	;volatile
  3626   0016C6  D001               	bra	u2296
  3627   0016C8                     u2295:
  3628   0016C8  807E               	bsf	126,0,c	;volatile
  3629   0016CA                     u2296:
  3630                           
  3631                           ;LEDarray.c: 62:     LATBbits.LATB0 = led_arr[7];
  3632   0016CA  B017               	btfsc	(LEDarray_disp_bin@led_arr+14)^0,0,c
  3633   0016CC  D002               	bra	u2305
  3634   0016CE  907A               	bcf	122,0,c	;volatile
  3635   0016D0  D001               	bra	u2306
  3636   0016D2                     u2305:
  3637   0016D2  807A               	bsf	122,0,c	;volatile
  3638   0016D4                     u2306:
  3639                           
  3640                           ;LEDarray.c: 63:     LATBbits.LATB1 = led_arr[8];
  3641   0016D4  B019               	btfsc	(LEDarray_disp_bin@led_arr+16)^0,0,c
  3642   0016D6  D002               	bra	u2315
  3643   0016D8  927A               	bcf	122,1,c	;volatile
  3644   0016DA  D001               	bra	u2316
  3645   0016DC                     u2315:
  3646   0016DC  827A               	bsf	122,1,c	;volatile
  3647   0016DE                     u2316:
  3648   0016DE  0012               	return		;funcret
  3649   0016E0                     __end_of_LEDarray_disp_bin:
  3650                           	callstack 0
  3651                           
  3652 ;; *************** function _daylightsavings *****************
  3653 ;; Defined at:
  3654 ;;		line 127 in file "Functions.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;		None
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;		None
  3659 ;; Return value:  Size  Location     Type
  3660 ;;                  1    wreg      void 
  3661 ;; Registers used:
  3662 ;;		wreg, status,2, status,0
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3672 ;;Total ram usage:        0 bytes
  3673 ;; Hardware stack levels used: 1
  3674 ;; Hardware stack levels required when called: 2
  3675 ;; This function calls:
  3676 ;;		Nothing
  3677 ;; This function is called by:
  3678 ;;		_main
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           	psect	text24
  3683   0019AC                     __ptext24:
  3684                           	callstack 0
  3685   0019AC                     _daylightsavings:
  3686                           	callstack 28
  3687   0019AC                     
  3688                           ;Functions.c: 128:     if (month_num == 3 && day_of_week == 7 && 25 <= day_of_month <= 3
      +                          1 && hour == 1)
  3689   0019AC  0E03               	movlw	3
  3690   0019AE  0100               	movlb	0	; () banked
  3691   0019B0  1991               	xorwf	_month_num& (0+255),w,b
  3692   0019B2  1192               	iorwf	(_month_num+1)& (0+255),w,b
  3693   0019B4  A4D8               	btfss	status,2,c
  3694   0019B6  EFDF  F00C         	goto	u2581
  3695   0019BA  EFE1  F00C         	goto	u2580
  3696   0019BE                     u2581:
  3697   0019BE  EFF6  F00C         	goto	l3008
  3698   0019C2                     u2580:
  3699   0019C2                     
  3700                           ; BSR set to: 0
  3701   0019C2  0E07               	movlw	7
  3702   0019C4  198D               	xorwf	_day_of_week& (0+255),w,b
  3703   0019C6  118E               	iorwf	(_day_of_week+1)& (0+255),w,b
  3704   0019C8  A4D8               	btfss	status,2,c
  3705   0019CA  EFE9  F00C         	goto	u2591
  3706   0019CE  EFEB  F00C         	goto	u2590
  3707   0019D2                     u2591:
  3708   0019D2  EFF6  F00C         	goto	l3008
  3709   0019D6                     u2590:
  3710   0019D6                     
  3711                           ; BSR set to: 0
  3712   0019D6  0599               	decf	_hour& (0+255),w,b
  3713   0019D8  119A               	iorwf	(_hour+1)& (0+255),w,b
  3714   0019DA  A4D8               	btfss	status,2,c
  3715   0019DC  EFF2  F00C         	goto	u2601
  3716   0019E0  EFF4  F00C         	goto	u2600
  3717   0019E4                     u2601:
  3718   0019E4  EFF6  F00C         	goto	l3008
  3719   0019E8                     u2600:
  3720   0019E8                     
  3721                           ; BSR set to: 0
  3722                           ;Functions.c: 129:         hour++;
  3723   0019E8  4B99               	infsnz	_hour& (0+255),f,b
  3724   0019EA  2B9A               	incf	(_hour+1)& (0+255),f,b
  3725   0019EC                     l3008:
  3726                           
  3727                           ; BSR set to: 0
  3728                           ;Functions.c: 131:     if (month_num == 10 && day_of_week == 7 && 25 <= day_of_month <= 
      +                          31 && hour == 2)
  3729   0019EC  0E0A               	movlw	10
  3730   0019EE  1991               	xorwf	_month_num& (0+255),w,b
  3731   0019F0  1192               	iorwf	(_month_num+1)& (0+255),w,b
  3732   0019F2  A4D8               	btfss	status,2,c
  3733   0019F4  EFFE  F00C         	goto	u2611
  3734   0019F8  EF00  F00D         	goto	u2610
  3735   0019FC                     u2611:
  3736   0019FC  EF17  F00D         	goto	l406
  3737   001A00                     u2610:
  3738   001A00                     
  3739                           ; BSR set to: 0
  3740   001A00  0E07               	movlw	7
  3741   001A02  198D               	xorwf	_day_of_week& (0+255),w,b
  3742   001A04  118E               	iorwf	(_day_of_week+1)& (0+255),w,b
  3743   001A06  A4D8               	btfss	status,2,c
  3744   001A08  EF08  F00D         	goto	u2621
  3745   001A0C  EF0A  F00D         	goto	u2620
  3746   001A10                     u2621:
  3747   001A10  EF17  F00D         	goto	l406
  3748   001A14                     u2620:
  3749   001A14                     
  3750                           ; BSR set to: 0
  3751   001A14  0E02               	movlw	2
  3752   001A16  1999               	xorwf	_hour& (0+255),w,b
  3753   001A18  119A               	iorwf	(_hour+1)& (0+255),w,b
  3754   001A1A  A4D8               	btfss	status,2,c
  3755   001A1C  EF12  F00D         	goto	u2631
  3756   001A20  EF14  F00D         	goto	u2630
  3757   001A24                     u2631:
  3758   001A24  EF17  F00D         	goto	l406
  3759   001A28                     u2630:
  3760   001A28                     
  3761                           ; BSR set to: 0
  3762                           ;Functions.c: 132:         hour--;
  3763   001A28  0799               	decf	_hour& (0+255),f,b
  3764   001A2A  A0D8               	btfss	status,0,c
  3765   001A2C  079A               	decf	(_hour+1)& (0+255),f,b
  3766   001A2E                     l406:
  3767                           
  3768                           ; BSR set to: 0
  3769   001A2E  0012               	return		;funcret
  3770   001A30                     __end_of_daylightsavings:
  3771                           	callstack 0
  3772                           
  3773 ;; *************** function _day1_init *****************
  3774 ;; Defined at:
  3775 ;;		line 77 in file "Functions.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;		None
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;		None
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  1    wreg      void 
  3782 ;; Registers used:
  3783 ;;		wreg, status,2
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3793 ;;Total ram usage:        0 bytes
  3794 ;; Hardware stack levels used: 1
  3795 ;; Hardware stack levels required when called: 2
  3796 ;; This function calls:
  3797 ;;		Nothing
  3798 ;; This function is called by:
  3799 ;;		_main
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           
  3803                           	psect	text25
  3804   001E2A                     __ptext25:
  3805                           	callstack 0
  3806   001E2A                     _day1_init:
  3807                           	callstack 28
  3808   001E2A                     
  3809                           ;Functions.c: 78:     seconds = 0;
  3810   001E2A  0E00               	movlw	0
  3811   001E2C  0100               	movlb	0	; () banked
  3812   001E2E  6F9C               	movwf	(_seconds+1)& (0+255),b
  3813   001E30  0E00               	movlw	0
  3814   001E32  6F9B               	movwf	_seconds& (0+255),b
  3815                           
  3816                           ;Functions.c: 79:     hour = 0;
  3817   001E34  0E00               	movlw	0
  3818   001E36  6F9A               	movwf	(_hour+1)& (0+255),b
  3819   001E38  0E00               	movlw	0
  3820   001E3A  6F99               	movwf	_hour& (0+255),b
  3821                           
  3822                           ;Functions.c: 80:     day_of_year = 1;
  3823   001E3C  0E00               	movlw	0
  3824   001E3E  6F90               	movwf	(_day_of_year+1)& (0+255),b
  3825   001E40  0E01               	movlw	1
  3826   001E42  6F8F               	movwf	_day_of_year& (0+255),b
  3827                           
  3828                           ;Functions.c: 81:     day_of_month = 1;
  3829   001E44  0E00               	movlw	0
  3830   001E46  6F8C               	movwf	(_day_of_month+1)& (0+255),b
  3831   001E48  0E01               	movlw	1
  3832   001E4A  6F8B               	movwf	_day_of_month& (0+255),b
  3833                           
  3834                           ;Functions.c: 82:     day_of_week = 1;
  3835   001E4C  0E00               	movlw	0
  3836   001E4E  6F8E               	movwf	(_day_of_week+1)& (0+255),b
  3837   001E50  0E01               	movlw	1
  3838   001E52  6F8D               	movwf	_day_of_week& (0+255),b
  3839                           
  3840                           ;Functions.c: 83:     year = 2022;
  3841   001E54  0E07               	movlw	7
  3842   001E56  6F8A               	movwf	(_year+1)& (0+255),b
  3843   001E58  0EE6               	movlw	230
  3844   001E5A  6F89               	movwf	_year& (0+255),b
  3845                           
  3846                           ;Functions.c: 84:     month_num = 1;
  3847   001E5C  0E00               	movlw	0
  3848   001E5E  6F92               	movwf	(_month_num+1)& (0+255),b
  3849   001E60  0E01               	movlw	1
  3850   001E62  6F91               	movwf	_month_num& (0+255),b
  3851   001E64                     
  3852                           ; BSR set to: 0
  3853                           ;Functions.c: 85:     LATHbits.LATH3 = 1;
  3854   001E64  8680               	bsf	128,3,c	;volatile
  3855   001E66                     
  3856                           ; BSR set to: 0
  3857   001E66  0012               	return		;funcret
  3858   001E68                     __end_of_day1_init:
  3859                           	callstack 0
  3860                           
  3861 ;; *************** function _Timer0_init *****************
  3862 ;; Defined at:
  3863 ;;		line 7 in file "timers.c"
  3864 ;; Parameters:    Size  Location     Type
  3865 ;;		None
  3866 ;; Auto vars:     Size  Location     Type
  3867 ;;		None
  3868 ;; Return value:  Size  Location     Type
  3869 ;;                  1    wreg      void 
  3870 ;; Registers used:
  3871 ;;		wreg, status,2
  3872 ;; Tracked objects:
  3873 ;;		On entry : 0/0
  3874 ;;		On exit  : 0/0
  3875 ;;		Unchanged: 0/0
  3876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3881 ;;Total ram usage:        0 bytes
  3882 ;; Hardware stack levels used: 1
  3883 ;; Hardware stack levels required when called: 2
  3884 ;; This function calls:
  3885 ;;		Nothing
  3886 ;; This function is called by:
  3887 ;;		_main
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890                           
  3891                           	psect	text26
  3892   00200C                     __ptext26:
  3893                           	callstack 0
  3894   00200C                     _Timer0_init:
  3895                           	callstack 28
  3896   00200C                     
  3897                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  3898   00200C  50D6               	movf	214,w,c	;volatile
  3899   00200E  0B1F               	andlw	-225
  3900   002010  0940               	iorlw	64
  3901   002012  6ED6               	movwf	214,c	;volatile
  3902   002014                     
  3903                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  3904   002014  88D6               	bsf	214,4,c	;volatile
  3905                           
  3906                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  3907   002016  50D6               	movf	214,w,c	;volatile
  3908   002018  0BF0               	andlw	-16
  3909   00201A  0908               	iorlw	8
  3910   00201C  6ED6               	movwf	214,c	;volatile
  3911   00201E                     
  3912                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  3913   00201E  88D5               	bsf	213,4,c	;volatile
  3914                           
  3915                           ;timers.c: 15:     TMR0H=0b00001011;
  3916   002020  0E0B               	movlw	11
  3917   002022  6ED4               	movwf	212,c	;volatile
  3918                           
  3919                           ;timers.c: 16:     TMR0L=0b11011011;
  3920   002024  0EDB               	movlw	219
  3921   002026  6ED3               	movwf	211,c	;volatile
  3922   002028                     
  3923                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  3924   002028  8ED5               	bsf	213,7,c	;volatile
  3925   00202A  0012               	return		;funcret
  3926   00202C                     __end_of_Timer0_init:
  3927                           	callstack 0
  3928                           
  3929 ;; *************** function _LEDarray_init *****************
  3930 ;; Defined at:
  3931 ;;		line 10 in file "LEDarray.c"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;		None
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;		None
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  1    wreg      void 
  3938 ;; Registers used:
  3939 ;;		None
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3949 ;;Total ram usage:        0 bytes
  3950 ;; Hardware stack levels used: 1
  3951 ;; Hardware stack levels required when called: 2
  3952 ;; This function calls:
  3953 ;;		Nothing
  3954 ;; This function is called by:
  3955 ;;		_main
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958                           
  3959                           	psect	text27
  3960   001F9E                     __ptext27:
  3961                           	callstack 0
  3962   001F9E                     _LEDarray_init:
  3963                           	callstack 28
  3964   001F9E                     
  3965                           ;LEDarray.c: 13:     TRISGbits.TRISG0 = 0;
  3966   001F9E  9087               	bcf	135,0,c	;volatile
  3967                           
  3968                           ;LEDarray.c: 14:     TRISGbits.TRISG1 = 0;
  3969   001FA0  9287               	bcf	135,1,c	;volatile
  3970                           
  3971                           ;LEDarray.c: 15:     TRISAbits.TRISA2 = 0;
  3972   001FA2  9481               	bcf	129,2,c	;volatile
  3973                           
  3974                           ;LEDarray.c: 16:     TRISFbits.TRISF6 = 0;
  3975   001FA4  9C86               	bcf	134,6,c	;volatile
  3976                           
  3977                           ;LEDarray.c: 17:     TRISAbits.TRISA4 = 0;
  3978   001FA6  9881               	bcf	129,4,c	;volatile
  3979                           
  3980                           ;LEDarray.c: 18:     TRISAbits.TRISA5 = 0;
  3981   001FA8  9A81               	bcf	129,5,c	;volatile
  3982                           
  3983                           ;LEDarray.c: 19:     TRISFbits.TRISF0 = 0;
  3984   001FAA  9086               	bcf	134,0,c	;volatile
  3985                           
  3986                           ;LEDarray.c: 20:     TRISBbits.TRISB0 = 0;
  3987   001FAC  9082               	bcf	130,0,c	;volatile
  3988                           
  3989                           ;LEDarray.c: 21:     TRISBbits.TRISB1 = 0;
  3990   001FAE  9282               	bcf	130,1,c	;volatile
  3991                           
  3992                           ;LEDarray.c: 24:     LATGbits.LATG0 = 0;
  3993   001FB0  907F               	bcf	127,0,c	;volatile
  3994                           
  3995                           ;LEDarray.c: 25:     LATGbits.LATG1 = 0;
  3996   001FB2  927F               	bcf	127,1,c	;volatile
  3997                           
  3998                           ;LEDarray.c: 26:     LATAbits.LATA2 = 0;
  3999   001FB4  9479               	bcf	121,2,c	;volatile
  4000                           
  4001                           ;LEDarray.c: 27:     LATFbits.LATF6 = 0;
  4002   001FB6  9C7E               	bcf	126,6,c	;volatile
  4003                           
  4004                           ;LEDarray.c: 28:     LATAbits.LATA4 = 0;
  4005   001FB8  9879               	bcf	121,4,c	;volatile
  4006                           
  4007                           ;LEDarray.c: 29:     LATAbits.LATA5 = 0;
  4008   001FBA  9A79               	bcf	121,5,c	;volatile
  4009                           
  4010                           ;LEDarray.c: 30:     LATFbits.LATF0 = 0;
  4011   001FBC  907E               	bcf	126,0,c	;volatile
  4012                           
  4013                           ;LEDarray.c: 31:     LATBbits.LATB0 = 0;
  4014   001FBE  907A               	bcf	122,0,c	;volatile
  4015                           
  4016                           ;LEDarray.c: 32:     LATBbits.LATB1 = 0;
  4017   001FC0  927A               	bcf	122,1,c	;volatile
  4018   001FC2  0012               	return		;funcret
  4019   001FC4                     __end_of_LEDarray_init:
  4020                           	callstack 0
  4021                           
  4022 ;; *************** function _LCD_setline *****************
  4023 ;; Defined at:
  4024 ;;		line 95 in file "LCD.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;  line            1    wreg     unsigned char 
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;  line            1    7[COMRAM] unsigned char 
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  1    wreg      void 
  4031 ;; Registers used:
  4032 ;;		wreg, status,2, status,0, cstack
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4039 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4041 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4042 ;;Total ram usage:        1 bytes
  4043 ;; Hardware stack levels used: 1
  4044 ;; Hardware stack levels required when called: 5
  4045 ;; This function calls:
  4046 ;;		_LCD_sendbyte
  4047 ;; This function is called by:
  4048 ;;		_main
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051                           
  4052                           	psect	text28
  4053   001F14                     __ptext28:
  4054                           	callstack 0
  4055   001F14                     _LCD_setline:
  4056                           	callstack 25
  4057                           
  4058                           ;incstack = 0
  4059                           ;LCD_setline@line stored from wreg
  4060   001F14  6E08               	movwf	LCD_setline@line^0,c
  4061   001F16                     
  4062                           ;LCD.c: 96:     if(line&0b01)
  4063   001F16  A008               	btfss	LCD_setline@line^0,0,c
  4064   001F18  EF90  F00F         	goto	u2451
  4065   001F1C  EF92  F00F         	goto	u2450
  4066   001F20                     u2451:
  4067   001F20  EF97  F00F         	goto	l2934
  4068   001F24                     u2450:
  4069   001F24                     
  4070                           ;LCD.c: 97:     {;LCD.c: 98:         LCD_sendbyte(0x80,0);
  4071   001F24  0E00               	movlw	0
  4072   001F26  6E06               	movwf	LCD_sendbyte@type^0,c
  4073   001F28  0E80               	movlw	128
  4074   001F2A  ECA4  F00F         	call	_LCD_sendbyte
  4075   001F2E                     l2934:
  4076                           
  4077                           ;LCD.c: 100:     if(line&0b10)
  4078   001F2E  A208               	btfss	LCD_setline@line^0,1,c
  4079   001F30  EF9C  F00F         	goto	u2461
  4080   001F34  EF9E  F00F         	goto	u2460
  4081   001F38                     u2461:
  4082   001F38  EFA3  F00F         	goto	l453
  4083   001F3C                     u2460:
  4084   001F3C                     
  4085                           ;LCD.c: 101:     {;LCD.c: 102:         LCD_sendbyte(0xC0,0);
  4086   001F3C  0E00               	movlw	0
  4087   001F3E  6E06               	movwf	LCD_sendbyte@type^0,c
  4088   001F40  0EC0               	movlw	192
  4089   001F42  ECA4  F00F         	call	_LCD_sendbyte
  4090   001F46                     l453:
  4091   001F46  0012               	return		;funcret
  4092   001F48                     __end_of_LCD_setline:
  4093                           	callstack 0
  4094                           
  4095 ;; *************** function _LCD_Init *****************
  4096 ;; Defined at:
  4097 ;;		line 53 in file "LCD.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;		None
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;		None
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  1    wreg      void 
  4104 ;; Registers used:
  4105 ;;		wreg, status,2, status,0, cstack
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4113 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4114 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4115 ;;Total ram usage:        2 bytes
  4116 ;; Hardware stack levels used: 1
  4117 ;; Hardware stack levels required when called: 5
  4118 ;; This function calls:
  4119 ;;		_LCD_sendbyte
  4120 ;;		_LCD_sendnibble
  4121 ;; This function is called by:
  4122 ;;		_main
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           	psect	text29
  4127   00186E                     __ptext29:
  4128                           	callstack 0
  4129   00186E                     _LCD_Init:
  4130                           	callstack 25
  4131   00186E                     
  4132                           ;LCD.c: 57:     TRISCbits.TRISC2 = 0;
  4133   00186E  9483               	bcf	131,2,c	;volatile
  4134                           
  4135                           ;LCD.c: 58:     TRISCbits.TRISC6 = 0;
  4136   001870  9C83               	bcf	131,6,c	;volatile
  4137                           
  4138                           ;LCD.c: 60:     TRISBbits.TRISB3 = 0;
  4139   001872  9682               	bcf	130,3,c	;volatile
  4140                           
  4141                           ;LCD.c: 61:     TRISBbits.TRISB2 = 0;
  4142   001874  9482               	bcf	130,2,c	;volatile
  4143                           
  4144                           ;LCD.c: 62:     TRISEbits.TRISE1 = 0;
  4145   001876  9285               	bcf	133,1,c	;volatile
  4146                           
  4147                           ;LCD.c: 63:     TRISEbits.TRISE3 = 0;
  4148   001878  9685               	bcf	133,3,c	;volatile
  4149                           
  4150                           ;LCD.c: 65:     LATBbits.LATB3 = 0;
  4151   00187A  967A               	bcf	122,3,c	;volatile
  4152                           
  4153                           ;LCD.c: 66:     LATBbits.LATB2 = 0;
  4154   00187C  947A               	bcf	122,2,c	;volatile
  4155                           
  4156                           ;LCD.c: 67:     LATEbits.LATE1 = 0;
  4157   00187E  927D               	bcf	125,1,c	;volatile
  4158                           
  4159                           ;LCD.c: 68:     LATEbits.LATE3 = 0;
  4160   001880  967D               	bcf	125,3,c	;volatile
  4161                           
  4162                           ;LCD.c: 70:     LATCbits.LATC2 = 0;
  4163   001882  947B               	bcf	123,2,c	;volatile
  4164                           
  4165                           ;LCD.c: 71:     LATCbits.LATC6 = 0;
  4166   001884  9C7B               	bcf	123,6,c	;volatile
  4167   001886                     
  4168                           ;LCD.c: 72:     _delay((unsigned long)((40)*(64000000/4000.0)));
  4169   001886  0E04               	movlw	4
  4170   001888  6E09               	movwf	(??_LCD_Init+1)^0,c
  4171   00188A  0E40               	movlw	64
  4172   00188C  6E08               	movwf	??_LCD_Init^0,c
  4173   00188E  0E26               	movlw	38
  4174   001890                     u2687:
  4175   001890  2EE8               	decfsz	wreg,f,c
  4176   001892  D7FE               	bra	u2687
  4177   001894  2E08               	decfsz	??_LCD_Init^0,f,c
  4178   001896  D7FC               	bra	u2687
  4179   001898  2E09               	decfsz	(??_LCD_Init+1)^0,f,c
  4180   00189A  D7FA               	bra	u2687
  4181   00189C  D000               	nop2	
  4182   00189E                     
  4183                           ;LCD.c: 77:     LCD_sendnibble(0b0011);
  4184   00189E  0E03               	movlw	3
  4185   0018A0  ECFB  F00D         	call	_LCD_sendnibble
  4186   0018A4                     
  4187                           ;LCD.c: 78:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  4188   0018A4  0ED5               	movlw	213
  4189   0018A6                     u2697:
  4190   0018A6  2EE8               	decfsz	wreg,f,c
  4191   0018A8  D7FE               	bra	u2697
  4192   0018AA  F000               	nop	
  4193   0018AC                     
  4194                           ;LCD.c: 79:     LCD_sendbyte(0b00101100,0);
  4195   0018AC  0E00               	movlw	0
  4196   0018AE  6E06               	movwf	LCD_sendbyte@type^0,c
  4197   0018B0  0E2C               	movlw	44
  4198   0018B2  ECA4  F00F         	call	_LCD_sendbyte
  4199   0018B6                     
  4200                           ;LCD.c: 80:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  4201   0018B6  0ED5               	movlw	213
  4202   0018B8                     u2707:
  4203   0018B8  2EE8               	decfsz	wreg,f,c
  4204   0018BA  D7FE               	bra	u2707
  4205   0018BC  F000               	nop	
  4206   0018BE                     
  4207                           ;LCD.c: 81:     LCD_sendbyte(0b00101100,0);
  4208   0018BE  0E00               	movlw	0
  4209   0018C0  6E06               	movwf	LCD_sendbyte@type^0,c
  4210   0018C2  0E2C               	movlw	44
  4211   0018C4  ECA4  F00F         	call	_LCD_sendbyte
  4212   0018C8                     
  4213                           ;LCD.c: 82:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  4214   0018C8  0ED5               	movlw	213
  4215   0018CA                     u2717:
  4216   0018CA  2EE8               	decfsz	wreg,f,c
  4217   0018CC  D7FE               	bra	u2717
  4218   0018CE  F000               	nop	
  4219   0018D0                     
  4220                           ;LCD.c: 83:     LCD_sendbyte(0b00001100,0);
  4221   0018D0  0E00               	movlw	0
  4222   0018D2  6E06               	movwf	LCD_sendbyte@type^0,c
  4223   0018D4  0E0C               	movlw	12
  4224   0018D6  ECA4  F00F         	call	_LCD_sendbyte
  4225   0018DA                     
  4226                           ;LCD.c: 84:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  4227   0018DA  0ED5               	movlw	213
  4228   0018DC                     u2727:
  4229   0018DC  2EE8               	decfsz	wreg,f,c
  4230   0018DE  D7FE               	bra	u2727
  4231   0018E0  F000               	nop	
  4232   0018E2                     
  4233                           ;LCD.c: 85:     LCD_sendbyte(0b00000001,0);
  4234   0018E2  0E00               	movlw	0
  4235   0018E4  6E06               	movwf	LCD_sendbyte@type^0,c
  4236   0018E6  0E01               	movlw	1
  4237   0018E8  ECA4  F00F         	call	_LCD_sendbyte
  4238   0018EC                     
  4239                           ;LCD.c: 86:     _delay((unsigned long)((1.53)*(64000000/4000.0)));
  4240   0018EC  0E20               	movlw	32
  4241   0018EE  6E08               	movwf	??_LCD_Init^0,c
  4242   0018F0  0ECA               	movlw	202
  4243   0018F2                     u2737:
  4244   0018F2  2EE8               	decfsz	wreg,f,c
  4245   0018F4  D7FE               	bra	u2737
  4246   0018F6  2E08               	decfsz	??_LCD_Init^0,f,c
  4247   0018F8  D7FC               	bra	u2737
  4248   0018FA                     
  4249                           ;LCD.c: 87:     LCD_sendbyte(0b00000111,0);
  4250   0018FA  0E00               	movlw	0
  4251   0018FC  6E06               	movwf	LCD_sendbyte@type^0,c
  4252   0018FE  0E07               	movlw	7
  4253   001900  ECA4  F00F         	call	_LCD_sendbyte
  4254   001904                     
  4255                           ;LCD.c: 88:     LCD_sendbyte(0b00001100,0);
  4256   001904  0E00               	movlw	0
  4257   001906  6E06               	movwf	LCD_sendbyte@type^0,c
  4258   001908  0E0C               	movlw	12
  4259   00190A  ECA4  F00F         	call	_LCD_sendbyte
  4260   00190E  0012               	return		;funcret
  4261   001910                     __end_of_LCD_Init:
  4262                           	callstack 0
  4263                           
  4264 ;; *************** function _LCD_sendbyte *****************
  4265 ;; Defined at:
  4266 ;;		line 36 in file "LCD.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;  Byte            1    wreg     unsigned char 
  4269 ;;  type            1    5[COMRAM] unsigned char 
  4270 ;; Auto vars:     Size  Location     Type
  4271 ;;  Byte            1    6[COMRAM] unsigned char 
  4272 ;; Return value:  Size  Location     Type
  4273 ;;                  1    wreg      void 
  4274 ;; Registers used:
  4275 ;;		wreg, status,2, status,0, cstack
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: 0/0
  4280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4281 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4282 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4284 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4285 ;;Total ram usage:        2 bytes
  4286 ;; Hardware stack levels used: 1
  4287 ;; Hardware stack levels required when called: 4
  4288 ;; This function calls:
  4289 ;;		_LCD_sendnibble
  4290 ;; This function is called by:
  4291 ;;		_LCD_Init
  4292 ;;		_LCD_setline
  4293 ;;		_LCD_sendstring
  4294 ;;		_LCD_scroll
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           	psect	text30
  4299   001F48                     __ptext30:
  4300                           	callstack 0
  4301   001F48                     _LCD_sendbyte:
  4302                           	callstack 24
  4303                           
  4304                           ;incstack = 0
  4305                           ;LCD_sendbyte@Byte stored from wreg
  4306   001F48  6E07               	movwf	LCD_sendbyte@Byte^0,c
  4307   001F4A                     
  4308                           ;LCD.c: 37:     if(type&0b1)
  4309   001F4A  A006               	btfss	LCD_sendbyte@type^0,0,c
  4310   001F4C  EFAA  F00F         	goto	u2191
  4311   001F50  EFAC  F00F         	goto	u2190
  4312   001F54                     u2191:
  4313   001F54  EFAF  F00F         	goto	l443
  4314   001F58                     u2190:
  4315   001F58                     
  4316                           ;LCD.c: 38:     {;LCD.c: 39:         LATCbits.LATC6 = 1;
  4317   001F58  8C7B               	bsf	123,6,c	;volatile
  4318                           
  4319                           ;LCD.c: 40:     }
  4320   001F5A  EFB0  F00F         	goto	l2710
  4321   001F5E                     l443:
  4322                           
  4323                           ;LCD.c: 42:     {;LCD.c: 43:         (LATCbits.LATC6 = 0);
  4324   001F5E  9C7B               	bcf	123,6,c	;volatile
  4325   001F60                     l2710:
  4326                           
  4327                           ;LCD.c: 45:     LCD_sendnibble(Byte>>4);
  4328   001F60  3807               	swapf	LCD_sendbyte@Byte^0,w,c
  4329   001F62  0B0F               	andlw	15
  4330   001F64  ECFB  F00D         	call	_LCD_sendnibble
  4331   001F68                     
  4332                           ;LCD.c: 46:     LCD_sendnibble(Byte);
  4333   001F68  5007               	movf	LCD_sendbyte@Byte^0,w,c
  4334   001F6A  ECFB  F00D         	call	_LCD_sendnibble
  4335   001F6E                     
  4336                           ;LCD.c: 47:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  4337   001F6E  0EA0               	movlw	160
  4338   001F70                     u2747:
  4339   001F70  D000               	nop2	
  4340   001F72  2EE8               	decfsz	wreg,f,c
  4341   001F74  D7FD               	bra	u2747
  4342   001F76  0012               	return		;funcret
  4343   001F78                     __end_of_LCD_sendbyte:
  4344                           	callstack 0
  4345                           
  4346 ;; *************** function _LCD_sendnibble *****************
  4347 ;; Defined at:
  4348 ;;		line 17 in file "LCD.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;  number          1    wreg     unsigned char 
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;  number          1    4[COMRAM] unsigned char 
  4353 ;; Return value:  Size  Location     Type
  4354 ;;                  1    wreg      void 
  4355 ;; Registers used:
  4356 ;;		wreg, cstack
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4363 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4365 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4366 ;;Total ram usage:        1 bytes
  4367 ;; Hardware stack levels used: 1
  4368 ;; Hardware stack levels required when called: 3
  4369 ;; This function calls:
  4370 ;;		_LCD_E_TOG
  4371 ;; This function is called by:
  4372 ;;		_LCD_sendbyte
  4373 ;;		_LCD_Init
  4374 ;; This function uses a non-reentrant model
  4375 ;;
  4376                           
  4377                           	psect	text31
  4378   001BF6                     __ptext31:
  4379                           	callstack 0
  4380   001BF6                     _LCD_sendnibble:
  4381                           	callstack 24
  4382                           
  4383                           ;incstack = 0
  4384                           ;LCD_sendnibble@number stored from wreg
  4385   001BF6  6E05               	movwf	LCD_sendnibble@number^0,c
  4386   001BF8                     
  4387                           ;LCD.c: 20:     if(number&0b0001) LATBbits.LATB3=1;
  4388   001BF8  A005               	btfss	LCD_sendnibble@number^0,0,c
  4389   001BFA  EF01  F00E         	goto	u2121
  4390   001BFE  EF03  F00E         	goto	u2120
  4391   001C02                     u2121:
  4392   001C02  EF06  F00E         	goto	l432
  4393   001C06                     u2120:
  4394   001C06  867A               	bsf	122,3,c	;volatile
  4395   001C08  EF07  F00E         	goto	l2660
  4396   001C0C                     l432:
  4397   001C0C  967A               	bcf	122,3,c	;volatile
  4398   001C0E                     l2660:
  4399                           
  4400                           ;LCD.c: 22:     if(number&0b0010) LATBbits.LATB2=1;
  4401   001C0E  A205               	btfss	LCD_sendnibble@number^0,1,c
  4402   001C10  EF0C  F00E         	goto	u2131
  4403   001C14  EF0E  F00E         	goto	u2130
  4404   001C18                     u2131:
  4405   001C18  EF11  F00E         	goto	l434
  4406   001C1C                     u2130:
  4407   001C1C  847A               	bsf	122,2,c	;volatile
  4408   001C1E  EF12  F00E         	goto	l2664
  4409   001C22                     l434:
  4410   001C22  947A               	bcf	122,2,c	;volatile
  4411   001C24                     l2664:
  4412                           
  4413                           ;LCD.c: 24:     if(number&0b0100) LATEbits.LATE3=1;
  4414   001C24  A405               	btfss	LCD_sendnibble@number^0,2,c
  4415   001C26  EF17  F00E         	goto	u2141
  4416   001C2A  EF19  F00E         	goto	u2140
  4417   001C2E                     u2141:
  4418   001C2E  EF1C  F00E         	goto	l436
  4419   001C32                     u2140:
  4420   001C32  867D               	bsf	125,3,c	;volatile
  4421   001C34  EF1D  F00E         	goto	l2668
  4422   001C38                     l436:
  4423   001C38  967D               	bcf	125,3,c	;volatile
  4424   001C3A                     l2668:
  4425                           
  4426                           ;LCD.c: 26:     if(number&0b1000) LATEbits.LATE1=1;
  4427   001C3A  A605               	btfss	LCD_sendnibble@number^0,3,c
  4428   001C3C  EF22  F00E         	goto	u2151
  4429   001C40  EF24  F00E         	goto	u2150
  4430   001C44                     u2151:
  4431   001C44  EF27  F00E         	goto	l438
  4432   001C48                     u2150:
  4433   001C48  827D               	bsf	125,1,c	;volatile
  4434   001C4A  EF28  F00E         	goto	l2672
  4435   001C4E                     l438:
  4436   001C4E  927D               	bcf	125,1,c	;volatile
  4437   001C50                     l2672:
  4438                           
  4439                           ;LCD.c: 28:     LCD_E_TOG();
  4440   001C50  EC4C  F010         	call	_LCD_E_TOG	;wreg free
  4441   001C54                     
  4442                           ;LCD.c: 29:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  4443   001C54  0E1A               	movlw	26
  4444   001C56                     u2757:
  4445   001C56  2EE8               	decfsz	wreg,f,c
  4446   001C58  D7FE               	bra	u2757
  4447   001C5A  D000               	nop2	
  4448   001C5C  0012               	return		;funcret
  4449   001C5E                     __end_of_LCD_sendnibble:
  4450                           	callstack 0
  4451                           
  4452 ;; *************** function _LCD_E_TOG *****************
  4453 ;; Defined at:
  4454 ;;		line 8 in file "LCD.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;		None
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;		None
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  1    wreg      void 
  4461 ;; Registers used:
  4462 ;;		wreg
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4472 ;;Total ram usage:        0 bytes
  4473 ;; Hardware stack levels used: 1
  4474 ;; Hardware stack levels required when called: 2
  4475 ;; This function calls:
  4476 ;;		Nothing
  4477 ;; This function is called by:
  4478 ;;		_LCD_sendnibble
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482                           	psect	text32
  4483   002098                     __ptext32:
  4484                           	callstack 0
  4485   002098                     _LCD_E_TOG:
  4486                           	callstack 24
  4487   002098                     
  4488                           ;LCD.c: 9:     LATCbits.LATC2=1;
  4489   002098  847B               	bsf	123,2,c	;volatile
  4490   00209A                     
  4491                           ;LCD.c: 10:     _delay((unsigned long)((2)*(64000000/4000000.0)));
  4492   00209A  0E0A               	movlw	10
  4493   00209C                     u2767:
  4494   00209C  2EE8               	decfsz	wreg,f,c
  4495   00209E  D7FE               	bra	u2767
  4496   0020A0  D000               	nop2	
  4497   0020A2                     
  4498                           ;LCD.c: 11:     LATCbits.LATC2=0;
  4499   0020A2  947B               	bcf	123,2,c	;volatile
  4500   0020A4  0012               	return		;funcret
  4501   0020A6                     __end_of_LCD_E_TOG:
  4502                           	callstack 0
  4503                           
  4504 ;; *************** function _Interrupts_init *****************
  4505 ;; Defined at:
  4506 ;;		line 10 in file "interrupts.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;		None
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;		None
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  1    wreg      void 
  4513 ;; Registers used:
  4514 ;;		None
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4524 ;;Total ram usage:        0 bytes
  4525 ;; Hardware stack levels used: 1
  4526 ;; Hardware stack levels required when called: 2
  4527 ;; This function calls:
  4528 ;;		Nothing
  4529 ;; This function is called by:
  4530 ;;		_main
  4531 ;; This function uses a non-reentrant model
  4532 ;;
  4533                           
  4534                           	psect	text33
  4535   002086                     __ptext33:
  4536                           	callstack 0
  4537   002086                     _Interrupts_init:
  4538                           	callstack 28
  4539   002086                     
  4540                           ;interrupts.c: 14:     PIE2bits.C1IE=1;
  4541   002086  010E               	movlb	14	; () banked
  4542   002088  812B               	bsf	43,0,b	;volatile
  4543                           
  4544                           ;interrupts.c: 15:     PIE0bits.TMR0IE=1;
  4545   00208A  8B29               	bsf	41,5,b	;volatile
  4546                           
  4547                           ;interrupts.c: 16:     IPR2bits.C1IP = 1;
  4548   00208C  8121               	bsf	33,0,b	;volatile
  4549                           
  4550                           ;interrupts.c: 17:     IPR0bits.TMR0IP = 0;
  4551   00208E  9B1F               	bcf	31,5,b	;volatile
  4552                           
  4553                           ;interrupts.c: 18:     INTCONbits.IPEN=1;
  4554   002090  8AF2               	bsf	242,5,c	;volatile
  4555                           
  4556                           ;interrupts.c: 19:     INTCONbits.PEIE=1;
  4557   002092  8CF2               	bsf	242,6,c	;volatile
  4558                           
  4559                           ;interrupts.c: 20:     INTCONbits.GIE=1;
  4560   002094  8EF2               	bsf	242,7,c	;volatile
  4561   002096                     
  4562                           ; BSR set to: 14
  4563   002096  0012               	return		;funcret
  4564   002098                     __end_of_Interrupts_init:
  4565                           	callstack 0
  4566                           
  4567 ;; *************** function _Comp1_init_rising_edge *****************
  4568 ;; Defined at:
  4569 ;;		line 24 in file "comparator.c"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;		None
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;		None
  4574 ;; Return value:  Size  Location     Type
  4575 ;;                  1    wreg      void 
  4576 ;; Registers used:
  4577 ;;		wreg, status,2, cstack
  4578 ;; Tracked objects:
  4579 ;;		On entry : 0/0
  4580 ;;		On exit  : 0/0
  4581 ;;		Unchanged: 0/0
  4582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4587 ;;Total ram usage:        0 bytes
  4588 ;; Hardware stack levels used: 1
  4589 ;; Hardware stack levels required when called: 3
  4590 ;; This function calls:
  4591 ;;		_DAC_init
  4592 ;; This function is called by:
  4593 ;;		_main
  4594 ;; This function uses a non-reentrant model
  4595 ;;
  4596                           
  4597                           	psect	text34
  4598   001FC4                     __ptext34:
  4599                           	callstack 0
  4600   001FC4                     _Comp1_init_rising_edge:
  4601                           	callstack 27
  4602   001FC4                     
  4603                           ;comparator.c: 26:     TRISFbits.TRISF7=1;
  4604   001FC4  8E86               	bsf	134,7,c	;volatile
  4605   001FC6                     
  4606                           ;comparator.c: 27:     CM1NCHbits.NCH=0b011;
  4607   001FC6  010E               	movlb	14	; () banked
  4608   001FC8  51D2               	movf	210,w,b	;volatile
  4609   001FCA  0BF8               	andlw	-8
  4610   001FCC  0903               	iorlw	3
  4611   001FCE  6FD2               	movwf	210,b	;volatile
  4612                           
  4613                           ;comparator.c: 28:     CM1PCHbits.PCH=0b101;
  4614   001FD0  51D3               	movf	211,w,b	;volatile
  4615   001FD2  0BF8               	andlw	-8
  4616   001FD4  0905               	iorlw	5
  4617   001FD6  6FD3               	movwf	211,b	;volatile
  4618   001FD8                     
  4619                           ; BSR set to: 14
  4620                           ;comparator.c: 29:     CM1CON0bits.HYS=1;
  4621   001FD8  83D0               	bsf	208,1,b	;volatile
  4622   001FDA                     
  4623                           ; BSR set to: 14
  4624                           ;comparator.c: 30:     CM1CON0bits.POL=1;
  4625   001FDA  89D0               	bsf	208,4,b	;volatile
  4626   001FDC                     
  4627                           ; BSR set to: 14
  4628                           ;comparator.c: 31:     CM1CON1bits.INTP=1;
  4629   001FDC  83D1               	bsf	209,1,b	;volatile
  4630   001FDE                     
  4631                           ; BSR set to: 14
  4632                           ;comparator.c: 32:     DAC_init();
  4633   001FDE  EC39  F010         	call	_DAC_init	;wreg free
  4634   001FE2                     
  4635                           ;comparator.c: 33:     CM1CON0bits.EN=1;
  4636   001FE2  010E               	movlb	14	; () banked
  4637   001FE4  8FD0               	bsf	208,7,b	;volatile
  4638   001FE6                     
  4639                           ; BSR set to: 14
  4640   001FE6  0012               	return		;funcret
  4641   001FE8                     __end_of_Comp1_init_rising_edge:
  4642                           	callstack 0
  4643                           
  4644 ;; *************** function _Comp1_init_falling_edge *****************
  4645 ;; Defined at:
  4646 ;;		line 37 in file "comparator.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;		None
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;		None
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  1    wreg      void 
  4653 ;; Registers used:
  4654 ;;		wreg, status,2, cstack
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4664 ;;Total ram usage:        0 bytes
  4665 ;; Hardware stack levels used: 1
  4666 ;; Hardware stack levels required when called: 3
  4667 ;; This function calls:
  4668 ;;		_DAC_init
  4669 ;; This function is called by:
  4670 ;;		_main
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           	psect	text35
  4675   001FE8                     __ptext35:
  4676                           	callstack 0
  4677   001FE8                     _Comp1_init_falling_edge:
  4678                           	callstack 27
  4679   001FE8                     
  4680                           ;comparator.c: 39:     TRISFbits.TRISF7=1;
  4681   001FE8  8E86               	bsf	134,7,c	;volatile
  4682   001FEA                     
  4683                           ;comparator.c: 40:     CM1NCHbits.NCH=0b011;
  4684   001FEA  010E               	movlb	14	; () banked
  4685   001FEC  51D2               	movf	210,w,b	;volatile
  4686   001FEE  0BF8               	andlw	-8
  4687   001FF0  0903               	iorlw	3
  4688   001FF2  6FD2               	movwf	210,b	;volatile
  4689                           
  4690                           ;comparator.c: 41:     CM1PCHbits.PCH=0b101;
  4691   001FF4  51D3               	movf	211,w,b	;volatile
  4692   001FF6  0BF8               	andlw	-8
  4693   001FF8  0905               	iorlw	5
  4694   001FFA  6FD3               	movwf	211,b	;volatile
  4695   001FFC                     
  4696                           ; BSR set to: 14
  4697                           ;comparator.c: 42:     CM1CON0bits.HYS=1;
  4698   001FFC  83D0               	bsf	208,1,b	;volatile
  4699   001FFE                     
  4700                           ; BSR set to: 14
  4701                           ;comparator.c: 43:     CM1CON0bits.POL=1;
  4702   001FFE  89D0               	bsf	208,4,b	;volatile
  4703   002000                     
  4704                           ; BSR set to: 14
  4705                           ;comparator.c: 44:     CM1CON1bits.INTN=1;
  4706   002000  81D1               	bsf	209,0,b	;volatile
  4707   002002                     
  4708                           ; BSR set to: 14
  4709                           ;comparator.c: 45:     DAC_init();
  4710   002002  EC39  F010         	call	_DAC_init	;wreg free
  4711   002006                     
  4712                           ;comparator.c: 46:     CM1CON0bits.EN=1;
  4713   002006  010E               	movlb	14	; () banked
  4714   002008  8FD0               	bsf	208,7,b	;volatile
  4715   00200A                     
  4716                           ; BSR set to: 14
  4717   00200A  0012               	return		;funcret
  4718   00200C                     __end_of_Comp1_init_falling_edge:
  4719                           	callstack 0
  4720                           
  4721 ;; *************** function _DAC_init *****************
  4722 ;; Defined at:
  4723 ;;		line 7 in file "comparator.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;		None
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;		None
  4728 ;; Return value:  Size  Location     Type
  4729 ;;                  1    wreg      void 
  4730 ;; Registers used:
  4731 ;;		wreg, status,2
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4741 ;;Total ram usage:        0 bytes
  4742 ;; Hardware stack levels used: 1
  4743 ;; Hardware stack levels required when called: 2
  4744 ;; This function calls:
  4745 ;;		Nothing
  4746 ;; This function is called by:
  4747 ;;		_Comp1_init_rising_edge
  4748 ;;		_Comp1_init_falling_edge
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           	psect	text36
  4753   002072                     __ptext36:
  4754                           	callstack 0
  4755   002072                     _DAC_init:
  4756                           	callstack 27
  4757   002072                     
  4758                           ;comparator.c: 9:     DAC1CON0bits.PSS=0b00;
  4759   002072  0EF3               	movlw	-13
  4760   002074  010E               	movlb	14	; () banked
  4761   002076  17C6               	andwf	198,f,b	;volatile
  4762   002078                     
  4763                           ; BSR set to: 14
  4764                           ;comparator.c: 10:     DAC1CON0bits.NSS=0b0;
  4765   002078  91C6               	bcf	198,0,b	;volatile
  4766                           
  4767                           ;comparator.c: 14:     DAC1CON1bits.DAC1R=20;
  4768   00207A  51C7               	movf	199,w,b	;volatile
  4769   00207C  0BE0               	andlw	-32
  4770   00207E  0914               	iorlw	20
  4771   002080  6FC7               	movwf	199,b	;volatile
  4772   002082                     
  4773                           ; BSR set to: 14
  4774                           ;comparator.c: 15:     DAC1CON0bits.DAC1EN=1;
  4775   002082  8FC6               	bsf	198,7,b	;volatile
  4776   002084                     
  4777                           ; BSR set to: 14
  4778   002084  0012               	return		;funcret
  4779   002086                     __end_of_DAC_init:
  4780                           	callstack 0
  4781                           
  4782 ;; *************** function _ADC_init *****************
  4783 ;; Defined at:
  4784 ;;		line 11 in file "ADC.c"
  4785 ;; Parameters:    Size  Location     Type
  4786 ;;		None
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;		None
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  1    wreg      void 
  4791 ;; Registers used:
  4792 ;;		wreg, status,2
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4802 ;;Total ram usage:        0 bytes
  4803 ;; Hardware stack levels used: 1
  4804 ;; Hardware stack levels required when called: 2
  4805 ;; This function calls:
  4806 ;;		Nothing
  4807 ;; This function is called by:
  4808 ;;		_main
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           
  4812                           	psect	text37
  4813   00202C                     __ptext37:
  4814                           	callstack 0
  4815   00202C                     _ADC_init:
  4816                           	callstack 28
  4817   00202C                     
  4818                           ;ADC.c: 13:     TRISAbits.TRISA3=1;
  4819   00202C  8681               	bsf	129,3,c	;volatile
  4820                           
  4821                           ;ADC.c: 14:     ANSELAbits.ANSELA3=1;
  4822   00202E  010E               	movlb	14	; () banked
  4823   002030  8792               	bsf	146,3,b	;volatile
  4824                           
  4825                           ;ADC.c: 17:     ADREFbits.ADNREF = 0;
  4826   002032  010F               	movlb	15	; () banked
  4827   002034  9958               	bcf	88,4,b	;volatile
  4828   002036                     
  4829                           ; BSR set to: 15
  4830                           ;ADC.c: 18:     ADREFbits.ADPREF = 0b00;
  4831   002036  0EFC               	movlw	-4
  4832   002038  1758               	andwf	88,f,b	;volatile
  4833                           
  4834                           ;ADC.c: 19:     ADPCH=0b11;
  4835   00203A  0E03               	movlw	3
  4836   00203C  6F5F               	movwf	95,b	;volatile
  4837   00203E                     
  4838                           ; BSR set to: 15
  4839                           ;ADC.c: 20:     ADCON0bits.ADFM = 0;
  4840   00203E  9460               	bcf	96,2,c	;volatile
  4841   002040                     
  4842                           ; BSR set to: 15
  4843                           ;ADC.c: 21:     ADCON0bits.ADCS = 1;
  4844   002040  8860               	bsf	96,4,c	;volatile
  4845   002042                     
  4846                           ; BSR set to: 15
  4847                           ;ADC.c: 22:     ADCON0bits.ADON = 1;
  4848   002042  8E60               	bsf	96,7,c	;volatile
  4849   002044                     
  4850                           ; BSR set to: 15
  4851   002044  0012               	return		;funcret
  4852   002046                     __end_of_ADC_init:
  4853                           	callstack 0
  4854                           
  4855 ;; *************** function _LowISR *****************
  4856 ;; Defined at:
  4857 ;;		line 37 in file "interrupts.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;		None
  4860 ;; Auto vars:     Size  Location     Type
  4861 ;;		None
  4862 ;; Return value:  Size  Location     Type
  4863 ;;                  1    wreg      void 
  4864 ;; Registers used:
  4865 ;;		wreg, status,2, status,0
  4866 ;; Tracked objects:
  4867 ;;		On entry : 0/0
  4868 ;;		On exit  : 0/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4873 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4874 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4875 ;;Total ram usage:        3 bytes
  4876 ;; Hardware stack levels used: 1
  4877 ;; Hardware stack levels required when called: 1
  4878 ;; This function calls:
  4879 ;;		Nothing
  4880 ;; This function is called by:
  4881 ;;		Interrupt level 1
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885                           	psect	intcodelo
  4886   000018                     __pintcodelo:
  4887                           	callstack 0
  4888   000018                     _LowISR:
  4889                           	callstack 20
  4890                           
  4891                           ; BSR set to: 15
  4892                           ;incstack = 0
  4893   000018  805A               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4894   00001A  CFD8 F002          	movff	status,??_LowISR
  4895   00001E  CFE8 F003          	movff	wreg,??_LowISR+1
  4896   000022  CFE0 F004          	movff	bsr,??_LowISR+2
  4897   000026                     
  4898                           ;interrupts.c: 39:     if(PIR0bits.TMR0IF){
  4899   000026  010E               	movlb	14	; () banked
  4900   000028  AB33               	btfss	51,5,b	;volatile
  4901   00002A  EF19  F000         	goto	i1u179_21
  4902   00002E  EF1B  F000         	goto	i1u179_20
  4903   000032                     i1u179_21:
  4904   000032  EF24  F000         	goto	i1l2440
  4905   000036                     i1u179_20:
  4906   000036                     
  4907                           ; BSR set to: 14
  4908                           ;interrupts.c: 40:         seconds++;
  4909   000036  0100               	movlb	0	; () banked
  4910   000038  4B9B               	infsnz	_seconds& (0+255),f,b
  4911   00003A  2B9C               	incf	(_seconds+1)& (0+255),f,b
  4912   00003C                     
  4913                           ; BSR set to: 0
  4914                           ;interrupts.c: 41:         TMR0H=00001011;
  4915   00003C  0E09               	movlw	9
  4916   00003E  6ED4               	movwf	212,c	;volatile
  4917   000040                     
  4918                           ; BSR set to: 0
  4919                           ;interrupts.c: 42:         TMR0L=11011011;
  4920   000040  0EC3               	movlw	195
  4921   000042  6ED3               	movwf	211,c	;volatile
  4922   000044                     
  4923                           ; BSR set to: 0
  4924                           ;interrupts.c: 43:         PIR0bits.TMR0IF = 0;
  4925   000044  010E               	movlb	14	; () banked
  4926   000046  9B33               	bcf	51,5,b	;volatile
  4927   000048                     i1l2440:
  4928                           
  4929                           ; BSR set to: 14
  4930                           ;interrupts.c: 46:     if (hour==5)
  4931   000048  0E05               	movlw	5
  4932   00004A  0100               	movlb	0	; () banked
  4933   00004C  1999               	xorwf	_hour& (0+255),w,b
  4934   00004E  119A               	iorwf	(_hour+1)& (0+255),w,b
  4935   000050  A4D8               	btfss	status,2,c
  4936   000052  EF2D  F000         	goto	i1u180_21
  4937   000056  EF2F  F000         	goto	i1u180_20
  4938   00005A                     i1u180_21:
  4939   00005A  EF30  F000         	goto	i1l205
  4940   00005E                     i1u180_20:
  4941   00005E                     
  4942                           ; BSR set to: 0
  4943                           ;interrupts.c: 47:     {;interrupts.c: 48:         LATHbits.LATH3 = 1;
  4944   00005E  8680               	bsf	128,3,c	;volatile
  4945   000060                     i1l205:
  4946                           
  4947                           ; BSR set to: 0
  4948   000060  C004  FFE0         	movff	??_LowISR+2,bsr
  4949   000064  C003  FFE8         	movff	??_LowISR+1,wreg
  4950   000068  C002  FFD8         	movff	??_LowISR,status
  4951   00006C  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4952   00006E  0010               	retfie	
  4953   000070                     __end_of_LowISR:
  4954                           	callstack 0
  4955                           
  4956 ;; *************** function _HighISR *****************
  4957 ;; Defined at:
  4958 ;;		line 28 in file "interrupts.c"
  4959 ;; Parameters:    Size  Location     Type
  4960 ;;		None
  4961 ;; Auto vars:     Size  Location     Type
  4962 ;;		None
  4963 ;; Return value:  Size  Location     Type
  4964 ;;                  1    wreg      void 
  4965 ;; Registers used:
  4966 ;;		wreg, status,2, status,0
  4967 ;; Tracked objects:
  4968 ;;		On entry : 0/0
  4969 ;;		On exit  : 0/0
  4970 ;;		Unchanged: 0/0
  4971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4974 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4975 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4976 ;;Total ram usage:        1 bytes
  4977 ;; Hardware stack levels used: 1
  4978 ;; This function calls:
  4979 ;;		Nothing
  4980 ;; This function is called by:
  4981 ;;		Interrupt level 2
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985                           	psect	intcode
  4986   000008                     __pintcode:
  4987                           	callstack 0
  4988   000008                     _HighISR:
  4989                           	callstack 20
  4990                           
  4991                           ; BSR set to: 0
  4992                           ;incstack = 0
  4993   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4994   00000A  EF52  F00F         	goto	int_func
  4995                           
  4996                           	psect	intcode_body
  4997   001EA4                     __pintcode_body:
  4998                           	callstack 20
  4999   001EA4                     int_func:
  5000                           	callstack 20
  5001   001EA4                     
  5002                           ;interrupts.c: 30:         if(PIR2bits.C1IF){
  5003   001EA4  010E               	movlb	14	; () banked
  5004   001EA6  A135               	btfss	53,0,b	;volatile
  5005   001EA8  EF58  F00F         	goto	i2u88_41
  5006   001EAC  EF5A  F00F         	goto	i2u88_40
  5007   001EB0                     i2u88_41:
  5008   001EB0  EF6E  F00F         	goto	i2l198
  5009   001EB4                     i2u88_40:
  5010   001EB4                     
  5011                           ; BSR set to: 14
  5012                           ;interrupts.c: 31:         LATHbits.LATH3 = !LATHbits.LATH3;
  5013   001EB4  A680               	btfss	128,3,c	;volatile
  5014   001EB6  EF5F  F00F         	goto	i2u89_41
  5015   001EBA  EF63  F00F         	goto	i2u89_40
  5016   001EBE                     i2u89_41:
  5017   001EBE  6A01               	clrf	??_HighISR^0,c
  5018   001EC0  2A01               	incf	??_HighISR^0,f,c
  5019   001EC2  EF64  F00F         	goto	i2u90_48
  5020   001EC6                     i2u89_40:
  5021   001EC6  6A01               	clrf	??_HighISR^0,c
  5022   001EC8                     i2u90_48:
  5023   001EC8  4601               	rlncf	??_HighISR^0,f,c
  5024   001ECA  4601               	rlncf	??_HighISR^0,f,c
  5025   001ECC  4601               	rlncf	??_HighISR^0,f,c
  5026   001ECE  5080               	movf	128,w,c	;volatile
  5027   001ED0  1801               	xorwf	??_HighISR^0,w,c
  5028   001ED2  0BF7               	andlw	-9
  5029   001ED4  1801               	xorwf	??_HighISR^0,w,c
  5030   001ED6  6E80               	movwf	128,c	;volatile
  5031   001ED8                     
  5032                           ;interrupts.c: 32:         PIR2bits.C1IF=0;
  5033   001ED8  010E               	movlb	14	; () banked
  5034   001EDA  9135               	bcf	53,0,b	;volatile
  5035   001EDC                     i2l198:
  5036                           
  5037                           ; BSR set to: 14
  5038   001EDC  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5039   001EDE  0011               	retfie		f
  5040   001EE0                     __end_of_HighISR:
  5041                           	callstack 0
  5042                           
  5043                           	psect	rparam
  5044   000000                     
  5045                           	psect	temp
  5046   00005A                     btemp:
  5047                           	callstack 0
  5048   00005A                     	ds	1
  5049   000000                     int$flags	set	btemp
  5050   000000                     wtemp8	set	btemp+1
  5051   000000                     ttemp5	set	btemp+1
  5052   000000                     ttemp6	set	btemp+4
  5053   000000                     ttemp7	set	btemp+8
  5054                           
  5055                           	psect	idloc
  5056                           
  5057                           ;Config register IDLOC0 @ 0x200000
  5058                           ;	unspecified, using default values
  5059   200000                     	org	2097152
  5060   200000  0FFF               	dw	4095
  5061                           
  5062                           ;Config register IDLOC1 @ 0x200002
  5063                           ;	unspecified, using default values
  5064   200002                     	org	2097154
  5065   200002  0FFF               	dw	4095
  5066                           
  5067                           ;Config register IDLOC2 @ 0x200004
  5068                           ;	unspecified, using default values
  5069   200004                     	org	2097156
  5070   200004  0FFF               	dw	4095
  5071                           
  5072                           ;Config register IDLOC3 @ 0x200006
  5073                           ;	unspecified, using default values
  5074   200006                     	org	2097158
  5075   200006  0FFF               	dw	4095
  5076                           
  5077                           ;Config register IDLOC4 @ 0x200008
  5078                           ;	unspecified, using default values
  5079   200008                     	org	2097160
  5080   200008  0FFF               	dw	4095
  5081                           
  5082                           ;Config register IDLOC5 @ 0x20000A
  5083                           ;	unspecified, using default values
  5084   20000A                     	org	2097162
  5085   20000A  0FFF               	dw	4095
  5086                           
  5087                           ;Config register IDLOC6 @ 0x20000C
  5088                           ;	unspecified, using default values
  5089   20000C                     	org	2097164
  5090   20000C  0FFF               	dw	4095
  5091                           
  5092                           ;Config register IDLOC7 @ 0x20000E
  5093                           ;	unspecified, using default values
  5094   20000E                     	org	2097166
  5095   20000E  0FFF               	dw	4095
  5096                           
  5097                           	psect	config
  5098                           
  5099                           ;Config register CONFIG1L @ 0x300000
  5100                           ;	External Oscillator mode Selection bits
  5101                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5102                           ;	Power-up default value for COSC bits
  5103                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5104   300000                     	org	3145728
  5105   300000  AA                 	db	170
  5106                           
  5107                           ;Config register CONFIG1H @ 0x300001
  5108                           ;	unspecified, using default values
  5109                           ;	Clock Out Enable bit
  5110                           ;	CLKOUTEN = 0x1, unprogrammed default
  5111                           ;	Clock Switch Enable bit
  5112                           ;	CSWEN = 0x1, unprogrammed default
  5113                           ;	Fail-Safe Clock Monitor Enable bit
  5114                           ;	FCMEN = 0x1, unprogrammed default
  5115   300001                     	org	3145729
  5116   300001  FF                 	db	255
  5117                           
  5118                           ;Config register CONFIG2L @ 0x300002
  5119                           ;	unspecified, using default values
  5120                           ;	Master Clear Enable bit
  5121                           ;	MCLRE = 0x1, unprogrammed default
  5122                           ;	Power-up Timer Enable bit
  5123                           ;	PWRTE = 0x1, unprogrammed default
  5124                           ;	Low-power BOR enable bit
  5125                           ;	LPBOREN = 0x1, unprogrammed default
  5126                           ;	Brown-out Reset Enable bits
  5127                           ;	BOREN = 0x3, unprogrammed default
  5128   300002                     	org	3145730
  5129   300002  FF                 	db	255
  5130                           
  5131                           ;Config register CONFIG2H @ 0x300003
  5132                           ;	unspecified, using default values
  5133                           ;	Brown Out Reset Voltage selection bits
  5134                           ;	BORV = 0x3, unprogrammed default
  5135                           ;	ZCD Disable bit
  5136                           ;	ZCD = 0x1, unprogrammed default
  5137                           ;	PPSLOCK bit One-Way Set Enable bit
  5138                           ;	PPS1WAY = 0x1, unprogrammed default
  5139                           ;	Stack Full/Underflow Reset Enable bit
  5140                           ;	STVREN = 0x1, unprogrammed default
  5141                           ;	Debugger Enable bit
  5142                           ;	DEBUG = 0x1, unprogrammed default
  5143                           ;	Extended Instruction Set Enable bit
  5144                           ;	XINST = 0x1, unprogrammed default
  5145   300003                     	org	3145731
  5146   300003  FF                 	db	255
  5147                           
  5148                           ;Config register CONFIG3L @ 0x300004
  5149                           ;	WDT Period Select bits
  5150                           ;	WDTCPS = 0x1F, unprogrammed default
  5151                           ;	WDT operating mode
  5152                           ;	WDTE = OFF, WDT Disabled
  5153   300004                     	org	3145732
  5154   300004  9F                 	db	159
  5155                           
  5156                           ;Config register CONFIG3H @ 0x300005
  5157                           ;	unspecified, using default values
  5158                           ;	WDT Window Select bits
  5159                           ;	WDTCWS = 0x7, unprogrammed default
  5160                           ;	WDT input clock selector
  5161                           ;	WDTCCS = 0x7, unprogrammed default
  5162   300005                     	org	3145733
  5163   300005  FF                 	db	255
  5164                           
  5165                           ;Config register CONFIG4L @ 0x300006
  5166                           ;	unspecified, using default values
  5167                           ;	Write Protection Block 0
  5168                           ;	WRT0 = 0x1, unprogrammed default
  5169                           ;	Write Protection Block 1
  5170                           ;	WRT1 = 0x1, unprogrammed default
  5171                           ;	Write Protection Block 2
  5172                           ;	WRT2 = 0x1, unprogrammed default
  5173                           ;	Write Protection Block 3
  5174                           ;	WRT3 = 0x1, unprogrammed default
  5175                           ;	Write Protection Block 3
  5176                           ;	WRT4 = 0x1, unprogrammed default
  5177                           ;	Write Protection Block 3
  5178                           ;	WRT5 = 0x1, unprogrammed default
  5179                           ;	Write Protection Block 3
  5180                           ;	WRT6 = 0x1, unprogrammed default
  5181                           ;	Write Protection Block 3
  5182                           ;	WRT7 = 0x1, unprogrammed default
  5183   300006                     	org	3145734
  5184   300006  FF                 	db	255
  5185                           
  5186                           ;Config register CONFIG4H @ 0x300007
  5187                           ;	unspecified, using default values
  5188                           ;	Configuration Register Write Protection bit
  5189                           ;	WRTC = 0x1, unprogrammed default
  5190                           ;	Boot Block Write Protection bit
  5191                           ;	WRTB = 0x1, unprogrammed default
  5192                           ;	Data EEPROM Write Protection bit
  5193                           ;	WRTD = 0x1, unprogrammed default
  5194                           ;	Scanner Enable bit
  5195                           ;	SCANE = 0x1, unprogrammed default
  5196                           ;	Low Voltage Programming Enable bit
  5197                           ;	LVP = 0x1, unprogrammed default
  5198   300007                     	org	3145735
  5199   300007  FF                 	db	255
  5200                           
  5201                           ;Config register CONFIG5L @ 0x300008
  5202                           ;	unspecified, using default values
  5203                           ;	UserNVM Program Memory Code Protection bit
  5204                           ;	CP = 0x1, unprogrammed default
  5205                           ;	DataNVM Memory Code Protection bit
  5206                           ;	CPD = 0x1, unprogrammed default
  5207   300008                     	org	3145736
  5208   300008  FF                 	db	255
  5209                           
  5210                           ;Config register CONFIG5H @ 0x300009
  5211                           ;	unspecified, using default values
  5212   300009                     	org	3145737
  5213   300009  FF                 	db	255
  5214                           
  5215                           ;Config register CONFIG6L @ 0x30000A
  5216                           ;	unspecified, using default values
  5217                           ;	Table Read Protection Block 0
  5218                           ;	EBTR0 = 0x1, unprogrammed default
  5219                           ;	Table Read Protection Block 1
  5220                           ;	EBTR1 = 0x1, unprogrammed default
  5221                           ;	Table Read Protection Block 2
  5222                           ;	EBTR2 = 0x1, unprogrammed default
  5223                           ;	Table Read Protection Block 3
  5224                           ;	EBTR3 = 0x1, unprogrammed default
  5225                           ;	Table Read Protection Block 4
  5226                           ;	EBTR4 = 0x1, unprogrammed default
  5227                           ;	Table Read Protection Block 5
  5228                           ;	EBTR5 = 0x1, unprogrammed default
  5229                           ;	Table Read Protection Block 6
  5230                           ;	EBTR6 = 0x1, unprogrammed default
  5231                           ;	Table Read Protection Block 7
  5232                           ;	EBTR7 = 0x1, unprogrammed default
  5233   30000A                     	org	3145738
  5234   30000A  FF                 	db	255
  5235                           
  5236                           ;Config register CONFIG6H @ 0x30000B
  5237                           ;	unspecified, using default values
  5238                           ;	Boot Block Table Read Protection bit
  5239                           ;	EBTRB = 0x1, unprogrammed default
  5240   30000B                     	org	3145739
  5241   30000B  FF                 	db	255
  5242                           tosu	equ	0xFFF
  5243                           tosh	equ	0xFFE
  5244                           tosl	equ	0xFFD
  5245                           stkptr	equ	0xFFC
  5246                           pclatu	equ	0xFFB
  5247                           pclath	equ	0xFFA
  5248                           pcl	equ	0xFF9
  5249                           tblptru	equ	0xFF8
  5250                           tblptrh	equ	0xFF7
  5251                           tblptrl	equ	0xFF6
  5252                           tablat	equ	0xFF5
  5253                           prodh	equ	0xFF4
  5254                           prodl	equ	0xFF3
  5255                           indf0	equ	0xFEF
  5256                           postinc0	equ	0xFEE
  5257                           postdec0	equ	0xFED
  5258                           preinc0	equ	0xFEC
  5259                           plusw0	equ	0xFEB
  5260                           fsr0h	equ	0xFEA
  5261                           fsr0l	equ	0xFE9
  5262                           wreg	equ	0xFE8
  5263                           indf1	equ	0xFE7
  5264                           postinc1	equ	0xFE6
  5265                           postdec1	equ	0xFE5
  5266                           preinc1	equ	0xFE4
  5267                           plusw1	equ	0xFE3
  5268                           fsr1h	equ	0xFE2
  5269                           fsr1l	equ	0xFE1
  5270                           bsr	equ	0xFE0
  5271                           indf2	equ	0xFDF
  5272                           postinc2	equ	0xFDE
  5273                           postdec2	equ	0xFDD
  5274                           preinc2	equ	0xFDC
  5275                           plusw2	equ	0xFDB
  5276                           fsr2h	equ	0xFDA
  5277                           fsr2l	equ	0xFD9
  5278                           status	equ	0xFD8

Data Sizes:
    Strings     7
    Constant    0
    Data        24
    BSS         45
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      89
    BANK0           160     41      61
    BANK1           256    100     156
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2005$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@strdate(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1952$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1952$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    time2String@buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@strdate(BANK1[100]), 

    LCD_sendstring@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@strdate(BANK1[100]), 


Critical Paths under _main in COMRAM

    _time_adjuster->_sunrise
    _time_adjuster->_sunset
    _sunset->___wmul
    _sunrise->___wmul
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_sendstring->_LCD_sendbyte
    _increment->_LEDarray_disp_bin
    _LCD_setline->_LCD_sendbyte
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_time2String
    _time2String->_sprintf
    _sprintf->_vfprintf

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               200   200      0   16187
                                              0 BANK1    100   100      0
                           _ADC_init
            _Comp1_init_falling_edge
             _Comp1_init_rising_edge
                    _Interrupts_init
                           _LCD_Init
                        _LCD_setline
                      _LEDarray_init
                        _Timer0_init
                          _day1_init
                    _daylightsavings
                          _increment
                           _poweroff
                    _streetLightInit
                            _sunrise
                             _sunset
                           _test_day
                        _time2String
                      _time_adjuster
 ---------------------------------------------------------------------------------
 (1) _time_adjuster                                        8     4      4     941
                                             17 COMRAM     8     4      4
                            ___awdiv
                            _sunrise (ARG)
                             _sunset (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     625
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _time2String                                         14     2     12   10516
                                             27 BANK0     14     2     12
                     _LCD_sendstring
                            _sprintf
                            _sunrise
                             _sunset
 ---------------------------------------------------------------------------------
 (2) _sunset                                               7     5      2     663
                                             10 COMRAM     7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _sunrise                                              7     5      2     663
                                             10 COMRAM     7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     592
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8    7316
                                              6 BANK0     21    13      8
                            _sunrise (ARG)
                             _sunset (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6830
                                             84 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           23    17      6    6369
                                             66 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    4802
                                             31 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2533
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1177
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     857
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _LCD_sendstring                                       2     0      2    1272
                                              7 COMRAM     2     0      2
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _test_day                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _streetLightInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _poweroff                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _increment                                            2     2      0     935
                                             30 COMRAM     2     2      0
                  _LEDarray_disp_bin
 ---------------------------------------------------------------------------------
 (2) _LEDarray_disp_bin                                   26    24      2     935
                                              4 COMRAM    26    24      2
 ---------------------------------------------------------------------------------
 (1) _daylightsavings                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _day1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_setline                                          1     1      0    1179
                                              7 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    1241
                                              7 COMRAM     2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendbyte                                         2     1      1    1117
                                              5 COMRAM     2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (4) _LCD_sendnibble                                       1     1      0     124
                                              4 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (5) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init_rising_edge                               0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (1) _Comp1_init_falling_edge                              0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _LowISR                                              3     3      0       0
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _HighISR                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Comp1_init_falling_edge
     _DAC_init
   _Comp1_init_rising_edge
     _DAC_init
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_setline
     _LCD_sendbyte
   _LEDarray_init
   _Timer0_init
   _day1_init
   _daylightsavings
   _increment
     _LEDarray_disp_bin
   _poweroff
   _streetLightInit
   _sunrise
     ___wmul
   _sunset
     ___wmul
   _test_day
   _time2String
     _LCD_sendstring
       _LCD_sendbyte
     _sprintf
       _sunrise (ARG)
       _sunset (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
     _sunrise
     _sunset
   _time_adjuster
     ___awdiv
     _sunrise (ARG)
     _sunset (ARG)

 _LowISR (ROOT)

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     64      9C       7       60.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     29      3D       5       38.1%
BITBIGSFRlhlhh      84      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      59       1       94.7%
BITBIGSFRllhh       5C      0       0      43        0.0%
BITBIGSFRhhll       4A      0       0      34        0.0%
BITBIGSFRlhll       33      0       0      42        0.0%
BITBIGSFRllllll     30      0       0      49        0.0%
BITBIGSFRhhlhh      1B      0       0      33        0.0%
BITBIGSFRlhhhhl     14      0       0      37        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRlhlhll      8      0       0      41        0.0%
BITBIGSFRllllh       7      0       0      47        0.0%
BITBIGSFRllhll       7      0       0      45        0.0%
BITBIGSFRlhhl        6      0       0      39        0.0%
BITBIGSFRlhhhl       3      0       0      38        0.0%
BITBIGSFRllhlh       1      0       0      44        0.0%
BITBIGSFRlllllh      1      0       0      48        0.0%
BITBIGSFRlllh        1      0       0      46        0.0%
BITBIGSFRlhhhhl      1      0       0      36        0.0%
BITBIGSFRhl          1      0       0      35        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     132      50        0.0%
DATA                 0      0     132       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Nov 09 16:52:32 2022

                             l33 2044                               l80 1684  
                             l83 16DE                               l76 1FC2  
                   ___awdiv@sign 000A                               bsr 000FE0  
            ___wmul@multiplicand 0007                ??_Interrupts_init 0005  
                            l130 1FE6                              l133 200A  
                            l127 2084                              l401 1B18  
                            l314 202A                              l406 1A2E  
                            l192 2096                              l440 1C5C  
                            l432 1C0C                              l434 1C22  
                            l282 1938                              l443 1F5E  
                            l436 1C38                              l380 15F6  
                            l364 20AA                              l429 20A4  
                            l445 1F76                              l453 1F46  
                            l438 1C4E                              l367 2070  
                            l448 190E                              l384 1EA2  
                            l392 1BF4                              l465 1CB2  
                            l387 1E66                              l459 1F12  
                            l468 1F9C                              l397 1B86  
                            l582 120C                              l595 1370  
                            l699 186C  __end_of_Comp1_init_falling_edge 200C  
        __end_of_streetLightInit 20AC                              _abs 1DEA  
                            _pad 1A30                              wreg 000FE8  
                           l1211 1E28                             ?_abs 0017  
                           l1204 1DA4                             l1223 17A8  
                           l1231 1DE8                             l3000 19AC  
                           l1208 1E20                             l3010 1A00  
                           l3002 19C2                             l1234 20AC  
                           l1146 1D04                             l3012 1A14  
                           l3004 19D6                             l1172 1AA8  
                           l1180 0EE2                             l3014 1A28  
                           l3006 19E8                             l1191 1084  
                           l3008 19EC                             l1168 1A52  
                           l1177 0E94                             l3050 1920  
                           l1179 0E9C                             l2500 1086  
                           l3060 1974                             l3052 1924  
                           l3044 1910                             l2510 10CA  
                           l2502 108A                             l1198 14BE  
                           l3070 19A0                             l3062 1978  
                           l3054 1930                             l3046 1918  
                           l2600 209A                             l2520 1120  
                           l2512 10EA                             l2504 1098  
                           l3064 197C                             l3056 1934  
                           l3048 191C                             l2602 20A2  
                           l2530 11A2                             l2522 1134  
                           l2514 10EE                             l2506 10B8  
                           l2610 0E4E                             l3066 1980  
                           l3058 193E                             l2540 11EC  
                           l2532 11A4                             l2524 1142  
                           l2516 10FA                             l2508 10BC  
                           l2620 0EBA                             l2612 0E6E  
                           l2604 0E0A                             l2700 1496  
                           l3068 1984                             l2710 1F60  
                           l2534 11B6                             l2526 1154  
                           l2518 1118                             l2550 1240  
                           l2630 0EF4                             l2622 0ECA  
                           l2614 0E88                             l2606 0E2A  
                           l2712 1F68                             l2528 1182  
                           l2536 11BC                             l2560 1298  
                           l2552 1244                             l2544 120E  
                           l2480 16F2                             l2632 0EFA  
                           l2640 0FEC                             l2624 0ED6  
                           l2616 0EA4                             l2608 0E3E  
                           l2800 17AA                             l2714 1F6E  
                           l2706 1F4A                             l2538 11CC  
                           l2570 131A                             l2562 12AC  
                           l2554 1252                             l2546 1212  
                           l2482 1704                             l2650 1054  
                           l2642 1006                             l2634 0F7C  
                           l2626 0EDE                             l2618 0EB4  
                           l2722 1D56                             l2810 17D6  
                           l2802 17AE                             l2660 1C0E  
                           l2708 1F58                             l2900 186E  
                           l2740 1626                             l2732 15F8  
                           l2564 12BA                             l2572 1320  
                           l2556 1272                             l2548 1220  
                           l2484 170E                             l2492 1DA6  
                           l2580 1A30                             l2652 1064  
                           l2644 1024                             l2636 0F82  
                           l2628 0EEA                             l2724 1D62  
                           l2716 1F78                             l2820 1804  
                           l2812 17DE                             l2804 17BC  
                           l2750 2072                             l2670 1C48  
                           l2662 1C1C                             l2910 18B6  
                           l2902 1886                             l2742 1644  
                           l2574 1330                             l2566 12E8  
                           l2558 1290                             l2486 172C  
                           l2478 16E0                             l2494 1DB2  
                           l2590 1A76                             l2582 1A3E  
                           l2646 103E                             l2638 0F88  
                           l2726 1D7E                             l2718 1F94  
                           l2830 183E                             l2822 180C  
                           l2814 17E2                             l2806 17C4  
                           l2752 2078                             l2672 1C50  
                           l2664 1C24                             l2656 1BF8  
                           l2920 18E2                             l2912 18BE  
                           l2904 189E                             l2744 165E  
                           l2576 1350                             l2568 1308  
                           l2488 1762                             l2496 1DC4  
                           l2592 1A94                             l2584 1A4A  
                           l2648 104E                             l2680 13A4  
                           l2728 1D9A                             l2760 1BBC  
                           l2840 1864                             l2832 1840  
                           l2824 181A                             l2816 17EA  
                           l2808 17C8                             l2850 2040  
                           l2754 2082                             l2674 1C54  
                           l2666 1C32                             l2658 1C06  
                           l2922 18EC                             l2914 18C8  
                           l2906 18A4                             l2930 1F16  
                           l2746 1664                             l2738 1608  
                           l2594 1DEA                             l2498 1DC8  
                           l2586 1A5E                             l2690 13FE  
                           l2682 13B2                             l2762 1BCA  
                           l2770 1B3C                             l2834 1846  
                           l2826 1820                             l2818 17FC  
                           l2852 2042                             l2844 202C  
                           l2860 1FD8                             l2668 1C3A  
                           l2924 18FA                             l2916 18D0  
                           l2908 18AC                             l2932 1F24  
                           l2748 1668                             l2780 1EE0  
                           l2596 1E04                             l2588 1A72  
                           l2692 1454                             l2684 13B6  
                           l2676 1372                             l2764 1BEC  
                           l2756 1B88                             l2772 1B4E  
                           l2940 1C8C                             l2828 1836  
                           l2836 184C                             l2846 2036  
                           l2870 1FE8                             l2862 1FDA  
                           l2598 2098                             l2926 1904  
                           l2918 18DA                             l2934 1F2E  
                           l2854 1F9E                             l2950 150A  
                           l2782 1EE4                             l2686 13C6  
                           l2678 1396                             l2790 1CC6  
                           l2758 1BAA                             l2774 1B5C  
                           l2942 1C98                             l2838 185C  
                           ?_pad 0015                             l2848 203E  
                           l2880 2002                             l2872 1FEA  
                           l2864 1FDC                             l2856 1FC4  
                           l2936 1F3C                             l2960 1548  
                           l2952 1514                             l2944 14C0  
                           l2928 205E                             l2784 1EF6  
                           l2696 1484                             l2688 13E2  
                           l2792 1CCE                             l2776 1B7E  
                           l2768 1B1A                             l2882 2006  
                           l2874 1FFC                             l2866 1FDE  
                           l2858 1FC6                             l2890 2014  
                           l2970 1590                             l2962 1560  
                           l2954 152E                             l2946 14E0  
                           l2786 1EFA                             l2794 1CD6  
                           l2938 1C5E                             l2876 1FFE  
                           l2868 1FE2                             l2884 2086  
                           l2892 201E                             l2980 15F2  
                           l2972 15CA                             l2964 156C  
                           l2956 1532                             l2948 14EA  
                           l2796 1CF2                             l2788 1CB4  
                           l2878 2000                             l2894 2028  
                           l2974 15D2                             l2966 1574  
                           l2958 153E                             l2982 1E68  
                           l2886 20A6                             l2990 1AB2  
                           l2888 200C                             l2896 1E2A  
                           l2976 15D6                             l2968 1588  
                           l2984 1E84                             l2992 1AD2  
                           l2898 1E64                             l2978 15EA  
                           l2986 1EA0                             l2994 1AE2  
                           l2996 1AF8                             l2988 1AAA  
                           l2998 1B10                             STR_1 0E01  
                           u2000 1A94                             u2001 1A90  
                           u2010 1E04                             u2011 1E00  
                           u2100 103E                             u2020 0E3A  
                           u2101 103A                             u2021 0E34  
                           u2110 104E                             u2030 0E3C  
                           u2111 104A                             u2120 1C06  
                           u2040 0E4E                             u2200 1D9A  
                           u2121 1C02                             u2041 0E4A  
                           u2201 1D96                             u2130 1C1C  
                           u2210 1626                             u2050 0E88  
                           u2131 1C18                             u2211 1622  
                           u2051 0E84                             u2140 1C32  
                           u2220 1684                             u2060 0EB4  
                           u2141 1C2E                             u2221 1680  
                           u2061 0EB0                             u2150 1C48  
                           u2070 0ECA                             u2151 1C44  
                           u2071 0EC6                             u2080 1006  
                           u2160 1396                             u2320 1B9A  
                           u2400 17D6                             u2305 16D2  
                           u2081 1002                             u2161 1392  
                           u2321 1B92                             u2401 17D2  
                           u2306 16D4                             u2090 1024  
                           u2170 13E2                             u2330 1BBC  
                           u2410 17FC                             u2315 16DC  
                           u2235 168C                             u2091 1020  
                           u2171 13DE                             u2331 1BB8  
                           u2411 17F8                             u2316 16DE  
                           u2236 168E                             u2500 1560  
                           u2180 13FE                             u2340 1BCA  
                           u2420 181A                             u2245 1696  
                           u2501 155C                             u2181 13FA  
                           u2341 1BC6                             u2421 1816  
                           u2190 1F58                             u2246 1698  
                           u2510 1588                             u2350 1B2C  
                           u2430 1836                             u2191 1F54  
                           u2255 16A0                             u2511 1584  
                           u2351 1B24                             u2431 1832  
                           u2600 19E8                             u2256 16A2  
                           u2520 15CA                             u2328 1B9C  
                           u2360 1B4E                             u2440 185C  
                           u2601 19E4                             u2265 16AA  
                           u2521 15C6                             u2361 1B4A  
                           u2441 1858                             u2450 1F24  
                           u2610 1A00                             u2266 16AC  
                           u2530 15EA                             u1810 16F2  
                           u2370 1B5C                             u2451 1F20  
                           u2611 19FC                             u2275 16B4  
                           u2531 15E6                             u1811 16EE  
                           u2371 1B58                             u2460 1F3C  
                           u2620 1A14                             u2276 16B6  
                           u2540 1E84                             u2380 1F12  
                           u1900 1142                             u1820 1704  
                           u2461 1F38                             u2621 1A10  
                           u2285 16BE                             u2541 1E80  
                           u2381 1F0E                             u1901 113E  
                           u1821 1700                             u2630 1A28  
                           u2286 16C0                             u2470 14E0  
                           u2550 1EA0                             u1910 1182  
                           u1830 172C                             u2358 1B2E  
                           u2390 17BC                             u2631 1A24  
                           u2295 16C8                             u2471 14DC  
                           u2551 1E9C                             u1911 117E  
                           u1831 1728                             u2391 17B8  
                           u2296 16CA                             u2480 150A  
                           u1920 11CC                             u1840 1762  
                           u2560 1AF8                             u2481 1506  
                           u1921 11C8                             u1841 175E  
                           u2561 1AF4                             u2490 152E  
                           u1930 1220                             u1850 1DE8  
                           u2570 1B10                             u2707 18B8  
                           u2491 152A                             u1931 121C  
                           u1851 1DE4                             u2571 1B0C  
                           u2580 19C2                             u1860 1098  
                           u1940 1252                             u2717 18CA  
                           u2581 19BE                             u1861 1094  
                           u1941 124E                             u2590 19D6  
                           u1870 10CA                             u1950 1290  
                           u2727 18DC                             u2591 19D2  
                           u1871 10C6                             u1951 128C  
                           u1960 12BA                             u2737 18F2  
                           u1881 10F4                             u1961 12B6  
                           u1890 1118                             u1970 12E8  
                           u2747 1F70                             u1891 1114  
                           u1971 12E4                             u1980 1330  
                           u2757 1C56                             u1981 132C  
                           u2677 1CA4                             u1990 1A3E  
                           u2767 209C                             u2687 1890  
                           u1991 1A3A                             u2697 18A6  
                           abs@a 0017                             _dbuf 0164  
                           _main 1910                             _dtoa 0E0A  
                           _hour 0099                             _prec 0057  
                           _year 0089                             pad@i 001C  
                           pad@p 0019                             fsr1h 000FE2  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr1l 000FE1                             pad@w 001E  
                           fsr2l 000FD9                             btemp 005A  
                   ?_LCD_setline 0001                             prodh 000FF4  
                           prodl 000FF3                             start 0070  
               __end_of_ADC_init 2046                      main@strdate 0100  
               __end_of_DAC_init 2086                  __end_of_HighISR 1EE0  
                   ___param_bank 000000                            ??_abs 0019  
                          ??_pad 001B                 __end_of_LCD_Init 1910  
                __end_of___aodiv 120E                            ?_main 0001  
                          ?_dtoa 0020                  __end_of___aomod 1372  
                          _ADPCH 000F5F                  __end_of___awdiv 186E  
                ___awdiv@divisor 0007                            i1l205 0060  
                          i2l198 1EDC                  ___awdiv@counter 0009  
                   vfpfcnvrt@fmt 0045                            _TMR0H 000FD4  
                          _TMR0L 000FD3                  _daylightsavings 19AC  
                          _flags 0059                            _fputc 16E0  
                          _fputs 1DA6                            _month 0184  
                          pad@fp 0015                            _width 0093  
                          _putch 20AC                            dtoa@d 0022  
                          dtoa@i 0041                            dtoa@n 0038  
                          dtoa@p 0034                            dtoa@s 0040  
                          dtoa@w 0036                    ?_LCD_sendbyte 0006  
                          tablat 000FF5                            ttemp5 005B  
                          ttemp6 005E                            ttemp7 0062  
                          status 000FD8                            wtemp8 005B  
                __end_of_sprintf 1D06                  __end_of_sunrise 1BF6  
                __initialization 1D06                     __end_of_main 19AC  
                   __end_of_dtoa 1086                __end_of_LCD_E_TOG 20A6  
                         ??_main 0057                           ??_dtoa 002A  
                  __activetblptr 000001                 ?_streetLightInit 0001  
                   ?_time2String 007B                           ?_fputc 0005  
                         ?_fputs 000E                           _ADRESH 000F64  
                 ??_LCD_sendbyte 0007                 ___awdiv@dividend 0005  
                         ?_putch 0001                           i1l2430 0026  
                         i1l2432 0036                           i1l2440 0048  
                         i1l2442 005E                           i1l2434 003C  
                         i1l2436 0040                           i1l2438 0044  
                         i2l1810 1EB4                           i2l1812 1ED8  
                         i2l1808 1EA4                        ??_HighISR 0001  
              _LEDarray_disp_bin 15F8                           _LowISR 0018  
             ?_LEDarray_disp_bin 0005                    ??_Timer0_init 0005  
                   vfprintf@cfmt 0055                        ??___aodiv 0015  
                      ??___aomod 0015                           ___wmul 1F78  
                      ??___awdiv 0009            LEDarray_disp_bin@mask 001B  
        __end_of_daylightsavings 1A30              ??_LEDarray_disp_bin 0007  
                         clear_0 1D2C                           clear_1 1D38  
               ___awdiv@quotient 000B                           isa$std 000001  
                         pad@buf 0017                           dtoa@fp 0020  
                         _sunset 1B1A                           fputc@c 0005  
              sunset@sunset_time 0010                           fputs@c 0012  
                         fputs@i 0013                           fputs@s 000E  
                   __mediumconst 0000                 __end_of_test_day 2072  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                        ?_ADC_init 0001  
               __end_of_poweroff 1EA4                           putch@c 0001  
                      ?_DAC_init 0001                 __end_of_vfprintf 1DA6  
                      ??_sprintf 0057                        ??_sunrise 000D  
      __end_of_LEDarray_disp_bin 16E0                       __accesstop 0060  
        __end_of__initialization 1D44                        ?_LCD_Init 0001  
       ??_Comp1_init_rising_edge 0005                    ___rparam_used 000001  
                  _LEDarray_init 1F9E                  _Interrupts_init 2086  
                 __pcstackCOMRAM 0001                     __pidataBANK1 2046  
                  __end_of_fputc 17AA                    __end_of_fputs 1DEA  
                  __end_of_putch 20AE        time_adjuster@sunrise_time 0012  
            __end_of_Timer0_init 202C                       ??_ADC_init 0005  
                     ??_DAC_init 0005                          ??_fputc 0009  
                        ??_fputs 0012                          ??_putch 0005  
                     __pbssBANK0 0093                       __pbssBANK1 0164  
         time_adjuster@solarnoon 0016                       ??_LCD_Init 0008  
                 _LCD_sendnibble 1BF6                   ?_LEDarray_init 0001  
            sunrise@sunrise_time 0010                   _LCD_sendstring 1EE0  
                        ?_LowISR 0001            __end_of_time_adjuster 1B1A  
                   _day_of_month 008B                          ?___wmul 0005  
           __end_of_LCD_sendbyte 1F78         time_adjuster@sunset_time 0014  
               ?_daylightsavings 0001                          ?_sunset 000B  
              __end_of_day1_init 1E68                  _seconds_in_hour 0097  
                        i2u90_48 1EC8                          i2u88_40 1EB4  
                        i2u88_41 1EB0                          i2u89_40 1EC6  
                        i2u89_41 1EBE           __end_of_LCD_sendnibble 1C5E  
        __end_of_Interrupts_init 2098                 sunrise@prevState 000E  
                        _HighISR 0008           __end_of_LCD_sendstring 1F14  
                      _ADREFbits 000F58          _Comp1_init_falling_edge 1FE8  
                        __Hparam 0000                          __Lparam 0000  
                    _Timer0_init 200C                        ?_test_day 0001  
                        ___aodiv 1086                          ___aomod 120E  
                        ___awdiv 17AA                        ?_poweroff 0001  
                      ?_vfprintf 0060                     __psmallconst 0E00  
                        __pcinit 1D06                          __ramtop 0E00  
                        __ptext0 1910                          __ptext1 1AAA  
                        __ptext2 17AA                          __ptext3 1C5E  
                        __ptext4 1B1A                          __ptext5 1B88  
                        __ptext6 1F78                          __ptext7 1CB4  
                        __ptext8 1D56                          __ptext9 1372  
              __end_of_increment 15F8                          _seconds 009B  
                      _LCD_E_TOG 2098                  LCD_setline@line 0008  
                        _sprintf 1CB4                   __pintcode_body 1EA4  
                        _sunrise 1B88             end_of_initialization 1D44  
                ?_LCD_sendnibble 0001          time_adjuster@adjustment 0018  
                        fputc@fp 0007                  ??_LEDarray_init 0005  
                        int_func 1EA4                          fputs@fp 0010  
                ?_LCD_sendstring 0008                __end_of_vfpfcnvrt 14C0  
                     ??_test_day 0005                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
               vfpfcnvrt@convarg 004B                       ??_poweroff 0005  
                     ??_vfprintf 0055           _Comp1_init_rising_edge 1FC4  
                     ?_LCD_E_TOG 0001                        _TRISAbits 000F81  
                      _TRISBbits 000F82                        _TRISCbits 000F83  
                      _TRISEbits 000F85                        _TRISFbits 000F86  
                      _TRISGbits 000F87                        _TRISHbits 000F88  
      ??_Comp1_init_falling_edge 0005                      _CM1CON0bits 000ED0  
                    _CM1CON1bits 000ED1                 ?_Interrupts_init 0001  
                sunset@prevState 000E                   __end_of_LowISR 0070  
                    vfpfcnvrt@ap 0047                      vfpfcnvrt@cp 0053  
                    vfpfcnvrt@fp 0043                   __end_of___wmul 1F9E  
           LCD_sendnibble@number 0005                   __end_of_sunset 1B88  
            start_initialization 1D06                      __end_of_abs 1E2A  
                    __end_of_pad 1AAA                     _LCD_sendbyte 1F48  
                  ??_LCD_setline 0008                         ??_LowISR 0002  
                    vfprintf@fmt 0062             LEDarray_disp_bin@ctr 001D  
           LCD_sendstring@string 0008                         ??___wmul 0009  
                    __pdataBANK1 0184                         ??_sunset 000D  
                    __pbssCOMRAM 0057                      ??_LCD_E_TOG 0005  
                  __pcstackBANK0 0060                    __pcstackBANK1 0100  
               ___aodiv@dividend 0005                        _day1_init 1E2A  
                       ?_HighISR 0001                        __pnvBANK0 0089  
              ??_streetLightInit 0005                        _dtoa$2033 0032  
                   ?_Timer0_init 0001                      _day_of_week 008D  
                    _day_of_year 008F                        __pintcode 0008  
                       ?___aodiv 0005                         ?___aomod 0005  
                       ?___awdiv 0005                 ___aodiv@quotient 0017  
       LEDarray_disp_bin@led_arr 0009              __end_of_LCD_setline 1F48  
                    __pintcodelo 0018                      __smallconst 0E00  
                  ??_time2String 0087                 ??_LCD_sendnibble 0005  
                       _ADC_init 202C                        _increment 14C0  
                       _DAC_init 2072                       ?_day1_init 0001  
               ??_LCD_sendstring 000A                         ?_sprintf 0066  
                       ?_sunrise 000B                 LCD_sendbyte@Byte 0007  
                       _LCD_Init 186E                 LCD_sendbyte@type 0006  
                 ___wmul@product 0009                         _LATAbits 000F79  
                       _LATBbits 000F7A                         _LATCbits 000F7B  
                       _LATEbits 000F7D                         _LATFbits 000F7E  
                       _LATGbits 000F7F                         _LATHbits 000F80  
                       _IPR0bits 000E1F                         _PIE0bits 000E29  
                       _IPR2bits 000E21                         _PIE2bits 000E2B  
                       i1u180_20 005E                         i1u180_21 005A  
                       i1u179_20 0036                         i1u179_21 0032  
                       _PIR0bits 000E33                         _PIR2bits 000E35  
                      _month_num 0091                     time2String@d 0081  
                   time2String@h 007D                     time2String@m 0083  
                   time2String@s 007F                     time2String@y 0085  
        ?_Comp1_init_rising_edge 0001                        _vfpfcnvrt 1372  
                     _ADCON0bits 000F60                ___wmul@multiplier 0005  
                   _hours_in_day 0095                       ?_increment 0001  
                     _CM1NCHbits 000ED2                       _CM1PCHbits 000ED3  
                      copy_data0 1D1A              __end_of_time2String 1CB4  
          __end_of_LEDarray_init 1FC4                      _LCD_setline 1F14  
                       __Hrparam 0000                       vfprintf@ap 0064  
                       __Lrparam 0000                       vfprintf@fp 0060  
                   __Lsmallconst 0E00                    _time_adjuster 1AAA  
 __end_of_Comp1_init_rising_edge 1FE8                       ?_vfpfcnvrt 0043  
                ___aodiv@divisor 000D                  ___aodiv@counter 0015  
                     _ANSELAbits 000E92                       sprintf@fmt 0068  
                     _T0CON0bits 000FD5                       _T0CON1bits 000FD6  
                       __ptext10 0E0A                         __ptext11 1A30  
                       __ptext20 20A6                         __ptext12 1DA6  
                       __ptext21 1E68                         __ptext13 16E0  
                       __ptext30 1F48                         __ptext22 14C0  
                       __ptext14 20AC                         __ptext31 1BF6  
                       __ptext23 15F8                         __ptext15 1DEA  
                       __ptext32 2098                         __ptext24 19AC  
                       __ptext16 120E                         __ptext33 2086  
                       __ptext25 1E2A                         __ptext17 1086  
                       __ptext34 1FC4                         __ptext26 200C  
                       __ptext18 1EE0                         __ptext35 1FE8  
                       __ptext27 1F9E                         __ptext19 205E  
                       __ptext36 2072                         __ptext28 1F14  
                       __ptext37 202C                         __ptext29 186E  
                    ??_day1_init 0005          LEDarray_disp_bin@number 0005  
              ??_daylightsavings 0005                   ?_time_adjuster 0012  
                       isa$xinst 000000                         _test_day 205E  
                       int$flags 005A                         _poweroff 1E68  
                       _vfprintf 1D56                 ___aomod@dividend 0005  
                     _INTCONbits 000FF2                      _time2String 1C5E  
                    ??_increment 001F         ?_Comp1_init_falling_edge 0001  
                _streetLightInit 20A6                         intlevel1 0000  
                       intlevel2 0000                        sprintf@ap 006E  
                   _DAC1CON0bits 000EC6                     _DAC1CON1bits 000EC7  
                 time2String@buf 007B                  ___aomod@divisor 000D  
                    ??_vfpfcnvrt 0049                  ___aomod@counter 0015  
                       sprintf@f 0070                         sprintf@s 0066  
                   ___aodiv@sign 0016                  ??_time_adjuster 0016  
                   ___aomod@sign 0016  
