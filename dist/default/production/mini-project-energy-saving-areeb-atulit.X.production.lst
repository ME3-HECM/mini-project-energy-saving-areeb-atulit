

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Nov 08 00:07:55 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39   000000                     
    40                           ; Generated 06/04/2022 GMT
    41                           ; 
    42                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F67K40 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74   000000                     
    75                           	psect	idataCOMRAM
    76   0014E6                     __pidataCOMRAM:
    77                           	callstack 0
    78                           
    79                           ;initializer for _month
    80   0014E6  001F               	dw	31
    81   0014E8  001C               	dw	28
    82   0014EA  001F               	dw	31
    83   0014EC  001E               	dw	30
    84   0014EE  001F               	dw	31
    85   0014F0  001E               	dw	30
    86   0014F2  001F               	dw	31
    87   0014F4  001F               	dw	31
    88   0014F6  001E               	dw	30
    89   0014F8  001F               	dw	31
    90   0014FA  001E               	dw	30
    91   0014FC  001F               	dw	31
    92                           
    93                           	psect	smallconst
    94   000E00                     __psmallconst:
    95                           	callstack 0
    96   000E00  00                 	db	0
    97   000E01  0000               	dw	0
    98   000E03  0000               	dw	0
    99   000E05  CFDC               	dw	53212
   100   000E07  35D1               	dw	13777
   101   000E09                     __end_of_dp_l:
   102                           	callstack 0
   103   000E09  0000               	dw	0
   104   000E0B  0000               	dw	0
   105   000E0D  C000               	dw	49152
   106   000E0F  3F15               	dw	16149
   107   000E11                     __end_of_dp_h:
   108                           	callstack 0
   109   000E11  4260               	dw	16992
   110   000E13  0DA2               	dw	3490
   111   000E15                     __end_of_tiny@sqrtf$F1955:
   112                           	callstack 0
   113   000E15  A570               	dw	42352
   114   000E17  36EC               	dw	14060
   115   000E19                     __end_of_ivln2_l:
   116                           	callstack 0
   117   000E19  AA3B               	dw	43579
   118   000E1B  3FB8               	dw	16312
   119   000E1D                     __end_of_ivln2:
   120                           	callstack 0
   121   000E1D  384F               	dw	14415
   122   000E1F  3F76               	dw	16246
   123   000E21                     __end_of_cp:
   124                           	callstack 0
   125   000E21  AA3C               	dw	43580
   126   000E23  3338               	dw	13112
   127   000E25                     __end_of_ovt:
   128                           	callstack 0
   129   000E25  BE8C               	dw	48780
   130   000E27  35BF               	dw	13759
   131   000E29                     __end_of_lg2_l:
   132                           	callstack 0
   133   000E29  7200               	dw	29184
   134   000E2B  3F31               	dw	16177
   135   000E2D                     __end_of_lg2_h:
   136                           	callstack 0
   137   000E2D  7218               	dw	29208
   138   000E2F  3F31               	dw	16177
   139   000E31                     __end_of_lg2:
   140                           	callstack 0
   141   000E31  BB4C               	dw	47948
   142   000E33  3331               	dw	13105
   143   000E35                     __end_of_P5:
   144                           	callstack 0
   145   000E35  EA0E               	dw	59918
   146   000E37  B5DD               	dw	46557
   147   000E39                     __end_of_P4:
   148                           	callstack 0
   149   000E39  B355               	dw	45909
   150   000E3B  388A               	dw	14474
   151   000E3D                     __end_of_P3:
   152                           	callstack 0
   153   000E3D  0B61               	dw	2913
   154   000E3F  BB36               	dw	47926
   155   000E41                     __end_of_P2:
   156                           	callstack 0
   157   000E41  AAAB               	dw	43691
   158   000E43  3E2A               	dw	15914
   159   000E45                     __end_of_P1:
   160                           	callstack 0
   161   000E45  F142               	dw	61762
   162   000E47  3E53               	dw	15955
   163   000E49                     __end_of_L6:
   164                           	callstack 0
   165   000E49  3255               	dw	12885
   166   000E4B  3E6C               	dw	15980
   167   000E4D                     __end_of_L5:
   168                           	callstack 0
   169   000E4D  A305               	dw	41733
   170   000E4F  3E8B               	dw	16011
   171   000E51                     __end_of_L4:
   172                           	callstack 0
   173   000E51  AAAB               	dw	43691
   174   000E53  3EAA               	dw	16042
   175   000E55                     __end_of_L3:
   176                           	callstack 0
   177   000E55  6DB7               	dw	28087
   178   000E57  3EDB               	dw	16091
   179   000E59                     __end_of_L2:
   180                           	callstack 0
   181   000E59  999A               	dw	39322
   182   000E5B  3F19               	dw	16153
   183   000E5D                     __end_of_L1:
   184                           	callstack 0
   185   000E5D  4260               	dw	16992
   186   000E5F  0DA2               	dw	3490
   187   000E61                     __end_of_tiny:
   188                           	callstack 0
   189   000E61  F2CA               	dw	62154
   190   000E63  7149               	dw	29001
   191   000E65                     __end_of_huge:
   192                           	callstack 0
   193   000E65  0000               	dw	0
   194   000E67  4B80               	dw	19328
   195   000E69                     __end_of_two24:
   196                           	callstack 0
   197   000E69  0000               	dw	0
   198   000E6B  3F80               	dw	16256
   199   000E6D  0000               	dw	0
   200   000E6F  3FC0               	dw	16320
   201   000E71                     __end_of_bp:
   202                           	callstack 0
   203   000E71  AA00               	dw	43520
   204   000E73  3FB8               	dw	16312
   205   000E75                     __end_of_ivln2_h:
   206                           	callstack 0
   207   000E75  23C6               	dw	9158
   208   000E77  B8F6               	dw	47350
   209   000E79                     __end_of_cp_l:
   210                           	callstack 0
   211   000E79  4000               	dw	16384
   212   000E7B  3F76               	dw	16246
   213   000E7D                     __end_of_cp_h:
   214                           	callstack 0
   215   000000                     _T0CON0bits	set	4053
   216   000000                     _T0CON1bits	set	4054
   217   000000                     _LATHbits	set	3968
   218   000000                     _CM1CON1bits	set	3793
   219   000E7D                     
   220                           ; BSR set to: 14
   221   000E7D  00                 	db	0
   222   000E7E  00                 	db	0	; dummy byte at the end
   223   000000                     
   224                           	psect	nvCOMRAM
   225   000046                     __pnvCOMRAM:
   226                           	callstack 0
   227   000046                     _year:
   228                           	callstack 0
   229   000046                     	ds	2
   230   000048                     _day_of_month:
   231                           	callstack 0
   232   000048                     	ds	2
   233   00004A                     _day_of_week:
   234                           	callstack 0
   235   00004A                     	ds	2
   236   00004C                     _day_of_year:
   237                           	callstack 0
   238   00004C                     	ds	2
   239   00004E                     _month_num:
   240                           	callstack 0
   241   00004E                     	ds	2
   242   000000                     _IPR0bits	set	3615
   243   000000                     _IPR2bits	set	3617
   244   000000                     _PIE0bits	set	3625
   245   000000                     _PIE2bits	set	3627
   246   000000                     _ANSELAbits	set	3730
   247   000000                     _TRISAbits	set	3969
   248   000000                     _TRISDbits	set	3972
   249   000000                     _TRISBbits	set	3970
   250   000000                     _TRISFbits	set	3974
   251   000000                     _TRISGbits	set	3975
   252   000000                     _DAC1CON0bits	set	3782
   253   000000                     _ADREFbits	set	3928
   254   000000                     _ADPCH	set	3935
   255   000000                     _ADRESH	set	3940
   256   000000                     _ADCON0bits	set	3936
   257   000000                     _LATAbits	set	3961
   258   000000                     _LATGbits	set	3967
   259   000000                     _TRISHbits	set	3976
   260   000000                     _TMR0L	set	4051
   261   000000                     _TMR0H	set	4052
   262   000000                     _INTCONbits	set	4082
   263   000000                     _LATDbits	set	3964
   264   000000                     _LATBbits	set	3962
   265   000000                     _LATFbits	set	3966
   266   000000                     _CM1CON0bits	set	3792
   267   000000                     _CM1NCHbits	set	3794
   268   000000                     _DAC1CON1bits	set	3783
   269   000000                     _CM1PCHbits	set	3795
   270   000000                     _PIR0bits	set	3635
   271   000000                     _PIR2bits	set	3637
   272                           
   273                           ; #config settings
   274                           
   275                           	psect	cinit
   276   001328                     __pcinit:
   277                           	callstack 0
   278   001328                     start_initialization:
   279                           	callstack 0
   280   001328                     __initialization:
   281                           	callstack 0
   282                           
   283                           ; Initialize objects allocated to COMRAM (24 bytes)
   284                           ; load TBLPTR registers with __pidataCOMRAM
   285   001328  0EE6               	movlw	low __pidataCOMRAM
   286   00132A  6EF6               	movwf	tblptrl,c
   287   00132C  0E14               	movlw	high __pidataCOMRAM
   288   00132E  6EF7               	movwf	tblptrh,c
   289   001330  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   290   001332  6EF8               	movwf	tblptru,c
   291   001334  EE00  F022         	lfsr	0,__pdataCOMRAM
   292   001338  EE10 F018          	lfsr	1,24
   293   00133C                     copy_data0:
   294   00133C  0009               	tblrd		*+
   295   00133E  CFF5 FFEE          	movff	tablat,postinc0
   296   001342  50E5               	movf	postdec1,w,c
   297   001344  50E1               	movf	fsr1l,w,c
   298   001346  E1FA               	bnz	copy_data0
   299                           
   300                           ; Clear objects allocated to COMRAM (12 bytes)
   301   001348  EE00  F03A         	lfsr	0,__pbssCOMRAM
   302   00134C  0E0C               	movlw	12
   303   00134E                     clear_0:
   304   00134E  6AEE               	clrf	postinc0,c
   305   001350  06E8               	decf	wreg,f,c
   306   001352  E1FD               	bnz	clear_0
   307   001354                     end_of_initialization:
   308                           	callstack 0
   309   001354                     __end_of__initialization:
   310                           	callstack 0
   311   001354  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   312   001356  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   313   001358  0E00               	movlw	low (__Lsmallconst shr (0+16))
   314   00135A  6EF8               	movwf	tblptru,c
   315   00135C  0E0E               	movlw	high __Lsmallconst
   316   00135E  6EF7               	movwf	tblptrh,c
   317   001360  0100               	movlb	0
   318   001362  EF35  F009         	goto	_main	;jump to C main() function
   319                           
   320                           	psect	bssCOMRAM
   321   00003A                     __pbssCOMRAM:
   322                           	callstack 0
   323   00003A                     	ds	4
   324   00003E                     _errno:
   325                           	callstack 0
   326   00003E                     	ds	2
   327   000040                     _comp_check:
   328                           	callstack 0
   329   000040                     	ds	2
   330   000042                     _hour:
   331                           	callstack 0
   332   000042                     	ds	2
   333   000044                     _seconds:
   334                           	callstack 0
   335   000044                     	ds	2
   336                           
   337                           	psect	dataCOMRAM
   338   000022                     __pdataCOMRAM:
   339                           	callstack 0
   340   000022                     _month:
   341                           	callstack 0
   342   000022                     	ds	24
   343                           
   344                           	psect	cstackCOMRAM
   345   000001                     __pcstackCOMRAM:
   346                           	callstack 0
   347   000001                     ??_HighISR:
   348   000001                     
   349                           ; 1 bytes @ 0x0
   350   000001                     	ds	1
   351   000002                     ??_LowISR:
   352                           
   353                           ; 1 bytes @ 0x1
   354   000002                     	ds	4
   355   000006                     ?___wmul:
   356                           	callstack 0
   357   000006                     ?___awdiv:
   358                           	callstack 0
   359   000006                     LEDarray_disp_bin@number:
   360                           	callstack 0
   361   000006                     ___wmul@multiplier:
   362                           	callstack 0
   363   000006                     ___awdiv@dividend:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x5
   367   000006                     	ds	2
   368   000008                     ??_LEDarray_disp_bin:
   369   000008                     ___wmul@multiplicand:
   370                           	callstack 0
   371   000008                     ___awdiv@divisor:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x7
   375   000008                     	ds	2
   376   00000A                     ___awdiv@counter:
   377                           	callstack 0
   378   00000A                     ___wmul@product:
   379                           	callstack 0
   380   00000A                     LEDarray_disp_bin@led_arr:
   381                           	callstack 0
   382                           
   383                           ; 18 bytes @ 0x9
   384   00000A                     	ds	1
   385   00000B                     ___awdiv@sign:
   386                           	callstack 0
   387                           
   388                           ; 1 bytes @ 0xA
   389   00000B                     	ds	1
   390   00000C                     ?_sunrise:
   391                           	callstack 0
   392   00000C                     ?_sunset:
   393                           	callstack 0
   394   00000C                     ___awdiv@quotient:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0xB
   398   00000C                     	ds	2
   399   00000E                     ??_sunrise:
   400   00000E                     ??_sunset:
   401                           
   402                           ; 1 bytes @ 0xD
   403   00000E                     	ds	1
   404   00000F                     sunrise@prevState:
   405                           	callstack 0
   406   00000F                     sunset@prevState:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0xE
   410   00000F                     	ds	2
   411   000011                     sunrise@sunrise_time:
   412                           	callstack 0
   413   000011                     sunset@sunset_time:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0x10
   417   000011                     	ds	2
   418   000013                     timeadjuster@sunrise_time:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x12
   422   000013                     	ds	2
   423   000015                     timeadjuster@sunset_time:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x14
   427   000015                     	ds	2
   428   000017                     timeadjuster@solarnoon:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x16
   432   000017                     	ds	2
   433   000019                     timeadjuster@adjustment:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0x18
   437   000019                     	ds	3
   438   00001C                     LEDarray_disp_bin@mask:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x1B
   442   00001C                     	ds	2
   443   00001E                     LEDarray_disp_bin@ctr:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x1D
   447   00001E                     	ds	2
   448   000020                     ??_increment:
   449                           
   450                           ; 1 bytes @ 0x1F
   451   000020                     	ds	2
   452   000022                     
   453                           ; 1 bytes @ 0x21
   454 ;;
   455 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   456 ;;
   457 ;; *************** function _main *****************
   458 ;; Defined at:
   459 ;;		line 18 in file "main.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;		None
   462 ;; Auto vars:     Size  Location     Type
   463 ;;  a               2    0        int 
   464 ;;  prevState       2    0        int 
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   478 ;;Total ram usage:        0 bytes
   479 ;; Hardware stack levels required when called: 4
   480 ;; This function calls:
   481 ;;		_ADC_init
   482 ;;		_Comp1_init_falling_edge
   483 ;;		_Comp1_init_rising_edge
   484 ;;		_Interrupts_init
   485 ;;		_LEDarray_init
   486 ;;		_Timer0_init
   487 ;;		_day1_init
   488 ;;		_daylightsavings
   489 ;;		_increment
   490 ;;		_poweroff
   491 ;;		_streetLightInit
   492 ;;		_sunrise
   493 ;;		_sunset
   494 ;;		_timeadjuster
   495 ;; This function is called by:
   496 ;;		Startup code after reset
   497 ;; This function uses a non-reentrant model
   498 ;;
   499                           
   500                           	psect	text0
   501   00126A                     __ptext0:
   502                           	callstack 0
   503   00126A                     _main:
   504                           	callstack 27
   505   00126A  5080               	movf	128,w,c	;volatile
   506                           
   507                           ;main.c: 21:     hour = 0;
   508   00126C  0E00               	movlw	0
   509   00126E  6E43               	movwf	(_hour+1)^0,c
   510   001270  0E00               	movlw	0
   511   001272  6E42               	movwf	_hour^0,c
   512   001274                     
   513                           ;main.c: 23:     streetLightInit();
   514   001274  EC92  F00A         	call	_streetLightInit	;wreg free
   515   001278                     
   516                           ;main.c: 24:     LEDarray_init();
   517   001278  EC1F  F00A         	call	_LEDarray_init	;wreg free
   518   00127C                     
   519                           ;main.c: 25:     Timer0_init();
   520   00127C  EC56  F00A         	call	_Timer0_init	;wreg free
   521   001280                     
   522                           ;main.c: 26:     Comp1_init_rising_edge();
   523   001280  EC32  F00A         	call	_Comp1_init_rising_edge	;wreg free
   524   001284                     
   525                           ;main.c: 27:     Comp1_init_falling_edge();
   526   001284  EC44  F00A         	call	_Comp1_init_falling_edge	;wreg free
   527                           
   528                           ;main.c: 28:     Interrupts_init();
   529   001288  EC89  F00A         	call	_Interrupts_init	;wreg free
   530   00128C                     
   531                           ;main.c: 29:     ADC_init();
   532   00128C  EC66  F00A         	call	_ADC_init	;wreg free
   533   001290                     
   534                           ;main.c: 30:     day1_init();
   535   001290  ECB3  F009         	call	_day1_init	;wreg free
   536   001294                     l1821:
   537                           
   538                           ;main.c: 32:         increment();
   539   001294  EC40  F007         	call	_increment	;wreg free
   540   001298                     
   541                           ;main.c: 33:         poweroff();
   542   001298  ECEF  F009         	call	_poweroff	;wreg free
   543   00129C                     
   544                           ;main.c: 34:         sunrise();
   545   00129C  ECFF  F008         	call	_sunrise	;wreg free
   546   0012A0                     
   547                           ;main.c: 35:         sunset();
   548   0012A0  ECC9  F008         	call	_sunset	;wreg free
   549   0012A4                     
   550                           ;main.c: 36:         timeadjuster(sunrise(),sunset());
   551   0012A4  ECFF  F008         	call	_sunrise	;wreg free
   552   0012A8  C00C  F013         	movff	?_sunrise,timeadjuster@sunrise_time
   553   0012AC  C00D  F014         	movff	?_sunrise+1,timeadjuster@sunrise_time+1
   554   0012B0  ECC9  F008         	call	_sunset	;wreg free
   555   0012B4  C00C  F015         	movff	?_sunset,timeadjuster@sunset_time
   556   0012B8  C00D  F016         	movff	?_sunset+1,timeadjuster@sunset_time+1
   557   0012BC  EC92  F008         	call	_timeadjuster	;wreg free
   558   0012C0                     
   559                           ;main.c: 37:         daylightsavings();
   560   0012C0  EC66  F009         	call	_daylightsavings	;wreg free
   561   0012C4  EF4A  F009         	goto	l1821
   562   0012C8  EF50  F000         	goto	start
   563   0012CC                     __end_of_main:
   564                           	callstack 0
   565                           
   566 ;; *************** function _timeadjuster *****************
   567 ;; Defined at:
   568 ;;		line 107 in file "Functions.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;  sunrise_time    2   18[COMRAM] int 
   571 ;;  sunset_time     2   20[COMRAM] int 
   572 ;; Auto vars:     Size  Location     Type
   573 ;;  adjustment      2   24[COMRAM] int 
   574 ;;  solarnoon       2   22[COMRAM] int 
   575 ;; Return value:  Size  Location     Type
   576 ;;                  1    wreg      void 
   577 ;; Registers used:
   578 ;;		wreg, status,2, status,0, cstack
   579 ;; Tracked objects:
   580 ;;		On entry : 0/0
   581 ;;		On exit  : 0/0
   582 ;;		Unchanged: 0/0
   583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   584 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   585 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   587 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   588 ;;Total ram usage:        8 bytes
   589 ;; Hardware stack levels used: 1
   590 ;; Hardware stack levels required when called: 3
   591 ;; This function calls:
   592 ;;		___awdiv
   593 ;; This function is called by:
   594 ;;		_main
   595 ;; This function uses a non-reentrant model
   596 ;;
   597                           
   598                           	psect	text1
   599   001124                     __ptext1:
   600                           	callstack 0
   601   001124                     _timeadjuster:
   602                           	callstack 27
   603   001124                     
   604                           ;Functions.c: 110:     int adjustment = 0;
   605   001124  0E00               	movlw	0
   606   001126  6E1A               	movwf	(timeadjuster@adjustment+1)^0,c
   607   001128  0E00               	movlw	0
   608   00112A  6E19               	movwf	timeadjuster@adjustment^0,c
   609   00112C                     
   610                           ;Functions.c: 111:     solarnoon = (sunrise_time+sunset_time)/2;
   611   00112C  5015               	movf	timeadjuster@sunset_time^0,w,c
   612   00112E  2413               	addwf	timeadjuster@sunrise_time^0,w,c
   613   001130  6E06               	movwf	___awdiv@dividend^0,c
   614   001132  5016               	movf	(timeadjuster@sunset_time+1)^0,w,c
   615   001134  2014               	addwfc	(timeadjuster@sunrise_time+1)^0,w,c
   616   001136  6E07               	movwf	(___awdiv@dividend+1)^0,c
   617   001138  0E00               	movlw	0
   618   00113A  6E09               	movwf	(___awdiv@divisor+1)^0,c
   619   00113C  0E02               	movlw	2
   620   00113E  6E08               	movwf	___awdiv@divisor^0,c
   621   001140  EC30  F008         	call	___awdiv	;wreg free
   622   001144  C006  F017         	movff	?___awdiv,timeadjuster@solarnoon
   623   001148  C007  F018         	movff	?___awdiv+1,timeadjuster@solarnoon+1
   624   00114C                     
   625                           ;Functions.c: 112:     adjustment = (12*3600)-solarnoon;
   626   00114C  5017               	movf	timeadjuster@solarnoon^0,w,c
   627   00114E  08C0               	sublw	192
   628   001150  6E19               	movwf	timeadjuster@adjustment^0,c
   629   001152  5018               	movf	(timeadjuster@solarnoon+1)^0,w,c
   630   001154  A0D8               	btfss	status,0,c
   631   001156  2AE8               	incf	wreg,f,c
   632   001158  08A8               	sublw	168
   633   00115A  6E1A               	movwf	(timeadjuster@adjustment+1)^0,c
   634   00115C                     
   635                           ;Functions.c: 113:     if (hour==11 && seconds==1800)
   636   00115C  0E0B               	movlw	11
   637   00115E  1842               	xorwf	_hour^0,w,c
   638   001160  1043               	iorwf	(_hour+1)^0,w,c
   639   001162  A4D8               	btfss	status,2,c
   640   001164  EFB6  F008         	goto	u801
   641   001168  EFB8  F008         	goto	u800
   642   00116C                     u801:
   643   00116C  EFC8  F008         	goto	l385
   644   001170                     u800:
   645   001170  0E08               	movlw	8
   646   001172  1844               	xorwf	_seconds^0,w,c
   647   001174  E107               	bnz	u811
   648   001176  0E07               	movlw	7
   649   001178  1845               	xorwf	(_seconds+1)^0,w,c
   650   00117A  A4D8               	btfss	status,2,c
   651   00117C  EFC2  F008         	goto	u811
   652   001180  EFC4  F008         	goto	u810
   653   001184                     u811:
   654   001184  EFC8  F008         	goto	l385
   655   001188                     u810:
   656   001188                     
   657                           ;Functions.c: 114:     {;Functions.c: 115:         seconds+=adjustment;
   658   001188  5019               	movf	timeadjuster@adjustment^0,w,c
   659   00118A  2644               	addwf	_seconds^0,f,c
   660   00118C  501A               	movf	(timeadjuster@adjustment+1)^0,w,c
   661   00118E  2245               	addwfc	(_seconds+1)^0,f,c
   662   001190                     l385:
   663   001190  0012               	return		;funcret
   664   001192                     __end_of_timeadjuster:
   665                           	callstack 0
   666                           
   667 ;; *************** function ___awdiv *****************
   668 ;; Defined at:
   669 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;  dividend        2    5[COMRAM] int 
   672 ;;  divisor         2    7[COMRAM] int 
   673 ;; Auto vars:     Size  Location     Type
   674 ;;  quotient        2   11[COMRAM] int 
   675 ;;  sign            1   10[COMRAM] unsigned char 
   676 ;;  counter         1    9[COMRAM] unsigned char 
   677 ;; Return value:  Size  Location     Type
   678 ;;                  2    5[COMRAM] int 
   679 ;; Registers used:
   680 ;;		wreg, status,2, status,0
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   686 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   687 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   689 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   690 ;;Total ram usage:        8 bytes
   691 ;; Hardware stack levels used: 1
   692 ;; Hardware stack levels required when called: 2
   693 ;; This function calls:
   694 ;;		Nothing
   695 ;; This function is called by:
   696 ;;		_timeadjuster
   697 ;;		_ADC_lightMeter
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           	psect	text2
   702   001060                     __ptext2:
   703                           	callstack 0
   704   001060                     ___awdiv:
   705                           	callstack 27
   706   001060  0E00               	movlw	0
   707   001062  6E0B               	movwf	___awdiv@sign^0,c
   708   001064  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
   709   001066  EF39  F008         	goto	u620
   710   00106A  EF37  F008         	goto	u621
   711   00106E                     u621:
   712   00106E  EF3F  F008         	goto	l1653
   713   001072                     u620:
   714   001072  6C08               	negf	___awdiv@divisor^0,c
   715   001074  1E09               	comf	(___awdiv@divisor+1)^0,f,c
   716   001076  B0D8               	btfsc	status,0,c
   717   001078  2A09               	incf	(___awdiv@divisor+1)^0,f,c
   718   00107A  0E01               	movlw	1
   719   00107C  6E0B               	movwf	___awdiv@sign^0,c
   720   00107E                     l1653:
   721   00107E  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
   722   001080  EF46  F008         	goto	u630
   723   001084  EF44  F008         	goto	u631
   724   001088                     u631:
   725   001088  EF4C  F008         	goto	l1659
   726   00108C                     u630:
   727   00108C  6C06               	negf	___awdiv@dividend^0,c
   728   00108E  1E07               	comf	(___awdiv@dividend+1)^0,f,c
   729   001090  B0D8               	btfsc	status,0,c
   730   001092  2A07               	incf	(___awdiv@dividend+1)^0,f,c
   731   001094  0E01               	movlw	1
   732   001096  1A0B               	xorwf	___awdiv@sign^0,f,c
   733   001098                     l1659:
   734   001098  0E00               	movlw	0
   735   00109A  6E0D               	movwf	(___awdiv@quotient+1)^0,c
   736   00109C  0E00               	movlw	0
   737   00109E  6E0C               	movwf	___awdiv@quotient^0,c
   738   0010A0  5008               	movf	___awdiv@divisor^0,w,c
   739   0010A2  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
   740   0010A4  B4D8               	btfsc	status,2,c
   741   0010A6  EF57  F008         	goto	u641
   742   0010AA  EF59  F008         	goto	u640
   743   0010AE                     u641:
   744   0010AE  EF81  F008         	goto	l1681
   745   0010B2                     u640:
   746   0010B2  0E01               	movlw	1
   747   0010B4  6E0A               	movwf	___awdiv@counter^0,c
   748   0010B6  EF61  F008         	goto	l1667
   749   0010BA                     l1665:
   750   0010BA  90D8               	bcf	status,0,c
   751   0010BC  3608               	rlcf	___awdiv@divisor^0,f,c
   752   0010BE  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
   753   0010C0  2A0A               	incf	___awdiv@counter^0,f,c
   754   0010C2                     l1667:
   755   0010C2  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
   756   0010C4  EF66  F008         	goto	u651
   757   0010C8  EF68  F008         	goto	u650
   758   0010CC                     u651:
   759   0010CC  EF5D  F008         	goto	l1665
   760   0010D0                     u650:
   761   0010D0                     l1669:
   762   0010D0  90D8               	bcf	status,0,c
   763   0010D2  360C               	rlcf	___awdiv@quotient^0,f,c
   764   0010D4  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
   765   0010D6  5008               	movf	___awdiv@divisor^0,w,c
   766   0010D8  5C06               	subwf	___awdiv@dividend^0,w,c
   767   0010DA  5009               	movf	(___awdiv@divisor+1)^0,w,c
   768   0010DC  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
   769   0010DE  A0D8               	btfss	status,0,c
   770   0010E0  EF74  F008         	goto	u661
   771   0010E4  EF76  F008         	goto	u660
   772   0010E8                     u661:
   773   0010E8  EF7B  F008         	goto	l1677
   774   0010EC                     u660:
   775   0010EC  5008               	movf	___awdiv@divisor^0,w,c
   776   0010EE  5E06               	subwf	___awdiv@dividend^0,f,c
   777   0010F0  5009               	movf	(___awdiv@divisor+1)^0,w,c
   778   0010F2  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
   779   0010F4  800C               	bsf	___awdiv@quotient^0,0,c
   780   0010F6                     l1677:
   781   0010F6  90D8               	bcf	status,0,c
   782   0010F8  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
   783   0010FA  3208               	rrcf	___awdiv@divisor^0,f,c
   784   0010FC  2E0A               	decfsz	___awdiv@counter^0,f,c
   785   0010FE  EF68  F008         	goto	l1669
   786   001102                     l1681:
   787   001102  500B               	movf	___awdiv@sign^0,w,c
   788   001104  B4D8               	btfsc	status,2,c
   789   001106  EF87  F008         	goto	u671
   790   00110A  EF89  F008         	goto	u670
   791   00110E                     u671:
   792   00110E  EF8D  F008         	goto	l1685
   793   001112                     u670:
   794   001112  6C0C               	negf	___awdiv@quotient^0,c
   795   001114  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
   796   001116  B0D8               	btfsc	status,0,c
   797   001118  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
   798   00111A                     l1685:
   799   00111A  C00C  F006         	movff	___awdiv@quotient,?___awdiv
   800   00111E  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
   801   001122  0012               	return		;funcret
   802   001124                     __end_of___awdiv:
   803                           	callstack 0
   804                           
   805 ;; *************** function _sunset *****************
   806 ;; Defined at:
   807 ;;		line 93 in file "Functions.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;		None
   810 ;; Auto vars:     Size  Location     Type
   811 ;;  sunset_time     2   16[COMRAM] int 
   812 ;;  prevState       2   14[COMRAM] int 
   813 ;; Return value:  Size  Location     Type
   814 ;;                  2   11[COMRAM] int 
   815 ;; Registers used:
   816 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   823 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   824 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   825 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   826 ;;Total ram usage:        7 bytes
   827 ;; Hardware stack levels used: 1
   828 ;; Hardware stack levels required when called: 3
   829 ;; This function calls:
   830 ;;		___wmul
   831 ;; This function is called by:
   832 ;;		_main
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           	psect	text3
   837   001192                     __ptext3:
   838                           	callstack 0
   839   001192                     _sunset:
   840                           	callstack 27
   841   001192                     
   842                           ;Functions.c: 95:     int prevState = LATHbits.LATH3;
   843   001192  B680               	btfsc	128,3,c	;volatile
   844   001194  EFCE  F008         	goto	u771
   845   001198  EFD2  F008         	goto	u770
   846   00119C                     u771:
   847   00119C  6A0E               	clrf	??_sunset^0,c
   848   00119E  2A0E               	incf	??_sunset^0,f,c
   849   0011A0  EFD3  F008         	goto	u778
   850   0011A4                     u770:
   851   0011A4  6A0E               	clrf	??_sunset^0,c
   852   0011A6                     u778:
   853   0011A6  500E               	movf	??_sunset^0,w,c
   854   0011A8  6E0F               	movwf	sunset@prevState^0,c
   855   0011AA  6A10               	clrf	(sunset@prevState+1)^0,c
   856                           
   857                           ;Functions.c: 97:     if (16<=hour<=20)
   858   0011AC  0E00               	movlw	0
   859   0011AE  6E12               	movwf	(sunset@sunset_time+1)^0,c
   860   0011B0  0E00               	movlw	0
   861   0011B2  6E11               	movwf	sunset@sunset_time^0,c
   862   0011B4                     
   863                           ;Functions.c: 98:     {;Functions.c: 99:         if (prevState==0 && LATHbits.LATH3==1)
   864   0011B4  500F               	movf	sunset@prevState^0,w,c
   865   0011B6  1010               	iorwf	(sunset@prevState+1)^0,w,c
   866   0011B8  A4D8               	btfss	status,2,c
   867   0011BA  EFE1  F008         	goto	u781
   868   0011BE  EFE3  F008         	goto	u780
   869   0011C2                     u781:
   870   0011C2  EFFA  F008         	goto	l1745
   871   0011C6                     u780:
   872   0011C6  A680               	btfss	128,3,c	;volatile
   873   0011C8  EFE8  F008         	goto	u791
   874   0011CC  EFEA  F008         	goto	u790
   875   0011D0                     u791:
   876   0011D0  EFFA  F008         	goto	l1745
   877   0011D4                     u790:
   878   0011D4                     
   879                           ;Functions.c: 100:         {;Functions.c: 101:             sunset_time = seconds+(hour*3
      +                          600);
   880   0011D4  C042  F006         	movff	_hour,___wmul@multiplier
   881   0011D8  C043  F007         	movff	_hour+1,___wmul@multiplier+1
   882   0011DC  0E0E               	movlw	14
   883   0011DE  6E09               	movwf	(___wmul@multiplicand+1)^0,c
   884   0011E0  0E10               	movlw	16
   885   0011E2  6E08               	movwf	___wmul@multiplicand^0,c
   886   0011E4  EC0C  F00A         	call	___wmul	;wreg free
   887   0011E8  5044               	movf	_seconds^0,w,c
   888   0011EA  2406               	addwf	?___wmul^0,w,c
   889   0011EC  6E11               	movwf	sunset@sunset_time^0,c
   890   0011EE  5045               	movf	(_seconds+1)^0,w,c
   891   0011F0  2007               	addwfc	(?___wmul+1)^0,w,c
   892   0011F2  6E12               	movwf	(sunset@sunset_time+1)^0,c
   893   0011F4                     l1745:
   894                           
   895                           ;Functions.c: 104:     return sunset_time;
   896   0011F4  C011  F00C         	movff	sunset@sunset_time,?_sunset
   897   0011F8  C012  F00D         	movff	sunset@sunset_time+1,?_sunset+1
   898   0011FC  0012               	return		;funcret
   899   0011FE                     __end_of_sunset:
   900                           	callstack 0
   901                           
   902 ;; *************** function _sunrise *****************
   903 ;; Defined at:
   904 ;;		line 79 in file "Functions.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;		None
   907 ;; Auto vars:     Size  Location     Type
   908 ;;  sunrise_time    2   16[COMRAM] int 
   909 ;;  prevState       2   14[COMRAM] int 
   910 ;; Return value:  Size  Location     Type
   911 ;;                  2   11[COMRAM] int 
   912 ;; Registers used:
   913 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   919 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   920 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   921 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   922 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   923 ;;Total ram usage:        7 bytes
   924 ;; Hardware stack levels used: 1
   925 ;; Hardware stack levels required when called: 3
   926 ;; This function calls:
   927 ;;		___wmul
   928 ;; This function is called by:
   929 ;;		_main
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           	psect	text4
   934   0011FE                     __ptext4:
   935                           	callstack 0
   936   0011FE                     _sunrise:
   937                           	callstack 27
   938   0011FE                     
   939                           ;Functions.c: 81:     int prevState = LATHbits.LATH3;
   940   0011FE  B680               	btfsc	128,3,c	;volatile
   941   001200  EF04  F009         	goto	u741
   942   001204  EF08  F009         	goto	u740
   943   001208                     u741:
   944   001208  6A0E               	clrf	??_sunrise^0,c
   945   00120A  2A0E               	incf	??_sunrise^0,f,c
   946   00120C  EF09  F009         	goto	u748
   947   001210                     u740:
   948   001210  6A0E               	clrf	??_sunrise^0,c
   949   001212                     u748:
   950   001212  500E               	movf	??_sunrise^0,w,c
   951   001214  6E0F               	movwf	sunrise@prevState^0,c
   952   001216  6A10               	clrf	(sunrise@prevState+1)^0,c
   953                           
   954                           ;Functions.c: 83:     if (5<=hour<=8)
   955   001218  0E00               	movlw	0
   956   00121A  6E12               	movwf	(sunrise@sunrise_time+1)^0,c
   957   00121C  0E00               	movlw	0
   958   00121E  6E11               	movwf	sunrise@sunrise_time^0,c
   959   001220                     
   960                           ;Functions.c: 84:     {;Functions.c: 85:         if (prevState==1 && LATHbits.LATH3==0)
   961   001220  040F               	decf	sunrise@prevState^0,w,c
   962   001222  1010               	iorwf	(sunrise@prevState+1)^0,w,c
   963   001224  A4D8               	btfss	status,2,c
   964   001226  EF17  F009         	goto	u751
   965   00122A  EF19  F009         	goto	u750
   966   00122E                     u751:
   967   00122E  EF30  F009         	goto	l1733
   968   001232                     u750:
   969   001232  B680               	btfsc	128,3,c	;volatile
   970   001234  EF1E  F009         	goto	u761
   971   001238  EF20  F009         	goto	u760
   972   00123C                     u761:
   973   00123C  EF30  F009         	goto	l1733
   974   001240                     u760:
   975   001240                     
   976                           ;Functions.c: 86:         {;Functions.c: 87:             sunrise_time = seconds+(hour*36
      +                          00);
   977   001240  C042  F006         	movff	_hour,___wmul@multiplier
   978   001244  C043  F007         	movff	_hour+1,___wmul@multiplier+1
   979   001248  0E0E               	movlw	14
   980   00124A  6E09               	movwf	(___wmul@multiplicand+1)^0,c
   981   00124C  0E10               	movlw	16
   982   00124E  6E08               	movwf	___wmul@multiplicand^0,c
   983   001250  EC0C  F00A         	call	___wmul	;wreg free
   984   001254  5044               	movf	_seconds^0,w,c
   985   001256  2406               	addwf	?___wmul^0,w,c
   986   001258  6E11               	movwf	sunrise@sunrise_time^0,c
   987   00125A  5045               	movf	(_seconds+1)^0,w,c
   988   00125C  2007               	addwfc	(?___wmul+1)^0,w,c
   989   00125E  6E12               	movwf	(sunrise@sunrise_time+1)^0,c
   990   001260                     l1733:
   991                           
   992                           ;Functions.c: 90:     return sunrise_time;
   993   001260  C011  F00C         	movff	sunrise@sunrise_time,?_sunrise
   994   001264  C012  F00D         	movff	sunrise@sunrise_time+1,?_sunrise+1
   995   001268  0012               	return		;funcret
   996   00126A                     __end_of_sunrise:
   997                           	callstack 0
   998                           
   999 ;; *************** function ___wmul *****************
  1000 ;; Defined at:
  1001 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;  multiplier      2    5[COMRAM] unsigned int 
  1004 ;;  multiplicand    2    7[COMRAM] unsigned int 
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;  product         2    9[COMRAM] unsigned int 
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  2    5[COMRAM] unsigned int 
  1009 ;; Registers used:
  1010 ;;		wreg, status,2, status,0, prodl, prodh
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1016 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1017 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1019 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1020 ;;Total ram usage:        6 bytes
  1021 ;; Hardware stack levels used: 1
  1022 ;; Hardware stack levels required when called: 2
  1023 ;; This function calls:
  1024 ;;		Nothing
  1025 ;; This function is called by:
  1026 ;;		_sunrise
  1027 ;;		_sunset
  1028 ;;		_ADC_lightMeter
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032                           	psect	text5
  1033   001418                     __ptext5:
  1034                           	callstack 0
  1035   001418                     ___wmul:
  1036                           	callstack 27
  1037   001418  5006               	movf	___wmul@multiplier^0,w,c
  1038   00141A  0208               	mulwf	___wmul@multiplicand^0,c
  1039   00141C  CFF3 F00A          	movff	prodl,___wmul@product
  1040   001420  CFF4 F00B          	movff	prodh,___wmul@product+1
  1041   001424  5006               	movf	___wmul@multiplier^0,w,c
  1042   001426  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  1043   001428  50F3               	movf	243,w,c
  1044   00142A  260B               	addwf	(___wmul@product+1)^0,f,c
  1045   00142C  5007               	movf	(___wmul@multiplier+1)^0,w,c
  1046   00142E  0208               	mulwf	___wmul@multiplicand^0,c
  1047   001430  50F3               	movf	243,w,c
  1048   001432  260B               	addwf	(___wmul@product+1)^0,f,c
  1049   001434  C00A  F006         	movff	___wmul@product,?___wmul
  1050   001438  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  1051   00143C  0012               	return		;funcret
  1052   00143E                     __end_of___wmul:
  1053                           	callstack 0
  1054                           
  1055 ;; *************** function _streetLightInit *****************
  1056 ;; Defined at:
  1057 ;;		line 12 in file "Functions.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;		None
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;		None
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  1    wreg      void 
  1064 ;; Registers used:
  1065 ;;		None
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1075 ;;Total ram usage:        0 bytes
  1076 ;; Hardware stack levels used: 1
  1077 ;; Hardware stack levels required when called: 2
  1078 ;; This function calls:
  1079 ;;		Nothing
  1080 ;; This function is called by:
  1081 ;;		_main
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           	psect	text6
  1086   001524                     __ptext6:
  1087                           	callstack 0
  1088   001524                     _streetLightInit:
  1089                           	callstack 28
  1090   001524                     
  1091                           ;Functions.c: 14:     LATHbits.LATH3 = 0;
  1092   001524  9680               	bcf	128,3,c	;volatile
  1093                           
  1094                           ;Functions.c: 15:     TRISHbits.TRISH3 = 0;
  1095   001526  9688               	bcf	136,3,c	;volatile
  1096                           
  1097                           ;Functions.c: 16:     LATDbits.LATD7 = 1;
  1098   001528  8E7C               	bsf	124,7,c	;volatile
  1099                           
  1100                           ;Functions.c: 17:     TRISDbits.TRISD7 = 0;
  1101   00152A  9E84               	bcf	132,7,c	;volatile
  1102   00152C  0012               	return		;funcret
  1103   00152E                     __end_of_streetLightInit:
  1104                           	callstack 0
  1105                           
  1106 ;; *************** function _poweroff *****************
  1107 ;; Defined at:
  1108 ;;		line 58 in file "Functions.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;		None
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;		None
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  1    wreg      void 
  1115 ;; Registers used:
  1116 ;;		wreg, status,2, status,0
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1126 ;;Total ram usage:        0 bytes
  1127 ;; Hardware stack levels used: 1
  1128 ;; Hardware stack levels required when called: 2
  1129 ;; This function calls:
  1130 ;;		Nothing
  1131 ;; This function is called by:
  1132 ;;		_main
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           	psect	text7
  1137   0013DE                     __ptext7:
  1138                           	callstack 0
  1139   0013DE                     _poweroff:
  1140                           	callstack 28
  1141   0013DE                     
  1142                           ;Functions.c: 61:         if (1 <= hour && hour < 5) {
  1143   0013DE  BE43               	btfsc	(_hour+1)^0,7,c
  1144   0013E0  EFFA  F009         	goto	u241
  1145   0013E4  5043               	movf	(_hour+1)^0,w,c
  1146   0013E6  E108               	bnz	u240
  1147   0013E8  0442               	decf	_hour^0,w,c
  1148   0013EA  A0D8               	btfss	status,0,c
  1149   0013EC  EFFA  F009         	goto	u241
  1150   0013F0  EFFC  F009         	goto	u240
  1151   0013F4                     u241:
  1152   0013F4  EF0B  F00A         	goto	l368
  1153   0013F8                     u240:
  1154   0013F8  BE43               	btfsc	(_hour+1)^0,7,c
  1155   0013FA  EF0A  F00A         	goto	u250
  1156   0013FE  5043               	movf	(_hour+1)^0,w,c
  1157   001400  E107               	bnz	u251
  1158   001402  0E05               	movlw	5
  1159   001404  5C42               	subwf	_hour^0,w,c
  1160   001406  B0D8               	btfsc	status,0,c
  1161   001408  EF08  F00A         	goto	u251
  1162   00140C  EF0A  F00A         	goto	u250
  1163   001410                     u251:
  1164   001410  EF0B  F00A         	goto	l368
  1165   001414                     u250:
  1166   001414                     
  1167                           ;Functions.c: 62:             LATHbits.LATH3 = 0;
  1168   001414  9680               	bcf	128,3,c	;volatile
  1169   001416                     l368:
  1170   001416  0012               	return		;funcret
  1171   001418                     __end_of_poweroff:
  1172                           	callstack 0
  1173                           
  1174 ;; *************** function _increment *****************
  1175 ;; Defined at:
  1176 ;;		line 19 in file "Functions.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;		None
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;		None
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  1    wreg      void 
  1183 ;; Registers used:
  1184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1192 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1193 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1194 ;;Total ram usage:        2 bytes
  1195 ;; Hardware stack levels used: 1
  1196 ;; Hardware stack levels required when called: 3
  1197 ;; This function calls:
  1198 ;;		_LEDarray_disp_bin
  1199 ;; This function is called by:
  1200 ;;		_main
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           	psect	text8
  1205   000E80                     __ptext8:
  1206                           	callstack 0
  1207   000E80                     _increment:
  1208                           	callstack 27
  1209   000E80                     
  1210                           ;Functions.c: 21:     if (year%4 == 0)
  1211   000E80  0E03               	movlw	3
  1212   000E82  1446               	andwf	_year^0,w,c
  1213   000E84  6E20               	movwf	??_increment^0,c
  1214   000E86  0E00               	movlw	0
  1215   000E88  1447               	andwf	(_year+1)^0,w,c
  1216   000E8A  6E21               	movwf	(??_increment+1)^0,c
  1217   000E8C  5020               	movf	??_increment^0,w,c
  1218   000E8E  1021               	iorwf	(??_increment+1)^0,w,c
  1219   000E90  A4D8               	btfss	status,2,c
  1220   000E92  EF4D  F007         	goto	u681
  1221   000E96  EF4F  F007         	goto	u680
  1222   000E9A                     u681:
  1223   000E9A  EF55  F007         	goto	l1693
  1224   000E9E                     u680:
  1225   000E9E                     
  1226                           ;Functions.c: 22:     {;Functions.c: 23:         month[1] = 29;
  1227   000E9E  0E00               	movlw	0
  1228   000EA0  6E25               	movwf	(_month+3)^0,c
  1229   000EA2  0E1D               	movlw	29
  1230   000EA4  6E24               	movwf	(_month+2)^0,c
  1231                           
  1232                           ;Functions.c: 24:     }
  1233   000EA6  EF59  F007         	goto	l1695
  1234   000EAA                     l1693:
  1235                           
  1236                           ;Functions.c: 26:     {;Functions.c: 27:         month[1] = 28;
  1237   000EAA  0E00               	movlw	0
  1238   000EAC  6E25               	movwf	(_month+3)^0,c
  1239   000EAE  0E1C               	movlw	28
  1240   000EB0  6E24               	movwf	(_month+2)^0,c
  1241   000EB2                     l1695:
  1242                           
  1243                           ;Functions.c: 29:     if (seconds == 1)
  1244   000EB2  0444               	decf	_seconds^0,w,c
  1245   000EB4  1045               	iorwf	(_seconds+1)^0,w,c
  1246   000EB6  A4D8               	btfss	status,2,c
  1247   000EB8  EF60  F007         	goto	u691
  1248   000EBC  EF62  F007         	goto	u690
  1249   000EC0                     u691:
  1250   000EC0  EF6E  F007         	goto	l1703
  1251   000EC4                     u690:
  1252   000EC4                     
  1253                           ;Functions.c: 30:     {;Functions.c: 31:         hour++;
  1254   000EC4  4A42               	infsnz	_hour^0,f,c
  1255   000EC6  2A43               	incf	(_hour+1)^0,f,c
  1256   000EC8                     
  1257                           ;Functions.c: 32:         LEDarray_disp_bin(hour);
  1258   000EC8  C042  F006         	movff	_hour,LEDarray_disp_bin@number
  1259   000ECC  C043  F007         	movff	_hour+1,LEDarray_disp_bin@number+1
  1260   000ED0  ECBC  F007         	call	_LEDarray_disp_bin	;wreg free
  1261   000ED4                     
  1262                           ;Functions.c: 33:         seconds = 0;
  1263   000ED4  0E00               	movlw	0
  1264   000ED6  6E45               	movwf	(_seconds+1)^0,c
  1265   000ED8  0E00               	movlw	0
  1266   000EDA  6E44               	movwf	_seconds^0,c
  1267   000EDC                     l1703:
  1268                           
  1269                           ;Functions.c: 35:     if (hour == 24)
  1270   000EDC  0E18               	movlw	24
  1271   000EDE  1842               	xorwf	_hour^0,w,c
  1272   000EE0  1043               	iorwf	(_hour+1)^0,w,c
  1273   000EE2  A4D8               	btfss	status,2,c
  1274   000EE4  EF76  F007         	goto	u701
  1275   000EE8  EF78  F007         	goto	u700
  1276   000EEC                     u701:
  1277   000EEC  EF82  F007         	goto	l1709
  1278   000EF0                     u700:
  1279   000EF0                     
  1280                           ;Functions.c: 36:     {;Functions.c: 37:         day_of_year++;
  1281   000EF0  4A4C               	infsnz	_day_of_year^0,f,c
  1282   000EF2  2A4D               	incf	(_day_of_year+1)^0,f,c
  1283                           
  1284                           ;Functions.c: 38:         day_of_week++;
  1285   000EF4  4A4A               	infsnz	_day_of_week^0,f,c
  1286   000EF6  2A4B               	incf	(_day_of_week+1)^0,f,c
  1287                           
  1288                           ;Functions.c: 39:         day_of_month++;
  1289   000EF8  4A48               	infsnz	_day_of_month^0,f,c
  1290   000EFA  2A49               	incf	(_day_of_month+1)^0,f,c
  1291   000EFC                     
  1292                           ;Functions.c: 40:         hour = 0;
  1293   000EFC  0E00               	movlw	0
  1294   000EFE  6E43               	movwf	(_hour+1)^0,c
  1295   000F00  0E00               	movlw	0
  1296   000F02  6E42               	movwf	_hour^0,c
  1297   000F04                     l1709:
  1298                           
  1299                           ;Functions.c: 42:     if (day_of_week == 7)
  1300   000F04  0E07               	movlw	7
  1301   000F06  184A               	xorwf	_day_of_week^0,w,c
  1302   000F08  104B               	iorwf	(_day_of_week+1)^0,w,c
  1303   000F0A  A4D8               	btfss	status,2,c
  1304   000F0C  EF8A  F007         	goto	u711
  1305   000F10  EF8C  F007         	goto	u710
  1306   000F14                     u711:
  1307   000F14  EF90  F007         	goto	l1713
  1308   000F18                     u710:
  1309   000F18                     
  1310                           ;Functions.c: 43:     {;Functions.c: 44:         day_of_week = 0;
  1311   000F18  0E00               	movlw	0
  1312   000F1A  6E4B               	movwf	(_day_of_week+1)^0,c
  1313   000F1C  0E00               	movlw	0
  1314   000F1E  6E4A               	movwf	_day_of_week^0,c
  1315   000F20                     l1713:
  1316                           
  1317                           ;Functions.c: 46:     if (day_of_month == month[month_num-1])
  1318   000F20  90D8               	bcf	status,0,c
  1319   000F22  344E               	rlcf	_month_num^0,w,c
  1320   000F24  6ED9               	movwf	fsr2l,c
  1321   000F26  344F               	rlcf	(_month_num+1)^0,w,c
  1322   000F28  6EDA               	movwf	fsr2h,c
  1323   000F2A  0E20               	movlw	low (_month+65534)
  1324   000F2C  26D9               	addwf	fsr2l,f,c
  1325   000F2E  0E00               	movlw	high (_month+65534)
  1326   000F30  22DA               	addwfc	fsr2h,f,c
  1327   000F32  5048               	movf	_day_of_month^0,w,c
  1328   000F34  18DE               	xorwf	postinc2,w,c
  1329   000F36  E107               	bnz	u721
  1330   000F38  5049               	movf	(_day_of_month+1)^0,w,c
  1331   000F3A  18DE               	xorwf	postinc2,w,c
  1332   000F3C  A4D8               	btfss	status,2,c
  1333   000F3E  EFA3  F007         	goto	u721
  1334   000F42  EFA5  F007         	goto	u720
  1335   000F46                     u721:
  1336   000F46  EFAB  F007         	goto	l1719
  1337   000F4A                     u720:
  1338   000F4A                     
  1339                           ;Functions.c: 47:     {;Functions.c: 48:         day_of_month = 0;
  1340   000F4A  0E00               	movlw	0
  1341   000F4C  6E49               	movwf	(_day_of_month+1)^0,c
  1342   000F4E  0E00               	movlw	0
  1343   000F50  6E48               	movwf	_day_of_month^0,c
  1344   000F52                     
  1345                           ;Functions.c: 49:         month_num++;
  1346   000F52  4A4E               	infsnz	_month_num^0,f,c
  1347   000F54  2A4F               	incf	(_month_num+1)^0,f,c
  1348   000F56                     l1719:
  1349                           
  1350                           ;Functions.c: 51:     if (month_num == 13)
  1351   000F56  0E0D               	movlw	13
  1352   000F58  184E               	xorwf	_month_num^0,w,c
  1353   000F5A  104F               	iorwf	(_month_num+1)^0,w,c
  1354   000F5C  A4D8               	btfss	status,2,c
  1355   000F5E  EFB3  F007         	goto	u731
  1356   000F62  EFB5  F007         	goto	u730
  1357   000F66                     u731:
  1358   000F66  EFBB  F007         	goto	l364
  1359   000F6A                     u730:
  1360   000F6A                     
  1361                           ;Functions.c: 52:     {;Functions.c: 53:         month_num=0;
  1362   000F6A  0E00               	movlw	0
  1363   000F6C  6E4F               	movwf	(_month_num+1)^0,c
  1364   000F6E  0E00               	movlw	0
  1365   000F70  6E4E               	movwf	_month_num^0,c
  1366   000F72                     
  1367                           ;Functions.c: 54:         year++;
  1368   000F72  4A46               	infsnz	_year^0,f,c
  1369   000F74  2A47               	incf	(_year+1)^0,f,c
  1370   000F76                     l364:
  1371   000F76  0012               	return		;funcret
  1372   000F78                     __end_of_increment:
  1373                           	callstack 0
  1374                           
  1375 ;; *************** function _LEDarray_disp_bin *****************
  1376 ;; Defined at:
  1377 ;;		line 38 in file "LEDarray.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;  number          2    5[COMRAM] unsigned int 
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;  ctr             2   29[COMRAM] int 
  1382 ;;  led_arr        18    9[COMRAM] int [9]
  1383 ;;  mask            2   27[COMRAM] int 
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1393 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1394 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1395 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1396 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1397 ;;Total ram usage:       26 bytes
  1398 ;; Hardware stack levels used: 1
  1399 ;; Hardware stack levels required when called: 2
  1400 ;; This function calls:
  1401 ;;		Nothing
  1402 ;; This function is called by:
  1403 ;;		_increment
  1404 ;;		_ADC_lightMeter
  1405 ;;		_LEDarray_disp_dec
  1406 ;;		_LEDarray_disp_PPM
  1407 ;;		_incrementseconds
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411                           	psect	text9
  1412   000F78                     __ptext9:
  1413                           	callstack 0
  1414   000F78                     _LEDarray_disp_bin:
  1415                           	callstack 27
  1416   000F78                     
  1417                           ;LEDarray.c: 38: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 39: {;LEDarray.
      +                          c: 43:     int mask= 0b000000001;
  1418   000F78  0E00               	movlw	0
  1419   000F7A  6E1D               	movwf	(LEDarray_disp_bin@mask+1)^0,c
  1420   000F7C  0E01               	movlw	1
  1421   000F7E  6E1C               	movwf	LEDarray_disp_bin@mask^0,c
  1422                           
  1423                           ;LEDarray.c: 44:     int led_arr[9];;LEDarray.c: 45:     for(int ctr=0;ctr<9;ctr++){
  1424   000F80  0E00               	movlw	0
  1425   000F82  6E1F               	movwf	(LEDarray_disp_bin@ctr+1)^0,c
  1426   000F84  0E00               	movlw	0
  1427   000F86  6E1E               	movwf	LEDarray_disp_bin@ctr^0,c
  1428   000F88                     l1627:
  1429                           
  1430                           ;LEDarray.c: 46:         if (number & mask)
  1431   000F88  5006               	movf	LEDarray_disp_bin@number^0,w,c
  1432   000F8A  141C               	andwf	LEDarray_disp_bin@mask^0,w,c
  1433   000F8C  6E08               	movwf	??_LEDarray_disp_bin^0,c
  1434   000F8E  5007               	movf	(LEDarray_disp_bin@number+1)^0,w,c
  1435   000F90  141D               	andwf	(LEDarray_disp_bin@mask+1)^0,w,c
  1436   000F92  6E09               	movwf	(??_LEDarray_disp_bin+1)^0,c
  1437   000F94  5008               	movf	??_LEDarray_disp_bin^0,w,c
  1438   000F96  1009               	iorwf	(??_LEDarray_disp_bin+1)^0,w,c
  1439   000F98  B4D8               	btfsc	status,2,c
  1440   000F9A  EFD1  F007         	goto	u511
  1441   000F9E  EFD3  F007         	goto	u510
  1442   000FA2                     u511:
  1443   000FA2  EFE2  F007         	goto	l1631
  1444   000FA6                     u510:
  1445   000FA6                     
  1446                           ;LEDarray.c: 47:             led_arr[ctr]=1;
  1447   000FA6  90D8               	bcf	status,0,c
  1448   000FA8  341E               	rlcf	LEDarray_disp_bin@ctr^0,w,c
  1449   000FAA  6ED9               	movwf	fsr2l,c
  1450   000FAC  341F               	rlcf	(LEDarray_disp_bin@ctr+1)^0,w,c
  1451   000FAE  6EDA               	movwf	fsr2h,c
  1452   000FB0  0E0A               	movlw	low LEDarray_disp_bin@led_arr
  1453   000FB2  26D9               	addwf	fsr2l,f,c
  1454   000FB4  0E00               	movlw	high LEDarray_disp_bin@led_arr
  1455   000FB6  22DA               	addwfc	fsr2h,f,c
  1456   000FB8  0E01               	movlw	1
  1457   000FBA  6EDE               	movwf	postinc2,c
  1458   000FBC  0E00               	movlw	0
  1459   000FBE  6EDD               	movwf	postdec2,c
  1460   000FC0  EFEF  F007         	goto	l1633
  1461   000FC4                     l1631:
  1462                           
  1463                           ;LEDarray.c: 50:             led_arr[ctr]=0;
  1464   000FC4  90D8               	bcf	status,0,c
  1465   000FC6  341E               	rlcf	LEDarray_disp_bin@ctr^0,w,c
  1466   000FC8  6ED9               	movwf	fsr2l,c
  1467   000FCA  341F               	rlcf	(LEDarray_disp_bin@ctr+1)^0,w,c
  1468   000FCC  6EDA               	movwf	fsr2h,c
  1469   000FCE  0E0A               	movlw	low LEDarray_disp_bin@led_arr
  1470   000FD0  26D9               	addwf	fsr2l,f,c
  1471   000FD2  0E00               	movlw	high LEDarray_disp_bin@led_arr
  1472   000FD4  22DA               	addwfc	fsr2h,f,c
  1473   000FD6  0E00               	movlw	0
  1474   000FD8  6EDE               	movwf	postinc2,c
  1475   000FDA  0E00               	movlw	0
  1476   000FDC  6EDD               	movwf	postdec2,c
  1477   000FDE                     l1633:
  1478                           
  1479                           ;LEDarray.c: 52:         mask<<=1;
  1480   000FDE  90D8               	bcf	status,0,c
  1481   000FE0  361C               	rlcf	LEDarray_disp_bin@mask^0,f,c
  1482   000FE2  361D               	rlcf	(LEDarray_disp_bin@mask+1)^0,f,c
  1483   000FE4                     
  1484                           ;LEDarray.c: 53:     }
  1485   000FE4  4A1E               	infsnz	LEDarray_disp_bin@ctr^0,f,c
  1486   000FE6  2A1F               	incf	(LEDarray_disp_bin@ctr+1)^0,f,c
  1487   000FE8  BE1F               	btfsc	(LEDarray_disp_bin@ctr+1)^0,7,c
  1488   000FEA  EF00  F008         	goto	u521
  1489   000FEE  501F               	movf	(LEDarray_disp_bin@ctr+1)^0,w,c
  1490   000FF0  E109               	bnz	u520
  1491   000FF2  0E09               	movlw	9
  1492   000FF4  5C1E               	subwf	LEDarray_disp_bin@ctr^0,w,c
  1493   000FF6  A0D8               	btfss	status,0,c
  1494   000FF8  EF00  F008         	goto	u521
  1495   000FFC  EF02  F008         	goto	u520
  1496   001000                     u521:
  1497   001000  EFC4  F007         	goto	l1627
  1498   001004                     u520:
  1499   001004                     
  1500                           ;LEDarray.c: 55:     LATGbits.LATG0 = led_arr[0];
  1501   001004  B00A               	btfsc	LEDarray_disp_bin@led_arr^0,0,c
  1502   001006  D002               	bra	u535
  1503   001008  907F               	bcf	127,0,c	;volatile
  1504   00100A  D001               	bra	u536
  1505   00100C                     u535:
  1506   00100C  807F               	bsf	127,0,c	;volatile
  1507   00100E                     u536:
  1508                           
  1509                           ;LEDarray.c: 56:     LATGbits.LATG1 = led_arr[1];
  1510   00100E  B00C               	btfsc	(LEDarray_disp_bin@led_arr+2)^0,0,c
  1511   001010  D002               	bra	u545
  1512   001012  927F               	bcf	127,1,c	;volatile
  1513   001014  D001               	bra	u546
  1514   001016                     u545:
  1515   001016  827F               	bsf	127,1,c	;volatile
  1516   001018                     u546:
  1517                           
  1518                           ;LEDarray.c: 57:     LATAbits.LATA2 = led_arr[2];
  1519   001018  B00E               	btfsc	(LEDarray_disp_bin@led_arr+4)^0,0,c
  1520   00101A  D002               	bra	u555
  1521   00101C  9479               	bcf	121,2,c	;volatile
  1522   00101E  D001               	bra	u556
  1523   001020                     u555:
  1524   001020  8479               	bsf	121,2,c	;volatile
  1525   001022                     u556:
  1526                           
  1527                           ;LEDarray.c: 58:     LATFbits.LATF6 = led_arr[3];
  1528   001022  B010               	btfsc	(LEDarray_disp_bin@led_arr+6)^0,0,c
  1529   001024  D002               	bra	u565
  1530   001026  9C7E               	bcf	126,6,c	;volatile
  1531   001028  D001               	bra	u566
  1532   00102A                     u565:
  1533   00102A  8C7E               	bsf	126,6,c	;volatile
  1534   00102C                     u566:
  1535                           
  1536                           ;LEDarray.c: 59:     LATAbits.LATA4 = led_arr[4];
  1537   00102C  B012               	btfsc	(LEDarray_disp_bin@led_arr+8)^0,0,c
  1538   00102E  D002               	bra	u575
  1539   001030  9879               	bcf	121,4,c	;volatile
  1540   001032  D001               	bra	u576
  1541   001034                     u575:
  1542   001034  8879               	bsf	121,4,c	;volatile
  1543   001036                     u576:
  1544                           
  1545                           ;LEDarray.c: 60:     LATAbits.LATA5 = led_arr[5];
  1546   001036  B014               	btfsc	(LEDarray_disp_bin@led_arr+10)^0,0,c
  1547   001038  D002               	bra	u585
  1548   00103A  9A79               	bcf	121,5,c	;volatile
  1549   00103C  D001               	bra	u586
  1550   00103E                     u585:
  1551   00103E  8A79               	bsf	121,5,c	;volatile
  1552   001040                     u586:
  1553                           
  1554                           ;LEDarray.c: 61:     LATFbits.LATF0 = led_arr[6];
  1555   001040  B016               	btfsc	(LEDarray_disp_bin@led_arr+12)^0,0,c
  1556   001042  D002               	bra	u595
  1557   001044  907E               	bcf	126,0,c	;volatile
  1558   001046  D001               	bra	u596
  1559   001048                     u595:
  1560   001048  807E               	bsf	126,0,c	;volatile
  1561   00104A                     u596:
  1562                           
  1563                           ;LEDarray.c: 62:     LATBbits.LATB0 = led_arr[7];
  1564   00104A  B018               	btfsc	(LEDarray_disp_bin@led_arr+14)^0,0,c
  1565   00104C  D002               	bra	u605
  1566   00104E  907A               	bcf	122,0,c	;volatile
  1567   001050  D001               	bra	u606
  1568   001052                     u605:
  1569   001052  807A               	bsf	122,0,c	;volatile
  1570   001054                     u606:
  1571                           
  1572                           ;LEDarray.c: 63:     LATBbits.LATB1 = led_arr[8];
  1573   001054  B01A               	btfsc	(LEDarray_disp_bin@led_arr+16)^0,0,c
  1574   001056  D002               	bra	u615
  1575   001058  927A               	bcf	122,1,c	;volatile
  1576   00105A  D001               	bra	u616
  1577   00105C                     u615:
  1578   00105C  827A               	bsf	122,1,c	;volatile
  1579   00105E                     u616:
  1580   00105E  0012               	return		;funcret
  1581   001060                     __end_of_LEDarray_disp_bin:
  1582                           	callstack 0
  1583                           
  1584 ;; *************** function _daylightsavings *****************
  1585 ;; Defined at:
  1586 ;;		line 118 in file "Functions.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;		None
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;		None
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, status,2, status,0
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1604 ;;Total ram usage:        0 bytes
  1605 ;; Hardware stack levels used: 1
  1606 ;; Hardware stack levels required when called: 2
  1607 ;; This function calls:
  1608 ;;		Nothing
  1609 ;; This function is called by:
  1610 ;;		_main
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           	psect	text10
  1615   0012CC                     __ptext10:
  1616                           	callstack 0
  1617   0012CC                     _daylightsavings:
  1618                           	callstack 28
  1619   0012CC                     
  1620                           ;Functions.c: 120:     if (month_num ==3 && day_of_week==7 && 25<=day_of_month<=31)
  1621   0012CC  0E03               	movlw	3
  1622   0012CE  184E               	xorwf	_month_num^0,w,c
  1623   0012D0  104F               	iorwf	(_month_num+1)^0,w,c
  1624   0012D2  A4D8               	btfss	status,2,c
  1625   0012D4  EF6E  F009         	goto	u341
  1626   0012D8  EF70  F009         	goto	u340
  1627   0012DC                     u341:
  1628   0012DC  EF7C  F009         	goto	l1513
  1629   0012E0                     u340:
  1630   0012E0  0E07               	movlw	7
  1631   0012E2  184A               	xorwf	_day_of_week^0,w,c
  1632   0012E4  104B               	iorwf	(_day_of_week+1)^0,w,c
  1633   0012E6  A4D8               	btfss	status,2,c
  1634   0012E8  EF78  F009         	goto	u351
  1635   0012EC  EF7A  F009         	goto	u350
  1636   0012F0                     u351:
  1637   0012F0  EF7C  F009         	goto	l1513
  1638   0012F4                     u350:
  1639   0012F4                     
  1640                           ;Functions.c: 121:     {;Functions.c: 122:         hour++;
  1641   0012F4  4A42               	infsnz	_hour^0,f,c
  1642   0012F6  2A43               	incf	(_hour+1)^0,f,c
  1643   0012F8                     l1513:
  1644                           
  1645                           ;Functions.c: 124:     if (month_num ==10 && day_of_week==7 && 25<=day_of_month<=31)
  1646   0012F8  0E0A               	movlw	10
  1647   0012FA  184E               	xorwf	_month_num^0,w,c
  1648   0012FC  104F               	iorwf	(_month_num+1)^0,w,c
  1649   0012FE  A4D8               	btfss	status,2,c
  1650   001300  EF84  F009         	goto	u361
  1651   001304  EF86  F009         	goto	u360
  1652   001308                     u361:
  1653   001308  EF93  F009         	goto	l390
  1654   00130C                     u360:
  1655   00130C  0E07               	movlw	7
  1656   00130E  184A               	xorwf	_day_of_week^0,w,c
  1657   001310  104B               	iorwf	(_day_of_week+1)^0,w,c
  1658   001312  A4D8               	btfss	status,2,c
  1659   001314  EF8E  F009         	goto	u371
  1660   001318  EF90  F009         	goto	u370
  1661   00131C                     u371:
  1662   00131C  EF93  F009         	goto	l390
  1663   001320                     u370:
  1664   001320                     
  1665                           ;Functions.c: 125:     {;Functions.c: 126:         hour--;
  1666   001320  0642               	decf	_hour^0,f,c
  1667   001322  A0D8               	btfss	status,0,c
  1668   001324  0643               	decf	(_hour+1)^0,f,c
  1669   001326                     l390:
  1670   001326  0012               	return		;funcret
  1671   001328                     __end_of_daylightsavings:
  1672                           	callstack 0
  1673                           
  1674 ;; *************** function _day1_init *****************
  1675 ;; Defined at:
  1676 ;;		line 67 in file "Functions.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;		None
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;		None
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  1    wreg      void 
  1683 ;; Registers used:
  1684 ;;		wreg, status,2
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1694 ;;Total ram usage:        0 bytes
  1695 ;; Hardware stack levels used: 1
  1696 ;; Hardware stack levels required when called: 2
  1697 ;; This function calls:
  1698 ;;		Nothing
  1699 ;; This function is called by:
  1700 ;;		_main
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           	psect	text11
  1705   001366                     __ptext11:
  1706                           	callstack 0
  1707   001366                     _day1_init:
  1708                           	callstack 28
  1709   001366                     
  1710                           ;Functions.c: 69:     seconds = 0;
  1711   001366  0E00               	movlw	0
  1712   001368  6E45               	movwf	(_seconds+1)^0,c
  1713   00136A  0E00               	movlw	0
  1714   00136C  6E44               	movwf	_seconds^0,c
  1715                           
  1716                           ;Functions.c: 70:     hour = 0;
  1717   00136E  0E00               	movlw	0
  1718   001370  6E43               	movwf	(_hour+1)^0,c
  1719   001372  0E00               	movlw	0
  1720   001374  6E42               	movwf	_hour^0,c
  1721                           
  1722                           ;Functions.c: 71:     day_of_year = 1;
  1723   001376  0E00               	movlw	0
  1724   001378  6E4D               	movwf	(_day_of_year+1)^0,c
  1725   00137A  0E01               	movlw	1
  1726   00137C  6E4C               	movwf	_day_of_year^0,c
  1727                           
  1728                           ;Functions.c: 72:     day_of_month = 1;
  1729   00137E  0E00               	movlw	0
  1730   001380  6E49               	movwf	(_day_of_month+1)^0,c
  1731   001382  0E01               	movlw	1
  1732   001384  6E48               	movwf	_day_of_month^0,c
  1733                           
  1734                           ;Functions.c: 73:     day_of_week = 6;
  1735   001386  0E00               	movlw	0
  1736   001388  6E4B               	movwf	(_day_of_week+1)^0,c
  1737   00138A  0E06               	movlw	6
  1738   00138C  6E4A               	movwf	_day_of_week^0,c
  1739                           
  1740                           ;Functions.c: 74:     year = 2022;
  1741   00138E  0E07               	movlw	7
  1742   001390  6E47               	movwf	(_year+1)^0,c
  1743   001392  0EE6               	movlw	230
  1744   001394  6E46               	movwf	_year^0,c
  1745                           
  1746                           ;Functions.c: 75:     month_num = 1;
  1747   001396  0E00               	movlw	0
  1748   001398  6E4F               	movwf	(_month_num+1)^0,c
  1749   00139A  0E01               	movlw	1
  1750   00139C  6E4E               	movwf	_month_num^0,c
  1751   00139E                     
  1752                           ;Functions.c: 76:     LATHbits.LATH3 = 1;
  1753   00139E  8680               	bsf	128,3,c	;volatile
  1754   0013A0  0012               	return		;funcret
  1755   0013A2                     __end_of_day1_init:
  1756                           	callstack 0
  1757                           
  1758 ;; *************** function _Timer0_init *****************
  1759 ;; Defined at:
  1760 ;;		line 7 in file "timers.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;		None
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;		None
  1765 ;; Return value:  Size  Location     Type
  1766 ;;                  1    wreg      void 
  1767 ;; Registers used:
  1768 ;;		wreg, status,2
  1769 ;; Tracked objects:
  1770 ;;		On entry : 0/0
  1771 ;;		On exit  : 0/0
  1772 ;;		Unchanged: 0/0
  1773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1778 ;;Total ram usage:        0 bytes
  1779 ;; Hardware stack levels used: 1
  1780 ;; Hardware stack levels required when called: 2
  1781 ;; This function calls:
  1782 ;;		Nothing
  1783 ;; This function is called by:
  1784 ;;		_main
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           	psect	text12
  1789   0014AC                     __ptext12:
  1790                           	callstack 0
  1791   0014AC                     _Timer0_init:
  1792                           	callstack 28
  1793   0014AC                     
  1794                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  1795   0014AC  50D6               	movf	214,w,c	;volatile
  1796   0014AE  0B1F               	andlw	-225
  1797   0014B0  0940               	iorlw	64
  1798   0014B2  6ED6               	movwf	214,c	;volatile
  1799   0014B4                     
  1800                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  1801   0014B4  88D6               	bsf	214,4,c	;volatile
  1802                           
  1803                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  1804   0014B6  50D6               	movf	214,w,c	;volatile
  1805   0014B8  0BF0               	andlw	-16
  1806   0014BA  0908               	iorlw	8
  1807   0014BC  6ED6               	movwf	214,c	;volatile
  1808   0014BE                     
  1809                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  1810   0014BE  88D5               	bsf	213,4,c	;volatile
  1811                           
  1812                           ;timers.c: 15:     TMR0H=0b00001011;
  1813   0014C0  0E0B               	movlw	11
  1814   0014C2  6ED4               	movwf	212,c	;volatile
  1815                           
  1816                           ;timers.c: 16:     TMR0L=0b11011011;
  1817   0014C4  0EDB               	movlw	219
  1818   0014C6  6ED3               	movwf	211,c	;volatile
  1819   0014C8                     
  1820                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  1821   0014C8  8ED5               	bsf	213,7,c	;volatile
  1822   0014CA  0012               	return		;funcret
  1823   0014CC                     __end_of_Timer0_init:
  1824                           	callstack 0
  1825                           
  1826 ;; *************** function _LEDarray_init *****************
  1827 ;; Defined at:
  1828 ;;		line 10 in file "LEDarray.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;		None
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;		None
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  1    wreg      void 
  1835 ;; Registers used:
  1836 ;;		None
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1846 ;;Total ram usage:        0 bytes
  1847 ;; Hardware stack levels used: 1
  1848 ;; Hardware stack levels required when called: 2
  1849 ;; This function calls:
  1850 ;;		Nothing
  1851 ;; This function is called by:
  1852 ;;		_main
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           	psect	text13
  1857   00143E                     __ptext13:
  1858                           	callstack 0
  1859   00143E                     _LEDarray_init:
  1860                           	callstack 28
  1861   00143E                     
  1862                           ;LEDarray.c: 13:     TRISGbits.TRISG0 = 0;
  1863   00143E  9087               	bcf	135,0,c	;volatile
  1864                           
  1865                           ;LEDarray.c: 14:     TRISGbits.TRISG1 = 0;
  1866   001440  9287               	bcf	135,1,c	;volatile
  1867                           
  1868                           ;LEDarray.c: 15:     TRISAbits.TRISA2 = 0;
  1869   001442  9481               	bcf	129,2,c	;volatile
  1870                           
  1871                           ;LEDarray.c: 16:     TRISFbits.TRISF6 = 0;
  1872   001444  9C86               	bcf	134,6,c	;volatile
  1873                           
  1874                           ;LEDarray.c: 17:     TRISAbits.TRISA4 = 0;
  1875   001446  9881               	bcf	129,4,c	;volatile
  1876                           
  1877                           ;LEDarray.c: 18:     TRISAbits.TRISA5 = 0;
  1878   001448  9A81               	bcf	129,5,c	;volatile
  1879                           
  1880                           ;LEDarray.c: 19:     TRISFbits.TRISF0 = 0;
  1881   00144A  9086               	bcf	134,0,c	;volatile
  1882                           
  1883                           ;LEDarray.c: 20:     TRISBbits.TRISB0 = 0;
  1884   00144C  9082               	bcf	130,0,c	;volatile
  1885                           
  1886                           ;LEDarray.c: 21:     TRISBbits.TRISB1 = 0;
  1887   00144E  9282               	bcf	130,1,c	;volatile
  1888                           
  1889                           ;LEDarray.c: 24:     LATGbits.LATG0 = 0;
  1890   001450  907F               	bcf	127,0,c	;volatile
  1891                           
  1892                           ;LEDarray.c: 25:     LATGbits.LATG1 = 0;
  1893   001452  927F               	bcf	127,1,c	;volatile
  1894                           
  1895                           ;LEDarray.c: 26:     LATAbits.LATA2 = 0;
  1896   001454  9479               	bcf	121,2,c	;volatile
  1897                           
  1898                           ;LEDarray.c: 27:     LATFbits.LATF6 = 0;
  1899   001456  9C7E               	bcf	126,6,c	;volatile
  1900                           
  1901                           ;LEDarray.c: 28:     LATAbits.LATA4 = 0;
  1902   001458  9879               	bcf	121,4,c	;volatile
  1903                           
  1904                           ;LEDarray.c: 29:     LATAbits.LATA5 = 0;
  1905   00145A  9A79               	bcf	121,5,c	;volatile
  1906                           
  1907                           ;LEDarray.c: 30:     LATFbits.LATF0 = 0;
  1908   00145C  907E               	bcf	126,0,c	;volatile
  1909                           
  1910                           ;LEDarray.c: 31:     LATBbits.LATB0 = 0;
  1911   00145E  907A               	bcf	122,0,c	;volatile
  1912                           
  1913                           ;LEDarray.c: 32:     LATBbits.LATB1 = 0;
  1914   001460  927A               	bcf	122,1,c	;volatile
  1915   001462  0012               	return		;funcret
  1916   001464                     __end_of_LEDarray_init:
  1917                           	callstack 0
  1918                           
  1919 ;; *************** function _Interrupts_init *****************
  1920 ;; Defined at:
  1921 ;;		line 10 in file "interrupts.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;		None
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;		None
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      void 
  1928 ;; Registers used:
  1929 ;;		None
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1939 ;;Total ram usage:        0 bytes
  1940 ;; Hardware stack levels used: 1
  1941 ;; Hardware stack levels required when called: 2
  1942 ;; This function calls:
  1943 ;;		Nothing
  1944 ;; This function is called by:
  1945 ;;		_main
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           	psect	text14
  1950   001512                     __ptext14:
  1951                           	callstack 0
  1952   001512                     _Interrupts_init:
  1953                           	callstack 28
  1954   001512                     
  1955                           ;interrupts.c: 14:     PIE2bits.C1IE=1;
  1956   001512  010E               	movlb	14	; () banked
  1957   001514  812B               	bsf	43,0,b	;volatile
  1958                           
  1959                           ;interrupts.c: 15:     PIE0bits.TMR0IE=1;
  1960   001516  8B29               	bsf	41,5,b	;volatile
  1961                           
  1962                           ;interrupts.c: 16:     IPR2bits.C1IP = 1;
  1963   001518  8121               	bsf	33,0,b	;volatile
  1964                           
  1965                           ;interrupts.c: 17:     IPR0bits.TMR0IP = 0;
  1966   00151A  9B1F               	bcf	31,5,b	;volatile
  1967                           
  1968                           ;interrupts.c: 18:     INTCONbits.IPEN=1;
  1969   00151C  8AF2               	bsf	242,5,c	;volatile
  1970                           
  1971                           ;interrupts.c: 19:     INTCONbits.PEIE=1;
  1972   00151E  8CF2               	bsf	242,6,c	;volatile
  1973                           
  1974                           ;interrupts.c: 20:     INTCONbits.GIE=1;
  1975   001520  8EF2               	bsf	242,7,c	;volatile
  1976   001522                     
  1977                           ; BSR set to: 14
  1978   001522  0012               	return		;funcret
  1979   001524                     __end_of_Interrupts_init:
  1980                           	callstack 0
  1981                           
  1982 ;; *************** function _Comp1_init_rising_edge *****************
  1983 ;; Defined at:
  1984 ;;		line 24 in file "comparator.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;		None
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;		None
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      void 
  1991 ;; Registers used:
  1992 ;;		wreg, status,2, cstack
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2002 ;;Total ram usage:        0 bytes
  2003 ;; Hardware stack levels used: 1
  2004 ;; Hardware stack levels required when called: 3
  2005 ;; This function calls:
  2006 ;;		_DAC_init
  2007 ;; This function is called by:
  2008 ;;		_main
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           	psect	text15
  2013   001464                     __ptext15:
  2014                           	callstack 0
  2015   001464                     _Comp1_init_rising_edge:
  2016                           	callstack 27
  2017   001464                     
  2018                           ;comparator.c: 26:     TRISFbits.TRISF7=1;
  2019   001464  8E86               	bsf	134,7,c	;volatile
  2020   001466                     
  2021                           ;comparator.c: 27:     CM1NCHbits.NCH=0b011;
  2022   001466  010E               	movlb	14	; () banked
  2023   001468  51D2               	movf	210,w,b	;volatile
  2024   00146A  0BF8               	andlw	-8
  2025   00146C  0903               	iorlw	3
  2026   00146E  6FD2               	movwf	210,b	;volatile
  2027                           
  2028                           ;comparator.c: 28:     CM1PCHbits.PCH=0b101;
  2029   001470  51D3               	movf	211,w,b	;volatile
  2030   001472  0BF8               	andlw	-8
  2031   001474  0905               	iorlw	5
  2032   001476  6FD3               	movwf	211,b	;volatile
  2033   001478                     
  2034                           ; BSR set to: 14
  2035                           ;comparator.c: 29:     CM1CON0bits.HYS=1;
  2036   001478  83D0               	bsf	208,1,b	;volatile
  2037   00147A                     
  2038                           ; BSR set to: 14
  2039                           ;comparator.c: 30:     CM1CON0bits.POL=1;
  2040   00147A  89D0               	bsf	208,4,b	;volatile
  2041   00147C                     
  2042                           ; BSR set to: 14
  2043                           ;comparator.c: 31:     CM1CON1bits.INTP=1;
  2044   00147C  83D1               	bsf	209,1,b	;volatile
  2045   00147E                     
  2046                           ; BSR set to: 14
  2047                           ;comparator.c: 32:     DAC_init();
  2048   00147E  EC7F  F00A         	call	_DAC_init	;wreg free
  2049   001482                     
  2050                           ;comparator.c: 33:     CM1CON0bits.EN=1;
  2051   001482  010E               	movlb	14	; () banked
  2052   001484  8FD0               	bsf	208,7,b	;volatile
  2053   001486                     
  2054                           ; BSR set to: 14
  2055   001486  0012               	return		;funcret
  2056   001488                     __end_of_Comp1_init_rising_edge:
  2057                           	callstack 0
  2058                           
  2059 ;; *************** function _Comp1_init_falling_edge *****************
  2060 ;; Defined at:
  2061 ;;		line 37 in file "comparator.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;		None
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;		None
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  1    wreg      void 
  2068 ;; Registers used:
  2069 ;;		wreg, status,2, cstack
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2079 ;;Total ram usage:        0 bytes
  2080 ;; Hardware stack levels used: 1
  2081 ;; Hardware stack levels required when called: 3
  2082 ;; This function calls:
  2083 ;;		_DAC_init
  2084 ;; This function is called by:
  2085 ;;		_main
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           	psect	text16
  2090   001488                     __ptext16:
  2091                           	callstack 0
  2092   001488                     _Comp1_init_falling_edge:
  2093                           	callstack 27
  2094   001488                     
  2095                           ;comparator.c: 39:     TRISFbits.TRISF7=1;
  2096   001488  8E86               	bsf	134,7,c	;volatile
  2097   00148A                     
  2098                           ;comparator.c: 40:     CM1NCHbits.NCH=0b011;
  2099   00148A  010E               	movlb	14	; () banked
  2100   00148C  51D2               	movf	210,w,b	;volatile
  2101   00148E  0BF8               	andlw	-8
  2102   001490  0903               	iorlw	3
  2103   001492  6FD2               	movwf	210,b	;volatile
  2104                           
  2105                           ;comparator.c: 41:     CM1PCHbits.PCH=0b101;
  2106   001494  51D3               	movf	211,w,b	;volatile
  2107   001496  0BF8               	andlw	-8
  2108   001498  0905               	iorlw	5
  2109   00149A  6FD3               	movwf	211,b	;volatile
  2110   00149C                     
  2111                           ; BSR set to: 14
  2112                           ;comparator.c: 42:     CM1CON0bits.HYS=1;
  2113   00149C  83D0               	bsf	208,1,b	;volatile
  2114   00149E                     
  2115                           ; BSR set to: 14
  2116                           ;comparator.c: 43:     CM1CON0bits.POL=1;
  2117   00149E  89D0               	bsf	208,4,b	;volatile
  2118   0014A0                     
  2119                           ; BSR set to: 14
  2120                           ;comparator.c: 44:     CM1CON1bits.INTN=1;
  2121   0014A0  81D1               	bsf	209,0,b	;volatile
  2122   0014A2                     
  2123                           ; BSR set to: 14
  2124                           ;comparator.c: 45:     DAC_init();
  2125   0014A2  EC7F  F00A         	call	_DAC_init	;wreg free
  2126   0014A6                     
  2127                           ;comparator.c: 46:     CM1CON0bits.EN=1;
  2128   0014A6  010E               	movlb	14	; () banked
  2129   0014A8  8FD0               	bsf	208,7,b	;volatile
  2130   0014AA                     
  2131                           ; BSR set to: 14
  2132   0014AA  0012               	return		;funcret
  2133   0014AC                     __end_of_Comp1_init_falling_edge:
  2134                           	callstack 0
  2135                           
  2136 ;; *************** function _DAC_init *****************
  2137 ;; Defined at:
  2138 ;;		line 7 in file "comparator.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;		None
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;		None
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  1    wreg      void 
  2145 ;; Registers used:
  2146 ;;		wreg, status,2
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2156 ;;Total ram usage:        0 bytes
  2157 ;; Hardware stack levels used: 1
  2158 ;; Hardware stack levels required when called: 2
  2159 ;; This function calls:
  2160 ;;		Nothing
  2161 ;; This function is called by:
  2162 ;;		_Comp1_init_rising_edge
  2163 ;;		_Comp1_init_falling_edge
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           	psect	text17
  2168   0014FE                     __ptext17:
  2169                           	callstack 0
  2170   0014FE                     _DAC_init:
  2171                           	callstack 27
  2172   0014FE                     
  2173                           ;comparator.c: 9:     DAC1CON0bits.PSS=0b00;
  2174   0014FE  0EF3               	movlw	-13
  2175   001500  010E               	movlb	14	; () banked
  2176   001502  17C6               	andwf	198,f,b	;volatile
  2177   001504                     
  2178                           ; BSR set to: 14
  2179                           ;comparator.c: 10:     DAC1CON0bits.NSS=0b0;
  2180   001504  91C6               	bcf	198,0,b	;volatile
  2181                           
  2182                           ;comparator.c: 14:     DAC1CON1bits.DAC1R=20;
  2183   001506  51C7               	movf	199,w,b	;volatile
  2184   001508  0BE0               	andlw	-32
  2185   00150A  0914               	iorlw	20
  2186   00150C  6FC7               	movwf	199,b	;volatile
  2187   00150E                     
  2188                           ; BSR set to: 14
  2189                           ;comparator.c: 15:     DAC1CON0bits.DAC1EN=1;
  2190   00150E  8FC6               	bsf	198,7,b	;volatile
  2191   001510                     
  2192                           ; BSR set to: 14
  2193   001510  0012               	return		;funcret
  2194   001512                     __end_of_DAC_init:
  2195                           	callstack 0
  2196                           
  2197 ;; *************** function _ADC_init *****************
  2198 ;; Defined at:
  2199 ;;		line 11 in file "ADC.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;		None
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		wreg, status,2
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2217 ;;Total ram usage:        0 bytes
  2218 ;; Hardware stack levels used: 1
  2219 ;; Hardware stack levels required when called: 2
  2220 ;; This function calls:
  2221 ;;		Nothing
  2222 ;; This function is called by:
  2223 ;;		_main
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           	psect	text18
  2228   0014CC                     __ptext18:
  2229                           	callstack 0
  2230   0014CC                     _ADC_init:
  2231                           	callstack 28
  2232   0014CC                     
  2233                           ;ADC.c: 13:     TRISAbits.TRISA3=1;
  2234   0014CC  8681               	bsf	129,3,c	;volatile
  2235                           
  2236                           ;ADC.c: 14:     ANSELAbits.ANSELA3=1;
  2237   0014CE  010E               	movlb	14	; () banked
  2238   0014D0  8792               	bsf	146,3,b	;volatile
  2239                           
  2240                           ;ADC.c: 17:     ADREFbits.ADNREF = 0;
  2241   0014D2  010F               	movlb	15	; () banked
  2242   0014D4  9958               	bcf	88,4,b	;volatile
  2243   0014D6                     
  2244                           ; BSR set to: 15
  2245                           ;ADC.c: 18:     ADREFbits.ADPREF = 0b00;
  2246   0014D6  0EFC               	movlw	-4
  2247   0014D8  1758               	andwf	88,f,b	;volatile
  2248                           
  2249                           ;ADC.c: 19:     ADPCH=0b11;
  2250   0014DA  0E03               	movlw	3
  2251   0014DC  6F5F               	movwf	95,b	;volatile
  2252   0014DE                     
  2253                           ; BSR set to: 15
  2254                           ;ADC.c: 20:     ADCON0bits.ADFM = 0;
  2255   0014DE  9460               	bcf	96,2,c	;volatile
  2256   0014E0                     
  2257                           ; BSR set to: 15
  2258                           ;ADC.c: 21:     ADCON0bits.ADCS = 1;
  2259   0014E0  8860               	bsf	96,4,c	;volatile
  2260   0014E2                     
  2261                           ; BSR set to: 15
  2262                           ;ADC.c: 22:     ADCON0bits.ADON = 1;
  2263   0014E2  8E60               	bsf	96,7,c	;volatile
  2264   0014E4                     
  2265                           ; BSR set to: 15
  2266   0014E4  0012               	return		;funcret
  2267   0014E6                     __end_of_ADC_init:
  2268                           	callstack 0
  2269                           
  2270 ;; *************** function _LowISR *****************
  2271 ;; Defined at:
  2272 ;;		line 37 in file "interrupts.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;		None
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;		None
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  1    wreg      void 
  2279 ;; Registers used:
  2280 ;;		wreg, status,2, status,0
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2288 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2289 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2290 ;;Total ram usage:        4 bytes
  2291 ;; Hardware stack levels used: 1
  2292 ;; Hardware stack levels required when called: 1
  2293 ;; This function calls:
  2294 ;;		Nothing
  2295 ;; This function is called by:
  2296 ;;		Interrupt level 1
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	intcodelo
  2301   000018                     __pintcodelo:
  2302                           	callstack 0
  2303   000018                     _LowISR:
  2304                           	callstack 27
  2305                           
  2306                           ; BSR set to: 15
  2307                           ;incstack = 0
  2308   000018  8050               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2309   00001A  CFD8 F003          	movff	status,??_LowISR+1
  2310   00001E  CFE8 F004          	movff	wreg,??_LowISR+2
  2311   000022  CFE0 F005          	movff	bsr,??_LowISR+3
  2312   000026                     
  2313                           ;interrupts.c: 39:     if(PIR0bits.TMR0IF){
  2314   000026  010E               	movlb	14	; () banked
  2315   000028  AB33               	btfss	51,5,b	;volatile
  2316   00002A  EF19  F000         	goto	i1u46_21
  2317   00002E  EF1B  F000         	goto	i1u46_20
  2318   000032                     i1u46_21:
  2319   000032  EF22  F000         	goto	i1l1585
  2320   000036                     i1u46_20:
  2321   000036                     
  2322                           ; BSR set to: 14
  2323                           ;interrupts.c: 40:         seconds++;
  2324   000036  4A44               	infsnz	_seconds^0,f,c
  2325   000038  2A45               	incf	(_seconds+1)^0,f,c
  2326   00003A                     
  2327                           ; BSR set to: 14
  2328                           ;interrupts.c: 41:         TMR0H=00001011;
  2329   00003A  0E09               	movlw	9
  2330   00003C  6ED4               	movwf	212,c	;volatile
  2331   00003E                     
  2332                           ; BSR set to: 14
  2333                           ;interrupts.c: 42:         TMR0L=11011011;
  2334   00003E  0EC3               	movlw	195
  2335   000040  6ED3               	movwf	211,c	;volatile
  2336   000042                     
  2337                           ; BSR set to: 14
  2338                           ;interrupts.c: 43:         PIR0bits.TMR0IF = 0;
  2339   000042  9B33               	bcf	51,5,b	;volatile
  2340   000044                     i1l1585:
  2341                           
  2342                           ; BSR set to: 14
  2343                           ;interrupts.c: 46:     if(seconds==5)
  2344   000044  0E05               	movlw	5
  2345   000046  1844               	xorwf	_seconds^0,w,c
  2346   000048  1045               	iorwf	(_seconds+1)^0,w,c
  2347   00004A  A4D8               	btfss	status,2,c
  2348   00004C  EF2A  F000         	goto	i1u47_21
  2349   000050  EF2C  F000         	goto	i1u47_20
  2350   000054                     i1u47_21:
  2351   000054  EF3D  F000         	goto	i1l205
  2352   000058                     i1u47_20:
  2353   000058                     
  2354                           ; BSR set to: 14
  2355                           ;interrupts.c: 47:     {;interrupts.c: 48:         LATDbits.LATD7 = !LATDbits.LATD7;
  2356   000058  AE7C               	btfss	124,7,c	;volatile
  2357   00005A  EF31  F000         	goto	i1u48_21
  2358   00005E  EF35  F000         	goto	i1u48_20
  2359   000062                     i1u48_21:
  2360   000062  6A02               	clrf	??_LowISR^0,c
  2361   000064  2A02               	incf	??_LowISR^0,f,c
  2362   000066  EF36  F000         	goto	i1u49_28
  2363   00006A                     i1u48_20:
  2364   00006A  6A02               	clrf	??_LowISR^0,c
  2365   00006C                     i1u49_28:
  2366   00006C  3202               	rrcf	??_LowISR^0,f,c
  2367   00006E  3202               	rrcf	??_LowISR^0,f,c
  2368   000070  507C               	movf	124,w,c	;volatile
  2369   000072  1802               	xorwf	??_LowISR^0,w,c
  2370   000074  0B7F               	andlw	-129
  2371   000076  1802               	xorwf	??_LowISR^0,w,c
  2372   000078  6E7C               	movwf	124,c	;volatile
  2373   00007A                     i1l205:
  2374                           
  2375                           ;interrupts.c: 50:     if (hour==5)
  2376   00007A  0E05               	movlw	5
  2377   00007C  1842               	xorwf	_hour^0,w,c
  2378   00007E  1043               	iorwf	(_hour+1)^0,w,c
  2379   000080  A4D8               	btfss	status,2,c
  2380   000082  EF45  F000         	goto	i1u50_21
  2381   000086  EF47  F000         	goto	i1u50_20
  2382   00008A                     i1u50_21:
  2383   00008A  EF48  F000         	goto	i1l207
  2384   00008E                     i1u50_20:
  2385   00008E                     
  2386                           ;interrupts.c: 51:     {;interrupts.c: 52:         LATHbits.LATH3 = 1;
  2387   00008E  8680               	bsf	128,3,c	;volatile
  2388   000090                     i1l207:
  2389   000090  C005  FFE0         	movff	??_LowISR+3,bsr
  2390   000094  C004  FFE8         	movff	??_LowISR+2,wreg
  2391   000098  C003  FFD8         	movff	??_LowISR+1,status
  2392   00009C  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2393   00009E  0010               	retfie	
  2394   0000A0                     __end_of_LowISR:
  2395                           	callstack 0
  2396                           
  2397 ;; *************** function _HighISR *****************
  2398 ;; Defined at:
  2399 ;;		line 28 in file "interrupts.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;		None
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;		None
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      void 
  2406 ;; Registers used:
  2407 ;;		wreg, status,2, status,0
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2415 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2416 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2417 ;;Total ram usage:        1 bytes
  2418 ;; Hardware stack levels used: 1
  2419 ;; This function calls:
  2420 ;;		Nothing
  2421 ;; This function is called by:
  2422 ;;		Interrupt level 2
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           	psect	intcode
  2427   000008                     __pintcode:
  2428                           	callstack 0
  2429   000008                     _HighISR:
  2430                           	callstack 27
  2431                           
  2432                           ;incstack = 0
  2433   000008  8250               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2434   00000A  EFD1  F009         	goto	int_func
  2435                           
  2436                           	psect	intcode_body
  2437   0013A2                     __pintcode_body:
  2438                           	callstack 27
  2439   0013A2                     int_func:
  2440                           	callstack 27
  2441   0013A2                     
  2442                           ;interrupts.c: 30:         if(PIR2bits.C1IF){
  2443   0013A2  010E               	movlb	14	; () banked
  2444   0013A4  A135               	btfss	53,0,b	;volatile
  2445   0013A6  EFD7  F009         	goto	i2u43_41
  2446   0013AA  EFD9  F009         	goto	i2u43_40
  2447   0013AE                     i2u43_41:
  2448   0013AE  EFED  F009         	goto	i2l199
  2449   0013B2                     i2u43_40:
  2450   0013B2                     
  2451                           ; BSR set to: 14
  2452                           ;interrupts.c: 31:         LATHbits.LATH3 = !LATHbits.LATH3;
  2453   0013B2  A680               	btfss	128,3,c	;volatile
  2454   0013B4  EFDE  F009         	goto	i2u44_41
  2455   0013B8  EFE2  F009         	goto	i2u44_40
  2456   0013BC                     i2u44_41:
  2457   0013BC  6A01               	clrf	??_HighISR^0,c
  2458   0013BE  2A01               	incf	??_HighISR^0,f,c
  2459   0013C0  EFE3  F009         	goto	i2u45_48
  2460   0013C4                     i2u44_40:
  2461   0013C4  6A01               	clrf	??_HighISR^0,c
  2462   0013C6                     i2u45_48:
  2463   0013C6  4601               	rlncf	??_HighISR^0,f,c
  2464   0013C8  4601               	rlncf	??_HighISR^0,f,c
  2465   0013CA  4601               	rlncf	??_HighISR^0,f,c
  2466   0013CC  5080               	movf	128,w,c	;volatile
  2467   0013CE  1801               	xorwf	??_HighISR^0,w,c
  2468   0013D0  0BF7               	andlw	-9
  2469   0013D2  1801               	xorwf	??_HighISR^0,w,c
  2470   0013D4  6E80               	movwf	128,c	;volatile
  2471   0013D6                     
  2472                           ;interrupts.c: 32:         PIR2bits.C1IF=0;
  2473   0013D6  010E               	movlb	14	; () banked
  2474   0013D8  9135               	bcf	53,0,b	;volatile
  2475   0013DA                     i2l199:
  2476                           
  2477                           ; BSR set to: 14
  2478   0013DA  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2479   0013DC  0011               	retfie		f
  2480   0013DE                     __end_of_HighISR:
  2481                           	callstack 0
  2482                           
  2483                           	psect	rparam
  2484   000000                     
  2485                           	psect	temp
  2486   000050                     btemp:
  2487                           	callstack 0
  2488   000050                     	ds	1
  2489   000000                     int$flags	set	btemp
  2490   000000                     wtemp8	set	btemp+1
  2491   000000                     ttemp5	set	btemp+1
  2492   000000                     ttemp6	set	btemp+4
  2493   000000                     ttemp7	set	btemp+8
  2494                           
  2495                           	psect	idloc
  2496                           
  2497                           ;Config register IDLOC0 @ 0x200000
  2498                           ;	unspecified, using default values
  2499   200000                     	org	2097152
  2500   200000  0FFF               	dw	4095
  2501                           
  2502                           ;Config register IDLOC1 @ 0x200002
  2503                           ;	unspecified, using default values
  2504   200002                     	org	2097154
  2505   200002  0FFF               	dw	4095
  2506                           
  2507                           ;Config register IDLOC2 @ 0x200004
  2508                           ;	unspecified, using default values
  2509   200004                     	org	2097156
  2510   200004  0FFF               	dw	4095
  2511                           
  2512                           ;Config register IDLOC3 @ 0x200006
  2513                           ;	unspecified, using default values
  2514   200006                     	org	2097158
  2515   200006  0FFF               	dw	4095
  2516                           
  2517                           ;Config register IDLOC4 @ 0x200008
  2518                           ;	unspecified, using default values
  2519   200008                     	org	2097160
  2520   200008  0FFF               	dw	4095
  2521                           
  2522                           ;Config register IDLOC5 @ 0x20000A
  2523                           ;	unspecified, using default values
  2524   20000A                     	org	2097162
  2525   20000A  0FFF               	dw	4095
  2526                           
  2527                           ;Config register IDLOC6 @ 0x20000C
  2528                           ;	unspecified, using default values
  2529   20000C                     	org	2097164
  2530   20000C  0FFF               	dw	4095
  2531                           
  2532                           ;Config register IDLOC7 @ 0x20000E
  2533                           ;	unspecified, using default values
  2534   20000E                     	org	2097166
  2535   20000E  0FFF               	dw	4095
  2536                           
  2537                           	psect	config
  2538                           
  2539                           ;Config register CONFIG1L @ 0x300000
  2540                           ;	External Oscillator mode Selection bits
  2541                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  2542                           ;	Power-up default value for COSC bits
  2543                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  2544   300000                     	org	3145728
  2545   300000  AA                 	db	170
  2546                           
  2547                           ;Config register CONFIG1H @ 0x300001
  2548                           ;	unspecified, using default values
  2549                           ;	Clock Out Enable bit
  2550                           ;	CLKOUTEN = 0x1, unprogrammed default
  2551                           ;	Clock Switch Enable bit
  2552                           ;	CSWEN = 0x1, unprogrammed default
  2553                           ;	Fail-Safe Clock Monitor Enable bit
  2554                           ;	FCMEN = 0x1, unprogrammed default
  2555   300001                     	org	3145729
  2556   300001  FF                 	db	255
  2557                           
  2558                           ;Config register CONFIG2L @ 0x300002
  2559                           ;	unspecified, using default values
  2560                           ;	Master Clear Enable bit
  2561                           ;	MCLRE = 0x1, unprogrammed default
  2562                           ;	Power-up Timer Enable bit
  2563                           ;	PWRTE = 0x1, unprogrammed default
  2564                           ;	Low-power BOR enable bit
  2565                           ;	LPBOREN = 0x1, unprogrammed default
  2566                           ;	Brown-out Reset Enable bits
  2567                           ;	BOREN = 0x3, unprogrammed default
  2568   300002                     	org	3145730
  2569   300002  FF                 	db	255
  2570                           
  2571                           ;Config register CONFIG2H @ 0x300003
  2572                           ;	unspecified, using default values
  2573                           ;	Brown Out Reset Voltage selection bits
  2574                           ;	BORV = 0x3, unprogrammed default
  2575                           ;	ZCD Disable bit
  2576                           ;	ZCD = 0x1, unprogrammed default
  2577                           ;	PPSLOCK bit One-Way Set Enable bit
  2578                           ;	PPS1WAY = 0x1, unprogrammed default
  2579                           ;	Stack Full/Underflow Reset Enable bit
  2580                           ;	STVREN = 0x1, unprogrammed default
  2581                           ;	Debugger Enable bit
  2582                           ;	DEBUG = 0x1, unprogrammed default
  2583                           ;	Extended Instruction Set Enable bit
  2584                           ;	XINST = 0x1, unprogrammed default
  2585   300003                     	org	3145731
  2586   300003  FF                 	db	255
  2587                           
  2588                           ;Config register CONFIG3L @ 0x300004
  2589                           ;	WDT Period Select bits
  2590                           ;	WDTCPS = 0x1F, unprogrammed default
  2591                           ;	WDT operating mode
  2592                           ;	WDTE = OFF, WDT Disabled
  2593   300004                     	org	3145732
  2594   300004  9F                 	db	159
  2595                           
  2596                           ;Config register CONFIG3H @ 0x300005
  2597                           ;	unspecified, using default values
  2598                           ;	WDT Window Select bits
  2599                           ;	WDTCWS = 0x7, unprogrammed default
  2600                           ;	WDT input clock selector
  2601                           ;	WDTCCS = 0x7, unprogrammed default
  2602   300005                     	org	3145733
  2603   300005  FF                 	db	255
  2604                           
  2605                           ;Config register CONFIG4L @ 0x300006
  2606                           ;	unspecified, using default values
  2607                           ;	Write Protection Block 0
  2608                           ;	WRT0 = 0x1, unprogrammed default
  2609                           ;	Write Protection Block 1
  2610                           ;	WRT1 = 0x1, unprogrammed default
  2611                           ;	Write Protection Block 2
  2612                           ;	WRT2 = 0x1, unprogrammed default
  2613                           ;	Write Protection Block 3
  2614                           ;	WRT3 = 0x1, unprogrammed default
  2615                           ;	Write Protection Block 3
  2616                           ;	WRT4 = 0x1, unprogrammed default
  2617                           ;	Write Protection Block 3
  2618                           ;	WRT5 = 0x1, unprogrammed default
  2619                           ;	Write Protection Block 3
  2620                           ;	WRT6 = 0x1, unprogrammed default
  2621                           ;	Write Protection Block 3
  2622                           ;	WRT7 = 0x1, unprogrammed default
  2623   300006                     	org	3145734
  2624   300006  FF                 	db	255
  2625                           
  2626                           ;Config register CONFIG4H @ 0x300007
  2627                           ;	unspecified, using default values
  2628                           ;	Configuration Register Write Protection bit
  2629                           ;	WRTC = 0x1, unprogrammed default
  2630                           ;	Boot Block Write Protection bit
  2631                           ;	WRTB = 0x1, unprogrammed default
  2632                           ;	Data EEPROM Write Protection bit
  2633                           ;	WRTD = 0x1, unprogrammed default
  2634                           ;	Scanner Enable bit
  2635                           ;	SCANE = 0x1, unprogrammed default
  2636                           ;	Low Voltage Programming Enable bit
  2637                           ;	LVP = 0x1, unprogrammed default
  2638   300007                     	org	3145735
  2639   300007  FF                 	db	255
  2640                           
  2641                           ;Config register CONFIG5L @ 0x300008
  2642                           ;	unspecified, using default values
  2643                           ;	UserNVM Program Memory Code Protection bit
  2644                           ;	CP = 0x1, unprogrammed default
  2645                           ;	DataNVM Memory Code Protection bit
  2646                           ;	CPD = 0x1, unprogrammed default
  2647   300008                     	org	3145736
  2648   300008  FF                 	db	255
  2649                           
  2650                           ;Config register CONFIG5H @ 0x300009
  2651                           ;	unspecified, using default values
  2652   300009                     	org	3145737
  2653   300009  FF                 	db	255
  2654                           
  2655                           ;Config register CONFIG6L @ 0x30000A
  2656                           ;	unspecified, using default values
  2657                           ;	Table Read Protection Block 0
  2658                           ;	EBTR0 = 0x1, unprogrammed default
  2659                           ;	Table Read Protection Block 1
  2660                           ;	EBTR1 = 0x1, unprogrammed default
  2661                           ;	Table Read Protection Block 2
  2662                           ;	EBTR2 = 0x1, unprogrammed default
  2663                           ;	Table Read Protection Block 3
  2664                           ;	EBTR3 = 0x1, unprogrammed default
  2665                           ;	Table Read Protection Block 4
  2666                           ;	EBTR4 = 0x1, unprogrammed default
  2667                           ;	Table Read Protection Block 5
  2668                           ;	EBTR5 = 0x1, unprogrammed default
  2669                           ;	Table Read Protection Block 6
  2670                           ;	EBTR6 = 0x1, unprogrammed default
  2671                           ;	Table Read Protection Block 7
  2672                           ;	EBTR7 = 0x1, unprogrammed default
  2673   30000A                     	org	3145738
  2674   30000A  FF                 	db	255
  2675                           
  2676                           ;Config register CONFIG6H @ 0x30000B
  2677                           ;	unspecified, using default values
  2678                           ;	Boot Block Table Read Protection bit
  2679                           ;	EBTRB = 0x1, unprogrammed default
  2680   30000B                     	org	3145739
  2681   30000B  FF                 	db	255
  2682                           tosu	equ	0xFFF
  2683                           tosh	equ	0xFFE
  2684                           tosl	equ	0xFFD
  2685                           stkptr	equ	0xFFC
  2686                           pclatu	equ	0xFFB
  2687                           pclath	equ	0xFFA
  2688                           pcl	equ	0xFF9
  2689                           tblptru	equ	0xFF8
  2690                           tblptrh	equ	0xFF7
  2691                           tblptrl	equ	0xFF6
  2692                           tablat	equ	0xFF5
  2693                           prodh	equ	0xFF4
  2694                           prodl	equ	0xFF3
  2695                           indf0	equ	0xFEF
  2696                           postinc0	equ	0xFEE
  2697                           postdec0	equ	0xFED
  2698                           preinc0	equ	0xFEC
  2699                           plusw0	equ	0xFEB
  2700                           fsr0h	equ	0xFEA
  2701                           fsr0l	equ	0xFE9
  2702                           wreg	equ	0xFE8
  2703                           indf1	equ	0xFE7
  2704                           postinc1	equ	0xFE6
  2705                           postdec1	equ	0xFE5
  2706                           preinc1	equ	0xFE4
  2707                           plusw1	equ	0xFE3
  2708                           fsr1h	equ	0xFE2
  2709                           fsr1l	equ	0xFE1
  2710                           bsr	equ	0xFE0
  2711                           indf2	equ	0xFDF
  2712                           postinc2	equ	0xFDE
  2713                           postdec2	equ	0xFDD
  2714                           preinc2	equ	0xFDC
  2715                           plusw2	equ	0xFDB
  2716                           fsr2h	equ	0xFDA
  2717                           fsr2l	equ	0xFD9
  2718                           status	equ	0xFD8

Data Sizes:
    Strings     1
    Constant    124
    Data        24
    BSS         12
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      79
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_increment
    _timeadjuster->_sunrise
    _timeadjuster->_sunset
    _sunset->___wmul
    _sunrise->___wmul
    _increment->_LEDarray_disp_bin

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    2944
                           _ADC_init
            _Comp1_init_falling_edge
             _Comp1_init_rising_edge
                    _Interrupts_init
                      _LEDarray_init
                        _Timer0_init
                          _day1_init
                    _daylightsavings
                          _increment
                           _poweroff
                    _streetLightInit
                            _sunrise
                             _sunset
                       _timeadjuster
 ---------------------------------------------------------------------------------
 (1) _timeadjuster                                         8     4      4     848
                                             18 COMRAM     8     4      4
                            ___awdiv
                            _sunrise (ARG)
                             _sunset (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _sunset                                               7     5      2     662
                                             11 COMRAM     7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _sunrise                                              7     5      2     662
                                             11 COMRAM     7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     615
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _streetLightInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _poweroff                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _increment                                            2     2      0     770
                                             31 COMRAM     2     2      0
                  _LEDarray_disp_bin
 ---------------------------------------------------------------------------------
 (2) _LEDarray_disp_bin                                   26    24      2     770
                                              5 COMRAM    26    24      2
 ---------------------------------------------------------------------------------
 (1) _daylightsavings                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _day1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init_rising_edge                               0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (1) _Comp1_init_falling_edge                              0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _LowISR                                               4     4      0       0
                                              1 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _HighISR                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Comp1_init_falling_edge
     _DAC_init
   _Comp1_init_rising_edge
     _DAC_init
   _Interrupts_init
   _LEDarray_init
   _Timer0_init
   _day1_init
   _daylightsavings
   _increment
     _LEDarray_disp_bin
   _poweroff
   _streetLightInit
   _sunrise
     ___wmul
   _sunset
     ___wmul
   _timeadjuster
     ___awdiv
     _sunrise (ARG)
     _sunset (ARG)

 _LowISR (ROOT)

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      53        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRlhlhh      84      0       0      42        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     21      4F       1       84.0%
BITBIGSFRllhh       5C      0       0      45        0.0%
BITBIGSFRhhll       4A      0       0      34        0.0%
BITBIGSFRlhll       33      0       0      44        0.0%
BITBIGSFRllllll     30      0       0      51        0.0%
BITBIGSFRhhlhh      1B      0       0      33        0.0%
BITBIGSFRlhhhhl     14      0       0      39        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRlhlhll      8      0       0      43        0.0%
BITBIGSFRllllh       7      0       0      49        0.0%
BITBIGSFRllhll       7      0       0      47        0.0%
BITBIGSFRlhhl        6      0       0      41        0.0%
BITBIGSFRlhhhl       3      0       0      40        0.0%
BITBIGSFRhlh         1      0       0      35        0.0%
BITBIGSFRlhhhhl      1      0       0      37        0.0%
BITBIGSFRllhlh       1      0       0      46        0.0%
BITBIGSFRlllllh      1      0       0      50        0.0%
BITBIGSFRlllh        1      0       0      48        0.0%
BITBIGSFRlhhhhl      1      0       0      38        0.0%
BITBIGSFRhll         1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4F      52        0.0%
DATA                 0      0      4F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Nov 08 00:07:55 2022

                             _L1 0E59                               _L2 0E55  
                             _L3 0E51                               _L4 0E4D  
                             _L5 0E49                               _L6 0E45  
                             l35 14E4                               _P1 0E41  
                             _P2 0E3D                               _P3 0E39  
                             _P4 0E35                               l81 1462  
                             _P5 0E31                               l85 1004  
                             l88 105E                     ___awdiv@sign 000B  
                             _bp 0E69                               _cp 0E1D  
                             bsr 000FE0              ___wmul@multiplicand 0008  
              ??_Interrupts_init 0006                              l130 1510  
                            l133 1486                              l136 14AA  
                            l304 14CA                              l193 1522  
                            l354 152C                              l371 13A0  
                            l364 0F76                              l381 11FC  
                            l390 1326                              l368 1416  
                            l376 1268                              l624 1122  
                            l393 143C                              l385 1190  
                            u240 13F8                              u241 13F4  
                            u250 1414                              u251 1410  
                            u340 12E0                              u341 12DC  
                            u350 12F4                              u510 0FA6  
                            u351 12F0                              u511 0FA2  
                            u360 130C                              u520 1004  
                            u361 1308                              u521 1000  
                            u370 1320                              u371 131C  
                            u700 0EF0                              u620 1072  
                            u605 1052                              u701 0EEC  
                            u621 106E                              u606 1054  
                            u710 0F18                              u630 108C  
                            u615 105C                              u535 100C  
                            u711 0F14                              u631 1088  
__end_of_Comp1_init_falling_edge 14AC                              u616 105E  
                            u536 100E                              u720 0F4A  
                            u640 10B2                              u800 1170  
                            u545 1016                              u721 0F46  
                            u641 10AE                              u801 116C  
                            u546 1018                              u730 0F6A  
                            u650 10D0                              u810 1188  
                            u555 1020                              u731 0F66  
                            u651 10CC                              u811 1184  
                            u556 1022                              u740 1210  
                            u660 10EC                              u565 102A  
                            u741 1208                              u661 10E8  
                            u566 102C                              u750 1232  
                            u670 1112                              u575 1034  
                            u751 122E                              u671 110E  
                            u576 1036                              u680 0E9E  
                            u760 1240                              u585 103E  
                            u681 0E9A                              u761 123C  
                            u586 1040                              u690 0EC4  
                            u770 11A4                              u595 1048  
                            u691 0EC0                              u771 119C  
                            u596 104A                              u748 1212  
                            u780 11C6                              u781 11C2  
                            u790 11D4                              u791 11D0  
                            u778 11A6          __end_of_streetLightInit 152E  
                            _lg2 0E2D                              _ovt 0E21  
                            wreg 000FE8                             l1321 150E  
                           l1401 148A                             l1411 14A6  
                           l1403 149C                             l1317 14FE  
                           l1405 149E                             l1413 1512  
                           l1421 14BE                             l1319 1504  
                           l1407 14A0                             l1423 14C8  
                           l1511 12F4                             l1415 1524  
                           l1409 14A2                             l1417 14AC  
                           l1425 1366                             l1513 12F8  
                           l1419 14B4                             l1427 139E  
                           l1515 130C                             l1507 12CC  
                           l1381 14E2                             l1373 14CC  
                           l1517 1320                             l1509 12E0  
                           l1621 0F78                             l1701 0ED4  
                           l1375 14D6                             l1391 147A  
                           l1383 143E                             l1631 0FC4  
                           l1711 0F18                             l1703 0EDC  
                           l1377 14DE                             l1393 147C  
                           l1385 1464                             l1633 0FDE  
                           l1721 0F6A                             l1713 0F20  
                           l1705 0EF0                             l1465 13DE  
                           l1641 1434                             l1379 14E0  
                           l1395 147E                             l1387 1466  
                           l1635 0FE4                             l1627 0F88  
                           l1723 0F72                             l1715 0F4A  
                           l1707 0EFC                             l1467 13F8  
                           l1731 1240                             l1651 107A  
                           l1811 127C                             l1397 1482  
                           l1389 1478                             l1637 0FE8  
                           l1629 0FA6                             l1717 0F52  
                           l1709 0F04                             l1469 1414  
                           l1733 1260                             l1725 11FE  
                           l1741 11C6                             l1661 10A0  
                           l1653 107E                             l1645 1060  
                           l1821 1294                             l1813 1280  
                           l1805 126A                             l1399 1488  
                           l1719 0F56                             l1639 1418  
                           l1727 1220                             l1743 11D4  
                           l1671 10D6                             l1663 10B2  
                           l1655 108C                             l1647 1064  
                           l1751 112C                             l1831 12C0  
                           l1823 1298                             l1815 1284  
                           l1807 1274                             l1729 1232  
                           l1745 11F4                             l1737 1192  
                           l1673 10EC                             l1665 10BA  
                           l1681 1102                             l1657 1094  
                           l1649 1072                             l1753 114C  
                           l1825 129C                             l1817 128C  
                           l1809 1278                             l1691 0E9E  
                           l1739 11B4                             l1683 1112  
                           l1675 10F4                             l1667 10C2  
                           l1659 1098                             l1755 115C  
                           l1827 12A0                             l1819 1290  
                           l1693 0EAA                             l1685 111A  
                           l1677 10F6                             l1669 10D0  
                           l1757 1170                             l1749 1124  
                           l1829 12A4                             l1695 0EB2  
                           l1679 10FC                             l1759 1188  
                           l1697 0EC4                             l1689 0E80  
                           l1699 0EC8                             STR_1 0E7D  
                           _cp_h 0E79                             _cp_l 0E75  
                           _dp_h 0E09                             _dp_l 0E01  
                           _main 126A                             _huge 0E61  
                           _hour 0042                             _year 0046  
                           _tiny 0E5D                             fsr2h 000FDA  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 0050                             prodh 000FF4  
                           prodl 000FF3                             start 00A0  
               __end_of_ADC_init 14E6                 __end_of_DAC_init 1512  
                __end_of_HighISR 13DE                     ___param_bank 000000  
                          ?_main 0001                            _ADPCH 000F5F  
                __end_of___awdiv 1124                  ___awdiv@divisor 0008  
                          i1l205 007A                            i1l207 0090  
                          i2l199 13DA                  ___awdiv@counter 000A  
                          _TMR0H 000FD4                            _TMR0L 000FD3  
                _daylightsavings 12CC                            _lg2_h 0E29  
                          _lg2_l 0E25                            _errno 003E  
                          _ivln2 0E19                  __end_of_ivln2_h 0E75  
                __end_of_ivln2_l 0E19                            _two24 0E65  
                          _month 0022                            tablat 000FF5  
        timeadjuster@sunset_time 0015                            ttemp5 0051  
                          ttemp6 0054                            ttemp7 0058  
                          status 000FD8                            wtemp8 0051  
                __end_of_sunrise 126A                  __initialization 1328  
                   __end_of_cp_h 0E7D                     __end_of_cp_l 0E79  
                   __end_of_dp_h 0E11                     __end_of_dp_l 0E09  
                   __end_of_main 12CC                     __end_of_huge 0E65  
                   __end_of_tiny 0E61                           ??_main 0022  
                  __activetblptr 000001                 ?_streetLightInit 0001  
                         _ADRESH 000F64                 ___awdiv@dividend 0006  
                         i1l1581 003E                           i1l1583 0042  
                         i1l1575 0026                           i1l1577 0036  
                         i1l1585 0044                           i1l1587 0058  
                         i1l1579 003A                           i1l1589 008E  
                         i2l1571 13B2                           i2l1573 13D6  
                         i2l1569 13A2                        ??_HighISR 0001  
              _LEDarray_disp_bin 0F78                           _LowISR 0018  
             ?_LEDarray_disp_bin 0006                    ??_Timer0_init 0006  
                         ___wmul 1418                        ??___awdiv 000A  
          LEDarray_disp_bin@mask 001C          __end_of_daylightsavings 1328  
            ??_LEDarray_disp_bin 0008                           clear_0 134E  
               ___awdiv@quotient 000C                           isa$std 000001  
                         _sunset 1192                sunset@sunset_time 0011  
                   __pdataCOMRAM 0022                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                        ?_ADC_init 0001  
               __end_of_poweroff 1418                        ?_DAC_init 0001  
       timeadjuster@sunrise_time 0013                 _tiny@sqrtf$F1955 0E11  
                      ??_sunrise 000E        __end_of_LEDarray_disp_bin 1060  
                     __accesstop 0060          __end_of__initialization 1354  
       ??_Comp1_init_rising_edge 0006                    ___rparam_used 000001  
                  _LEDarray_init 143E                  _Interrupts_init 1512  
                 __pcstackCOMRAM 0001                    __end_of_lg2_h 0E2D  
                  __end_of_lg2_l 0E29                    __end_of_ivln2 0E1D  
                  __end_of_two24 0E69                       __end_of_L1 0E5D  
                     __end_of_L2 0E59                       __end_of_L3 0E55  
                     __end_of_L4 0E51                       __end_of_L5 0E4D  
                     __end_of_L6 0E49                       __end_of_P1 0E45  
                     __end_of_P2 0E41                       __end_of_P3 0E3D  
                     __end_of_P4 0E39                       __end_of_P5 0E35  
            __end_of_Timer0_init 14CC                       __end_of_bp 0E71  
                     __end_of_cp 0E21                       ??_ADC_init 0006  
                     ??_DAC_init 0006                       __pnvCOMRAM 0046  
                 ?_LEDarray_init 0001              sunrise@sunrise_time 0011  
                        ?_LowISR 0001                     _day_of_month 0048  
         timeadjuster@adjustment 0019                          ?___wmul 0006  
               ?_daylightsavings 0001                          ?_sunset 000C  
              __end_of_day1_init 13A2                          i1u50_20 008E  
                        i1u50_21 008A                          i1u46_20 0036  
                        i1u46_21 0032                          i1u47_20 0058  
                        i1u47_21 0054                          i1u48_20 006A  
                        i1u48_21 0062                          i1u49_28 006C  
                        i2u43_40 13B2                          i2u43_41 13AE  
                        i2u44_40 13C4                          i2u44_41 13BC  
                        i2u45_48 13C6                       _comp_check 0040  
        __end_of_Interrupts_init 1524                 sunrise@prevState 000F  
                        _HighISR 0008                        _ADREFbits 000F58  
        _Comp1_init_falling_edge 1488                          __Hparam 0000  
                        __Lparam 0000                      _Timer0_init 14AC  
                        ___awdiv 1060                        ?_poweroff 0001  
                   __psmallconst 0E00                          __pcinit 1328  
                        __ramtop 0E00                          __ptext0 126A  
                        __ptext1 1124                          __ptext2 1060  
                        __ptext3 1192                          __ptext4 11FE  
                        __ptext5 1418                          __ptext6 1524  
                        __ptext7 13DE                          __ptext8 0E80  
                        __ptext9 0F78                __end_of_increment 0F78  
                        _ivln2_h 0E71                          _ivln2_l 0E15  
                        _seconds 0044                   __pintcode_body 13A2  
                        _sunrise 11FE             end_of_initialization 1354  
                  ?_timeadjuster 0013                  ??_LEDarray_init 0006  
                        int_func 13A2                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE         __end_of_tiny@sqrtf$F1955 0E15  
                     ??_poweroff 0006           _Comp1_init_rising_edge 1464  
                      _TRISAbits 000F81                        _TRISBbits 000F82  
                      _TRISDbits 000F84                        _TRISFbits 000F86  
                      _TRISGbits 000F87                        _TRISHbits 000F88  
                 ??_timeadjuster 0017        ??_Comp1_init_falling_edge 0006  
                    _CM1CON0bits 000ED0                      _CM1CON1bits 000ED1  
               ?_Interrupts_init 0001                  sunset@prevState 000F  
                 __end_of_LowISR 00A0                   __end_of___wmul 143E  
                  __pidataCOMRAM 14E6                   __end_of_sunset 11FE  
            start_initialization 1328                      __end_of_lg2 0E31  
                    __end_of_ovt 0E25                         ??_LowISR 0002  
           LEDarray_disp_bin@ctr 001E                         ??___wmul 000A  
                       ??_sunset 000E                      __pbssCOMRAM 003A  
                      _day1_init 1366                         ?_HighISR 0001  
              ??_streetLightInit 0006                     ?_Timer0_init 0001  
                    _day_of_week 004A                      _day_of_year 004C  
                      __pintcode 0008                         ?___awdiv 0006  
       LEDarray_disp_bin@led_arr 000A             __end_of_timeadjuster 1192  
                    __pintcodelo 0018                        fabsf@F465 003A  
                    __smallconst 0E00                         _ADC_init 14CC  
                      _increment 0E80                         _DAC_init 14FE  
                     ?_day1_init 0001                         ?_sunrise 000C  
                 ___wmul@product 000A                         _LATAbits 000F79  
                       _LATBbits 000F7A                         _LATDbits 000F7C  
                       _LATFbits 000F7E                         _LATGbits 000F7F  
                       _LATHbits 000F80                         _IPR0bits 000E1F  
                       _PIE0bits 000E29                         _IPR2bits 000E21  
                       _PIE2bits 000E2B                         _PIR0bits 000E33  
                       _PIR2bits 000E35                        _month_num 004E  
        ?_Comp1_init_rising_edge 0001                       _ADCON0bits 000F60  
              ___wmul@multiplier 0006            timeadjuster@solarnoon 0017  
                     ?_increment 0001                       _CM1NCHbits 000ED2  
                     _CM1PCHbits 000ED3                        copy_data0 133C  
          __end_of_LEDarray_init 1464                         __Hrparam 0000  
                       __Lrparam 0000                     __Lsmallconst 0E00  
 __end_of_Comp1_init_rising_edge 1488                       _ANSELAbits 000E92  
                     _T0CON0bits 000FD5                       _T0CON1bits 000FD6  
                       __ptext10 12CC                         __ptext11 1366  
                       __ptext12 14AC                         __ptext13 143E  
                       __ptext14 1512                         __ptext15 1464  
                       __ptext16 1488                         __ptext17 14FE  
                       __ptext18 14CC                      ??_day1_init 0006  
        LEDarray_disp_bin@number 0006                ??_daylightsavings 0006  
                       isa$xinst 000000                         int$flags 0050  
                       _poweroff 13DE                       _INTCONbits 000FF2  
                    ??_increment 0020         ?_Comp1_init_falling_edge 0001  
                _streetLightInit 1524                         intlevel1 0000  
                       intlevel2 0000                     _timeadjuster 1124  
                   _DAC1CON0bits 000EC6                     _DAC1CON1bits 000EC7  
