

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Nov 09 20:23:11 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62   000000                     
    63                           ; Generated 06/04/2022 GMT
    64                           ; 
    65                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution. Publication is not required when
    79                           ;        this file is used in an embedded application.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F67K40 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97   000000                     
    98                           	psect	idataCOMRAM
    99   002076                     __pidataCOMRAM:
   100                           	callstack 0
   101                           
   102                           ;initializer for _adjustment_of_day
   103   002076  0001               	dw	1
   104                           
   105                           	psect	idataBANK1
   106   002010                     __pidataBANK1:
   107                           	callstack 0
   108                           
   109                           ;initializer for _month
   110   002010  001F               	dw	31
   111   002012  001C               	dw	28
   112   002014  001F               	dw	31
   113   002016  001E               	dw	30
   114   002018  001F               	dw	31
   115   00201A  001E               	dw	30
   116   00201C  001F               	dw	31
   117   00201E  001F               	dw	31
   118   002020  001E               	dw	30
   119   002022  001F               	dw	31
   120   002024  001E               	dw	30
   121   002026  001F               	dw	31
   122   000000                     _T0CON0bits	set	4053
   123   000000                     _T0CON1bits	set	4054
   124   000000                     _LATHbits	set	3968
   125   000000                     _CM1CON1bits	set	3793
   126                           
   127                           	psect	nvCOMRAM
   128   00004D                     __pnvCOMRAM:
   129                           	callstack 0
   130   00004D                     _hour:
   131                           	callstack 0
   132   00004D                     	ds	2
   133                           
   134                           	psect	nvBANK1
   135   0001AA                     __pnvBANK1:
   136                           	callstack 0
   137   0001AA                     _year:
   138                           	callstack 0
   139   0001AA                     	ds	2
   140   0001AC                     _day_of_month:
   141                           	callstack 0
   142   0001AC                     	ds	2
   143   0001AE                     _day_of_week:
   144                           	callstack 0
   145   0001AE                     	ds	2
   146   0001B0                     _day_of_year:
   147                           	callstack 0
   148   0001B0                     	ds	2
   149   0001B2                     _month_num:
   150                           	callstack 0
   151   0001B2                     	ds	2
   152   000000                     _IPR0bits	set	3615
   153   000000                     _IPR2bits	set	3617
   154   000000                     _PIE0bits	set	3625
   155   000000                     _PIE2bits	set	3627
   156   000000                     _ANSELAbits	set	3730
   157   000000                     _TRISAbits	set	3969
   158   000000                     _TRISEbits	set	3973
   159   000000                     _TRISCbits	set	3971
   160   000000                     _TRISBbits	set	3970
   161   000000                     _TRISFbits	set	3974
   162   000000                     _TRISGbits	set	3975
   163   000000                     _DAC1CON0bits	set	3782
   164   000000                     _ADREFbits	set	3928
   165   000000                     _ADPCH	set	3935
   166   000000                     _ADRESH	set	3940
   167   000000                     _ADCON0bits	set	3936
   168   000000                     _LATAbits	set	3961
   169   000000                     _LATGbits	set	3967
   170   000000                     _TRISHbits	set	3976
   171   000000                     _TMR0L	set	4051
   172   000000                     _TMR0H	set	4052
   173   000000                     _INTCONbits	set	4082
   174   000000                     _LATEbits	set	3965
   175   000000                     _LATCbits	set	3963
   176   000000                     _LATBbits	set	3962
   177   000000                     _LATFbits	set	3966
   178   000000                     _CM1CON0bits	set	3792
   179   000000                     _CM1NCHbits	set	3794
   180   000000                     _DAC1CON1bits	set	3783
   181   000000                     _CM1PCHbits	set	3795
   182   000000                     _PIR0bits	set	3635
   183   000000                     _PIR2bits	set	3637
   184                           
   185                           	psect	smallconst
   186   000E00                     __psmallconst:
   187                           	callstack 0
   188   000E00  00                 	db	0
   189   000E01                     STR_1:
   190   000E01  25                 	db	37
   191   000E02  64                 	db	100	;'d'
   192   000E03  20                 	db	32
   193   000E04  25                 	db	37
   194   000E05  64                 	db	100	;'d'
   195   000E06  20                 	db	32
   196   000E07  25                 	db	37
   197   000E08  64                 	db	100	;'d'
   198   000E09  20                 	db	32
   199   000E0A  25                 	db	37
   200   000E0B  64                 	db	100	;'d'
   201   000E0C  20                 	db	32
   202   000E0D  25                 	db	37
   203   000E0E  64                 	db	100	;'d'
   204   000E0F  00                 	db	0
   205   000E10  00                 	db	0	; dummy byte at the end
   206   000000                     
   207                           ; #config settings
   208                           
   209                           	psect	cinit
   210   001CAA                     __pcinit:
   211                           	callstack 0
   212   001CAA                     start_initialization:
   213                           	callstack 0
   214   001CAA                     __initialization:
   215                           	callstack 0
   216                           
   217                           ; Initialize objects allocated to BANK1 (24 bytes)
   218                           ; load TBLPTR registers with __pidataBANK1
   219   001CAA  0E10               	movlw	low __pidataBANK1
   220   001CAC  6EF6               	movwf	tblptrl,c
   221   001CAE  0E20               	movlw	high __pidataBANK1
   222   001CB0  6EF7               	movwf	tblptrh,c
   223   001CB2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   224   001CB4  6EF8               	movwf	tblptru,c
   225   001CB6  EE01  F092         	lfsr	0,__pdataBANK1
   226   001CBA  EE10 F018          	lfsr	1,24
   227   001CBE                     copy_data0:
   228   001CBE  0009               	tblrd		*+
   229   001CC0  CFF5 FFEE          	movff	tablat,postinc0
   230   001CC4  50E5               	movf	postdec1,w,c
   231   001CC6  50E1               	movf	fsr1l,w,c
   232   001CC8  E1FA               	bnz	copy_data0
   233                           
   234                           ; Initialize objects allocated to COMRAM (2 bytes)
   235                           ; load TBLPTR registers with __pidataCOMRAM
   236   001CCA  0E76               	movlw	low __pidataCOMRAM
   237   001CCC  6EF6               	movwf	tblptrl,c
   238   001CCE  0E20               	movlw	high __pidataCOMRAM
   239   001CD0  6EF7               	movwf	tblptrh,c
   240   001CD2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   241   001CD4  6EF8               	movwf	tblptru,c
   242   001CD6  0009               	tblrd		*+	;fetch initializer
   243   001CD8  CFF5 F04F          	movff	tablat,__pdataCOMRAM
   244   001CDC  0009               	tblrd		*+	;fetch initializer
   245   001CDE  CFF5 F050          	movff	tablat,__pdataCOMRAM+1
   246                           
   247                           ; Clear objects allocated to BANK1 (46 bytes)
   248   001CE2  EE01  F064         	lfsr	0,__pbssBANK1
   249   001CE6  0E2E               	movlw	46
   250   001CE8                     clear_0:
   251   001CE8  6AEE               	clrf	postinc0,c
   252   001CEA  06E8               	decf	wreg,f,c
   253   001CEC  E1FD               	bnz	clear_0
   254                           
   255                           ; Clear objects allocated to COMRAM (7 bytes)
   256   001CEE  EE00  F046         	lfsr	0,__pbssCOMRAM
   257   001CF2  0E07               	movlw	7
   258   001CF4                     clear_1:
   259   001CF4  6AEE               	clrf	postinc0,c
   260   001CF6  06E8               	decf	wreg,f,c
   261   001CF8  E1FD               	bnz	clear_1
   262   001CFA                     end_of_initialization:
   263                           	callstack 0
   264   001CFA                     __end_of__initialization:
   265                           	callstack 0
   266   001CFA  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   267   001CFC  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   268   001CFE  0E00               	movlw	low (__Lsmallconst shr (0+16))
   269   001D00  6EF8               	movwf	tblptru,c
   270   001D02  0E0E               	movlw	high __Lsmallconst
   271   001D04  6EF7               	movwf	tblptrh,c
   272   001D06  0100               	movlb	0
   273   001D08  EFE7  F00C         	goto	_main	;jump to C main() function
   274                           
   275                           	psect	bssCOMRAM
   276   000046                     __pbssCOMRAM:
   277                           	callstack 0
   278   000046                     _SS:
   279                           	callstack 0
   280   000046                     	ds	2
   281   000048                     _SR:
   282                           	callstack 0
   283   000048                     	ds	2
   284   00004A                     _seconds:
   285                           	callstack 0
   286   00004A                     	ds	2
   287   00004C                     _flags:
   288                           	callstack 0
   289   00004C                     	ds	1
   290                           
   291                           	psect	dataCOMRAM
   292   00004F                     __pdataCOMRAM:
   293                           	callstack 0
   294   00004F                     _adjustment_of_day:
   295                           	callstack 0
   296   00004F                     	ds	2
   297                           
   298                           	psect	bssBANK1
   299   000164                     __pbssBANK1:
   300                           	callstack 0
   301   000164                     _width:
   302                           	callstack 0
   303   000164                     	ds	2
   304   000166                     _prec:
   305                           	callstack 0
   306   000166                     	ds	2
   307   000168                     _SN:
   308                           	callstack 0
   309   000168                     	ds	2
   310   00016A                     _AD:
   311                           	callstack 0
   312   00016A                     	ds	2
   313   00016C                     _prevState:
   314                           	callstack 0
   315   00016C                     	ds	2
   316   00016E                     _hours_in_day:
   317                           	callstack 0
   318   00016E                     	ds	2
   319   000170                     _seconds_in_hour:
   320                           	callstack 0
   321   000170                     	ds	2
   322   000172                     _dbuf:
   323                           	callstack 0
   324   000172                     	ds	32
   325                           
   326                           	psect	dataBANK1
   327   000192                     __pdataBANK1:
   328                           	callstack 0
   329   000192                     _month:
   330                           	callstack 0
   331   000192                     	ds	24
   332                           
   333                           	psect	cstackBANK1
   334   000100                     __pcstackBANK1:
   335                           	callstack 0
   336   000100                     main@strdate:
   337                           	callstack 0
   338                           
   339                           ; 100 bytes @ 0x0
   340   000100                     	ds	100
   341                           
   342                           	psect	cstackBANK0
   343   000060                     __pcstackBANK0:
   344                           	callstack 0
   345   000060                     _dtoa$2093:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0x0
   349   000060                     	ds	2
   350   000062                     dtoa@p:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0x2
   354   000062                     	ds	2
   355   000064                     dtoa@w:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0x4
   359   000064                     	ds	2
   360   000066                     dtoa@n:
   361                           	callstack 0
   362                           
   363                           ; 8 bytes @ 0x6
   364   000066                     	ds	8
   365   00006E                     dtoa@s:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0xE
   369   00006E                     	ds	1
   370   00006F                     dtoa@i:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0xF
   374   00006F                     	ds	2
   375   000071                     vfpfcnvrt@convarg:
   376                           	callstack 0
   377                           
   378                           ; 8 bytes @ 0x11
   379   000071                     	ds	8
   380   000079                     vfpfcnvrt@cp:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x19
   384   000079                     	ds	2
   385   00007B                     ?_vfprintf:
   386                           	callstack 0
   387   00007B                     vfprintf@fp:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x1B
   391   00007B                     	ds	2
   392   00007D                     vfprintf@fmt:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x1D
   396   00007D                     	ds	2
   397   00007F                     vfprintf@ap:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x1F
   401   00007F                     	ds	2
   402   000081                     ?_sprintf:
   403                           	callstack 0
   404   000081                     sprintf@s:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x21
   408   000081                     	ds	2
   409   000083                     sprintf@fmt:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0x23
   413   000083                     	ds	12
   414   00008F                     sprintf@ap:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x2F
   418   00008F                     	ds	2
   419   000091                     sprintf@f:
   420                           	callstack 0
   421                           
   422                           ; 11 bytes @ 0x31
   423   000091                     	ds	11
   424   00009C                     time2String@buf:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x3C
   428   00009C                     	ds	2
   429   00009E                     time2String@h:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x3E
   433   00009E                     	ds	2
   434   0000A0                     time2String@s:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x40
   438   0000A0                     	ds	2
   439   0000A2                     time2String@d:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0x42
   443   0000A2                     	ds	2
   444   0000A4                     time2String@m:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x44
   448   0000A4                     	ds	2
   449   0000A6                     time2String@y:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x46
   453   0000A6                     	ds	2
   454                           
   455                           	psect	cstackCOMRAM
   456   000001                     __pcstackCOMRAM:
   457                           	callstack 0
   458   000001                     ?___wmul:
   459                           	callstack 0
   460   000001                     ___wmul@multiplier:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x0
   464   000001                     	ds	2
   465   000003                     ___wmul@multiplicand:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x2
   469   000003                     	ds	2
   470   000005                     ___wmul@product:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x4
   474   000005                     	ds	2
   475   000007                     ??_HighISR:
   476                           
   477                           ; 1 bytes @ 0x6
   478   000007                     	ds	3
   479   00000A                     ??_LowISR:
   480                           
   481                           ; 1 bytes @ 0x9
   482   00000A                     	ds	3
   483   00000D                     ?___awdiv:
   484                           	callstack 0
   485   00000D                     ?___aodiv:
   486                           	callstack 0
   487   00000D                     ?___aomod:
   488                           	callstack 0
   489   00000D                     LCD_sendnibble@number:
   490                           	callstack 0
   491   00000D                     LEDarray_disp_bin@number:
   492                           	callstack 0
   493   00000D                     ___awdiv@dividend:
   494                           	callstack 0
   495   00000D                     fputc@c:
   496                           	callstack 0
   497   00000D                     ___aodiv@dividend:
   498                           	callstack 0
   499   00000D                     ___aomod@dividend:
   500                           	callstack 0
   501                           
   502                           ; 8 bytes @ 0xC
   503   00000D                     	ds	1
   504   00000E                     LCD_sendbyte@type:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0xD
   508   00000E                     	ds	1
   509   00000F                     ??_LEDarray_disp_bin:
   510   00000F                     LCD_sendbyte@Byte:
   511                           	callstack 0
   512   00000F                     ___awdiv@divisor:
   513                           	callstack 0
   514   00000F                     fputc@fp:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0xE
   518   00000F                     	ds	1
   519   000010                     ??_LCD_Init:
   520   000010                     LCD_setline@line:
   521                           	callstack 0
   522   000010                     LCD_sendstring@string:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0xF
   526   000010                     	ds	1
   527   000011                     ??_fputc:
   528   000011                     ___awdiv@counter:
   529                           	callstack 0
   530   000011                     LEDarray_disp_bin@led_arr:
   531                           	callstack 0
   532                           
   533                           ; 18 bytes @ 0x10
   534   000011                     	ds	1
   535   000012                     ___awdiv@sign:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x11
   539   000012                     	ds	1
   540   000013                     ___awdiv@quotient:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x12
   544   000013                     	ds	2
   545   000015                     time_adjuster@sunrise_time:
   546                           	callstack 0
   547   000015                     ___aodiv@divisor:
   548                           	callstack 0
   549   000015                     ___aomod@divisor:
   550                           	callstack 0
   551                           
   552                           ; 8 bytes @ 0x14
   553   000015                     	ds	1
   554   000016                     fputs@s:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x15
   558   000016                     	ds	1
   559   000017                     time_adjuster@sunset_time:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x16
   563   000017                     	ds	1
   564   000018                     fputs@fp:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x17
   568   000018                     	ds	1
   569   000019                     time_adjuster@solarnoon:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x18
   573   000019                     	ds	1
   574   00001A                     fputs@c:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0x19
   578   00001A                     	ds	1
   579   00001B                     time_adjuster@adjustment:
   580                           	callstack 0
   581   00001B                     fputs@i:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x1A
   585   00001B                     	ds	2
   586   00001D                     ___aodiv@counter:
   587                           	callstack 0
   588   00001D                     ___aomod@counter:
   589                           	callstack 0
   590   00001D                     pad@fp:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x1C
   594   00001D                     	ds	1
   595   00001E                     ___aodiv@sign:
   596                           	callstack 0
   597   00001E                     ___aomod@sign:
   598                           	callstack 0
   599                           
   600                           ; 1 bytes @ 0x1D
   601   00001E                     	ds	1
   602   00001F                     ?_abs:
   603                           	callstack 0
   604   00001F                     pad@buf:
   605                           	callstack 0
   606   00001F                     abs@a:
   607                           	callstack 0
   608   00001F                     ___aodiv@quotient:
   609                           	callstack 0
   610                           
   611                           ; 8 bytes @ 0x1E
   612   00001F                     	ds	2
   613   000021                     ??_abs:
   614   000021                     pad@p:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x20
   618   000021                     	ds	2
   619   000023                     ??_pad:
   620   000023                     LEDarray_disp_bin@mask:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x22
   624   000023                     	ds	1
   625   000024                     pad@i:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x23
   629   000024                     	ds	1
   630   000025                     LEDarray_disp_bin@ctr:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x24
   634   000025                     	ds	1
   635   000026                     pad@w:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x25
   639   000026                     	ds	1
   640   000027                     ??_increment:
   641                           
   642                           ; 1 bytes @ 0x26
   643   000027                     	ds	1
   644   000028                     dtoa@fp:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x27
   648   000028                     	ds	2
   649   00002A                     dtoa@d:
   650                           	callstack 0
   651                           
   652                           ; 8 bytes @ 0x29
   653   00002A                     	ds	8
   654   000032                     ??_dtoa:
   655                           
   656                           ; 1 bytes @ 0x31
   657   000032                     	ds	8
   658   00003A                     vfpfcnvrt@fp:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x39
   662   00003A                     	ds	2
   663   00003C                     vfpfcnvrt@fmt:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x3B
   667   00003C                     	ds	2
   668   00003E                     vfpfcnvrt@ap:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x3D
   672   00003E                     	ds	2
   673   000040                     ??_vfpfcnvrt:
   674                           
   675                           ; 1 bytes @ 0x3F
   676   000040                     	ds	2
   677   000042                     vfprintf@cfmt:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x41
   681   000042                     	ds	2
   682   000044                     ??_time2String:
   683   000044                     
   684                           ; 1 bytes @ 0x43
   685   000044                     	ds	2
   686   000046                     
   687                           ; 1 bytes @ 0x45
   688 ;;
   689 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   690 ;;
   691 ;; *************** function _main *****************
   692 ;; Defined at:
   693 ;;		line 19 in file "main.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;		None
   696 ;; Auto vars:     Size  Location     Type
   697 ;;  strdate       100    0[BANK1 ] unsigned char [100]
   698 ;;  strtime       100    0        unsigned char [100]
   699 ;; Return value:  Size  Location     Type
   700 ;;                  1    wreg      void 
   701 ;; Registers used:
   702 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   709 ;;      Locals:         0       0     100       0       0       0       0       0       0       0       0       0       
      +0       0       0
   710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   711 ;;      Totals:         0       0     100       0       0       0       0       0       0       0       0       0       
      +0       0       0
   712 ;;Total ram usage:      100 bytes
   713 ;; Hardware stack levels required when called: 12
   714 ;; This function calls:
   715 ;;		_ADC_init
   716 ;;		_Comp1_init_falling_edge
   717 ;;		_Comp1_init_rising_edge
   718 ;;		_Interrupts_init
   719 ;;		_LCD_Init
   720 ;;		_LCD_setline
   721 ;;		_LEDarray_init
   722 ;;		_Timer0_init
   723 ;;		_day1_init
   724 ;;		_daylightsavings
   725 ;;		_increment
   726 ;;		_poweroff
   727 ;;		_streetLightInit
   728 ;;		_test_day
   729 ;;		_time2String
   730 ;;		_time_adjuster
   731 ;; This function is called by:
   732 ;;		Startup code after reset
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736                           	psect	text0
   737   0019CE                     __ptext0:
   738                           	callstack 0
   739   0019CE                     _main:
   740                           	callstack 19
   741   0019CE                     
   742                           ;main.c: 21:     streetLightInit();
   743   0019CE  EC38  F010         	call	_streetLightInit	;wreg free
   744                           
   745                           ;main.c: 22:     LEDarray_init();
   746   0019D2  ECA1  F00F         	call	_LEDarray_init	;wreg free
   747   0019D6                     
   748                           ;main.c: 23:     Timer0_init();
   749   0019D6  ECEB  F00F         	call	_Timer0_init	;wreg free
   750   0019DA                     
   751                           ;main.c: 24:     Comp1_init_rising_edge();
   752   0019DA  ECC7  F00F         	call	_Comp1_init_rising_edge	;wreg free
   753   0019DE                     
   754                           ;main.c: 25:     Comp1_init_falling_edge();
   755   0019DE  ECD9  F00F         	call	_Comp1_init_falling_edge	;wreg free
   756   0019E2                     
   757                           ;main.c: 26:     Interrupts_init();
   758   0019E2  EC28  F010         	call	_Interrupts_init	;wreg free
   759                           
   760                           ;main.c: 27:     ADC_init();
   761   0019E6  ECFB  F00F         	call	_ADC_init	;wreg free
   762                           
   763                           ;main.c: 28:     day1_init();
   764   0019EA  EC19  F00F         	call	_day1_init	;wreg free
   765   0019EE                     
   766                           ;main.c: 29:     LCD_Init();
   767   0019EE  EC96  F00C         	call	_LCD_Init	;wreg free
   768   0019F2                     
   769                           ;main.c: 30:     char strtime[100];;main.c: 31:     char strdate[100];;main.c: 32:     t
      +                          est_day();
   770   0019F2  EC14  F010         	call	_test_day	;wreg free
   771   0019F6                     l364:
   772                           
   773                           ;main.c: 35:         LCD_setline(1);
   774   0019F6  0E01               	movlw	1
   775   0019F8  EC6F  F00F         	call	_LCD_setline
   776   0019FC                     
   777                           ;main.c: 40:         increment();
   778   0019FC  EC6B  F00A         	call	_increment	;wreg free
   779   001A00                     
   780                           ;main.c: 41:         poweroff();
   781   001A00  EC38  F00F         	call	_poweroff	;wreg free
   782   001A04                     
   783                           ;main.c: 43:         time_adjuster(SR,SS);
   784   001A04  C048  F015         	movff	_SR,time_adjuster@sunrise_time
   785   001A08  C049  F016         	movff	_SR+1,time_adjuster@sunrise_time+1
   786   001A0C  C046  F017         	movff	_SS,time_adjuster@sunset_time
   787   001A10  C047  F018         	movff	_SS+1,time_adjuster@sunset_time+1
   788   001A14  EC2D  F00D         	call	_time_adjuster	;wreg free
   789   001A18                     
   790                           ;main.c: 44:         daylightsavings();
   791   001A18  EC70  F00D         	call	_daylightsavings	;wreg free
   792   001A1C                     
   793                           ;main.c: 45:         time2String(strdate,SS,SR,adjustment_of_day,AD,seconds);
   794   001A1C  0E00               	movlw	low main@strdate
   795   001A1E  0100               	movlb	0	; () banked
   796   001A20  6F9C               	movwf	time2String@buf& (0+255),b
   797   001A22  0E01               	movlw	high main@strdate
   798   001A24  6F9D               	movwf	(time2String@buf+1)& (0+255),b
   799   001A26  C046  F09E         	movff	_SS,time2String@h
   800   001A2A  C047  F09F         	movff	_SS+1,time2String@h+1
   801   001A2E  C048  F0A0         	movff	_SR,time2String@s
   802   001A32  C049  F0A1         	movff	_SR+1,time2String@s+1
   803   001A36  C04F  F0A2         	movff	_adjustment_of_day,time2String@d
   804   001A3A  C050  F0A3         	movff	_adjustment_of_day+1,time2String@d+1
   805   001A3E  C16A  F0A4         	movff	_AD,time2String@m
   806   001A42  C16B  F0A5         	movff	_AD+1,time2String@m+1
   807   001A46  C04A  F0A6         	movff	_seconds,time2String@y
   808   001A4A  C04B  F0A7         	movff	_seconds+1,time2String@y+1
   809   001A4E  EC23  F00E         	call	_time2String	;wreg free
   810   001A52  EFFB  F00C         	goto	l364
   811   001A56  EF35  F000         	goto	start
   812   001A5A                     __end_of_main:
   813                           	callstack 0
   814                           
   815 ;; *************** function _time_adjuster *****************
   816 ;; Defined at:
   817 ;;		line 126 in file "Functions.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;  sunrise_time    2   20[COMRAM] int 
   820 ;;  sunset_time     2   22[COMRAM] int 
   821 ;; Auto vars:     Size  Location     Type
   822 ;;  adjustment      2   26[COMRAM] int 
   823 ;;  solarnoon       2   24[COMRAM] int 
   824 ;; Return value:  Size  Location     Type
   825 ;;                  1    wreg      void 
   826 ;; Registers used:
   827 ;;		wreg, status,2, status,0, cstack
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   833 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   834 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   836 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   837 ;;Total ram usage:        8 bytes
   838 ;; Hardware stack levels used: 1
   839 ;; Hardware stack levels required when called: 4
   840 ;; This function calls:
   841 ;;		___awdiv
   842 ;; This function is called by:
   843 ;;		_main
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           	psect	text1
   848   001A5A                     __ptext1:
   849                           	callstack 0
   850   001A5A                     _time_adjuster:
   851                           	callstack 26
   852   001A5A                     
   853                           ;Functions.c: 129:     int adjustment = -2;
   854   001A5A  0EFF               	movlw	255
   855   001A5C  6E1C               	movwf	(time_adjuster@adjustment+1)^0,c
   856   001A5E  0EFE               	movlw	254
   857   001A60  6E1B               	movwf	time_adjuster@adjustment^0,c
   858   001A62                     
   859                           ;Functions.c: 130:     solarnoon = (sunrise_time + sunset_time) / 2;
   860   001A62  5017               	movf	time_adjuster@sunset_time^0,w,c
   861   001A64  2415               	addwf	time_adjuster@sunrise_time^0,w,c
   862   001A66  6E0D               	movwf	___awdiv@dividend^0,c
   863   001A68  5018               	movf	(time_adjuster@sunset_time+1)^0,w,c
   864   001A6A  2016               	addwfc	(time_adjuster@sunrise_time+1)^0,w,c
   865   001A6C  6E0E               	movwf	(___awdiv@dividend+1)^0,c
   866   001A6E  0E00               	movlw	0
   867   001A70  6E10               	movwf	(___awdiv@divisor+1)^0,c
   868   001A72  0E02               	movlw	2
   869   001A74  6E0F               	movwf	___awdiv@divisor^0,c
   870   001A76  ECE0  F00B         	call	___awdiv	;wreg free
   871   001A7A  C00D  F019         	movff	?___awdiv,time_adjuster@solarnoon
   872   001A7E  C00E  F01A         	movff	?___awdiv+1,time_adjuster@solarnoon+1
   873   001A82                     
   874                           ;Functions.c: 132:     if (hour == 23 && seconds == 5 && adjustment_of_day == 1)
   875   001A82  0E17               	movlw	23
   876   001A84  184D               	xorwf	_hour^0,w,c
   877   001A86  104E               	iorwf	(_hour+1)^0,w,c
   878   001A88  A4D8               	btfss	status,2,c
   879   001A8A  EF49  F00D         	goto	u2451
   880   001A8E  EF4B  F00D         	goto	u2450
   881   001A92                     u2451:
   882   001A92  EF66  F00D         	goto	l3072
   883   001A96                     u2450:
   884   001A96  0E05               	movlw	5
   885   001A98  184A               	xorwf	_seconds^0,w,c
   886   001A9A  104B               	iorwf	(_seconds+1)^0,w,c
   887   001A9C  A4D8               	btfss	status,2,c
   888   001A9E  EF53  F00D         	goto	u2461
   889   001AA2  EF55  F00D         	goto	u2460
   890   001AA6                     u2461:
   891   001AA6  EF66  F00D         	goto	l3072
   892   001AAA                     u2460:
   893   001AAA  044F               	decf	_adjustment_of_day^0,w,c
   894   001AAC  1050               	iorwf	(_adjustment_of_day+1)^0,w,c
   895   001AAE  A4D8               	btfss	status,2,c
   896   001AB0  EF5C  F00D         	goto	u2471
   897   001AB4  EF5E  F00D         	goto	u2470
   898   001AB8                     u2471:
   899   001AB8  EF66  F00D         	goto	l3072
   900   001ABC                     u2470:
   901   001ABC                     
   902                           ;Functions.c: 133:     {;Functions.c: 134:         seconds += adjustment;
   903   001ABC  0EFE               	movlw	254
   904   001ABE  264A               	addwf	_seconds^0,f,c
   905   001AC0  0EFF               	movlw	255
   906   001AC2  224B               	addwfc	(_seconds+1)^0,f,c
   907   001AC4                     
   908                           ;Functions.c: 135:         adjustment_of_day = 0;
   909   001AC4  0E00               	movlw	0
   910   001AC6  6E50               	movwf	(_adjustment_of_day+1)^0,c
   911   001AC8  0E00               	movlw	0
   912   001ACA  6E4F               	movwf	_adjustment_of_day^0,c
   913   001ACC                     l3072:
   914                           
   915                           ;Functions.c: 137:     SN = solarnoon;
   916   001ACC  C019  F168         	movff	time_adjuster@solarnoon,_SN
   917   001AD0  C01A  F169         	movff	time_adjuster@solarnoon+1,_SN+1
   918   001AD4                     
   919                           ;Functions.c: 138:     AD = adjustment;
   920   001AD4  0EFF               	movlw	255
   921   001AD6  0101               	movlb	1	; () banked
   922   001AD8  6F6B               	movwf	(_AD+1)& (0+255),b
   923   001ADA  0EFE               	movlw	254
   924   001ADC  6F6A               	movwf	_AD& (0+255),b
   925   001ADE                     
   926                           ; BSR set to: 1
   927   001ADE  0012               	return		;funcret
   928   001AE0                     __end_of_time_adjuster:
   929                           	callstack 0
   930                           
   931 ;; *************** function ___awdiv *****************
   932 ;; Defined at:
   933 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;  dividend        2   12[COMRAM] int 
   936 ;;  divisor         2   14[COMRAM] int 
   937 ;; Auto vars:     Size  Location     Type
   938 ;;  quotient        2   18[COMRAM] int 
   939 ;;  sign            1   17[COMRAM] unsigned char 
   940 ;;  counter         1   16[COMRAM] unsigned char 
   941 ;; Return value:  Size  Location     Type
   942 ;;                  2   12[COMRAM] int 
   943 ;; Registers used:
   944 ;;		wreg, status,2, status,0
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   950 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   951 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   953 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   954 ;;Total ram usage:        8 bytes
   955 ;; Hardware stack levels used: 1
   956 ;; Hardware stack levels required when called: 3
   957 ;; This function calls:
   958 ;;		Nothing
   959 ;; This function is called by:
   960 ;;		_time_adjuster
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           	psect	text2
   965   0017C0                     __ptext2:
   966                           	callstack 0
   967   0017C0                     ___awdiv:
   968                           	callstack 26
   969   0017C0  0E00               	movlw	0
   970   0017C2  6E12               	movwf	___awdiv@sign^0,c
   971   0017C4  BE10               	btfsc	(___awdiv@divisor+1)^0,7,c
   972   0017C6  EFE9  F00B         	goto	u2280
   973   0017CA  EFE7  F00B         	goto	u2281
   974   0017CE                     u2281:
   975   0017CE  EFEF  F00B         	goto	l2882
   976   0017D2                     u2280:
   977   0017D2  6C0F               	negf	___awdiv@divisor^0,c
   978   0017D4  1E10               	comf	(___awdiv@divisor+1)^0,f,c
   979   0017D6  B0D8               	btfsc	status,0,c
   980   0017D8  2A10               	incf	(___awdiv@divisor+1)^0,f,c
   981   0017DA  0E01               	movlw	1
   982   0017DC  6E12               	movwf	___awdiv@sign^0,c
   983   0017DE                     l2882:
   984   0017DE  BE0E               	btfsc	(___awdiv@dividend+1)^0,7,c
   985   0017E0  EFF6  F00B         	goto	u2290
   986   0017E4  EFF4  F00B         	goto	u2291
   987   0017E8                     u2291:
   988   0017E8  EFFC  F00B         	goto	l2888
   989   0017EC                     u2290:
   990   0017EC  6C0D               	negf	___awdiv@dividend^0,c
   991   0017EE  1E0E               	comf	(___awdiv@dividend+1)^0,f,c
   992   0017F0  B0D8               	btfsc	status,0,c
   993   0017F2  2A0E               	incf	(___awdiv@dividend+1)^0,f,c
   994   0017F4  0E01               	movlw	1
   995   0017F6  1A12               	xorwf	___awdiv@sign^0,f,c
   996   0017F8                     l2888:
   997   0017F8  0E00               	movlw	0
   998   0017FA  6E14               	movwf	(___awdiv@quotient+1)^0,c
   999   0017FC  0E00               	movlw	0
  1000   0017FE  6E13               	movwf	___awdiv@quotient^0,c
  1001   001800  500F               	movf	___awdiv@divisor^0,w,c
  1002   001802  1010               	iorwf	(___awdiv@divisor+1)^0,w,c
  1003   001804  B4D8               	btfsc	status,2,c
  1004   001806  EF07  F00C         	goto	u2301
  1005   00180A  EF09  F00C         	goto	u2300
  1006   00180E                     u2301:
  1007   00180E  EF31  F00C         	goto	l2910
  1008   001812                     u2300:
  1009   001812  0E01               	movlw	1
  1010   001814  6E11               	movwf	___awdiv@counter^0,c
  1011   001816  EF11  F00C         	goto	l2896
  1012   00181A                     l2894:
  1013   00181A  90D8               	bcf	status,0,c
  1014   00181C  360F               	rlcf	___awdiv@divisor^0,f,c
  1015   00181E  3610               	rlcf	(___awdiv@divisor+1)^0,f,c
  1016   001820  2A11               	incf	___awdiv@counter^0,f,c
  1017   001822                     l2896:
  1018   001822  AE10               	btfss	(___awdiv@divisor+1)^0,7,c
  1019   001824  EF16  F00C         	goto	u2311
  1020   001828  EF18  F00C         	goto	u2310
  1021   00182C                     u2311:
  1022   00182C  EF0D  F00C         	goto	l2894
  1023   001830                     u2310:
  1024   001830                     l2898:
  1025   001830  90D8               	bcf	status,0,c
  1026   001832  3613               	rlcf	___awdiv@quotient^0,f,c
  1027   001834  3614               	rlcf	(___awdiv@quotient+1)^0,f,c
  1028   001836  500F               	movf	___awdiv@divisor^0,w,c
  1029   001838  5C0D               	subwf	___awdiv@dividend^0,w,c
  1030   00183A  5010               	movf	(___awdiv@divisor+1)^0,w,c
  1031   00183C  580E               	subwfb	(___awdiv@dividend+1)^0,w,c
  1032   00183E  A0D8               	btfss	status,0,c
  1033   001840  EF24  F00C         	goto	u2321
  1034   001844  EF26  F00C         	goto	u2320
  1035   001848                     u2321:
  1036   001848  EF2B  F00C         	goto	l2906
  1037   00184C                     u2320:
  1038   00184C  500F               	movf	___awdiv@divisor^0,w,c
  1039   00184E  5E0D               	subwf	___awdiv@dividend^0,f,c
  1040   001850  5010               	movf	(___awdiv@divisor+1)^0,w,c
  1041   001852  5A0E               	subwfb	(___awdiv@dividend+1)^0,f,c
  1042   001854  8013               	bsf	___awdiv@quotient^0,0,c
  1043   001856                     l2906:
  1044   001856  90D8               	bcf	status,0,c
  1045   001858  3210               	rrcf	(___awdiv@divisor+1)^0,f,c
  1046   00185A  320F               	rrcf	___awdiv@divisor^0,f,c
  1047   00185C  2E11               	decfsz	___awdiv@counter^0,f,c
  1048   00185E  EF18  F00C         	goto	l2898
  1049   001862                     l2910:
  1050   001862  5012               	movf	___awdiv@sign^0,w,c
  1051   001864  B4D8               	btfsc	status,2,c
  1052   001866  EF37  F00C         	goto	u2331
  1053   00186A  EF39  F00C         	goto	u2330
  1054   00186E                     u2331:
  1055   00186E  EF3D  F00C         	goto	l2914
  1056   001872                     u2330:
  1057   001872  6C13               	negf	___awdiv@quotient^0,c
  1058   001874  1E14               	comf	(___awdiv@quotient+1)^0,f,c
  1059   001876  B0D8               	btfsc	status,0,c
  1060   001878  2A14               	incf	(___awdiv@quotient+1)^0,f,c
  1061   00187A                     l2914:
  1062   00187A  C013  F00D         	movff	___awdiv@quotient,?___awdiv
  1063   00187E  C014  F00E         	movff	___awdiv@quotient+1,?___awdiv+1
  1064   001882  0012               	return		;funcret
  1065   001884                     __end_of___awdiv:
  1066                           	callstack 0
  1067                           
  1068 ;; *************** function _time2String *****************
  1069 ;; Defined at:
  1070 ;;		line 133 in file "LCD.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;  buf             2   60[BANK0 ] PTR unsigned char 
  1073 ;;		 -> main@strdate(100), 
  1074 ;;  h               2   62[BANK0 ] unsigned int 
  1075 ;;  s               2   64[BANK0 ] unsigned int 
  1076 ;;  d               2   66[BANK0 ] unsigned int 
  1077 ;;  m               2   68[BANK0 ] unsigned int 
  1078 ;;  y               2   70[BANK0 ] unsigned int 
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;		None
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      void 
  1083 ;; Registers used:
  1084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1090 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1092 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1093 ;;      Totals:         2      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1094 ;;Total ram usage:       14 bytes
  1095 ;; Hardware stack levels used: 1
  1096 ;; Hardware stack levels required when called: 11
  1097 ;; This function calls:
  1098 ;;		_LCD_sendstring
  1099 ;;		_sprintf
  1100 ;; This function is called by:
  1101 ;;		_main
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text3
  1106   001C46                     __ptext3:
  1107                           	callstack 0
  1108   001C46                     _time2String:
  1109                           	callstack 19
  1110   001C46                     
  1111                           ;LCD.c: 140:     sprintf(buf,"%d %d %d %d %d",h,s,d,m,y);
  1112   001C46  C09C  F081         	movff	time2String@buf,sprintf@s
  1113   001C4A  C09D  F082         	movff	time2String@buf+1,sprintf@s+1
  1114   001C4E  0E01               	movlw	low STR_1
  1115   001C50  0100               	movlb	0	; () banked
  1116   001C52  6F83               	movwf	sprintf@fmt& (0+255),b
  1117   001C54  0E0E               	movlw	high STR_1
  1118   001C56  6F84               	movwf	(sprintf@fmt+1)& (0+255),b
  1119   001C58  C09E  F085         	movff	time2String@h,?_sprintf+4
  1120   001C5C  C09F  F086         	movff	time2String@h+1,?_sprintf+5
  1121   001C60  C0A0  F087         	movff	time2String@s,?_sprintf+6
  1122   001C64  C0A1  F088         	movff	time2String@s+1,?_sprintf+7
  1123   001C68  C0A2  F089         	movff	time2String@d,?_sprintf+8
  1124   001C6C  C0A3  F08A         	movff	time2String@d+1,?_sprintf+9
  1125   001C70  C0A4  F08B         	movff	time2String@m,?_sprintf+10
  1126   001C74  C0A5  F08C         	movff	time2String@m+1,?_sprintf+11
  1127   001C78  C0A6  F08D         	movff	time2String@y,?_sprintf+12
  1128   001C7C  C0A7  F08E         	movff	time2String@y+1,?_sprintf+13
  1129   001C80  EC86  F00E         	call	_sprintf	;wreg free
  1130   001C84                     
  1131                           ;LCD.c: 141:     LCD_sendstring(buf);
  1132   001C84  C09C  F010         	movff	time2String@buf,LCD_sendstring@string
  1133   001C88  C09D  F011         	movff	time2String@buf+1,LCD_sendstring@string+1
  1134   001C8C  EC55  F00F         	call	_LCD_sendstring	;wreg free
  1135   001C90                     
  1136                           ;LCD.c: 142:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1137   001C90  0E52               	movlw	82
  1138   001C92  6E45               	movwf	(??_time2String+1)^0,c
  1139   001C94  0E2B               	movlw	43
  1140   001C96  6E44               	movwf	??_time2String^0,c
  1141   001C98  0E00               	movlw	0
  1142   001C9A                     u2577:
  1143   001C9A  2EE8               	decfsz	wreg,f,c
  1144   001C9C  D7FE               	bra	u2577
  1145   001C9E  2E44               	decfsz	??_time2String^0,f,c
  1146   001CA0  D7FC               	bra	u2577
  1147   001CA2  2E45               	decfsz	(??_time2String+1)^0,f,c
  1148   001CA4  D7FA               	bra	u2577
  1149   001CA6  D000               	nop2	
  1150   001CA8  0012               	return		;funcret
  1151   001CAA                     __end_of_time2String:
  1152                           	callstack 0
  1153                           
  1154 ;; *************** function _sprintf *****************
  1155 ;; Defined at:
  1156 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;  s               2   33[BANK0 ] PTR unsigned char 
  1159 ;;		 -> main@strdate(100), 
  1160 ;;  fmt             2   35[BANK0 ] PTR const unsigned char 
  1161 ;;		 -> STR_1(15), 
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;  f              11   49[BANK0 ] struct _IO_FILE
  1164 ;;  ap              2   47[BANK0 ] PTR void [1]
  1165 ;;		 -> ?_sprintf(2), 
  1166 ;;  ret             2    0        int 
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  2   33[BANK0 ] int 
  1169 ;; Registers used:
  1170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1176 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1177 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1179 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1180 ;;Total ram usage:       27 bytes
  1181 ;; Hardware stack levels used: 1
  1182 ;; Hardware stack levels required when called: 10
  1183 ;; This function calls:
  1184 ;;		_vfprintf
  1185 ;; This function is called by:
  1186 ;;		_time2String
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           	psect	text4
  1191   001D0C                     __ptext4:
  1192                           	callstack 0
  1193   001D0C                     _sprintf:
  1194                           	callstack 19
  1195   001D0C  0E85               	movlw	low (?_sprintf+4)
  1196   001D0E  0100               	movlb	0	; () banked
  1197   001D10  6F8F               	movwf	sprintf@ap& (0+255),b
  1198   001D12  0E00               	movlw	high (?_sprintf+4)
  1199   001D14  6F90               	movwf	(sprintf@ap+1)& (0+255),b
  1200   001D16  C081  F091         	movff	sprintf@s,sprintf@f
  1201   001D1A  C082  F092         	movff	sprintf@s+1,sprintf@f+1
  1202   001D1E                     
  1203                           ; BSR set to: 0
  1204   001D1E  0E00               	movlw	0
  1205   001D20  6F95               	movwf	(sprintf@f+4)& (0+255),b
  1206   001D22  0E00               	movlw	0
  1207   001D24  6F94               	movwf	(sprintf@f+3)& (0+255),b
  1208   001D26                     
  1209                           ; BSR set to: 0
  1210   001D26  0E00               	movlw	0
  1211   001D28  6F9B               	movwf	(sprintf@f+10)& (0+255),b
  1212   001D2A  0E00               	movlw	0
  1213   001D2C  6F9A               	movwf	(sprintf@f+9)& (0+255),b
  1214   001D2E                     
  1215                           ; BSR set to: 0
  1216   001D2E  0E91               	movlw	low sprintf@f
  1217   001D30  6F7B               	movwf	vfprintf@fp& (0+255),b
  1218   001D32  0E00               	movlw	high sprintf@f
  1219   001D34  6F7C               	movwf	(vfprintf@fp+1)& (0+255),b
  1220   001D36  C083  F07D         	movff	sprintf@fmt,vfprintf@fmt
  1221   001D3A  C084  F07E         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1222   001D3E  0E8F               	movlw	low sprintf@ap
  1223   001D40  6F7F               	movwf	vfprintf@ap& (0+255),b
  1224   001D42  0E00               	movlw	high sprintf@ap
  1225   001D44  6F80               	movwf	(vfprintf@ap+1)& (0+255),b
  1226   001D46  ECAF  F00E         	call	_vfprintf	;wreg free
  1227   001D4A  0100               	movlb	0	; () banked
  1228   001D4C  5194               	movf	(sprintf@f+3)& (0+255),w,b
  1229   001D4E  2581               	addwf	sprintf@s& (0+255),w,b
  1230   001D50  6ED9               	movwf	fsr2l,c
  1231   001D52  5195               	movf	(sprintf@f+4)& (0+255),w,b
  1232   001D54  2182               	addwfc	(sprintf@s+1)& (0+255),w,b
  1233   001D56  6EDA               	movwf	fsr2h,c
  1234   001D58  0E00               	movlw	0
  1235   001D5A  6EDF               	movwf	indf2,c
  1236   001D5C                     
  1237                           ; BSR set to: 0
  1238   001D5C  0012               	return		;funcret
  1239   001D5E                     __end_of_sprintf:
  1240                           	callstack 0
  1241                           
  1242 ;; *************** function _vfprintf *****************
  1243 ;; Defined at:
  1244 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1245 ;; Parameters:    Size  Location     Type
  1246 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  1247 ;;		 -> sprintf@f(11), 
  1248 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
  1249 ;;		 -> STR_1(15), 
  1250 ;;  ap              2   31[BANK0 ] PTR PTR void 
  1251 ;;		 -> sprintf@ap(2), 
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;  cfmt            2   65[COMRAM] PTR unsigned char 
  1254 ;;		 -> STR_1(15), 
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  2   27[BANK0 ] int 
  1257 ;; Registers used:
  1258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1264 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1265 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1267 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1268 ;;Total ram usage:        8 bytes
  1269 ;; Hardware stack levels used: 1
  1270 ;; Hardware stack levels required when called: 9
  1271 ;; This function calls:
  1272 ;;		_vfpfcnvrt
  1273 ;; This function is called by:
  1274 ;;		_sprintf
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           	psect	text5
  1279   001D5E                     __ptext5:
  1280                           	callstack 0
  1281   001D5E                     _vfprintf:
  1282                           	callstack 19
  1283   001D5E                     
  1284                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1285   001D5E  C07D  F042         	movff	vfprintf@fmt,vfprintf@cfmt
  1286   001D62  C07E  F043         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1287                           
  1288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1289   001D66  EFC3  F00E         	goto	l2824
  1290   001D6A                     l2822:
  1291                           
  1292                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1293   001D6A  C07B  F03A         	movff	vfprintf@fp,vfpfcnvrt@fp
  1294   001D6E  C07C  F03B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1295   001D72  0E42               	movlw	low vfprintf@cfmt
  1296   001D74  6E3C               	movwf	vfpfcnvrt@fmt^0,c
  1297   001D76  0E00               	movlw	high vfprintf@cfmt
  1298   001D78  6E3D               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1299   001D7A  C07F  F03E         	movff	vfprintf@ap,vfpfcnvrt@ap
  1300   001D7E  C080  F03F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1301   001D82  ECC3  F009         	call	_vfpfcnvrt	;wreg free
  1302   001D86                     l2824:
  1303                           
  1304                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1305   001D86  C042  FFF6         	movff	vfprintf@cfmt,tblptrl
  1306   001D8A  C043  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1307   001D8E                     	if	0	;tblptru may be non-zero
  1308   001D8E                     	endif
  1309   001D8E                     	if	0	;tblptru may be non-zero
  1310   001D8E                     	endif
  1311   001D8E  0008               	tblrd		*
  1312   001D90  50F5               	movf	tablat,w,c
  1313   001D92  0900               	iorlw	0
  1314   001D94  A4D8               	btfss	status,2,c
  1315   001D96  EFCF  F00E         	goto	u2151
  1316   001D9A  EFD1  F00E         	goto	u2150
  1317   001D9E                     u2151:
  1318   001D9E  EFB5  F00E         	goto	l2822
  1319   001DA2                     u2150:
  1320   001DA2                     
  1321                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1322   001DA2  0E00               	movlw	0
  1323   001DA4  0100               	movlb	0	; () banked
  1324   001DA6  6F7C               	movwf	(?_vfprintf+1)& (0+255),b
  1325   001DA8  0E00               	movlw	0
  1326   001DAA  6F7B               	movwf	?_vfprintf& (0+255),b
  1327   001DAC                     
  1328                           ; BSR set to: 0
  1329   001DAC  0012               	return		;funcret
  1330   001DAE                     __end_of_vfprintf:
  1331                           	callstack 0
  1332                           
  1333 ;; *************** function _vfpfcnvrt *****************
  1334 ;; Defined at:
  1335 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;  fp              2   57[COMRAM] PTR struct _IO_FILE
  1338 ;;		 -> sprintf@f(11), 
  1339 ;;  fmt             2   59[COMRAM] PTR PTR unsigned char 
  1340 ;;		 -> vfprintf@cfmt(2), 
  1341 ;;  ap              2   61[COMRAM] PTR PTR void 
  1342 ;;		 -> sprintf@ap(2), 
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  convarg         8   17[BANK0 ] struct .
  1345 ;;  cp              2   25[BANK0 ] PTR unsigned char 
  1346 ;;		 -> STR_1(15), 
  1347 ;;  i               2    0        int 
  1348 ;;  done            2    0        int 
  1349 ;;  c               1    0        unsigned char 
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  1    wreg      void 
  1352 ;; Registers used:
  1353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1359 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1360 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1361 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1362 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1363 ;;Total ram usage:       18 bytes
  1364 ;; Hardware stack levels used: 1
  1365 ;; Hardware stack levels required when called: 8
  1366 ;; This function calls:
  1367 ;;		_dtoa
  1368 ;;		_fputc
  1369 ;; This function is called by:
  1370 ;;		_vfprintf
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           	psect	text6
  1375   001386                     __ptext6:
  1376                           	callstack 0
  1377   001386                     _vfpfcnvrt:
  1378                           	callstack 19
  1379   001386                     
  1380                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1381   001386  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1382   00138A  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1383   00138E  CFDE FFF6          	movff	postinc2,tblptrl
  1384   001392  CFDD FFF7          	movff	postdec2,tblptrh
  1385   001396                     	if	0	;tblptru may be non-zero
  1386   001396                     	endif
  1387   001396                     	if	0	;tblptru may be non-zero
  1388   001396                     	endif
  1389   001396  0008               	tblrd		*
  1390   001398  50F5               	movf	tablat,w,c
  1391   00139A  0A25               	xorlw	37
  1392   00139C  A4D8               	btfss	status,2,c
  1393   00139E  EFD3  F009         	goto	u2111
  1394   0013A2  EFD5  F009         	goto	u2110
  1395   0013A6                     u2111:
  1396   0013A6  EF56  F00A         	goto	l2804
  1397   0013AA                     u2110:
  1398   0013AA                     
  1399                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1400   0013AA  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1401   0013AE  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1402   0013B2  2ADE               	incf	postinc2,f,c
  1403   0013B4  0E00               	movlw	0
  1404   0013B6  22DD               	addwfc	postdec2,f,c
  1405   0013B8                     
  1406                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1407   0013B8  0E00               	movlw	0
  1408   0013BA  0101               	movlb	1	; () banked
  1409   0013BC  6F65               	movwf	(_width+1)& (0+255),b
  1410   0013BE  0E00               	movlw	0
  1411   0013C0  6F64               	movwf	_width& (0+255),b
  1412   0013C2  C164  F04C         	movff	_width,_flags
  1413   0013C6                     
  1414                           ; BSR set to: 1
  1415                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1416   0013C6  6966               	setf	_prec& (0+255),b
  1417   0013C8  6967               	setf	(_prec+1)& (0+255),b
  1418   0013CA                     
  1419                           ; BSR set to: 1
  1420                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1421   0013CA  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1422   0013CE  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1423   0013D2  CFDE F079          	movff	postinc2,vfpfcnvrt@cp
  1424   0013D6  CFDD F07A          	movff	postdec2,vfpfcnvrt@cp+1
  1425   0013DA                     
  1426                           ; BSR set to: 1
  1427                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1428   0013DA  C079  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1429   0013DE  C07A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1430   0013E2                     	if	0	;tblptru may be non-zero
  1431   0013E2                     	endif
  1432   0013E2                     	if	0	;tblptru may be non-zero
  1433   0013E2                     	endif
  1434   0013E2  0008               	tblrd		*
  1435   0013E4  50F5               	movf	tablat,w,c
  1436   0013E6  0A64               	xorlw	100
  1437   0013E8  B4D8               	btfsc	status,2,c
  1438   0013EA  EFF9  F009         	goto	u2121
  1439   0013EE  EFFB  F009         	goto	u2120
  1440   0013F2                     u2121:
  1441   0013F2  EF09  F00A         	goto	l2794
  1442   0013F6                     u2120:
  1443   0013F6                     
  1444                           ; BSR set to: 1
  1445   0013F6  C079  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1446   0013FA  C07A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1447   0013FE                     	if	0	;tblptru may be non-zero
  1448   0013FE                     	endif
  1449   0013FE                     	if	0	;tblptru may be non-zero
  1450   0013FE                     	endif
  1451   0013FE  0008               	tblrd		*
  1452   001400  50F5               	movf	tablat,w,c
  1453   001402  0A69               	xorlw	105
  1454   001404  A4D8               	btfss	status,2,c
  1455   001406  EF07  F00A         	goto	u2131
  1456   00140A  EF09  F00A         	goto	u2130
  1457   00140E                     u2131:
  1458   00140E  EF4D  F00A         	goto	l2800
  1459   001412                     u2130:
  1460   001412                     l2794:
  1461                           
  1462                           ; BSR set to: 1
  1463                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1464   001412  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1465   001416  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1466   00141A  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1467   00141E  0E02               	movlw	2
  1468   001420  26DE               	addwf	postinc2,f,c
  1469   001422  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1470   001426  0E00               	movlw	0
  1471   001428  22DD               	addwfc	postdec2,f,c
  1472   00142A  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1473   00142E  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1474   001432  CFDE F071          	movff	postinc2,vfpfcnvrt@convarg
  1475   001436  CFDD F072          	movff	postdec2,vfpfcnvrt@convarg+1
  1476   00143A  0100               	movlb	0	; () banked
  1477   00143C  0E00               	movlw	0
  1478   00143E  BF72               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  1479   001440  0EFF               	movlw	-1
  1480   001442  6F73               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  1481   001444  6F74               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  1482   001446  6F75               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  1483   001448  6F76               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  1484   00144A  6F77               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  1485   00144C  6F78               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  1486                           
  1487                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1488   00144E  0E01               	movlw	1
  1489   001450  2579               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1490   001452  6E40               	movwf	??_vfpfcnvrt^0,c
  1491   001454  0E00               	movlw	0
  1492   001456  217A               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1493   001458  6E41               	movwf	(??_vfpfcnvrt+1)^0,c
  1494   00145A  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1495   00145E  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1496   001462  C040  FFDE         	movff	??_vfpfcnvrt,postinc2
  1497   001466  C041  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1498   00146A                     
  1499                           ; BSR set to: 0
  1500                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1501   00146A  C03A  F028         	movff	vfpfcnvrt@fp,dtoa@fp
  1502   00146E  C03B  F029         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1503   001472  C071  F02A         	movff	vfpfcnvrt@convarg,dtoa@d
  1504   001476  C072  F02B         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1505   00147A  C073  F02C         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1506   00147E  C074  F02D         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1507   001482  C075  F02E         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1508   001486  C076  F02F         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1509   00148A  C077  F030         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1510   00148E  C078  F031         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1511   001492  EC09  F007         	call	_dtoa	;wreg free
  1512   001496  EF6A  F00A         	goto	l1334
  1513   00149A                     l2800:
  1514                           
  1515                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1516   00149A  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1517   00149E  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1518   0014A2  2ADE               	incf	postinc2,f,c
  1519   0014A4  0E00               	movlw	0
  1520   0014A6  22DD               	addwfc	postdec2,f,c
  1521   0014A8  EF6A  F00A         	goto	l1334
  1522   0014AC                     l2804:
  1523                           
  1524                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1525   0014AC  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1526   0014B0  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1527   0014B4  CFDE FFF6          	movff	postinc2,tblptrl
  1528   0014B8  CFDD FFF7          	movff	postdec2,tblptrh
  1529   0014BC                     	if	0	;tblptru may be non-zero
  1530   0014BC                     	endif
  1531   0014BC                     	if	0	;tblptru may be non-zero
  1532   0014BC                     	endif
  1533   0014BC  0008               	tblrd		*
  1534   0014BE  50F5               	movf	tablat,w,c
  1535   0014C0  6E0D               	movwf	fputc@c^0,c
  1536   0014C2  6A0E               	clrf	(fputc@c+1)^0,c
  1537   0014C4  C03A  F00F         	movff	vfpfcnvrt@fp,fputc@fp
  1538   0014C8  C03B  F010         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1539   0014CC  EC7B  F00B         	call	_fputc	;wreg free
  1540   0014D0  EF4D  F00A         	goto	l2800
  1541   0014D4                     l1334:
  1542   0014D4  0012               	return		;funcret
  1543   0014D6                     __end_of_vfpfcnvrt:
  1544                           	callstack 0
  1545                           
  1546 ;; *************** function _dtoa *****************
  1547 ;; Defined at:
  1548 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;  fp              2   39[COMRAM] PTR struct _IO_FILE
  1551 ;;		 -> sprintf@f(11), 
  1552 ;;  d               8   41[COMRAM] long long 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  n               8    6[BANK0 ] long long 
  1555 ;;  i               2   15[BANK0 ] int 
  1556 ;;  w               2    4[BANK0 ] int 
  1557 ;;  p               2    2[BANK0 ] int 
  1558 ;;  s               1   14[BANK0 ] unsigned char 
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  1    wreg      void 
  1561 ;; Registers used:
  1562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1568 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1569 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1570 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1571 ;;      Totals:        18      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1572 ;;Total ram usage:       35 bytes
  1573 ;; Hardware stack levels used: 1
  1574 ;; Hardware stack levels required when called: 7
  1575 ;; This function calls:
  1576 ;;		___aodiv
  1577 ;;		___aomod
  1578 ;;		_abs
  1579 ;;		_pad
  1580 ;; This function is called by:
  1581 ;;		_vfpfcnvrt
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585                           	psect	text7
  1586   000E12                     __ptext7:
  1587                           	callstack 0
  1588   000E12                     _dtoa:
  1589                           	callstack 19
  1590   000E12                     
  1591                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1592   000E12  C02A  F066         	movff	dtoa@d,dtoa@n
  1593   000E16  C02B  F067         	movff	dtoa@d+1,dtoa@n+1
  1594   000E1A  C02C  F068         	movff	dtoa@d+2,dtoa@n+2
  1595   000E1E  C02D  F069         	movff	dtoa@d+3,dtoa@n+3
  1596   000E22  C02E  F06A         	movff	dtoa@d+4,dtoa@n+4
  1597   000E26  C02F  F06B         	movff	dtoa@d+5,dtoa@n+5
  1598   000E2A  C030  F06C         	movff	dtoa@d+6,dtoa@n+6
  1599   000E2E  C031  F06D         	movff	dtoa@d+7,dtoa@n+7
  1600   000E32                     
  1601                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1602   000E32  0100               	movlb	0	; () banked
  1603   000E34  BF6D               	btfsc	(dtoa@n+7)& (0+255),7,b
  1604   000E36  EF1F  F007         	goto	u1971
  1605   000E3A  EF22  F007         	goto	u1970
  1606   000E3E                     u1971:
  1607   000E3E  0E01               	movlw	1
  1608   000E40  EF23  F007         	goto	u1980
  1609   000E44                     u1970:
  1610   000E44  0E00               	movlw	0
  1611   000E46                     u1980:
  1612   000E46  6F6E               	movwf	dtoa@s& (0+255),b
  1613   000E48                     
  1614                           ; BSR set to: 0
  1615                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1616   000E48  516E               	movf	dtoa@s& (0+255),w,b
  1617   000E4A  B4D8               	btfsc	status,2,c
  1618   000E4C  EF2A  F007         	goto	u1991
  1619   000E50  EF2C  F007         	goto	u1990
  1620   000E54                     u1991:
  1621   000E54  EF3C  F007         	goto	l2716
  1622   000E58                     u1990:
  1623   000E58                     
  1624                           ; BSR set to: 0
  1625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1626   000E58  1F6D               	comf	(dtoa@n+7)& (0+255),f,b
  1627   000E5A  1F6C               	comf	(dtoa@n+6)& (0+255),f,b
  1628   000E5C  1F6B               	comf	(dtoa@n+5)& (0+255),f,b
  1629   000E5E  1F6A               	comf	(dtoa@n+4)& (0+255),f,b
  1630   000E60  1F69               	comf	(dtoa@n+3)& (0+255),f,b
  1631   000E62  1F68               	comf	(dtoa@n+2)& (0+255),f,b
  1632   000E64  1F67               	comf	(dtoa@n+1)& (0+255),f,b
  1633   000E66  6D66               	negf	dtoa@n& (0+255),b
  1634   000E68  0E00               	movlw	0
  1635   000E6A  2367               	addwfc	(dtoa@n+1)& (0+255),f,b
  1636   000E6C  2368               	addwfc	(dtoa@n+2)& (0+255),f,b
  1637   000E6E  2369               	addwfc	(dtoa@n+3)& (0+255),f,b
  1638   000E70  236A               	addwfc	(dtoa@n+4)& (0+255),f,b
  1639   000E72  236B               	addwfc	(dtoa@n+5)& (0+255),f,b
  1640   000E74  236C               	addwfc	(dtoa@n+6)& (0+255),f,b
  1641   000E76  236D               	addwfc	(dtoa@n+7)& (0+255),f,b
  1642   000E78                     l2716:
  1643                           
  1644                           ; BSR set to: 0
  1645                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1646   000E78  0101               	movlb	1	; () banked
  1647   000E7A  BF67               	btfsc	(_prec+1)& (0+255),7,b
  1648   000E7C  EF4A  F007         	goto	u2000
  1649   000E80  5167               	movf	(_prec+1)& (0+255),w,b
  1650   000E82  E106               	bnz	u2001
  1651   000E84  0566               	decf	_prec& (0+255),w,b
  1652   000E86  B0D8               	btfsc	status,0,c
  1653   000E88  EF48  F007         	goto	u2001
  1654   000E8C  EF4A  F007         	goto	u2000
  1655   000E90                     u2001:
  1656   000E90  EF51  F007         	goto	l1313
  1657   000E94                     u2000:
  1658   000E94                     
  1659                           ; BSR set to: 1
  1660   000E94  0E00               	movlw	0
  1661   000E96  0100               	movlb	0	; () banked
  1662   000E98  6F63               	movwf	(dtoa@p+1)& (0+255),b
  1663   000E9A  0E01               	movlw	1
  1664   000E9C  6F62               	movwf	dtoa@p& (0+255),b
  1665   000E9E  EF55  F007         	goto	l1315
  1666   000EA2                     l1313:
  1667                           
  1668                           ; BSR set to: 1
  1669   000EA2  C166  F062         	movff	_prec,dtoa@p
  1670   000EA6  C167  F063         	movff	_prec+1,dtoa@p+1
  1671   000EAA                     l1315:
  1672                           
  1673                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1674   000EAA  C164  F064         	movff	_width,dtoa@w
  1675   000EAE  C165  F065         	movff	_width+1,dtoa@w+1
  1676   000EB2                     
  1677                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1678   000EB2  0100               	movlb	0	; () banked
  1679   000EB4  516E               	movf	dtoa@s& (0+255),w,b
  1680   000EB6  B4D8               	btfsc	status,2,c
  1681   000EB8  EF60  F007         	goto	u2011
  1682   000EBC  EF62  F007         	goto	u2010
  1683   000EC0                     u2011:
  1684   000EC0  EF79  F007         	goto	l1316
  1685   000EC4                     u2010:
  1686   000EC4                     
  1687                           ; BSR set to: 0
  1688                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1689   000EC4  0764               	decf	dtoa@w& (0+255),f,b
  1690   000EC6  A0D8               	btfss	status,0,c
  1691   000EC8  0765               	decf	(dtoa@w+1)& (0+255),f,b
  1692   000ECA                     
  1693                           ; BSR set to: 0
  1694                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1695   000ECA  516E               	movf	dtoa@s& (0+255),w,b
  1696   000ECC  A4D8               	btfss	status,2,c
  1697   000ECE  EF6B  F007         	goto	u2021
  1698   000ED2  EF6D  F007         	goto	u2020
  1699   000ED6                     u2021:
  1700   000ED6  EF73  F007         	goto	l2728
  1701   000EDA                     u2020:
  1702   000EDA                     
  1703                           ; BSR set to: 0
  1704   000EDA  0E00               	movlw	0
  1705   000EDC  6F61               	movwf	(_dtoa$2093+1)& (0+255),b
  1706   000EDE  0E2B               	movlw	43
  1707   000EE0  6F60               	movwf	_dtoa$2093& (0+255),b
  1708   000EE2  EF77  F007         	goto	l2730
  1709   000EE6                     l2728:
  1710                           
  1711                           ; BSR set to: 0
  1712   000EE6  0E00               	movlw	0
  1713   000EE8  6F61               	movwf	(_dtoa$2093+1)& (0+255),b
  1714   000EEA  0E2D               	movlw	45
  1715   000EEC  6F60               	movwf	_dtoa$2093& (0+255),b
  1716   000EEE                     l2730:
  1717                           
  1718                           ; BSR set to: 0
  1719   000EEE  C060  F06E         	movff	_dtoa$2093,dtoa@s
  1720   000EF2                     l1316:
  1721                           
  1722                           ; BSR set to: 0
  1723                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1724   000EF2  0E00               	movlw	0
  1725   000EF4  6F70               	movwf	(dtoa@i+1)& (0+255),b
  1726   000EF6  0E1F               	movlw	31
  1727   000EF8  6F6F               	movwf	dtoa@i& (0+255),b
  1728   000EFA                     
  1729                           ; BSR set to: 0
  1730                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1731   000EFA  0E00               	movlw	0
  1732   000EFC  0101               	movlb	1	; () banked
  1733   000EFE  6F91               	movwf	(_dbuf+31)& (0+255),b
  1734                           
  1735                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1736   000F00  EFFF  F007         	goto	l2744
  1737   000F04                     l2734:
  1738                           
  1739                           ; BSR set to: 0
  1740                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1741   000F04  076F               	decf	dtoa@i& (0+255),f,b
  1742   000F06  A0D8               	btfss	status,0,c
  1743   000F08  0770               	decf	(dtoa@i+1)& (0+255),f,b
  1744   000F0A                     
  1745                           ; BSR set to: 0
  1746                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1747   000F0A  0E72               	movlw	low _dbuf
  1748   000F0C  256F               	addwf	dtoa@i& (0+255),w,b
  1749   000F0E  6ED9               	movwf	fsr2l,c
  1750   000F10  0E01               	movlw	high _dbuf
  1751   000F12  2170               	addwfc	(dtoa@i+1)& (0+255),w,b
  1752   000F14  6EDA               	movwf	fsr2h,c
  1753   000F16  C066  F00D         	movff	dtoa@n,___aomod@dividend
  1754   000F1A  C067  F00E         	movff	dtoa@n+1,___aomod@dividend+1
  1755   000F1E  C068  F00F         	movff	dtoa@n+2,___aomod@dividend+2
  1756   000F22  C069  F010         	movff	dtoa@n+3,___aomod@dividend+3
  1757   000F26  C06A  F011         	movff	dtoa@n+4,___aomod@dividend+4
  1758   000F2A  C06B  F012         	movff	dtoa@n+5,___aomod@dividend+5
  1759   000F2E  C06C  F013         	movff	dtoa@n+6,___aomod@dividend+6
  1760   000F32  C06D  F014         	movff	dtoa@n+7,___aomod@dividend+7
  1761   000F36  0E0A               	movlw	10
  1762   000F38  6E15               	movwf	___aomod@divisor^0,c
  1763   000F3A  0E00               	movlw	0
  1764   000F3C  6E16               	movwf	(___aomod@divisor+1)^0,c
  1765   000F3E  0E00               	movlw	0
  1766   000F40  6E17               	movwf	(___aomod@divisor+2)^0,c
  1767   000F42  0E00               	movlw	0
  1768   000F44  6E18               	movwf	(___aomod@divisor+3)^0,c
  1769   000F46  0E00               	movlw	0
  1770   000F48  6E19               	movwf	(___aomod@divisor+4)^0,c
  1771   000F4A  0E00               	movlw	0
  1772   000F4C  6E1A               	movwf	(___aomod@divisor+5)^0,c
  1773   000F4E  0E00               	movlw	0
  1774   000F50  6E1B               	movwf	(___aomod@divisor+6)^0,c
  1775   000F52  0E00               	movlw	0
  1776   000F54  6E1C               	movwf	(___aomod@divisor+7)^0,c
  1777   000F56  EC11  F009         	call	___aomod	;wreg free
  1778   000F5A  C00D  F032         	movff	?___aomod,??_dtoa
  1779   000F5E  C00E  F033         	movff	?___aomod+1,??_dtoa+1
  1780   000F62  C00F  F034         	movff	?___aomod+2,??_dtoa+2
  1781   000F66  C010  F035         	movff	?___aomod+3,??_dtoa+3
  1782   000F6A  C011  F036         	movff	?___aomod+4,??_dtoa+4
  1783   000F6E  C012  F037         	movff	?___aomod+5,??_dtoa+5
  1784   000F72  C013  F038         	movff	?___aomod+6,??_dtoa+6
  1785   000F76  C014  F039         	movff	?___aomod+7,??_dtoa+7
  1786   000F7A  C032  F01F         	movff	??_dtoa,abs@a
  1787   000F7E  C033  F020         	movff	??_dtoa+1,abs@a+1
  1788   000F82  ECF9  F00E         	call	_abs	;wreg free
  1789   000F86  501F               	movf	?_abs^0,w,c
  1790   000F88  0F30               	addlw	48
  1791   000F8A  6EDF               	movwf	indf2,c
  1792   000F8C                     
  1793                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1794   000F8C  0100               	movlb	0	; () banked
  1795   000F8E  0762               	decf	dtoa@p& (0+255),f,b
  1796   000F90  A0D8               	btfss	status,0,c
  1797   000F92  0763               	decf	(dtoa@p+1)& (0+255),f,b
  1798   000F94                     
  1799                           ; BSR set to: 0
  1800                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1801   000F94  0764               	decf	dtoa@w& (0+255),f,b
  1802   000F96  A0D8               	btfss	status,0,c
  1803   000F98  0765               	decf	(dtoa@w+1)& (0+255),f,b
  1804   000F9A                     
  1805                           ; BSR set to: 0
  1806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1807   000F9A  C066  F00D         	movff	dtoa@n,___aodiv@dividend
  1808   000F9E  C067  F00E         	movff	dtoa@n+1,___aodiv@dividend+1
  1809   000FA2  C068  F00F         	movff	dtoa@n+2,___aodiv@dividend+2
  1810   000FA6  C069  F010         	movff	dtoa@n+3,___aodiv@dividend+3
  1811   000FAA  C06A  F011         	movff	dtoa@n+4,___aodiv@dividend+4
  1812   000FAE  C06B  F012         	movff	dtoa@n+5,___aodiv@dividend+5
  1813   000FB2  C06C  F013         	movff	dtoa@n+6,___aodiv@dividend+6
  1814   000FB6  C06D  F014         	movff	dtoa@n+7,___aodiv@dividend+7
  1815   000FBA  0E0A               	movlw	10
  1816   000FBC  6E15               	movwf	___aodiv@divisor^0,c
  1817   000FBE  0E00               	movlw	0
  1818   000FC0  6E16               	movwf	(___aodiv@divisor+1)^0,c
  1819   000FC2  0E00               	movlw	0
  1820   000FC4  6E17               	movwf	(___aodiv@divisor+2)^0,c
  1821   000FC6  0E00               	movlw	0
  1822   000FC8  6E18               	movwf	(___aodiv@divisor+3)^0,c
  1823   000FCA  0E00               	movlw	0
  1824   000FCC  6E19               	movwf	(___aodiv@divisor+4)^0,c
  1825   000FCE  0E00               	movlw	0
  1826   000FD0  6E1A               	movwf	(___aodiv@divisor+5)^0,c
  1827   000FD2  0E00               	movlw	0
  1828   000FD4  6E1B               	movwf	(___aodiv@divisor+6)^0,c
  1829   000FD6  0E00               	movlw	0
  1830   000FD8  6E1C               	movwf	(___aodiv@divisor+7)^0,c
  1831   000FDA  EC4D  F008         	call	___aodiv	;wreg free
  1832   000FDE  C00D  F066         	movff	?___aodiv,dtoa@n
  1833   000FE2  C00E  F067         	movff	?___aodiv+1,dtoa@n+1
  1834   000FE6  C00F  F068         	movff	?___aodiv+2,dtoa@n+2
  1835   000FEA  C010  F069         	movff	?___aodiv+3,dtoa@n+3
  1836   000FEE  C011  F06A         	movff	?___aodiv+4,dtoa@n+4
  1837   000FF2  C012  F06B         	movff	?___aodiv+5,dtoa@n+5
  1838   000FF6  C013  F06C         	movff	?___aodiv+6,dtoa@n+6
  1839   000FFA  C014  F06D         	movff	?___aodiv+7,dtoa@n+7
  1840   000FFE                     l2744:
  1841                           
  1842                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1843   000FFE  0100               	movlb	0	; () banked
  1844   001000  BF70               	btfsc	(dtoa@i+1)& (0+255),7,b
  1845   001002  EF0B  F008         	goto	u2031
  1846   001006  5170               	movf	(dtoa@i+1)& (0+255),w,b
  1847   001008  E108               	bnz	u2030
  1848   00100A  056F               	decf	dtoa@i& (0+255),w,b
  1849   00100C  A0D8               	btfss	status,0,c
  1850   00100E  EF0B  F008         	goto	u2031
  1851   001012  EF0D  F008         	goto	u2030
  1852   001016                     u2031:
  1853   001016  EF29  F008         	goto	l2750
  1854   00101A                     u2030:
  1855   00101A                     
  1856                           ; BSR set to: 0
  1857   00101A  5166               	movf	dtoa@n& (0+255),w,b
  1858   00101C  1167               	iorwf	(dtoa@n+1)& (0+255),w,b
  1859   00101E  1168               	iorwf	(dtoa@n+2)& (0+255),w,b
  1860   001020  1169               	iorwf	(dtoa@n+3)& (0+255),w,b
  1861   001022  116A               	iorwf	(dtoa@n+4)& (0+255),w,b
  1862   001024  116B               	iorwf	(dtoa@n+5)& (0+255),w,b
  1863   001026  116C               	iorwf	(dtoa@n+6)& (0+255),w,b
  1864   001028  116D               	iorwf	(dtoa@n+7)& (0+255),w,b
  1865   00102A  A4D8               	btfss	status,2,c
  1866   00102C  EF1A  F008         	goto	u2041
  1867   001030  EF1C  F008         	goto	u2040
  1868   001034                     u2041:
  1869   001034  EF82  F007         	goto	l2734
  1870   001038                     u2040:
  1871   001038                     
  1872                           ; BSR set to: 0
  1873   001038  BF63               	btfsc	(dtoa@p+1)& (0+255),7,b
  1874   00103A  EF29  F008         	goto	u2050
  1875   00103E  5163               	movf	(dtoa@p+1)& (0+255),w,b
  1876   001040  E106               	bnz	u2051
  1877   001042  0562               	decf	dtoa@p& (0+255),w,b
  1878   001044  B0D8               	btfsc	status,0,c
  1879   001046  EF27  F008         	goto	u2051
  1880   00104A  EF29  F008         	goto	u2050
  1881   00104E                     u2051:
  1882   00104E  EF82  F007         	goto	l2734
  1883   001052                     u2050:
  1884   001052                     l2750:
  1885                           
  1886                           ; BSR set to: 0
  1887                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1888   001052  516E               	movf	dtoa@s& (0+255),w,b
  1889   001054  B4D8               	btfsc	status,2,c
  1890   001056  EF2F  F008         	goto	u2061
  1891   00105A  EF31  F008         	goto	u2060
  1892   00105E                     u2061:
  1893   00105E  EF3C  F008         	goto	l2756
  1894   001062                     u2060:
  1895   001062                     
  1896                           ; BSR set to: 0
  1897                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1898   001062  076F               	decf	dtoa@i& (0+255),f,b
  1899   001064  A0D8               	btfss	status,0,c
  1900   001066  0770               	decf	(dtoa@i+1)& (0+255),f,b
  1901   001068                     
  1902                           ; BSR set to: 0
  1903                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1904   001068  0E72               	movlw	low _dbuf
  1905   00106A  256F               	addwf	dtoa@i& (0+255),w,b
  1906   00106C  6ED9               	movwf	fsr2l,c
  1907   00106E  0E01               	movlw	high _dbuf
  1908   001070  2170               	addwfc	(dtoa@i+1)& (0+255),w,b
  1909   001072  6EDA               	movwf	fsr2h,c
  1910   001074  C06E  FFDF         	movff	dtoa@s,indf2
  1911   001078                     l2756:
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1915   001078  C028  F01D         	movff	dtoa@fp,pad@fp
  1916   00107C  C029  F01E         	movff	dtoa@fp+1,pad@fp+1
  1917   001080  0E72               	movlw	low _dbuf
  1918   001082  256F               	addwf	dtoa@i& (0+255),w,b
  1919   001084  6E1F               	movwf	pad@buf^0,c
  1920   001086  0E01               	movlw	high _dbuf
  1921   001088  2170               	addwfc	(dtoa@i+1)& (0+255),w,b
  1922   00108A  6E20               	movwf	(pad@buf+1)^0,c
  1923   00108C  C064  F021         	movff	dtoa@w,pad@p
  1924   001090  C065  F022         	movff	dtoa@w+1,pad@p+1
  1925   001094  ECB2  F00D         	call	_pad	;wreg free
  1926   001098  0012               	return		;funcret
  1927   00109A                     __end_of_dtoa:
  1928                           	callstack 0
  1929                           
  1930 ;; *************** function _pad *****************
  1931 ;; Defined at:
  1932 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  1935 ;;		 -> sprintf@f(11), 
  1936 ;;  buf             2   30[COMRAM] PTR unsigned char 
  1937 ;;		 -> dbuf(32), 
  1938 ;;  p               2   32[COMRAM] int 
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;  w               2   37[COMRAM] int 
  1941 ;;  i               2   35[COMRAM] int 
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  1    wreg      void 
  1944 ;; Registers used:
  1945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1951 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1952 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1953 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1954 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1955 ;;Total ram usage:       11 bytes
  1956 ;; Hardware stack levels used: 1
  1957 ;; Hardware stack levels required when called: 6
  1958 ;; This function calls:
  1959 ;;		_fputc
  1960 ;;		_fputs
  1961 ;; This function is called by:
  1962 ;;		_dtoa
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           	psect	text8
  1967   001B64                     __ptext8:
  1968                           	callstack 0
  1969   001B64                     _pad:
  1970                           	callstack 19
  1971   001B64                     
  1972                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1973   001B64  BE22               	btfsc	(pad@p+1)^0,7,c
  1974   001B66  EFB7  F00D         	goto	u1941
  1975   001B6A  EFB9  F00D         	goto	u1940
  1976   001B6E                     u1941:
  1977   001B6E  EFBF  F00D         	goto	l2688
  1978   001B72                     u1940:
  1979   001B72  C021  F026         	movff	pad@p,pad@w
  1980   001B76  C022  F027         	movff	pad@p+1,pad@w+1
  1981   001B7A  EFC3  F00D         	goto	l1304
  1982   001B7E                     l2688:
  1983   001B7E  0E00               	movlw	0
  1984   001B80  6E27               	movwf	(pad@w+1)^0,c
  1985   001B82  0E00               	movlw	0
  1986   001B84  6E26               	movwf	pad@w^0,c
  1987   001B86                     l1304:
  1988                           
  1989                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1990   001B86  0E00               	movlw	0
  1991   001B88  6E25               	movwf	(pad@i+1)^0,c
  1992   001B8A  0E00               	movlw	0
  1993   001B8C  6E24               	movwf	pad@i^0,c
  1994                           
  1995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1996   001B8E  EFD5  F00D         	goto	l2694
  1997   001B92                     l2690:
  1998                           
  1999                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2000   001B92  0E00               	movlw	0
  2001   001B94  6E0E               	movwf	(fputc@c+1)^0,c
  2002   001B96  0E20               	movlw	32
  2003   001B98  6E0D               	movwf	fputc@c^0,c
  2004   001B9A  C01D  F00F         	movff	pad@fp,fputc@fp
  2005   001B9E  C01E  F010         	movff	pad@fp+1,fputc@fp+1
  2006   001BA2  EC7B  F00B         	call	_fputc	;wreg free
  2007   001BA6                     
  2008                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2009   001BA6  4A24               	infsnz	pad@i^0,f,c
  2010   001BA8  2A25               	incf	(pad@i+1)^0,f,c
  2011   001BAA                     l2694:
  2012                           
  2013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2014   001BAA  5026               	movf	pad@w^0,w,c
  2015   001BAC  5C24               	subwf	pad@i^0,w,c
  2016   001BAE  5025               	movf	(pad@i+1)^0,w,c
  2017   001BB0  0A80               	xorlw	128
  2018   001BB2  6E23               	movwf	??_pad^0,c
  2019   001BB4  5027               	movf	(pad@w+1)^0,w,c
  2020   001BB6  0A80               	xorlw	128
  2021   001BB8  5823               	subwfb	??_pad^0,w,c
  2022   001BBA  A0D8               	btfss	status,0,c
  2023   001BBC  EFE2  F00D         	goto	u1951
  2024   001BC0  EFE4  F00D         	goto	u1950
  2025   001BC4                     u1951:
  2026   001BC4  EFC9  F00D         	goto	l2690
  2027   001BC8                     u1950:
  2028   001BC8                     
  2029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2030   001BC8  C01F  F016         	movff	pad@buf,fputs@s
  2031   001BCC  C020  F017         	movff	pad@buf+1,fputs@s+1
  2032   001BD0  C01D  F018         	movff	pad@fp,fputs@fp
  2033   001BD4  C01E  F019         	movff	pad@fp+1,fputs@fp+1
  2034   001BD8  ECD7  F00E         	call	_fputs	;wreg free
  2035   001BDC  0012               	return		;funcret
  2036   001BDE                     __end_of_pad:
  2037                           	callstack 0
  2038                           
  2039 ;; *************** function _fputs *****************
  2040 ;; Defined at:
  2041 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;  s               2   21[COMRAM] PTR const unsigned char 
  2044 ;;		 -> dbuf(32), 
  2045 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  2046 ;;		 -> sprintf@f(11), 
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;  i               2   26[COMRAM] int 
  2049 ;;  c               1   25[COMRAM] unsigned char 
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  2   21[COMRAM] int 
  2052 ;; Registers used:
  2053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2059 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2060 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2062 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2063 ;;Total ram usage:        7 bytes
  2064 ;; Hardware stack levels used: 1
  2065 ;; Hardware stack levels required when called: 5
  2066 ;; This function calls:
  2067 ;;		_fputc
  2068 ;; This function is called by:
  2069 ;;		_pad
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	text9
  2074   001DAE                     __ptext9:
  2075                           	callstack 0
  2076   001DAE                     _fputs:
  2077                           	callstack 19
  2078   001DAE  0E00               	movlw	0
  2079   001DB0  6E1C               	movwf	(fputs@i+1)^0,c
  2080   001DB2  0E00               	movlw	0
  2081   001DB4  6E1B               	movwf	fputs@i^0,c
  2082   001DB6  EFE8  F00E         	goto	l2602
  2083   001DBA                     l2598:
  2084   001DBA  C01A  F00D         	movff	fputs@c,fputc@c
  2085   001DBE  6A0E               	clrf	(fputc@c+1)^0,c
  2086   001DC0  C018  F00F         	movff	fputs@fp,fputc@fp
  2087   001DC4  C019  F010         	movff	fputs@fp+1,fputc@fp+1
  2088   001DC8  EC7B  F00B         	call	_fputc	;wreg free
  2089   001DCC  4A1B               	infsnz	fputs@i^0,f,c
  2090   001DCE  2A1C               	incf	(fputs@i+1)^0,f,c
  2091   001DD0                     l2602:
  2092   001DD0  501B               	movf	fputs@i^0,w,c
  2093   001DD2  2416               	addwf	fputs@s^0,w,c
  2094   001DD4  6ED9               	movwf	fsr2l,c
  2095   001DD6  501C               	movf	(fputs@i+1)^0,w,c
  2096   001DD8  2017               	addwfc	(fputs@s+1)^0,w,c
  2097   001DDA  6EDA               	movwf	fsr2h,c
  2098   001DDC  50DF               	movf	indf2,w,c
  2099   001DDE  6E1A               	movwf	fputs@c^0,c
  2100   001DE0  501A               	movf	fputs@c^0,w,c
  2101   001DE2  A4D8               	btfss	status,2,c
  2102   001DE4  EFF6  F00E         	goto	u1801
  2103   001DE8  EFF8  F00E         	goto	u1800
  2104   001DEC                     u1801:
  2105   001DEC  EFDD  F00E         	goto	l2598
  2106   001DF0                     u1800:
  2107   001DF0  0012               	return		;funcret
  2108   001DF2                     __end_of_fputs:
  2109                           	callstack 0
  2110                           
  2111 ;; *************** function _fputc *****************
  2112 ;; Defined at:
  2113 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;  c               2   12[COMRAM] int 
  2116 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  2117 ;;		 -> sprintf@f(11), 
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;		None
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  2   12[COMRAM] int 
  2122 ;; Registers used:
  2123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2129 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2131 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2132 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2133 ;;Total ram usage:        9 bytes
  2134 ;; Hardware stack levels used: 1
  2135 ;; Hardware stack levels required when called: 4
  2136 ;; This function calls:
  2137 ;;		_putch
  2138 ;; This function is called by:
  2139 ;;		_pad
  2140 ;;		_vfpfcnvrt
  2141 ;;		_fputs
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           	psect	text10
  2146   0016F6                     __ptext10:
  2147                           	callstack 0
  2148   0016F6                     _fputc:
  2149                           	callstack 22
  2150   0016F6  500F               	movf	fputc@fp^0,w,c
  2151   0016F8  1010               	iorwf	(fputc@fp+1)^0,w,c
  2152   0016FA  B4D8               	btfsc	status,2,c
  2153   0016FC  EF82  F00B         	goto	u1761
  2154   001700  EF84  F00B         	goto	u1760
  2155   001704                     u1761:
  2156   001704  EF8D  F00B         	goto	l2586
  2157   001708                     u1760:
  2158   001708  500F               	movf	fputc@fp^0,w,c
  2159   00170A  1010               	iorwf	(fputc@fp+1)^0,w,c
  2160   00170C  A4D8               	btfss	status,2,c
  2161   00170E  EF8B  F00B         	goto	u1771
  2162   001712  EF8D  F00B         	goto	u1770
  2163   001716                     u1771:
  2164   001716  EF92  F00B         	goto	l2588
  2165   00171A                     u1770:
  2166   00171A                     l2586:
  2167   00171A  500D               	movf	fputc@c^0,w,c
  2168   00171C  EC3C  F010         	call	_putch
  2169   001720  EFDF  F00B         	goto	l1359
  2170   001724                     l2588:
  2171   001724  EE20 F009          	lfsr	2,9
  2172   001728  500F               	movf	fputc@fp^0,w,c
  2173   00172A  26D9               	addwf	fsr2l,f,c
  2174   00172C  5010               	movf	(fputc@fp+1)^0,w,c
  2175   00172E  22DA               	addwfc	fsr2h,f,c
  2176   001730  50DE               	movf	postinc2,w,c
  2177   001732  10DE               	iorwf	postinc2,w,c
  2178   001734  B4D8               	btfsc	status,2,c
  2179   001736  EF9F  F00B         	goto	u1781
  2180   00173A  EFA1  F00B         	goto	u1780
  2181   00173E                     u1781:
  2182   00173E  EFBC  F00B         	goto	l2592
  2183   001742                     u1780:
  2184   001742  EE20 F009          	lfsr	2,9
  2185   001746  500F               	movf	fputc@fp^0,w,c
  2186   001748  26D9               	addwf	fsr2l,f,c
  2187   00174A  5010               	movf	(fputc@fp+1)^0,w,c
  2188   00174C  22DA               	addwfc	fsr2h,f,c
  2189   00174E  EE10 F003          	lfsr	1,3
  2190   001752  500F               	movf	fputc@fp^0,w,c
  2191   001754  26E1               	addwf	fsr1l,f,c
  2192   001756  5010               	movf	(fputc@fp+1)^0,w,c
  2193   001758  22E2               	addwfc	fsr1h,f,c
  2194   00175A  50DE               	movf	postinc2,w,c
  2195   00175C  5CE6               	subwf	postinc1,w,c
  2196   00175E  50E6               	movf	postinc1,w,c
  2197   001760  0A80               	xorlw	128
  2198   001762  6E15               	movwf	(??_fputc+4)^0,c
  2199   001764  50DE               	movf	postinc2,w,c
  2200   001766  0A80               	xorlw	128
  2201   001768  5815               	subwfb	(??_fputc+4)^0,w,c
  2202   00176A  B0D8               	btfsc	status,0,c
  2203   00176C  EFBA  F00B         	goto	u1791
  2204   001770  EFBC  F00B         	goto	u1790
  2205   001774                     u1791:
  2206   001774  EFDF  F00B         	goto	l1359
  2207   001778                     u1790:
  2208   001778                     l2592:
  2209   001778  EE20 F003          	lfsr	2,3
  2210   00177C  500F               	movf	fputc@fp^0,w,c
  2211   00177E  26D9               	addwf	fsr2l,f,c
  2212   001780  5010               	movf	(fputc@fp+1)^0,w,c
  2213   001782  22DA               	addwfc	fsr2h,f,c
  2214   001784  CFDE F011          	movff	postinc2,??_fputc
  2215   001788  CFDD F012          	movff	postdec2,??_fputc+1
  2216   00178C  C00F  FFD9         	movff	fputc@fp,fsr2l
  2217   001790  C010  FFDA         	movff	fputc@fp+1,fsr2h
  2218   001794  CFDE F013          	movff	postinc2,??_fputc+2
  2219   001798  CFDD F014          	movff	postdec2,??_fputc+3
  2220   00179C  5011               	movf	??_fputc^0,w,c
  2221   00179E  2413               	addwf	(??_fputc+2)^0,w,c
  2222   0017A0  6ED9               	movwf	fsr2l,c
  2223   0017A2  5012               	movf	(??_fputc+1)^0,w,c
  2224   0017A4  2014               	addwfc	(??_fputc+3)^0,w,c
  2225   0017A6  6EDA               	movwf	fsr2h,c
  2226   0017A8  C00D  FFDF         	movff	fputc@c,indf2
  2227   0017AC  EE20 F003          	lfsr	2,3
  2228   0017B0  500F               	movf	fputc@fp^0,w,c
  2229   0017B2  26D9               	addwf	fsr2l,f,c
  2230   0017B4  5010               	movf	(fputc@fp+1)^0,w,c
  2231   0017B6  22DA               	addwfc	fsr2h,f,c
  2232   0017B8  2ADE               	incf	postinc2,f,c
  2233   0017BA  0E00               	movlw	0
  2234   0017BC  22DD               	addwfc	postdec2,f,c
  2235   0017BE                     l1359:
  2236   0017BE  0012               	return		;funcret
  2237   0017C0                     __end_of_fputc:
  2238                           	callstack 0
  2239                           
  2240 ;; *************** function _putch *****************
  2241 ;; Defined at:
  2242 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;  c               1    wreg     unsigned char 
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;  c               1    0[COMRAM] unsigned char 
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1    wreg      void 
  2249 ;; Registers used:
  2250 ;;		wreg
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2260 ;;Total ram usage:        0 bytes
  2261 ;; Hardware stack levels used: 1
  2262 ;; Hardware stack levels required when called: 3
  2263 ;; This function calls:
  2264 ;;		Nothing
  2265 ;; This function is called by:
  2266 ;;		_fputc
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           	psect	text11
  2271   002078                     __ptext11:
  2272                           	callstack 0
  2273   002078                     _putch:
  2274                           	callstack 22
  2275   002078  0012               	return		;funcret
  2276   00207A                     __end_of_putch:
  2277                           	callstack 0
  2278                           
  2279 ;; *************** function _abs *****************
  2280 ;; Defined at:
  2281 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;  a               2   30[COMRAM] int 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;		None
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  2   30[COMRAM] int 
  2288 ;; Registers used:
  2289 ;;		wreg, status,2, status,0
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2295 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2297 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2298 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2299 ;;Total ram usage:        4 bytes
  2300 ;; Hardware stack levels used: 1
  2301 ;; Hardware stack levels required when called: 3
  2302 ;; This function calls:
  2303 ;;		Nothing
  2304 ;; This function is called by:
  2305 ;;		_dtoa
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           	psect	text12
  2310   001DF2                     __ptext12:
  2311                           	callstack 0
  2312   001DF2                     _abs:
  2313                           	callstack 22
  2314   001DF2  BE20               	btfsc	(abs@a+1)^0,7,c
  2315   001DF4  EF06  F00F         	goto	u1960
  2316   001DF8  5020               	movf	(abs@a+1)^0,w,c
  2317   001DFA  E106               	bnz	u1961
  2318   001DFC  041F               	decf	abs@a^0,w,c
  2319   001DFE  B0D8               	btfsc	status,0,c
  2320   001E00  EF04  F00F         	goto	u1961
  2321   001E04  EF06  F00F         	goto	u1960
  2322   001E08                     u1961:
  2323   001E08  EF14  F00F         	goto	l1344
  2324   001E0C                     u1960:
  2325   001E0C  C01F  F021         	movff	abs@a,??_abs
  2326   001E10  C020  F022         	movff	abs@a+1,??_abs+1
  2327   001E14  1E21               	comf	??_abs^0,f,c
  2328   001E16  1E22               	comf	(??_abs+1)^0,f,c
  2329   001E18  4A21               	infsnz	??_abs^0,f,c
  2330   001E1A  2A22               	incf	(??_abs+1)^0,f,c
  2331   001E1C  C021  F01F         	movff	??_abs,?_abs
  2332   001E20  C022  F020         	movff	??_abs+1,?_abs+1
  2333   001E24  EF18  F00F         	goto	l1347
  2334   001E28                     l1344:
  2335   001E28  C01F  F01F         	movff	abs@a,?_abs
  2336   001E2C  C020  F020         	movff	abs@a+1,?_abs+1
  2337   001E30                     l1347:
  2338   001E30  0012               	return		;funcret
  2339   001E32                     __end_of_abs:
  2340                           	callstack 0
  2341                           
  2342 ;; *************** function ___aomod *****************
  2343 ;; Defined at:
  2344 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;  dividend        8   12[COMRAM] long long 
  2347 ;;  divisor         8   20[COMRAM] long long 
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;  sign            1   29[COMRAM] unsigned char 
  2350 ;;  counter         1   28[COMRAM] unsigned char 
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  8   12[COMRAM] long long 
  2353 ;; Registers used:
  2354 ;;		wreg, status,2, status,0
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2360 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2361 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2363 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2364 ;;Total ram usage:       18 bytes
  2365 ;; Hardware stack levels used: 1
  2366 ;; Hardware stack levels required when called: 3
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_dtoa
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           	psect	text13
  2375   001222                     __ptext13:
  2376                           	callstack 0
  2377   001222                     ___aomod:
  2378                           	callstack 22
  2379   001222  0E00               	movlw	0
  2380   001224  6E1E               	movwf	___aomod@sign^0,c
  2381   001226  BE14               	btfsc	(___aomod@dividend+7)^0,7,c
  2382   001228  EF1A  F009         	goto	u1880
  2383   00122C  EF18  F009         	goto	u1881
  2384   001230                     u1881:
  2385   001230  EF2C  F009         	goto	l2656
  2386   001234                     u1880:
  2387   001234  1E14               	comf	(___aomod@dividend+7)^0,f,c
  2388   001236  1E13               	comf	(___aomod@dividend+6)^0,f,c
  2389   001238  1E12               	comf	(___aomod@dividend+5)^0,f,c
  2390   00123A  1E11               	comf	(___aomod@dividend+4)^0,f,c
  2391   00123C  1E10               	comf	(___aomod@dividend+3)^0,f,c
  2392   00123E  1E0F               	comf	(___aomod@dividend+2)^0,f,c
  2393   001240  1E0E               	comf	(___aomod@dividend+1)^0,f,c
  2394   001242  6C0D               	negf	___aomod@dividend^0,c
  2395   001244  0E00               	movlw	0
  2396   001246  220E               	addwfc	(___aomod@dividend+1)^0,f,c
  2397   001248  220F               	addwfc	(___aomod@dividend+2)^0,f,c
  2398   00124A  2210               	addwfc	(___aomod@dividend+3)^0,f,c
  2399   00124C  2211               	addwfc	(___aomod@dividend+4)^0,f,c
  2400   00124E  2212               	addwfc	(___aomod@dividend+5)^0,f,c
  2401   001250  2213               	addwfc	(___aomod@dividend+6)^0,f,c
  2402   001252  2214               	addwfc	(___aomod@dividend+7)^0,f,c
  2403   001254  0E01               	movlw	1
  2404   001256  6E1E               	movwf	___aomod@sign^0,c
  2405   001258                     l2656:
  2406   001258  BE1C               	btfsc	(___aomod@divisor+7)^0,7,c
  2407   00125A  EF33  F009         	goto	u1890
  2408   00125E  EF31  F009         	goto	u1891
  2409   001262                     u1891:
  2410   001262  EF43  F009         	goto	l2660
  2411   001266                     u1890:
  2412   001266  1E1C               	comf	(___aomod@divisor+7)^0,f,c
  2413   001268  1E1B               	comf	(___aomod@divisor+6)^0,f,c
  2414   00126A  1E1A               	comf	(___aomod@divisor+5)^0,f,c
  2415   00126C  1E19               	comf	(___aomod@divisor+4)^0,f,c
  2416   00126E  1E18               	comf	(___aomod@divisor+3)^0,f,c
  2417   001270  1E17               	comf	(___aomod@divisor+2)^0,f,c
  2418   001272  1E16               	comf	(___aomod@divisor+1)^0,f,c
  2419   001274  6C15               	negf	___aomod@divisor^0,c
  2420   001276  0E00               	movlw	0
  2421   001278  2216               	addwfc	(___aomod@divisor+1)^0,f,c
  2422   00127A  2217               	addwfc	(___aomod@divisor+2)^0,f,c
  2423   00127C  2218               	addwfc	(___aomod@divisor+3)^0,f,c
  2424   00127E  2219               	addwfc	(___aomod@divisor+4)^0,f,c
  2425   001280  221A               	addwfc	(___aomod@divisor+5)^0,f,c
  2426   001282  221B               	addwfc	(___aomod@divisor+6)^0,f,c
  2427   001284  221C               	addwfc	(___aomod@divisor+7)^0,f,c
  2428   001286                     l2660:
  2429   001286  5015               	movf	___aomod@divisor^0,w,c
  2430   001288  1016               	iorwf	(___aomod@divisor+1)^0,w,c
  2431   00128A  1017               	iorwf	(___aomod@divisor+2)^0,w,c
  2432   00128C  1018               	iorwf	(___aomod@divisor+3)^0,w,c
  2433   00128E  1019               	iorwf	(___aomod@divisor+4)^0,w,c
  2434   001290  101A               	iorwf	(___aomod@divisor+5)^0,w,c
  2435   001292  101B               	iorwf	(___aomod@divisor+6)^0,w,c
  2436   001294  101C               	iorwf	(___aomod@divisor+7)^0,w,c
  2437   001296  B4D8               	btfsc	status,2,c
  2438   001298  EF50  F009         	goto	u1901
  2439   00129C  EF52  F009         	goto	u1900
  2440   0012A0                     u1901:
  2441   0012A0  EF9A  F009         	goto	l2676
  2442   0012A4                     u1900:
  2443   0012A4  0E01               	movlw	1
  2444   0012A6  6E1D               	movwf	___aomod@counter^0,c
  2445   0012A8  EF60  F009         	goto	l2666
  2446   0012AC                     l2664:
  2447   0012AC  90D8               	bcf	status,0,c
  2448   0012AE  3615               	rlcf	___aomod@divisor^0,f,c
  2449   0012B0  3616               	rlcf	(___aomod@divisor+1)^0,f,c
  2450   0012B2  3617               	rlcf	(___aomod@divisor+2)^0,f,c
  2451   0012B4  3618               	rlcf	(___aomod@divisor+3)^0,f,c
  2452   0012B6  3619               	rlcf	(___aomod@divisor+4)^0,f,c
  2453   0012B8  361A               	rlcf	(___aomod@divisor+5)^0,f,c
  2454   0012BA  361B               	rlcf	(___aomod@divisor+6)^0,f,c
  2455   0012BC  361C               	rlcf	(___aomod@divisor+7)^0,f,c
  2456   0012BE  2A1D               	incf	___aomod@counter^0,f,c
  2457   0012C0                     l2666:
  2458   0012C0  AE1C               	btfss	(___aomod@divisor+7)^0,7,c
  2459   0012C2  EF65  F009         	goto	u1911
  2460   0012C6  EF67  F009         	goto	u1910
  2461   0012CA                     u1911:
  2462   0012CA  EF56  F009         	goto	l2664
  2463   0012CE                     u1910:
  2464   0012CE                     l2668:
  2465   0012CE  5015               	movf	___aomod@divisor^0,w,c
  2466   0012D0  5C0D               	subwf	___aomod@dividend^0,w,c
  2467   0012D2  5016               	movf	(___aomod@divisor+1)^0,w,c
  2468   0012D4  580E               	subwfb	(___aomod@dividend+1)^0,w,c
  2469   0012D6  5017               	movf	(___aomod@divisor+2)^0,w,c
  2470   0012D8  580F               	subwfb	(___aomod@dividend+2)^0,w,c
  2471   0012DA  5018               	movf	(___aomod@divisor+3)^0,w,c
  2472   0012DC  5810               	subwfb	(___aomod@dividend+3)^0,w,c
  2473   0012DE  5019               	movf	(___aomod@divisor+4)^0,w,c
  2474   0012E0  5811               	subwfb	(___aomod@dividend+4)^0,w,c
  2475   0012E2  501A               	movf	(___aomod@divisor+5)^0,w,c
  2476   0012E4  5812               	subwfb	(___aomod@dividend+5)^0,w,c
  2477   0012E6  501B               	movf	(___aomod@divisor+6)^0,w,c
  2478   0012E8  5813               	subwfb	(___aomod@dividend+6)^0,w,c
  2479   0012EA  501C               	movf	(___aomod@divisor+7)^0,w,c
  2480   0012EC  5814               	subwfb	(___aomod@dividend+7)^0,w,c
  2481   0012EE  A0D8               	btfss	status,0,c
  2482   0012F0  EF7C  F009         	goto	u1921
  2483   0012F4  EF7E  F009         	goto	u1920
  2484   0012F8                     u1921:
  2485   0012F8  EF8E  F009         	goto	l2672
  2486   0012FC                     u1920:
  2487   0012FC  5015               	movf	___aomod@divisor^0,w,c
  2488   0012FE  5E0D               	subwf	___aomod@dividend^0,f,c
  2489   001300  5016               	movf	(___aomod@divisor+1)^0,w,c
  2490   001302  5A0E               	subwfb	(___aomod@dividend+1)^0,f,c
  2491   001304  5017               	movf	(___aomod@divisor+2)^0,w,c
  2492   001306  5A0F               	subwfb	(___aomod@dividend+2)^0,f,c
  2493   001308  5018               	movf	(___aomod@divisor+3)^0,w,c
  2494   00130A  5A10               	subwfb	(___aomod@dividend+3)^0,f,c
  2495   00130C  5019               	movf	(___aomod@divisor+4)^0,w,c
  2496   00130E  5A11               	subwfb	(___aomod@dividend+4)^0,f,c
  2497   001310  501A               	movf	(___aomod@divisor+5)^0,w,c
  2498   001312  5A12               	subwfb	(___aomod@dividend+5)^0,f,c
  2499   001314  501B               	movf	(___aomod@divisor+6)^0,w,c
  2500   001316  5A13               	subwfb	(___aomod@dividend+6)^0,f,c
  2501   001318  501C               	movf	(___aomod@divisor+7)^0,w,c
  2502   00131A  5A14               	subwfb	(___aomod@dividend+7)^0,f,c
  2503   00131C                     l2672:
  2504   00131C  90D8               	bcf	status,0,c
  2505   00131E  321C               	rrcf	(___aomod@divisor+7)^0,f,c
  2506   001320  321B               	rrcf	(___aomod@divisor+6)^0,f,c
  2507   001322  321A               	rrcf	(___aomod@divisor+5)^0,f,c
  2508   001324  3219               	rrcf	(___aomod@divisor+4)^0,f,c
  2509   001326  3218               	rrcf	(___aomod@divisor+3)^0,f,c
  2510   001328  3217               	rrcf	(___aomod@divisor+2)^0,f,c
  2511   00132A  3216               	rrcf	(___aomod@divisor+1)^0,f,c
  2512   00132C  3215               	rrcf	___aomod@divisor^0,f,c
  2513   00132E  2E1D               	decfsz	___aomod@counter^0,f,c
  2514   001330  EF67  F009         	goto	l2668
  2515   001334                     l2676:
  2516   001334  501E               	movf	___aomod@sign^0,w,c
  2517   001336  B4D8               	btfsc	status,2,c
  2518   001338  EFA0  F009         	goto	u1931
  2519   00133C  EFA2  F009         	goto	u1930
  2520   001340                     u1931:
  2521   001340  EFB2  F009         	goto	l2680
  2522   001344                     u1930:
  2523   001344  1E14               	comf	(___aomod@dividend+7)^0,f,c
  2524   001346  1E13               	comf	(___aomod@dividend+6)^0,f,c
  2525   001348  1E12               	comf	(___aomod@dividend+5)^0,f,c
  2526   00134A  1E11               	comf	(___aomod@dividend+4)^0,f,c
  2527   00134C  1E10               	comf	(___aomod@dividend+3)^0,f,c
  2528   00134E  1E0F               	comf	(___aomod@dividend+2)^0,f,c
  2529   001350  1E0E               	comf	(___aomod@dividend+1)^0,f,c
  2530   001352  6C0D               	negf	___aomod@dividend^0,c
  2531   001354  0E00               	movlw	0
  2532   001356  220E               	addwfc	(___aomod@dividend+1)^0,f,c
  2533   001358  220F               	addwfc	(___aomod@dividend+2)^0,f,c
  2534   00135A  2210               	addwfc	(___aomod@dividend+3)^0,f,c
  2535   00135C  2211               	addwfc	(___aomod@dividend+4)^0,f,c
  2536   00135E  2212               	addwfc	(___aomod@dividend+5)^0,f,c
  2537   001360  2213               	addwfc	(___aomod@dividend+6)^0,f,c
  2538   001362  2214               	addwfc	(___aomod@dividend+7)^0,f,c
  2539   001364                     l2680:
  2540   001364  C00D  F00D         	movff	___aomod@dividend,?___aomod
  2541   001368  C00E  F00E         	movff	___aomod@dividend+1,?___aomod+1
  2542   00136C  C00F  F00F         	movff	___aomod@dividend+2,?___aomod+2
  2543   001370  C010  F010         	movff	___aomod@dividend+3,?___aomod+3
  2544   001374  C011  F011         	movff	___aomod@dividend+4,?___aomod+4
  2545   001378  C012  F012         	movff	___aomod@dividend+5,?___aomod+5
  2546   00137C  C013  F013         	movff	___aomod@dividend+6,?___aomod+6
  2547   001380  C014  F014         	movff	___aomod@dividend+7,?___aomod+7
  2548   001384  0012               	return		;funcret
  2549   001386                     __end_of___aomod:
  2550                           	callstack 0
  2551                           
  2552 ;; *************** function ___aodiv *****************
  2553 ;; Defined at:
  2554 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;  dividend        8   12[COMRAM] long long 
  2557 ;;  divisor         8   20[COMRAM] long long 
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;  quotient        8   30[COMRAM] long long 
  2560 ;;  sign            1   29[COMRAM] unsigned char 
  2561 ;;  counter         1   28[COMRAM] unsigned char 
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  8   12[COMRAM] long long 
  2564 ;; Registers used:
  2565 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2571 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2572 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2574 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2575 ;;Total ram usage:       26 bytes
  2576 ;; Hardware stack levels used: 1
  2577 ;; Hardware stack levels required when called: 3
  2578 ;; This function calls:
  2579 ;;		Nothing
  2580 ;; This function is called by:
  2581 ;;		_dtoa
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           	psect	text14
  2586   00109A                     __ptext14:
  2587                           	callstack 0
  2588   00109A                     ___aodiv:
  2589                           	callstack 22
  2590   00109A  0E00               	movlw	0
  2591   00109C  6E1E               	movwf	___aodiv@sign^0,c
  2592   00109E  BE1C               	btfsc	(___aodiv@divisor+7)^0,7,c
  2593   0010A0  EF56  F008         	goto	u1810
  2594   0010A4  EF54  F008         	goto	u1811
  2595   0010A8                     u1811:
  2596   0010A8  EF68  F008         	goto	l2612
  2597   0010AC                     u1810:
  2598   0010AC  1E1C               	comf	(___aodiv@divisor+7)^0,f,c
  2599   0010AE  1E1B               	comf	(___aodiv@divisor+6)^0,f,c
  2600   0010B0  1E1A               	comf	(___aodiv@divisor+5)^0,f,c
  2601   0010B2  1E19               	comf	(___aodiv@divisor+4)^0,f,c
  2602   0010B4  1E18               	comf	(___aodiv@divisor+3)^0,f,c
  2603   0010B6  1E17               	comf	(___aodiv@divisor+2)^0,f,c
  2604   0010B8  1E16               	comf	(___aodiv@divisor+1)^0,f,c
  2605   0010BA  6C15               	negf	___aodiv@divisor^0,c
  2606   0010BC  0E00               	movlw	0
  2607   0010BE  2216               	addwfc	(___aodiv@divisor+1)^0,f,c
  2608   0010C0  2217               	addwfc	(___aodiv@divisor+2)^0,f,c
  2609   0010C2  2218               	addwfc	(___aodiv@divisor+3)^0,f,c
  2610   0010C4  2219               	addwfc	(___aodiv@divisor+4)^0,f,c
  2611   0010C6  221A               	addwfc	(___aodiv@divisor+5)^0,f,c
  2612   0010C8  221B               	addwfc	(___aodiv@divisor+6)^0,f,c
  2613   0010CA  221C               	addwfc	(___aodiv@divisor+7)^0,f,c
  2614   0010CC  0E01               	movlw	1
  2615   0010CE  6E1E               	movwf	___aodiv@sign^0,c
  2616   0010D0                     l2612:
  2617   0010D0  BE14               	btfsc	(___aodiv@dividend+7)^0,7,c
  2618   0010D2  EF6F  F008         	goto	u1820
  2619   0010D6  EF6D  F008         	goto	u1821
  2620   0010DA                     u1821:
  2621   0010DA  EF81  F008         	goto	l2618
  2622   0010DE                     u1820:
  2623   0010DE  1E14               	comf	(___aodiv@dividend+7)^0,f,c
  2624   0010E0  1E13               	comf	(___aodiv@dividend+6)^0,f,c
  2625   0010E2  1E12               	comf	(___aodiv@dividend+5)^0,f,c
  2626   0010E4  1E11               	comf	(___aodiv@dividend+4)^0,f,c
  2627   0010E6  1E10               	comf	(___aodiv@dividend+3)^0,f,c
  2628   0010E8  1E0F               	comf	(___aodiv@dividend+2)^0,f,c
  2629   0010EA  1E0E               	comf	(___aodiv@dividend+1)^0,f,c
  2630   0010EC  6C0D               	negf	___aodiv@dividend^0,c
  2631   0010EE  0E00               	movlw	0
  2632   0010F0  220E               	addwfc	(___aodiv@dividend+1)^0,f,c
  2633   0010F2  220F               	addwfc	(___aodiv@dividend+2)^0,f,c
  2634   0010F4  2210               	addwfc	(___aodiv@dividend+3)^0,f,c
  2635   0010F6  2211               	addwfc	(___aodiv@dividend+4)^0,f,c
  2636   0010F8  2212               	addwfc	(___aodiv@dividend+5)^0,f,c
  2637   0010FA  2213               	addwfc	(___aodiv@dividend+6)^0,f,c
  2638   0010FC  2214               	addwfc	(___aodiv@dividend+7)^0,f,c
  2639   0010FE  0E01               	movlw	1
  2640   001100  1A1E               	xorwf	___aodiv@sign^0,f,c
  2641   001102                     l2618:
  2642   001102  EE20  F01F         	lfsr	2,___aodiv@quotient
  2643   001106  0E07               	movlw	7
  2644   001108                     u1831:
  2645   001108  6ADE               	clrf	postinc2,c
  2646   00110A  06E8               	decf	wreg,f,c
  2647   00110C  E2FD               	bc	u1831
  2648   00110E  5015               	movf	___aodiv@divisor^0,w,c
  2649   001110  1016               	iorwf	(___aodiv@divisor+1)^0,w,c
  2650   001112  1017               	iorwf	(___aodiv@divisor+2)^0,w,c
  2651   001114  1018               	iorwf	(___aodiv@divisor+3)^0,w,c
  2652   001116  1019               	iorwf	(___aodiv@divisor+4)^0,w,c
  2653   001118  101A               	iorwf	(___aodiv@divisor+5)^0,w,c
  2654   00111A  101B               	iorwf	(___aodiv@divisor+6)^0,w,c
  2655   00111C  101C               	iorwf	(___aodiv@divisor+7)^0,w,c
  2656   00111E  B4D8               	btfsc	status,2,c
  2657   001120  EF94  F008         	goto	u1841
  2658   001124  EF96  F008         	goto	u1840
  2659   001128                     u1841:
  2660   001128  EFE8  F008         	goto	l2640
  2661   00112C                     u1840:
  2662   00112C  0E01               	movlw	1
  2663   00112E  6E1D               	movwf	___aodiv@counter^0,c
  2664   001130  EFA4  F008         	goto	l2626
  2665   001134                     l2624:
  2666   001134  90D8               	bcf	status,0,c
  2667   001136  3615               	rlcf	___aodiv@divisor^0,f,c
  2668   001138  3616               	rlcf	(___aodiv@divisor+1)^0,f,c
  2669   00113A  3617               	rlcf	(___aodiv@divisor+2)^0,f,c
  2670   00113C  3618               	rlcf	(___aodiv@divisor+3)^0,f,c
  2671   00113E  3619               	rlcf	(___aodiv@divisor+4)^0,f,c
  2672   001140  361A               	rlcf	(___aodiv@divisor+5)^0,f,c
  2673   001142  361B               	rlcf	(___aodiv@divisor+6)^0,f,c
  2674   001144  361C               	rlcf	(___aodiv@divisor+7)^0,f,c
  2675   001146  2A1D               	incf	___aodiv@counter^0,f,c
  2676   001148                     l2626:
  2677   001148  AE1C               	btfss	(___aodiv@divisor+7)^0,7,c
  2678   00114A  EFA9  F008         	goto	u1851
  2679   00114E  EFAB  F008         	goto	u1850
  2680   001152                     u1851:
  2681   001152  EF9A  F008         	goto	l2624
  2682   001156                     u1850:
  2683   001156                     l2628:
  2684   001156  90D8               	bcf	status,0,c
  2685   001158  361F               	rlcf	___aodiv@quotient^0,f,c
  2686   00115A  3620               	rlcf	(___aodiv@quotient+1)^0,f,c
  2687   00115C  3621               	rlcf	(___aodiv@quotient+2)^0,f,c
  2688   00115E  3622               	rlcf	(___aodiv@quotient+3)^0,f,c
  2689   001160  3623               	rlcf	(___aodiv@quotient+4)^0,f,c
  2690   001162  3624               	rlcf	(___aodiv@quotient+5)^0,f,c
  2691   001164  3625               	rlcf	(___aodiv@quotient+6)^0,f,c
  2692   001166  3626               	rlcf	(___aodiv@quotient+7)^0,f,c
  2693   001168  5015               	movf	___aodiv@divisor^0,w,c
  2694   00116A  5C0D               	subwf	___aodiv@dividend^0,w,c
  2695   00116C  5016               	movf	(___aodiv@divisor+1)^0,w,c
  2696   00116E  580E               	subwfb	(___aodiv@dividend+1)^0,w,c
  2697   001170  5017               	movf	(___aodiv@divisor+2)^0,w,c
  2698   001172  580F               	subwfb	(___aodiv@dividend+2)^0,w,c
  2699   001174  5018               	movf	(___aodiv@divisor+3)^0,w,c
  2700   001176  5810               	subwfb	(___aodiv@dividend+3)^0,w,c
  2701   001178  5019               	movf	(___aodiv@divisor+4)^0,w,c
  2702   00117A  5811               	subwfb	(___aodiv@dividend+4)^0,w,c
  2703   00117C  501A               	movf	(___aodiv@divisor+5)^0,w,c
  2704   00117E  5812               	subwfb	(___aodiv@dividend+5)^0,w,c
  2705   001180  501B               	movf	(___aodiv@divisor+6)^0,w,c
  2706   001182  5813               	subwfb	(___aodiv@dividend+6)^0,w,c
  2707   001184  501C               	movf	(___aodiv@divisor+7)^0,w,c
  2708   001186  5814               	subwfb	(___aodiv@dividend+7)^0,w,c
  2709   001188  A0D8               	btfss	status,0,c
  2710   00118A  EFC9  F008         	goto	u1861
  2711   00118E  EFCB  F008         	goto	u1860
  2712   001192                     u1861:
  2713   001192  EFDC  F008         	goto	l2636
  2714   001196                     u1860:
  2715   001196  5015               	movf	___aodiv@divisor^0,w,c
  2716   001198  5E0D               	subwf	___aodiv@dividend^0,f,c
  2717   00119A  5016               	movf	(___aodiv@divisor+1)^0,w,c
  2718   00119C  5A0E               	subwfb	(___aodiv@dividend+1)^0,f,c
  2719   00119E  5017               	movf	(___aodiv@divisor+2)^0,w,c
  2720   0011A0  5A0F               	subwfb	(___aodiv@dividend+2)^0,f,c
  2721   0011A2  5018               	movf	(___aodiv@divisor+3)^0,w,c
  2722   0011A4  5A10               	subwfb	(___aodiv@dividend+3)^0,f,c
  2723   0011A6  5019               	movf	(___aodiv@divisor+4)^0,w,c
  2724   0011A8  5A11               	subwfb	(___aodiv@dividend+4)^0,f,c
  2725   0011AA  501A               	movf	(___aodiv@divisor+5)^0,w,c
  2726   0011AC  5A12               	subwfb	(___aodiv@dividend+5)^0,f,c
  2727   0011AE  501B               	movf	(___aodiv@divisor+6)^0,w,c
  2728   0011B0  5A13               	subwfb	(___aodiv@dividend+6)^0,f,c
  2729   0011B2  501C               	movf	(___aodiv@divisor+7)^0,w,c
  2730   0011B4  5A14               	subwfb	(___aodiv@dividend+7)^0,f,c
  2731   0011B6  801F               	bsf	___aodiv@quotient^0,0,c
  2732   0011B8                     l2636:
  2733   0011B8  90D8               	bcf	status,0,c
  2734   0011BA  321C               	rrcf	(___aodiv@divisor+7)^0,f,c
  2735   0011BC  321B               	rrcf	(___aodiv@divisor+6)^0,f,c
  2736   0011BE  321A               	rrcf	(___aodiv@divisor+5)^0,f,c
  2737   0011C0  3219               	rrcf	(___aodiv@divisor+4)^0,f,c
  2738   0011C2  3218               	rrcf	(___aodiv@divisor+3)^0,f,c
  2739   0011C4  3217               	rrcf	(___aodiv@divisor+2)^0,f,c
  2740   0011C6  3216               	rrcf	(___aodiv@divisor+1)^0,f,c
  2741   0011C8  3215               	rrcf	___aodiv@divisor^0,f,c
  2742   0011CA  2E1D               	decfsz	___aodiv@counter^0,f,c
  2743   0011CC  EFAB  F008         	goto	l2628
  2744   0011D0                     l2640:
  2745   0011D0  501E               	movf	___aodiv@sign^0,w,c
  2746   0011D2  B4D8               	btfsc	status,2,c
  2747   0011D4  EFEE  F008         	goto	u1871
  2748   0011D8  EFF0  F008         	goto	u1870
  2749   0011DC                     u1871:
  2750   0011DC  EF00  F009         	goto	l2644
  2751   0011E0                     u1870:
  2752   0011E0  1E26               	comf	(___aodiv@quotient+7)^0,f,c
  2753   0011E2  1E25               	comf	(___aodiv@quotient+6)^0,f,c
  2754   0011E4  1E24               	comf	(___aodiv@quotient+5)^0,f,c
  2755   0011E6  1E23               	comf	(___aodiv@quotient+4)^0,f,c
  2756   0011E8  1E22               	comf	(___aodiv@quotient+3)^0,f,c
  2757   0011EA  1E21               	comf	(___aodiv@quotient+2)^0,f,c
  2758   0011EC  1E20               	comf	(___aodiv@quotient+1)^0,f,c
  2759   0011EE  6C1F               	negf	___aodiv@quotient^0,c
  2760   0011F0  0E00               	movlw	0
  2761   0011F2  2220               	addwfc	(___aodiv@quotient+1)^0,f,c
  2762   0011F4  2221               	addwfc	(___aodiv@quotient+2)^0,f,c
  2763   0011F6  2222               	addwfc	(___aodiv@quotient+3)^0,f,c
  2764   0011F8  2223               	addwfc	(___aodiv@quotient+4)^0,f,c
  2765   0011FA  2224               	addwfc	(___aodiv@quotient+5)^0,f,c
  2766   0011FC  2225               	addwfc	(___aodiv@quotient+6)^0,f,c
  2767   0011FE  2226               	addwfc	(___aodiv@quotient+7)^0,f,c
  2768   001200                     l2644:
  2769   001200  C01F  F00D         	movff	___aodiv@quotient,?___aodiv
  2770   001204  C020  F00E         	movff	___aodiv@quotient+1,?___aodiv+1
  2771   001208  C021  F00F         	movff	___aodiv@quotient+2,?___aodiv+2
  2772   00120C  C022  F010         	movff	___aodiv@quotient+3,?___aodiv+3
  2773   001210  C023  F011         	movff	___aodiv@quotient+4,?___aodiv+4
  2774   001214  C024  F012         	movff	___aodiv@quotient+5,?___aodiv+5
  2775   001218  C025  F013         	movff	___aodiv@quotient+6,?___aodiv+6
  2776   00121C  C026  F014         	movff	___aodiv@quotient+7,?___aodiv+7
  2777   001220  0012               	return		;funcret
  2778   001222                     __end_of___aodiv:
  2779                           	callstack 0
  2780                           
  2781 ;; *************** function _LCD_sendstring *****************
  2782 ;; Defined at:
  2783 ;;		line 110 in file "LCD.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;  string          2   15[COMRAM] PTR unsigned char 
  2786 ;;		 -> main@strdate(100), 
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;		None
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  1    wreg      void 
  2791 ;; Registers used:
  2792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2798 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2801 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2802 ;;Total ram usage:        2 bytes
  2803 ;; Hardware stack levels used: 1
  2804 ;; Hardware stack levels required when called: 6
  2805 ;; This function calls:
  2806 ;;		_LCD_sendbyte
  2807 ;; This function is called by:
  2808 ;;		_time2String
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812                           	psect	text15
  2813   001EAA                     __ptext15:
  2814                           	callstack 0
  2815   001EAA                     _LCD_sendstring:
  2816                           	callstack 23
  2817   001EAA                     
  2818                           ;LCD.c: 112: {;LCD.c: 113:  while(*string != 0){
  2819   001EAA  EF62  F00F         	goto	l2860
  2820   001EAE                     l2856:
  2821                           
  2822                           ;LCD.c: 114:   LCD_sendbyte(*string++,1);
  2823   001EAE  0E01               	movlw	1
  2824   001EB0  6E0E               	movwf	LCD_sendbyte@type^0,c
  2825   001EB2  C010  FFD9         	movff	LCD_sendstring@string,fsr2l
  2826   001EB6  C011  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  2827   001EBA  50DF               	movf	indf2,w,c
  2828   001EBC  EC89  F00F         	call	_LCD_sendbyte
  2829   001EC0  4A10               	infsnz	LCD_sendstring@string^0,f,c
  2830   001EC2  2A11               	incf	(LCD_sendstring@string+1)^0,f,c
  2831   001EC4                     l2860:
  2832                           
  2833                           ;LCD.c: 113:  while(*string != 0){
  2834   001EC4  C010  FFD9         	movff	LCD_sendstring@string,fsr2l
  2835   001EC8  C011  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  2836   001ECC  50DF               	movf	indf2,w,c
  2837   001ECE  A4D8               	btfss	status,2,c
  2838   001ED0  EF6C  F00F         	goto	u2271
  2839   001ED4  EF6E  F00F         	goto	u2270
  2840   001ED8                     u2271:
  2841   001ED8  EF57  F00F         	goto	l2856
  2842   001EDC                     u2270:
  2843   001EDC  0012               	return		;funcret
  2844   001EDE                     __end_of_LCD_sendstring:
  2845                           	callstack 0
  2846                           
  2847 ;; *************** function _test_day *****************
  2848 ;; Defined at:
  2849 ;;		line 24 in file "Functions.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;		None
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;		None
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  1    wreg      void 
  2856 ;; Registers used:
  2857 ;;		wreg, status,2
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2867 ;;Total ram usage:        0 bytes
  2868 ;; Hardware stack levels used: 1
  2869 ;; Hardware stack levels required when called: 3
  2870 ;; This function calls:
  2871 ;;		Nothing
  2872 ;; This function is called by:
  2873 ;;		_main
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text16
  2878   002028                     __ptext16:
  2879                           	callstack 0
  2880   002028                     _test_day:
  2881                           	callstack 27
  2882   002028                     
  2883                           ;Functions.c: 25:     seconds_in_hour = 10;
  2884   002028  0E00               	movlw	0
  2885   00202A  0101               	movlb	1	; () banked
  2886   00202C  6F71               	movwf	(_seconds_in_hour+1)& (0+255),b
  2887   00202E  0E0A               	movlw	10
  2888   002030  6F70               	movwf	_seconds_in_hour& (0+255),b
  2889                           
  2890                           ;Functions.c: 26:     hours_in_day = 24;
  2891   002032  0E00               	movlw	0
  2892   002034  6F6F               	movwf	(_hours_in_day+1)& (0+255),b
  2893   002036  0E18               	movlw	24
  2894   002038  6F6E               	movwf	_hours_in_day& (0+255),b
  2895   00203A                     
  2896                           ; BSR set to: 1
  2897   00203A  0012               	return		;funcret
  2898   00203C                     __end_of_test_day:
  2899                           	callstack 0
  2900                           
  2901 ;; *************** function _streetLightInit *****************
  2902 ;; Defined at:
  2903 ;;		line 17 in file "Functions.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;		None
  2906 ;; Auto vars:     Size  Location     Type
  2907 ;;		None
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  1    wreg      void 
  2910 ;; Registers used:
  2911 ;;		None
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2921 ;;Total ram usage:        0 bytes
  2922 ;; Hardware stack levels used: 1
  2923 ;; Hardware stack levels required when called: 3
  2924 ;; This function calls:
  2925 ;;		Nothing
  2926 ;; This function is called by:
  2927 ;;		_main
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931                           	psect	text17
  2932   002070                     __ptext17:
  2933                           	callstack 0
  2934   002070                     _streetLightInit:
  2935                           	callstack 27
  2936   002070                     
  2937                           ;Functions.c: 18:     LATHbits.LATH3 = 0;
  2938   002070  9680               	bcf	128,3,c	;volatile
  2939                           
  2940                           ;Functions.c: 19:     TRISHbits.TRISH3 = 0;
  2941   002072  9688               	bcf	136,3,c	;volatile
  2942   002074  0012               	return		;funcret
  2943   002076                     __end_of_streetLightInit:
  2944                           	callstack 0
  2945                           
  2946 ;; *************** function _poweroff *****************
  2947 ;; Defined at:
  2948 ;;		line 75 in file "Functions.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;		None
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;		None
  2953 ;; Return value:  Size  Location     Type
  2954 ;;                  1    wreg      void 
  2955 ;; Registers used:
  2956 ;;		wreg, status,2, status,0
  2957 ;; Tracked objects:
  2958 ;;		On entry : 0/0
  2959 ;;		On exit  : 0/0
  2960 ;;		Unchanged: 0/0
  2961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2966 ;;Total ram usage:        0 bytes
  2967 ;; Hardware stack levels used: 1
  2968 ;; Hardware stack levels required when called: 3
  2969 ;; This function calls:
  2970 ;;		Nothing
  2971 ;; This function is called by:
  2972 ;;		_main
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976                           	psect	text18
  2977   001E70                     __ptext18:
  2978                           	callstack 0
  2979   001E70                     _poweroff:
  2980                           	callstack 27
  2981   001E70                     
  2982                           ;Functions.c: 76:     if (1 <= hour && hour < 5) LATHbits.LATH3 = 0;
  2983   001E70  BE4E               	btfsc	(_hour+1)^0,7,c
  2984   001E72  EF43  F00F         	goto	u2431
  2985   001E76  504E               	movf	(_hour+1)^0,w,c
  2986   001E78  E108               	bnz	u2430
  2987   001E7A  044D               	decf	_hour^0,w,c
  2988   001E7C  A0D8               	btfss	status,0,c
  2989   001E7E  EF43  F00F         	goto	u2431
  2990   001E82  EF45  F00F         	goto	u2430
  2991   001E86                     u2431:
  2992   001E86  EF54  F00F         	goto	l504
  2993   001E8A                     u2430:
  2994   001E8A  BE4E               	btfsc	(_hour+1)^0,7,c
  2995   001E8C  EF53  F00F         	goto	u2440
  2996   001E90  504E               	movf	(_hour+1)^0,w,c
  2997   001E92  E107               	bnz	u2441
  2998   001E94  0E05               	movlw	5
  2999   001E96  5C4D               	subwf	_hour^0,w,c
  3000   001E98  B0D8               	btfsc	status,0,c
  3001   001E9A  EF51  F00F         	goto	u2441
  3002   001E9E  EF53  F00F         	goto	u2440
  3003   001EA2                     u2441:
  3004   001EA2  EF54  F00F         	goto	l504
  3005   001EA6                     u2440:
  3006   001EA6  9680               	bcf	128,3,c	;volatile
  3007   001EA8                     l504:
  3008   001EA8  0012               	return		;funcret
  3009   001EAA                     __end_of_poweroff:
  3010                           	callstack 0
  3011                           
  3012 ;; *************** function _increment *****************
  3013 ;; Defined at:
  3014 ;;		line 37 in file "Functions.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;		None
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;		None
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  1    wreg      void 
  3021 ;; Registers used:
  3022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3030 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3031 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3032 ;;Total ram usage:        2 bytes
  3033 ;; Hardware stack levels used: 1
  3034 ;; Hardware stack levels required when called: 4
  3035 ;; This function calls:
  3036 ;;		_LEDarray_disp_bin
  3037 ;; This function is called by:
  3038 ;;		_main
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           	psect	text19
  3043   0014D6                     __ptext19:
  3044                           	callstack 0
  3045   0014D6                     _increment:
  3046                           	callstack 26
  3047   0014D6                     
  3048                           ;Functions.c: 39:     if (year % 4 == 0) month[1] = 29;
  3049   0014D6  0E03               	movlw	3
  3050   0014D8  0101               	movlb	1	; () banked
  3051   0014DA  15AA               	andwf	_year& (0+255),w,b
  3052   0014DC  6E27               	movwf	??_increment^0,c
  3053   0014DE  0E00               	movlw	0
  3054   0014E0  15AB               	andwf	(_year+1)& (0+255),w,b
  3055   0014E2  6E28               	movwf	(??_increment+1)^0,c
  3056   0014E4  5027               	movf	??_increment^0,w,c
  3057   0014E6  1028               	iorwf	(??_increment+1)^0,w,c
  3058   0014E8  A4D8               	btfss	status,2,c
  3059   0014EA  EF79  F00A         	goto	u2361
  3060   0014EE  EF7B  F00A         	goto	u2360
  3061   0014F2                     u2361:
  3062   0014F2  EF7F  F00A         	goto	l3016
  3063   0014F6                     u2360:
  3064   0014F6                     
  3065                           ; BSR set to: 1
  3066   0014F6  0E00               	movlw	0
  3067   0014F8  6F95               	movwf	(_month+3)& (0+255),b
  3068   0014FA  0E1D               	movlw	29
  3069   0014FC  6F94               	movwf	(_month+2)& (0+255),b
  3070   0014FE                     l3016:
  3071                           
  3072                           ; BSR set to: 1
  3073                           ;Functions.c: 40:     if (year % 4 != 0) month[1] = 28;
  3074   0014FE  0E03               	movlw	3
  3075   001500  15AA               	andwf	_year& (0+255),w,b
  3076   001502  6E27               	movwf	??_increment^0,c
  3077   001504  0E00               	movlw	0
  3078   001506  15AB               	andwf	(_year+1)& (0+255),w,b
  3079   001508  6E28               	movwf	(??_increment+1)^0,c
  3080   00150A  5027               	movf	??_increment^0,w,c
  3081   00150C  1028               	iorwf	(??_increment+1)^0,w,c
  3082   00150E  B4D8               	btfsc	status,2,c
  3083   001510  EF8C  F00A         	goto	u2371
  3084   001514  EF8E  F00A         	goto	u2370
  3085   001518                     u2371:
  3086   001518  EF92  F00A         	goto	l3020
  3087   00151C                     u2370:
  3088   00151C                     
  3089                           ; BSR set to: 1
  3090   00151C  0E00               	movlw	0
  3091   00151E  6F95               	movwf	(_month+3)& (0+255),b
  3092   001520  0E1C               	movlw	28
  3093   001522  6F94               	movwf	(_month+2)& (0+255),b
  3094   001524                     l3020:
  3095                           
  3096                           ; BSR set to: 1
  3097                           ;Functions.c: 43:     if (seconds == seconds_in_hour) {
  3098   001524  5170               	movf	_seconds_in_hour& (0+255),w,b
  3099   001526  184A               	xorwf	_seconds^0,w,c
  3100   001528  E107               	bnz	u2381
  3101   00152A  5171               	movf	(_seconds_in_hour+1)& (0+255),w,b
  3102   00152C  184B               	xorwf	(_seconds+1)^0,w,c
  3103   00152E  A4D8               	btfss	status,2,c
  3104   001530  EF9C  F00A         	goto	u2381
  3105   001534  EF9E  F00A         	goto	u2380
  3106   001538                     u2381:
  3107   001538  EFAA  F00A         	goto	l3028
  3108   00153C                     u2380:
  3109   00153C                     
  3110                           ; BSR set to: 1
  3111                           ;Functions.c: 44:         hour++;
  3112   00153C  4A4D               	infsnz	_hour^0,f,c
  3113   00153E  2A4E               	incf	(_hour+1)^0,f,c
  3114   001540                     
  3115                           ; BSR set to: 1
  3116                           ;Functions.c: 45:         LEDarray_disp_bin(hour);
  3117   001540  C04D  F00D         	movff	_hour,LEDarray_disp_bin@number
  3118   001544  C04E  F00E         	movff	_hour+1,LEDarray_disp_bin@number+1
  3119   001548  EC07  F00B         	call	_LEDarray_disp_bin	;wreg free
  3120   00154C                     
  3121                           ;Functions.c: 46:         seconds = 0;
  3122   00154C  0E00               	movlw	0
  3123   00154E  6E4B               	movwf	(_seconds+1)^0,c
  3124   001550  0E00               	movlw	0
  3125   001552  6E4A               	movwf	_seconds^0,c
  3126   001554                     l3028:
  3127                           
  3128                           ;Functions.c: 50:     if (hour == hours_in_day) {
  3129   001554  0101               	movlb	1	; () banked
  3130   001556  516E               	movf	_hours_in_day& (0+255),w,b
  3131   001558  184D               	xorwf	_hour^0,w,c
  3132   00155A  E107               	bnz	u2391
  3133   00155C  516F               	movf	(_hours_in_day+1)& (0+255),w,b
  3134   00155E  184E               	xorwf	(_hour+1)^0,w,c
  3135   001560  A4D8               	btfss	status,2,c
  3136   001562  EFB5  F00A         	goto	u2391
  3137   001566  EFB7  F00A         	goto	u2390
  3138   00156A                     u2391:
  3139   00156A  EFC5  F00A         	goto	l3036
  3140   00156E                     u2390:
  3141   00156E                     
  3142                           ; BSR set to: 1
  3143                           ;Functions.c: 51:         day_of_year++;
  3144   00156E  4BB0               	infsnz	_day_of_year& (0+255),f,b
  3145   001570  2BB1               	incf	(_day_of_year+1)& (0+255),f,b
  3146                           
  3147                           ;Functions.c: 52:         day_of_week++;
  3148   001572  4BAE               	infsnz	_day_of_week& (0+255),f,b
  3149   001574  2BAF               	incf	(_day_of_week+1)& (0+255),f,b
  3150                           
  3151                           ;Functions.c: 53:         day_of_month++;
  3152   001576  4BAC               	infsnz	_day_of_month& (0+255),f,b
  3153   001578  2BAD               	incf	(_day_of_month+1)& (0+255),f,b
  3154   00157A                     
  3155                           ; BSR set to: 1
  3156                           ;Functions.c: 54:         hour = 0;
  3157   00157A  0E00               	movlw	0
  3158   00157C  6E4E               	movwf	(_hour+1)^0,c
  3159   00157E  0E00               	movlw	0
  3160   001580  6E4D               	movwf	_hour^0,c
  3161   001582                     
  3162                           ; BSR set to: 1
  3163                           ;Functions.c: 55:         adjustment_of_day = 1;
  3164   001582  0E00               	movlw	0
  3165   001584  6E50               	movwf	(_adjustment_of_day+1)^0,c
  3166   001586  0E01               	movlw	1
  3167   001588  6E4F               	movwf	_adjustment_of_day^0,c
  3168   00158A                     l3036:
  3169                           
  3170                           ; BSR set to: 1
  3171                           ;Functions.c: 59:     if (day_of_week == 8)
  3172   00158A  0E08               	movlw	8
  3173   00158C  19AE               	xorwf	_day_of_week& (0+255),w,b
  3174   00158E  11AF               	iorwf	(_day_of_week+1)& (0+255),w,b
  3175   001590  A4D8               	btfss	status,2,c
  3176   001592  EFCD  F00A         	goto	u2401
  3177   001596  EFCF  F00A         	goto	u2400
  3178   00159A                     u2401:
  3179   00159A  EFD3  F00A         	goto	l3040
  3180   00159E                     u2400:
  3181   00159E                     
  3182                           ; BSR set to: 1
  3183                           ;Functions.c: 60:         day_of_week = 1;
  3184   00159E  0E00               	movlw	0
  3185   0015A0  6FAF               	movwf	(_day_of_week+1)& (0+255),b
  3186   0015A2  0E01               	movlw	1
  3187   0015A4  6FAE               	movwf	_day_of_week& (0+255),b
  3188   0015A6                     l3040:
  3189                           
  3190                           ; BSR set to: 1
  3191                           ;Functions.c: 63:     if (day_of_month == month[month_num - 1] + 1) {
  3192   0015A6  90D8               	bcf	status,0,c
  3193   0015A8  35B2               	rlcf	_month_num& (0+255),w,b
  3194   0015AA  6ED9               	movwf	fsr2l,c
  3195   0015AC  35B3               	rlcf	(_month_num+1)& (0+255),w,b
  3196   0015AE  6EDA               	movwf	fsr2h,c
  3197   0015B0  0E90               	movlw	low (_month+65534)
  3198   0015B2  26D9               	addwf	fsr2l,f,c
  3199   0015B4  0E01               	movlw	high (_month+65534)
  3200   0015B6  22DA               	addwfc	fsr2h,f,c
  3201   0015B8  CFDE F027          	movff	postinc2,??_increment
  3202   0015BC  CFDD F028          	movff	postdec2,??_increment+1
  3203   0015C0  0E01               	movlw	1
  3204   0015C2  2627               	addwf	??_increment^0,f,c
  3205   0015C4  0E00               	movlw	0
  3206   0015C6  2228               	addwfc	(??_increment+1)^0,f,c
  3207   0015C8  51AC               	movf	_day_of_month& (0+255),w,b
  3208   0015CA  1827               	xorwf	??_increment^0,w,c
  3209   0015CC  E107               	bnz	u2411
  3210   0015CE  51AD               	movf	(_day_of_month+1)& (0+255),w,b
  3211   0015D0  1828               	xorwf	(??_increment+1)^0,w,c
  3212   0015D2  A4D8               	btfss	status,2,c
  3213   0015D4  EFEE  F00A         	goto	u2411
  3214   0015D8  EFF0  F00A         	goto	u2410
  3215   0015DC                     u2411:
  3216   0015DC  EFF6  F00A         	goto	l3046
  3217   0015E0                     u2410:
  3218   0015E0                     
  3219                           ; BSR set to: 1
  3220                           ;Functions.c: 64:         day_of_month = 1;
  3221   0015E0  0E00               	movlw	0
  3222   0015E2  6FAD               	movwf	(_day_of_month+1)& (0+255),b
  3223   0015E4  0E01               	movlw	1
  3224   0015E6  6FAC               	movwf	_day_of_month& (0+255),b
  3225   0015E8                     
  3226                           ; BSR set to: 1
  3227                           ;Functions.c: 65:         month_num++;
  3228   0015E8  4BB2               	infsnz	_month_num& (0+255),f,b
  3229   0015EA  2BB3               	incf	(_month_num+1)& (0+255),f,b
  3230   0015EC                     l3046:
  3231                           
  3232                           ; BSR set to: 1
  3233                           ;Functions.c: 67:     if (month_num == 13) {
  3234   0015EC  0E0D               	movlw	13
  3235   0015EE  19B2               	xorwf	_month_num& (0+255),w,b
  3236   0015F0  11B3               	iorwf	(_month_num+1)& (0+255),w,b
  3237   0015F2  A4D8               	btfss	status,2,c
  3238   0015F4  EFFE  F00A         	goto	u2421
  3239   0015F8  EF00  F00B         	goto	u2420
  3240   0015FC                     u2421:
  3241   0015FC  EF06  F00B         	goto	l500
  3242   001600                     u2420:
  3243   001600                     
  3244                           ; BSR set to: 1
  3245                           ;Functions.c: 68:         month_num = 1;
  3246   001600  0E00               	movlw	0
  3247   001602  6FB3               	movwf	(_month_num+1)& (0+255),b
  3248   001604  0E01               	movlw	1
  3249   001606  6FB2               	movwf	_month_num& (0+255),b
  3250   001608                     
  3251                           ; BSR set to: 1
  3252                           ;Functions.c: 69:         year++;
  3253   001608  4BAA               	infsnz	_year& (0+255),f,b
  3254   00160A  2BAB               	incf	(_year+1)& (0+255),f,b
  3255   00160C                     l500:
  3256                           
  3257                           ; BSR set to: 1
  3258   00160C  0012               	return		;funcret
  3259   00160E                     __end_of_increment:
  3260                           	callstack 0
  3261                           
  3262 ;; *************** function _LEDarray_disp_bin *****************
  3263 ;; Defined at:
  3264 ;;		line 38 in file "LEDarray.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;  number          2   12[COMRAM] unsigned int 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;  ctr             2   36[COMRAM] int 
  3269 ;;  led_arr        18   16[COMRAM] int [9]
  3270 ;;  mask            2   34[COMRAM] int 
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  1    wreg      void 
  3273 ;; Registers used:
  3274 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3280 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3281 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3282 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3283 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3284 ;;Total ram usage:       26 bytes
  3285 ;; Hardware stack levels used: 1
  3286 ;; Hardware stack levels required when called: 3
  3287 ;; This function calls:
  3288 ;;		Nothing
  3289 ;; This function is called by:
  3290 ;;		_increment
  3291 ;;		_LEDarray_disp_dec
  3292 ;;		_LEDarray_disp_PPM
  3293 ;;		_incrementseconds
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           	psect	text20
  3298   00160E                     __ptext20:
  3299                           	callstack 0
  3300   00160E                     _LEDarray_disp_bin:
  3301                           	callstack 26
  3302   00160E                     
  3303                           ;LEDarray.c: 38: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 39: {;LEDarray.
      +                          c: 43:     int mask= 0b000000001;
  3304   00160E  0E00               	movlw	0
  3305   001610  6E24               	movwf	(LEDarray_disp_bin@mask+1)^0,c
  3306   001612  0E01               	movlw	1
  3307   001614  6E23               	movwf	LEDarray_disp_bin@mask^0,c
  3308                           
  3309                           ;LEDarray.c: 44:     int led_arr[9];;LEDarray.c: 45:     for(int ctr=0;ctr<9;ctr++){
  3310   001616  0E00               	movlw	0
  3311   001618  6E26               	movwf	(LEDarray_disp_bin@ctr+1)^0,c
  3312   00161A  0E00               	movlw	0
  3313   00161C  6E25               	movwf	LEDarray_disp_bin@ctr^0,c
  3314   00161E                     l2836:
  3315                           
  3316                           ;LEDarray.c: 46:         if (number & mask)
  3317   00161E  500D               	movf	LEDarray_disp_bin@number^0,w,c
  3318   001620  1423               	andwf	LEDarray_disp_bin@mask^0,w,c
  3319   001622  6E0F               	movwf	??_LEDarray_disp_bin^0,c
  3320   001624  500E               	movf	(LEDarray_disp_bin@number+1)^0,w,c
  3321   001626  1424               	andwf	(LEDarray_disp_bin@mask+1)^0,w,c
  3322   001628  6E10               	movwf	(??_LEDarray_disp_bin+1)^0,c
  3323   00162A  500F               	movf	??_LEDarray_disp_bin^0,w,c
  3324   00162C  1010               	iorwf	(??_LEDarray_disp_bin+1)^0,w,c
  3325   00162E  B4D8               	btfsc	status,2,c
  3326   001630  EF1C  F00B         	goto	u2161
  3327   001634  EF1E  F00B         	goto	u2160
  3328   001638                     u2161:
  3329   001638  EF2D  F00B         	goto	l2840
  3330   00163C                     u2160:
  3331   00163C                     
  3332                           ;LEDarray.c: 47:             led_arr[ctr]=1;
  3333   00163C  90D8               	bcf	status,0,c
  3334   00163E  3425               	rlcf	LEDarray_disp_bin@ctr^0,w,c
  3335   001640  6ED9               	movwf	fsr2l,c
  3336   001642  3426               	rlcf	(LEDarray_disp_bin@ctr+1)^0,w,c
  3337   001644  6EDA               	movwf	fsr2h,c
  3338   001646  0E11               	movlw	low LEDarray_disp_bin@led_arr
  3339   001648  26D9               	addwf	fsr2l,f,c
  3340   00164A  0E00               	movlw	high LEDarray_disp_bin@led_arr
  3341   00164C  22DA               	addwfc	fsr2h,f,c
  3342   00164E  0E01               	movlw	1
  3343   001650  6EDE               	movwf	postinc2,c
  3344   001652  0E00               	movlw	0
  3345   001654  6EDD               	movwf	postdec2,c
  3346   001656  EF3A  F00B         	goto	l2842
  3347   00165A                     l2840:
  3348                           
  3349                           ;LEDarray.c: 50:             led_arr[ctr]=0;
  3350   00165A  90D8               	bcf	status,0,c
  3351   00165C  3425               	rlcf	LEDarray_disp_bin@ctr^0,w,c
  3352   00165E  6ED9               	movwf	fsr2l,c
  3353   001660  3426               	rlcf	(LEDarray_disp_bin@ctr+1)^0,w,c
  3354   001662  6EDA               	movwf	fsr2h,c
  3355   001664  0E11               	movlw	low LEDarray_disp_bin@led_arr
  3356   001666  26D9               	addwf	fsr2l,f,c
  3357   001668  0E00               	movlw	high LEDarray_disp_bin@led_arr
  3358   00166A  22DA               	addwfc	fsr2h,f,c
  3359   00166C  0E00               	movlw	0
  3360   00166E  6EDE               	movwf	postinc2,c
  3361   001670  0E00               	movlw	0
  3362   001672  6EDD               	movwf	postdec2,c
  3363   001674                     l2842:
  3364                           
  3365                           ;LEDarray.c: 52:         mask<<=1;
  3366   001674  90D8               	bcf	status,0,c
  3367   001676  3623               	rlcf	LEDarray_disp_bin@mask^0,f,c
  3368   001678  3624               	rlcf	(LEDarray_disp_bin@mask+1)^0,f,c
  3369   00167A                     
  3370                           ;LEDarray.c: 53:     }
  3371   00167A  4A25               	infsnz	LEDarray_disp_bin@ctr^0,f,c
  3372   00167C  2A26               	incf	(LEDarray_disp_bin@ctr+1)^0,f,c
  3373   00167E  BE26               	btfsc	(LEDarray_disp_bin@ctr+1)^0,7,c
  3374   001680  EF4B  F00B         	goto	u2171
  3375   001684  5026               	movf	(LEDarray_disp_bin@ctr+1)^0,w,c
  3376   001686  E109               	bnz	u2170
  3377   001688  0E09               	movlw	9
  3378   00168A  5C25               	subwf	LEDarray_disp_bin@ctr^0,w,c
  3379   00168C  A0D8               	btfss	status,0,c
  3380   00168E  EF4B  F00B         	goto	u2171
  3381   001692  EF4D  F00B         	goto	u2170
  3382   001696                     u2171:
  3383   001696  EF0F  F00B         	goto	l2836
  3384   00169A                     u2170:
  3385   00169A                     
  3386                           ;LEDarray.c: 55:     LATGbits.LATG0 = led_arr[0];
  3387   00169A  B011               	btfsc	LEDarray_disp_bin@led_arr^0,0,c
  3388   00169C  D002               	bra	u2185
  3389   00169E  907F               	bcf	127,0,c	;volatile
  3390   0016A0  D001               	bra	u2186
  3391   0016A2                     u2185:
  3392   0016A2  807F               	bsf	127,0,c	;volatile
  3393   0016A4                     u2186:
  3394                           
  3395                           ;LEDarray.c: 56:     LATGbits.LATG1 = led_arr[1];
  3396   0016A4  B013               	btfsc	(LEDarray_disp_bin@led_arr+2)^0,0,c
  3397   0016A6  D002               	bra	u2195
  3398   0016A8  927F               	bcf	127,1,c	;volatile
  3399   0016AA  D001               	bra	u2196
  3400   0016AC                     u2195:
  3401   0016AC  827F               	bsf	127,1,c	;volatile
  3402   0016AE                     u2196:
  3403                           
  3404                           ;LEDarray.c: 57:     LATAbits.LATA2 = led_arr[2];
  3405   0016AE  B015               	btfsc	(LEDarray_disp_bin@led_arr+4)^0,0,c
  3406   0016B0  D002               	bra	u2205
  3407   0016B2  9479               	bcf	121,2,c	;volatile
  3408   0016B4  D001               	bra	u2206
  3409   0016B6                     u2205:
  3410   0016B6  8479               	bsf	121,2,c	;volatile
  3411   0016B8                     u2206:
  3412                           
  3413                           ;LEDarray.c: 58:     LATFbits.LATF6 = led_arr[3];
  3414   0016B8  B017               	btfsc	(LEDarray_disp_bin@led_arr+6)^0,0,c
  3415   0016BA  D002               	bra	u2215
  3416   0016BC  9C7E               	bcf	126,6,c	;volatile
  3417   0016BE  D001               	bra	u2216
  3418   0016C0                     u2215:
  3419   0016C0  8C7E               	bsf	126,6,c	;volatile
  3420   0016C2                     u2216:
  3421                           
  3422                           ;LEDarray.c: 59:     LATAbits.LATA4 = led_arr[4];
  3423   0016C2  B019               	btfsc	(LEDarray_disp_bin@led_arr+8)^0,0,c
  3424   0016C4  D002               	bra	u2225
  3425   0016C6  9879               	bcf	121,4,c	;volatile
  3426   0016C8  D001               	bra	u2226
  3427   0016CA                     u2225:
  3428   0016CA  8879               	bsf	121,4,c	;volatile
  3429   0016CC                     u2226:
  3430                           
  3431                           ;LEDarray.c: 60:     LATAbits.LATA5 = led_arr[5];
  3432   0016CC  B01B               	btfsc	(LEDarray_disp_bin@led_arr+10)^0,0,c
  3433   0016CE  D002               	bra	u2235
  3434   0016D0  9A79               	bcf	121,5,c	;volatile
  3435   0016D2  D001               	bra	u2236
  3436   0016D4                     u2235:
  3437   0016D4  8A79               	bsf	121,5,c	;volatile
  3438   0016D6                     u2236:
  3439                           
  3440                           ;LEDarray.c: 61:     LATFbits.LATF0 = led_arr[6];
  3441   0016D6  B01D               	btfsc	(LEDarray_disp_bin@led_arr+12)^0,0,c
  3442   0016D8  D002               	bra	u2245
  3443   0016DA  907E               	bcf	126,0,c	;volatile
  3444   0016DC  D001               	bra	u2246
  3445   0016DE                     u2245:
  3446   0016DE  807E               	bsf	126,0,c	;volatile
  3447   0016E0                     u2246:
  3448                           
  3449                           ;LEDarray.c: 62:     LATBbits.LATB0 = led_arr[7];
  3450   0016E0  B01F               	btfsc	(LEDarray_disp_bin@led_arr+14)^0,0,c
  3451   0016E2  D002               	bra	u2255
  3452   0016E4  907A               	bcf	122,0,c	;volatile
  3453   0016E6  D001               	bra	u2256
  3454   0016E8                     u2255:
  3455   0016E8  807A               	bsf	122,0,c	;volatile
  3456   0016EA                     u2256:
  3457                           
  3458                           ;LEDarray.c: 63:     LATBbits.LATB1 = led_arr[8];
  3459   0016EA  B021               	btfsc	(LEDarray_disp_bin@led_arr+16)^0,0,c
  3460   0016EC  D002               	bra	u2265
  3461   0016EE  927A               	bcf	122,1,c	;volatile
  3462   0016F0  D001               	bra	u2266
  3463   0016F2                     u2265:
  3464   0016F2  827A               	bsf	122,1,c	;volatile
  3465   0016F4                     u2266:
  3466   0016F4  0012               	return		;funcret
  3467   0016F6                     __end_of_LEDarray_disp_bin:
  3468                           	callstack 0
  3469                           
  3470 ;; *************** function _daylightsavings *****************
  3471 ;; Defined at:
  3472 ;;		line 144 in file "Functions.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;		None
  3475 ;; Auto vars:     Size  Location     Type
  3476 ;;		None
  3477 ;; Return value:  Size  Location     Type
  3478 ;;                  1    wreg      void 
  3479 ;; Registers used:
  3480 ;;		wreg, status,2, status,0
  3481 ;; Tracked objects:
  3482 ;;		On entry : 0/0
  3483 ;;		On exit  : 0/0
  3484 ;;		Unchanged: 0/0
  3485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3490 ;;Total ram usage:        0 bytes
  3491 ;; Hardware stack levels used: 1
  3492 ;; Hardware stack levels required when called: 3
  3493 ;; This function calls:
  3494 ;;		Nothing
  3495 ;; This function is called by:
  3496 ;;		_main
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           	psect	text21
  3501   001AE0                     __ptext21:
  3502                           	callstack 0
  3503   001AE0                     _daylightsavings:
  3504                           	callstack 27
  3505   001AE0                     
  3506                           ;Functions.c: 145:     if (month_num == 3 && day_of_week == 7 && 25 <= day_of_month <= 3
      +                          1 && hour == 1)
  3507   001AE0  0E03               	movlw	3
  3508   001AE2  0101               	movlb	1	; () banked
  3509   001AE4  19B2               	xorwf	_month_num& (0+255),w,b
  3510   001AE6  11B3               	iorwf	(_month_num+1)& (0+255),w,b
  3511   001AE8  A4D8               	btfss	status,2,c
  3512   001AEA  EF79  F00D         	goto	u2481
  3513   001AEE  EF7B  F00D         	goto	u2480
  3514   001AF2                     u2481:
  3515   001AF2  EF90  F00D         	goto	l3084
  3516   001AF6                     u2480:
  3517   001AF6                     
  3518                           ; BSR set to: 1
  3519   001AF6  0E07               	movlw	7
  3520   001AF8  19AE               	xorwf	_day_of_week& (0+255),w,b
  3521   001AFA  11AF               	iorwf	(_day_of_week+1)& (0+255),w,b
  3522   001AFC  A4D8               	btfss	status,2,c
  3523   001AFE  EF83  F00D         	goto	u2491
  3524   001B02  EF85  F00D         	goto	u2490
  3525   001B06                     u2491:
  3526   001B06  EF90  F00D         	goto	l3084
  3527   001B0A                     u2490:
  3528   001B0A                     
  3529                           ; BSR set to: 1
  3530   001B0A  044D               	decf	_hour^0,w,c
  3531   001B0C  104E               	iorwf	(_hour+1)^0,w,c
  3532   001B0E  A4D8               	btfss	status,2,c
  3533   001B10  EF8C  F00D         	goto	u2501
  3534   001B14  EF8E  F00D         	goto	u2500
  3535   001B18                     u2501:
  3536   001B18  EF90  F00D         	goto	l3084
  3537   001B1C                     u2500:
  3538   001B1C                     
  3539                           ; BSR set to: 1
  3540                           ;Functions.c: 146:         hour++;
  3541   001B1C  4A4D               	infsnz	_hour^0,f,c
  3542   001B1E  2A4E               	incf	(_hour+1)^0,f,c
  3543   001B20                     l3084:
  3544                           
  3545                           ; BSR set to: 1
  3546                           ;Functions.c: 148:     if (month_num == 10 && day_of_week == 7 && 25 <= day_of_month <= 
      +                          31 && hour == 2)
  3547   001B20  0E0A               	movlw	10
  3548   001B22  19B2               	xorwf	_month_num& (0+255),w,b
  3549   001B24  11B3               	iorwf	(_month_num+1)& (0+255),w,b
  3550   001B26  A4D8               	btfss	status,2,c
  3551   001B28  EF98  F00D         	goto	u2511
  3552   001B2C  EF9A  F00D         	goto	u2510
  3553   001B30                     u2511:
  3554   001B30  EFB1  F00D         	goto	l516
  3555   001B34                     u2510:
  3556   001B34                     
  3557                           ; BSR set to: 1
  3558   001B34  0E07               	movlw	7
  3559   001B36  19AE               	xorwf	_day_of_week& (0+255),w,b
  3560   001B38  11AF               	iorwf	(_day_of_week+1)& (0+255),w,b
  3561   001B3A  A4D8               	btfss	status,2,c
  3562   001B3C  EFA2  F00D         	goto	u2521
  3563   001B40  EFA4  F00D         	goto	u2520
  3564   001B44                     u2521:
  3565   001B44  EFB1  F00D         	goto	l516
  3566   001B48                     u2520:
  3567   001B48                     
  3568                           ; BSR set to: 1
  3569   001B48  0E02               	movlw	2
  3570   001B4A  184D               	xorwf	_hour^0,w,c
  3571   001B4C  104E               	iorwf	(_hour+1)^0,w,c
  3572   001B4E  A4D8               	btfss	status,2,c
  3573   001B50  EFAC  F00D         	goto	u2531
  3574   001B54  EFAE  F00D         	goto	u2530
  3575   001B58                     u2531:
  3576   001B58  EFB1  F00D         	goto	l516
  3577   001B5C                     u2530:
  3578   001B5C                     
  3579                           ; BSR set to: 1
  3580                           ;Functions.c: 149:         hour--;
  3581   001B5C  064D               	decf	_hour^0,f,c
  3582   001B5E  A0D8               	btfss	status,0,c
  3583   001B60  064E               	decf	(_hour+1)^0,f,c
  3584   001B62                     l516:
  3585                           
  3586                           ; BSR set to: 1
  3587   001B62  0012               	return		;funcret
  3588   001B64                     __end_of_daylightsavings:
  3589                           	callstack 0
  3590                           
  3591 ;; *************** function _day1_init *****************
  3592 ;; Defined at:
  3593 ;;		line 79 in file "Functions.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;		None
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;		None
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  1    wreg      void 
  3600 ;; Registers used:
  3601 ;;		wreg, status,2
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3611 ;;Total ram usage:        0 bytes
  3612 ;; Hardware stack levels used: 1
  3613 ;; Hardware stack levels required when called: 3
  3614 ;; This function calls:
  3615 ;;		Nothing
  3616 ;; This function is called by:
  3617 ;;		_main
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           	psect	text22
  3622   001E32                     __ptext22:
  3623                           	callstack 0
  3624   001E32                     _day1_init:
  3625                           	callstack 27
  3626   001E32                     
  3627                           ;Functions.c: 80:     seconds = 0;
  3628   001E32  0E00               	movlw	0
  3629   001E34  6E4B               	movwf	(_seconds+1)^0,c
  3630   001E36  0E00               	movlw	0
  3631   001E38  6E4A               	movwf	_seconds^0,c
  3632                           
  3633                           ;Functions.c: 81:     hour = 23;
  3634   001E3A  0E00               	movlw	0
  3635   001E3C  6E4E               	movwf	(_hour+1)^0,c
  3636   001E3E  0E17               	movlw	23
  3637   001E40  6E4D               	movwf	_hour^0,c
  3638                           
  3639                           ;Functions.c: 82:     day_of_year = 1;
  3640   001E42  0E00               	movlw	0
  3641   001E44  0101               	movlb	1	; () banked
  3642   001E46  6FB1               	movwf	(_day_of_year+1)& (0+255),b
  3643   001E48  0E01               	movlw	1
  3644   001E4A  6FB0               	movwf	_day_of_year& (0+255),b
  3645                           
  3646                           ;Functions.c: 83:     day_of_month = 1;
  3647   001E4C  0E00               	movlw	0
  3648   001E4E  6FAD               	movwf	(_day_of_month+1)& (0+255),b
  3649   001E50  0E01               	movlw	1
  3650   001E52  6FAC               	movwf	_day_of_month& (0+255),b
  3651                           
  3652                           ;Functions.c: 84:     day_of_week = 1;
  3653   001E54  0E00               	movlw	0
  3654   001E56  6FAF               	movwf	(_day_of_week+1)& (0+255),b
  3655   001E58  0E01               	movlw	1
  3656   001E5A  6FAE               	movwf	_day_of_week& (0+255),b
  3657                           
  3658                           ;Functions.c: 85:     year = 2022;
  3659   001E5C  0E07               	movlw	7
  3660   001E5E  6FAB               	movwf	(_year+1)& (0+255),b
  3661   001E60  0EE6               	movlw	230
  3662   001E62  6FAA               	movwf	_year& (0+255),b
  3663                           
  3664                           ;Functions.c: 86:     month_num = 1;
  3665   001E64  0E00               	movlw	0
  3666   001E66  6FB3               	movwf	(_month_num+1)& (0+255),b
  3667   001E68  0E01               	movlw	1
  3668   001E6A  6FB2               	movwf	_month_num& (0+255),b
  3669   001E6C                     
  3670                           ; BSR set to: 1
  3671                           ;Functions.c: 87:     LATHbits.LATH3 = 1;
  3672   001E6C  8680               	bsf	128,3,c	;volatile
  3673   001E6E                     
  3674                           ; BSR set to: 1
  3675   001E6E  0012               	return		;funcret
  3676   001E70                     __end_of_day1_init:
  3677                           	callstack 0
  3678                           
  3679 ;; *************** function _Timer0_init *****************
  3680 ;; Defined at:
  3681 ;;		line 7 in file "timers.c"
  3682 ;; Parameters:    Size  Location     Type
  3683 ;;		None
  3684 ;; Auto vars:     Size  Location     Type
  3685 ;;		None
  3686 ;; Return value:  Size  Location     Type
  3687 ;;                  1    wreg      void 
  3688 ;; Registers used:
  3689 ;;		wreg, status,2
  3690 ;; Tracked objects:
  3691 ;;		On entry : 0/0
  3692 ;;		On exit  : 0/0
  3693 ;;		Unchanged: 0/0
  3694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3699 ;;Total ram usage:        0 bytes
  3700 ;; Hardware stack levels used: 1
  3701 ;; Hardware stack levels required when called: 3
  3702 ;; This function calls:
  3703 ;;		Nothing
  3704 ;; This function is called by:
  3705 ;;		_main
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           
  3709                           	psect	text23
  3710   001FD6                     __ptext23:
  3711                           	callstack 0
  3712   001FD6                     _Timer0_init:
  3713                           	callstack 27
  3714   001FD6                     
  3715                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  3716   001FD6  50D6               	movf	214,w,c	;volatile
  3717   001FD8  0B1F               	andlw	-225
  3718   001FDA  0940               	iorlw	64
  3719   001FDC  6ED6               	movwf	214,c	;volatile
  3720   001FDE                     
  3721                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  3722   001FDE  88D6               	bsf	214,4,c	;volatile
  3723                           
  3724                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  3725   001FE0  50D6               	movf	214,w,c	;volatile
  3726   001FE2  0BF0               	andlw	-16
  3727   001FE4  0908               	iorlw	8
  3728   001FE6  6ED6               	movwf	214,c	;volatile
  3729   001FE8                     
  3730                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  3731   001FE8  88D5               	bsf	213,4,c	;volatile
  3732                           
  3733                           ;timers.c: 15:     TMR0H=0b00001011;
  3734   001FEA  0E0B               	movlw	11
  3735   001FEC  6ED4               	movwf	212,c	;volatile
  3736                           
  3737                           ;timers.c: 16:     TMR0L=0b11011011;
  3738   001FEE  0EDB               	movlw	219
  3739   001FF0  6ED3               	movwf	211,c	;volatile
  3740   001FF2                     
  3741                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  3742   001FF2  8ED5               	bsf	213,7,c	;volatile
  3743   001FF4  0012               	return		;funcret
  3744   001FF6                     __end_of_Timer0_init:
  3745                           	callstack 0
  3746                           
  3747 ;; *************** function _LEDarray_init *****************
  3748 ;; Defined at:
  3749 ;;		line 10 in file "LEDarray.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;		None
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;		None
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  1    wreg      void 
  3756 ;; Registers used:
  3757 ;;		None
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3767 ;;Total ram usage:        0 bytes
  3768 ;; Hardware stack levels used: 1
  3769 ;; Hardware stack levels required when called: 3
  3770 ;; This function calls:
  3771 ;;		Nothing
  3772 ;; This function is called by:
  3773 ;;		_main
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777                           	psect	text24
  3778   001F42                     __ptext24:
  3779                           	callstack 0
  3780   001F42                     _LEDarray_init:
  3781                           	callstack 27
  3782   001F42                     
  3783                           ;LEDarray.c: 13:     TRISGbits.TRISG0 = 0;
  3784   001F42  9087               	bcf	135,0,c	;volatile
  3785                           
  3786                           ;LEDarray.c: 14:     TRISGbits.TRISG1 = 0;
  3787   001F44  9287               	bcf	135,1,c	;volatile
  3788                           
  3789                           ;LEDarray.c: 15:     TRISAbits.TRISA2 = 0;
  3790   001F46  9481               	bcf	129,2,c	;volatile
  3791                           
  3792                           ;LEDarray.c: 16:     TRISFbits.TRISF6 = 0;
  3793   001F48  9C86               	bcf	134,6,c	;volatile
  3794                           
  3795                           ;LEDarray.c: 17:     TRISAbits.TRISA4 = 0;
  3796   001F4A  9881               	bcf	129,4,c	;volatile
  3797                           
  3798                           ;LEDarray.c: 18:     TRISAbits.TRISA5 = 0;
  3799   001F4C  9A81               	bcf	129,5,c	;volatile
  3800                           
  3801                           ;LEDarray.c: 19:     TRISFbits.TRISF0 = 0;
  3802   001F4E  9086               	bcf	134,0,c	;volatile
  3803                           
  3804                           ;LEDarray.c: 20:     TRISBbits.TRISB0 = 0;
  3805   001F50  9082               	bcf	130,0,c	;volatile
  3806                           
  3807                           ;LEDarray.c: 21:     TRISBbits.TRISB1 = 0;
  3808   001F52  9282               	bcf	130,1,c	;volatile
  3809                           
  3810                           ;LEDarray.c: 24:     LATGbits.LATG0 = 0;
  3811   001F54  907F               	bcf	127,0,c	;volatile
  3812                           
  3813                           ;LEDarray.c: 25:     LATGbits.LATG1 = 0;
  3814   001F56  927F               	bcf	127,1,c	;volatile
  3815                           
  3816                           ;LEDarray.c: 26:     LATAbits.LATA2 = 0;
  3817   001F58  9479               	bcf	121,2,c	;volatile
  3818                           
  3819                           ;LEDarray.c: 27:     LATFbits.LATF6 = 0;
  3820   001F5A  9C7E               	bcf	126,6,c	;volatile
  3821                           
  3822                           ;LEDarray.c: 28:     LATAbits.LATA4 = 0;
  3823   001F5C  9879               	bcf	121,4,c	;volatile
  3824                           
  3825                           ;LEDarray.c: 29:     LATAbits.LATA5 = 0;
  3826   001F5E  9A79               	bcf	121,5,c	;volatile
  3827                           
  3828                           ;LEDarray.c: 30:     LATFbits.LATF0 = 0;
  3829   001F60  907E               	bcf	126,0,c	;volatile
  3830                           
  3831                           ;LEDarray.c: 31:     LATBbits.LATB0 = 0;
  3832   001F62  907A               	bcf	122,0,c	;volatile
  3833                           
  3834                           ;LEDarray.c: 32:     LATBbits.LATB1 = 0;
  3835   001F64  927A               	bcf	122,1,c	;volatile
  3836   001F66  0012               	return		;funcret
  3837   001F68                     __end_of_LEDarray_init:
  3838                           	callstack 0
  3839                           
  3840 ;; *************** function _LCD_setline *****************
  3841 ;; Defined at:
  3842 ;;		line 96 in file "LCD.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;  line            1    wreg     unsigned char 
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;  line            1   15[COMRAM] unsigned char 
  3847 ;; Return value:  Size  Location     Type
  3848 ;;                  1    wreg      void 
  3849 ;; Registers used:
  3850 ;;		wreg, status,2, status,0, cstack
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3857 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3859 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3860 ;;Total ram usage:        1 bytes
  3861 ;; Hardware stack levels used: 1
  3862 ;; Hardware stack levels required when called: 6
  3863 ;; This function calls:
  3864 ;;		_LCD_sendbyte
  3865 ;; This function is called by:
  3866 ;;		_main
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870                           	psect	text25
  3871   001EDE                     __ptext25:
  3872                           	callstack 0
  3873   001EDE                     _LCD_setline:
  3874                           	callstack 24
  3875                           
  3876                           ;incstack = 0
  3877                           ;LCD_setline@line stored from wreg
  3878   001EDE  6E10               	movwf	LCD_setline@line^0,c
  3879   001EE0                     
  3880                           ;LCD.c: 97:     if(line&0b01)
  3881   001EE0  A010               	btfss	LCD_setline@line^0,0,c
  3882   001EE2  EF75  F00F         	goto	u2341
  3883   001EE6  EF77  F00F         	goto	u2340
  3884   001EEA                     u2341:
  3885   001EEA  EF7C  F00F         	goto	l3008
  3886   001EEE                     u2340:
  3887   001EEE                     
  3888                           ;LCD.c: 98:     {;LCD.c: 99:         LCD_sendbyte(0x80,0);
  3889   001EEE  0E00               	movlw	0
  3890   001EF0  6E0E               	movwf	LCD_sendbyte@type^0,c
  3891   001EF2  0E80               	movlw	128
  3892   001EF4  EC89  F00F         	call	_LCD_sendbyte
  3893   001EF8                     l3008:
  3894                           
  3895                           ;LCD.c: 101:     if(line&0b10)
  3896   001EF8  A210               	btfss	LCD_setline@line^0,1,c
  3897   001EFA  EF81  F00F         	goto	u2351
  3898   001EFE  EF83  F00F         	goto	u2350
  3899   001F02                     u2351:
  3900   001F02  EF88  F00F         	goto	l589
  3901   001F06                     u2350:
  3902   001F06                     
  3903                           ;LCD.c: 102:     {;LCD.c: 103:         LCD_sendbyte(0xC0,0);
  3904   001F06  0E00               	movlw	0
  3905   001F08  6E0E               	movwf	LCD_sendbyte@type^0,c
  3906   001F0A  0EC0               	movlw	192
  3907   001F0C  EC89  F00F         	call	_LCD_sendbyte
  3908   001F10                     l589:
  3909   001F10  0012               	return		;funcret
  3910   001F12                     __end_of_LCD_setline:
  3911                           	callstack 0
  3912                           
  3913 ;; *************** function _LCD_Init *****************
  3914 ;; Defined at:
  3915 ;;		line 54 in file "LCD.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;		None
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;		None
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  1    wreg      void 
  3922 ;; Registers used:
  3923 ;;		wreg, status,2, status,0, cstack
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3931 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3932 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3933 ;;Total ram usage:        2 bytes
  3934 ;; Hardware stack levels used: 1
  3935 ;; Hardware stack levels required when called: 6
  3936 ;; This function calls:
  3937 ;;		_LCD_sendbyte
  3938 ;;		_LCD_sendnibble
  3939 ;; This function is called by:
  3940 ;;		_main
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944                           	psect	text26
  3945   00192C                     __ptext26:
  3946                           	callstack 0
  3947   00192C                     _LCD_Init:
  3948                           	callstack 24
  3949   00192C                     
  3950                           ;LCD.c: 58:     TRISCbits.TRISC2 = 0;
  3951   00192C  9483               	bcf	131,2,c	;volatile
  3952                           
  3953                           ;LCD.c: 59:     TRISCbits.TRISC6 = 0;
  3954   00192E  9C83               	bcf	131,6,c	;volatile
  3955                           
  3956                           ;LCD.c: 61:     TRISBbits.TRISB3 = 0;
  3957   001930  9682               	bcf	130,3,c	;volatile
  3958                           
  3959                           ;LCD.c: 62:     TRISBbits.TRISB2 = 0;
  3960   001932  9482               	bcf	130,2,c	;volatile
  3961                           
  3962                           ;LCD.c: 63:     TRISEbits.TRISE1 = 0;
  3963   001934  9285               	bcf	133,1,c	;volatile
  3964                           
  3965                           ;LCD.c: 64:     TRISEbits.TRISE3 = 0;
  3966   001936  9685               	bcf	133,3,c	;volatile
  3967                           
  3968                           ;LCD.c: 66:     LATBbits.LATB3 = 0;
  3969   001938  967A               	bcf	122,3,c	;volatile
  3970                           
  3971                           ;LCD.c: 67:     LATBbits.LATB2 = 0;
  3972   00193A  947A               	bcf	122,2,c	;volatile
  3973                           
  3974                           ;LCD.c: 68:     LATEbits.LATE1 = 0;
  3975   00193C  927D               	bcf	125,1,c	;volatile
  3976                           
  3977                           ;LCD.c: 69:     LATEbits.LATE3 = 0;
  3978   00193E  967D               	bcf	125,3,c	;volatile
  3979                           
  3980                           ;LCD.c: 71:     LATCbits.LATC2 = 0;
  3981   001940  947B               	bcf	123,2,c	;volatile
  3982                           
  3983                           ;LCD.c: 72:     LATCbits.LATC6 = 0;
  3984   001942  9C7B               	bcf	123,6,c	;volatile
  3985   001944                     
  3986                           ;LCD.c: 73:     _delay((unsigned long)((40)*(64000000/4000.0)));
  3987   001944  0E04               	movlw	4
  3988   001946  6E11               	movwf	(??_LCD_Init+1)^0,c
  3989   001948  0E40               	movlw	64
  3990   00194A  6E10               	movwf	??_LCD_Init^0,c
  3991   00194C  0E26               	movlw	38
  3992   00194E                     u2587:
  3993   00194E  2EE8               	decfsz	wreg,f,c
  3994   001950  D7FE               	bra	u2587
  3995   001952  2E10               	decfsz	??_LCD_Init^0,f,c
  3996   001954  D7FC               	bra	u2587
  3997   001956  2E11               	decfsz	(??_LCD_Init+1)^0,f,c
  3998   001958  D7FA               	bra	u2587
  3999   00195A  D000               	nop2	
  4000   00195C                     
  4001                           ;LCD.c: 78:     LCD_sendnibble(0b0011);
  4002   00195C  0E03               	movlw	3
  4003   00195E  ECEF  F00D         	call	_LCD_sendnibble
  4004   001962                     
  4005                           ;LCD.c: 79:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  4006   001962  0ED5               	movlw	213
  4007   001964                     u2597:
  4008   001964  2EE8               	decfsz	wreg,f,c
  4009   001966  D7FE               	bra	u2597
  4010   001968  F000               	nop	
  4011   00196A                     
  4012                           ;LCD.c: 80:     LCD_sendbyte(0b00101100,0);
  4013   00196A  0E00               	movlw	0
  4014   00196C  6E0E               	movwf	LCD_sendbyte@type^0,c
  4015   00196E  0E2C               	movlw	44
  4016   001970  EC89  F00F         	call	_LCD_sendbyte
  4017   001974                     
  4018                           ;LCD.c: 81:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  4019   001974  0ED5               	movlw	213
  4020   001976                     u2607:
  4021   001976  2EE8               	decfsz	wreg,f,c
  4022   001978  D7FE               	bra	u2607
  4023   00197A  F000               	nop	
  4024   00197C                     
  4025                           ;LCD.c: 82:     LCD_sendbyte(0b00101100,0);
  4026   00197C  0E00               	movlw	0
  4027   00197E  6E0E               	movwf	LCD_sendbyte@type^0,c
  4028   001980  0E2C               	movlw	44
  4029   001982  EC89  F00F         	call	_LCD_sendbyte
  4030   001986                     
  4031                           ;LCD.c: 83:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  4032   001986  0ED5               	movlw	213
  4033   001988                     u2617:
  4034   001988  2EE8               	decfsz	wreg,f,c
  4035   00198A  D7FE               	bra	u2617
  4036   00198C  F000               	nop	
  4037   00198E                     
  4038                           ;LCD.c: 84:     LCD_sendbyte(0b00001100,0);
  4039   00198E  0E00               	movlw	0
  4040   001990  6E0E               	movwf	LCD_sendbyte@type^0,c
  4041   001992  0E0C               	movlw	12
  4042   001994  EC89  F00F         	call	_LCD_sendbyte
  4043   001998                     
  4044                           ;LCD.c: 85:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  4045   001998  0ED5               	movlw	213
  4046   00199A                     u2627:
  4047   00199A  2EE8               	decfsz	wreg,f,c
  4048   00199C  D7FE               	bra	u2627
  4049   00199E  F000               	nop	
  4050   0019A0                     
  4051                           ;LCD.c: 86:     LCD_sendbyte(0b00000001,0);
  4052   0019A0  0E00               	movlw	0
  4053   0019A2  6E0E               	movwf	LCD_sendbyte@type^0,c
  4054   0019A4  0E01               	movlw	1
  4055   0019A6  EC89  F00F         	call	_LCD_sendbyte
  4056   0019AA                     
  4057                           ;LCD.c: 87:     _delay((unsigned long)((1.53)*(64000000/4000.0)));
  4058   0019AA  0E20               	movlw	32
  4059   0019AC  6E10               	movwf	??_LCD_Init^0,c
  4060   0019AE  0ECA               	movlw	202
  4061   0019B0                     u2637:
  4062   0019B0  2EE8               	decfsz	wreg,f,c
  4063   0019B2  D7FE               	bra	u2637
  4064   0019B4  2E10               	decfsz	??_LCD_Init^0,f,c
  4065   0019B6  D7FC               	bra	u2637
  4066   0019B8                     
  4067                           ;LCD.c: 88:     LCD_sendbyte(0b00000111,0);
  4068   0019B8  0E00               	movlw	0
  4069   0019BA  6E0E               	movwf	LCD_sendbyte@type^0,c
  4070   0019BC  0E07               	movlw	7
  4071   0019BE  EC89  F00F         	call	_LCD_sendbyte
  4072   0019C2                     
  4073                           ;LCD.c: 89:     LCD_sendbyte(0b00001100,0);
  4074   0019C2  0E00               	movlw	0
  4075   0019C4  6E0E               	movwf	LCD_sendbyte@type^0,c
  4076   0019C6  0E0C               	movlw	12
  4077   0019C8  EC89  F00F         	call	_LCD_sendbyte
  4078   0019CC  0012               	return		;funcret
  4079   0019CE                     __end_of_LCD_Init:
  4080                           	callstack 0
  4081                           
  4082 ;; *************** function _LCD_sendbyte *****************
  4083 ;; Defined at:
  4084 ;;		line 37 in file "LCD.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;  Byte            1    wreg     unsigned char 
  4087 ;;  type            1   13[COMRAM] unsigned char 
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;  Byte            1   14[COMRAM] unsigned char 
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  1    wreg      void 
  4092 ;; Registers used:
  4093 ;;		wreg, status,2, status,0, cstack
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4099 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4100 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4102 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4103 ;;Total ram usage:        2 bytes
  4104 ;; Hardware stack levels used: 1
  4105 ;; Hardware stack levels required when called: 5
  4106 ;; This function calls:
  4107 ;;		_LCD_sendnibble
  4108 ;; This function is called by:
  4109 ;;		_LCD_Init
  4110 ;;		_LCD_setline
  4111 ;;		_LCD_sendstring
  4112 ;;		_LCD_scroll
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           	psect	text27
  4117   001F12                     __ptext27:
  4118                           	callstack 0
  4119   001F12                     _LCD_sendbyte:
  4120                           	callstack 23
  4121                           
  4122                           ;incstack = 0
  4123                           ;LCD_sendbyte@Byte stored from wreg
  4124   001F12  6E0F               	movwf	LCD_sendbyte@Byte^0,c
  4125   001F14                     
  4126                           ;LCD.c: 38:     if(type&0b1)
  4127   001F14  A00E               	btfss	LCD_sendbyte@type^0,0,c
  4128   001F16  EF8F  F00F         	goto	u2141
  4129   001F1A  EF91  F00F         	goto	u2140
  4130   001F1E                     u2141:
  4131   001F1E  EF94  F00F         	goto	l579
  4132   001F22                     u2140:
  4133   001F22                     
  4134                           ;LCD.c: 39:     {;LCD.c: 40:         LATCbits.LATC6 = 1;
  4135   001F22  8C7B               	bsf	123,6,c	;volatile
  4136                           
  4137                           ;LCD.c: 41:     }
  4138   001F24  EF95  F00F         	goto	l2814
  4139   001F28                     l579:
  4140                           
  4141                           ;LCD.c: 43:     {;LCD.c: 44:         (LATCbits.LATC6 = 0);
  4142   001F28  9C7B               	bcf	123,6,c	;volatile
  4143   001F2A                     l2814:
  4144                           
  4145                           ;LCD.c: 46:     LCD_sendnibble(Byte>>4);
  4146   001F2A  380F               	swapf	LCD_sendbyte@Byte^0,w,c
  4147   001F2C  0B0F               	andlw	15
  4148   001F2E  ECEF  F00D         	call	_LCD_sendnibble
  4149   001F32                     
  4150                           ;LCD.c: 47:     LCD_sendnibble(Byte);
  4151   001F32  500F               	movf	LCD_sendbyte@Byte^0,w,c
  4152   001F34  ECEF  F00D         	call	_LCD_sendnibble
  4153   001F38                     
  4154                           ;LCD.c: 48:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  4155   001F38  0EA0               	movlw	160
  4156   001F3A                     u2647:
  4157   001F3A  D000               	nop2	
  4158   001F3C  2EE8               	decfsz	wreg,f,c
  4159   001F3E  D7FD               	bra	u2647
  4160   001F40  0012               	return		;funcret
  4161   001F42                     __end_of_LCD_sendbyte:
  4162                           	callstack 0
  4163                           
  4164 ;; *************** function _LCD_sendnibble *****************
  4165 ;; Defined at:
  4166 ;;		line 18 in file "LCD.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  number          1    wreg     unsigned char 
  4169 ;; Auto vars:     Size  Location     Type
  4170 ;;  number          1   12[COMRAM] unsigned char 
  4171 ;; Return value:  Size  Location     Type
  4172 ;;                  1    wreg      void 
  4173 ;; Registers used:
  4174 ;;		wreg, cstack
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4181 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4183 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4184 ;;Total ram usage:        1 bytes
  4185 ;; Hardware stack levels used: 1
  4186 ;; Hardware stack levels required when called: 4
  4187 ;; This function calls:
  4188 ;;		_LCD_E_TOG
  4189 ;; This function is called by:
  4190 ;;		_LCD_sendbyte
  4191 ;;		_LCD_Init
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           	psect	text28
  4196   001BDE                     __ptext28:
  4197                           	callstack 0
  4198   001BDE                     _LCD_sendnibble:
  4199                           	callstack 23
  4200                           
  4201                           ;incstack = 0
  4202                           ;LCD_sendnibble@number stored from wreg
  4203   001BDE  6E0D               	movwf	LCD_sendnibble@number^0,c
  4204   001BE0                     
  4205                           ;LCD.c: 21:     if(number&0b0001) LATBbits.LATB3=1;
  4206   001BE0  A00D               	btfss	LCD_sendnibble@number^0,0,c
  4207   001BE2  EFF5  F00D         	goto	u2071
  4208   001BE6  EFF7  F00D         	goto	u2070
  4209   001BEA                     u2071:
  4210   001BEA  EFFA  F00D         	goto	l568
  4211   001BEE                     u2070:
  4212   001BEE  867A               	bsf	122,3,c	;volatile
  4213   001BF0  EFFB  F00D         	goto	l2764
  4214   001BF4                     l568:
  4215   001BF4  967A               	bcf	122,3,c	;volatile
  4216   001BF6                     l2764:
  4217                           
  4218                           ;LCD.c: 23:     if(number&0b0010) LATBbits.LATB2=1;
  4219   001BF6  A20D               	btfss	LCD_sendnibble@number^0,1,c
  4220   001BF8  EF00  F00E         	goto	u2081
  4221   001BFC  EF02  F00E         	goto	u2080
  4222   001C00                     u2081:
  4223   001C00  EF05  F00E         	goto	l570
  4224   001C04                     u2080:
  4225   001C04  847A               	bsf	122,2,c	;volatile
  4226   001C06  EF06  F00E         	goto	l2768
  4227   001C0A                     l570:
  4228   001C0A  947A               	bcf	122,2,c	;volatile
  4229   001C0C                     l2768:
  4230                           
  4231                           ;LCD.c: 25:     if(number&0b0100) LATEbits.LATE3=1;
  4232   001C0C  A40D               	btfss	LCD_sendnibble@number^0,2,c
  4233   001C0E  EF0B  F00E         	goto	u2091
  4234   001C12  EF0D  F00E         	goto	u2090
  4235   001C16                     u2091:
  4236   001C16  EF10  F00E         	goto	l572
  4237   001C1A                     u2090:
  4238   001C1A  867D               	bsf	125,3,c	;volatile
  4239   001C1C  EF11  F00E         	goto	l2772
  4240   001C20                     l572:
  4241   001C20  967D               	bcf	125,3,c	;volatile
  4242   001C22                     l2772:
  4243                           
  4244                           ;LCD.c: 27:     if(number&0b1000) LATEbits.LATE1=1;
  4245   001C22  A60D               	btfss	LCD_sendnibble@number^0,3,c
  4246   001C24  EF16  F00E         	goto	u2101
  4247   001C28  EF18  F00E         	goto	u2100
  4248   001C2C                     u2101:
  4249   001C2C  EF1B  F00E         	goto	l574
  4250   001C30                     u2100:
  4251   001C30  827D               	bsf	125,1,c	;volatile
  4252   001C32  EF1C  F00E         	goto	l2776
  4253   001C36                     l574:
  4254   001C36  927D               	bcf	125,1,c	;volatile
  4255   001C38                     l2776:
  4256                           
  4257                           ;LCD.c: 29:     LCD_E_TOG();
  4258   001C38  EC31  F010         	call	_LCD_E_TOG	;wreg free
  4259   001C3C                     
  4260                           ;LCD.c: 30:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  4261   001C3C  0E1A               	movlw	26
  4262   001C3E                     u2657:
  4263   001C3E  2EE8               	decfsz	wreg,f,c
  4264   001C40  D7FE               	bra	u2657
  4265   001C42  D000               	nop2	
  4266   001C44  0012               	return		;funcret
  4267   001C46                     __end_of_LCD_sendnibble:
  4268                           	callstack 0
  4269                           
  4270 ;; *************** function _LCD_E_TOG *****************
  4271 ;; Defined at:
  4272 ;;		line 9 in file "LCD.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;		None
  4275 ;; Auto vars:     Size  Location     Type
  4276 ;;		None
  4277 ;; Return value:  Size  Location     Type
  4278 ;;                  1    wreg      void 
  4279 ;; Registers used:
  4280 ;;		wreg
  4281 ;; Tracked objects:
  4282 ;;		On entry : 0/0
  4283 ;;		On exit  : 0/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4290 ;;Total ram usage:        0 bytes
  4291 ;; Hardware stack levels used: 1
  4292 ;; Hardware stack levels required when called: 3
  4293 ;; This function calls:
  4294 ;;		Nothing
  4295 ;; This function is called by:
  4296 ;;		_LCD_sendnibble
  4297 ;; This function uses a non-reentrant model
  4298 ;;
  4299                           
  4300                           	psect	text29
  4301   002062                     __ptext29:
  4302                           	callstack 0
  4303   002062                     _LCD_E_TOG:
  4304                           	callstack 23
  4305   002062                     
  4306                           ;LCD.c: 10:     LATCbits.LATC2=1;
  4307   002062  847B               	bsf	123,2,c	;volatile
  4308   002064                     
  4309                           ;LCD.c: 11:     _delay((unsigned long)((2)*(64000000/4000000.0)));
  4310   002064  0E0A               	movlw	10
  4311   002066                     u2667:
  4312   002066  2EE8               	decfsz	wreg,f,c
  4313   002068  D7FE               	bra	u2667
  4314   00206A  D000               	nop2	
  4315   00206C                     
  4316                           ;LCD.c: 12:     LATCbits.LATC2=0;
  4317   00206C  947B               	bcf	123,2,c	;volatile
  4318   00206E  0012               	return		;funcret
  4319   002070                     __end_of_LCD_E_TOG:
  4320                           	callstack 0
  4321                           
  4322 ;; *************** function _Interrupts_init *****************
  4323 ;; Defined at:
  4324 ;;		line 10 in file "interrupts.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;		None
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;		None
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  1    wreg      void 
  4331 ;; Registers used:
  4332 ;;		None
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4342 ;;Total ram usage:        0 bytes
  4343 ;; Hardware stack levels used: 1
  4344 ;; Hardware stack levels required when called: 3
  4345 ;; This function calls:
  4346 ;;		Nothing
  4347 ;; This function is called by:
  4348 ;;		_main
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352                           	psect	text30
  4353   002050                     __ptext30:
  4354                           	callstack 0
  4355   002050                     _Interrupts_init:
  4356                           	callstack 27
  4357   002050                     
  4358                           ;interrupts.c: 14:     PIE2bits.C1IE=1;
  4359   002050  010E               	movlb	14	; () banked
  4360   002052  812B               	bsf	43,0,b	;volatile
  4361                           
  4362                           ;interrupts.c: 15:     PIE0bits.TMR0IE=1;
  4363   002054  8B29               	bsf	41,5,b	;volatile
  4364                           
  4365                           ;interrupts.c: 16:     IPR2bits.C1IP = 1;
  4366   002056  8121               	bsf	33,0,b	;volatile
  4367                           
  4368                           ;interrupts.c: 17:     IPR0bits.TMR0IP = 0;
  4369   002058  9B1F               	bcf	31,5,b	;volatile
  4370                           
  4371                           ;interrupts.c: 18:     INTCONbits.IPEN=1;
  4372   00205A  8AF2               	bsf	242,5,c	;volatile
  4373                           
  4374                           ;interrupts.c: 19:     INTCONbits.PEIE=1;
  4375   00205C  8CF2               	bsf	242,6,c	;volatile
  4376                           
  4377                           ;interrupts.c: 20:     INTCONbits.GIE=1;
  4378   00205E  8EF2               	bsf	242,7,c	;volatile
  4379   002060                     
  4380                           ; BSR set to: 14
  4381   002060  0012               	return		;funcret
  4382   002062                     __end_of_Interrupts_init:
  4383                           	callstack 0
  4384                           
  4385 ;; *************** function _Comp1_init_rising_edge *****************
  4386 ;; Defined at:
  4387 ;;		line 24 in file "comparator.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;		None
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;		None
  4392 ;; Return value:  Size  Location     Type
  4393 ;;                  1    wreg      void 
  4394 ;; Registers used:
  4395 ;;		wreg, status,2, cstack
  4396 ;; Tracked objects:
  4397 ;;		On entry : 0/0
  4398 ;;		On exit  : 0/0
  4399 ;;		Unchanged: 0/0
  4400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4405 ;;Total ram usage:        0 bytes
  4406 ;; Hardware stack levels used: 1
  4407 ;; Hardware stack levels required when called: 4
  4408 ;; This function calls:
  4409 ;;		_DAC_init
  4410 ;; This function is called by:
  4411 ;;		_main
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415                           	psect	text31
  4416   001F8E                     __ptext31:
  4417                           	callstack 0
  4418   001F8E                     _Comp1_init_rising_edge:
  4419                           	callstack 26
  4420   001F8E                     
  4421                           ;comparator.c: 26:     TRISFbits.TRISF7=1;
  4422   001F8E  8E86               	bsf	134,7,c	;volatile
  4423   001F90                     
  4424                           ;comparator.c: 27:     CM1NCHbits.NCH=0b011;
  4425   001F90  010E               	movlb	14	; () banked
  4426   001F92  51D2               	movf	210,w,b	;volatile
  4427   001F94  0BF8               	andlw	-8
  4428   001F96  0903               	iorlw	3
  4429   001F98  6FD2               	movwf	210,b	;volatile
  4430                           
  4431                           ;comparator.c: 28:     CM1PCHbits.PCH=0b101;
  4432   001F9A  51D3               	movf	211,w,b	;volatile
  4433   001F9C  0BF8               	andlw	-8
  4434   001F9E  0905               	iorlw	5
  4435   001FA0  6FD3               	movwf	211,b	;volatile
  4436   001FA2                     
  4437                           ; BSR set to: 14
  4438                           ;comparator.c: 29:     CM1CON0bits.HYS=1;
  4439   001FA2  83D0               	bsf	208,1,b	;volatile
  4440   001FA4                     
  4441                           ; BSR set to: 14
  4442                           ;comparator.c: 30:     CM1CON0bits.POL=1;
  4443   001FA4  89D0               	bsf	208,4,b	;volatile
  4444   001FA6                     
  4445                           ; BSR set to: 14
  4446                           ;comparator.c: 31:     CM1CON1bits.INTP=1;
  4447   001FA6  83D1               	bsf	209,1,b	;volatile
  4448   001FA8                     
  4449                           ; BSR set to: 14
  4450                           ;comparator.c: 32:     DAC_init();
  4451   001FA8  EC1E  F010         	call	_DAC_init	;wreg free
  4452   001FAC                     
  4453                           ;comparator.c: 33:     CM1CON0bits.EN=1;
  4454   001FAC  010E               	movlb	14	; () banked
  4455   001FAE  8FD0               	bsf	208,7,b	;volatile
  4456   001FB0                     
  4457                           ; BSR set to: 14
  4458   001FB0  0012               	return		;funcret
  4459   001FB2                     __end_of_Comp1_init_rising_edge:
  4460                           	callstack 0
  4461                           
  4462 ;; *************** function _Comp1_init_falling_edge *****************
  4463 ;; Defined at:
  4464 ;;		line 37 in file "comparator.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;		None
  4467 ;; Auto vars:     Size  Location     Type
  4468 ;;		None
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  1    wreg      void 
  4471 ;; Registers used:
  4472 ;;		wreg, status,2, cstack
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4482 ;;Total ram usage:        0 bytes
  4483 ;; Hardware stack levels used: 1
  4484 ;; Hardware stack levels required when called: 4
  4485 ;; This function calls:
  4486 ;;		_DAC_init
  4487 ;; This function is called by:
  4488 ;;		_main
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           	psect	text32
  4493   001FB2                     __ptext32:
  4494                           	callstack 0
  4495   001FB2                     _Comp1_init_falling_edge:
  4496                           	callstack 26
  4497   001FB2                     
  4498                           ;comparator.c: 39:     TRISFbits.TRISF7=1;
  4499   001FB2  8E86               	bsf	134,7,c	;volatile
  4500   001FB4                     
  4501                           ;comparator.c: 40:     CM1NCHbits.NCH=0b011;
  4502   001FB4  010E               	movlb	14	; () banked
  4503   001FB6  51D2               	movf	210,w,b	;volatile
  4504   001FB8  0BF8               	andlw	-8
  4505   001FBA  0903               	iorlw	3
  4506   001FBC  6FD2               	movwf	210,b	;volatile
  4507                           
  4508                           ;comparator.c: 41:     CM1PCHbits.PCH=0b101;
  4509   001FBE  51D3               	movf	211,w,b	;volatile
  4510   001FC0  0BF8               	andlw	-8
  4511   001FC2  0905               	iorlw	5
  4512   001FC4  6FD3               	movwf	211,b	;volatile
  4513   001FC6                     
  4514                           ; BSR set to: 14
  4515                           ;comparator.c: 42:     CM1CON0bits.HYS=1;
  4516   001FC6  83D0               	bsf	208,1,b	;volatile
  4517   001FC8                     
  4518                           ; BSR set to: 14
  4519                           ;comparator.c: 43:     CM1CON0bits.POL=1;
  4520   001FC8  89D0               	bsf	208,4,b	;volatile
  4521   001FCA                     
  4522                           ; BSR set to: 14
  4523                           ;comparator.c: 44:     CM1CON1bits.INTN=1;
  4524   001FCA  81D1               	bsf	209,0,b	;volatile
  4525   001FCC                     
  4526                           ; BSR set to: 14
  4527                           ;comparator.c: 45:     DAC_init();
  4528   001FCC  EC1E  F010         	call	_DAC_init	;wreg free
  4529   001FD0                     
  4530                           ;comparator.c: 46:     CM1CON0bits.EN=1;
  4531   001FD0  010E               	movlb	14	; () banked
  4532   001FD2  8FD0               	bsf	208,7,b	;volatile
  4533   001FD4                     
  4534                           ; BSR set to: 14
  4535   001FD4  0012               	return		;funcret
  4536   001FD6                     __end_of_Comp1_init_falling_edge:
  4537                           	callstack 0
  4538                           
  4539 ;; *************** function _DAC_init *****************
  4540 ;; Defined at:
  4541 ;;		line 7 in file "comparator.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;		None
  4544 ;; Auto vars:     Size  Location     Type
  4545 ;;		None
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  1    wreg      void 
  4548 ;; Registers used:
  4549 ;;		wreg, status,2
  4550 ;; Tracked objects:
  4551 ;;		On entry : 0/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: 0/0
  4554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4559 ;;Total ram usage:        0 bytes
  4560 ;; Hardware stack levels used: 1
  4561 ;; Hardware stack levels required when called: 3
  4562 ;; This function calls:
  4563 ;;		Nothing
  4564 ;; This function is called by:
  4565 ;;		_Comp1_init_rising_edge
  4566 ;;		_Comp1_init_falling_edge
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           	psect	text33
  4571   00203C                     __ptext33:
  4572                           	callstack 0
  4573   00203C                     _DAC_init:
  4574                           	callstack 26
  4575   00203C                     
  4576                           ;comparator.c: 9:     DAC1CON0bits.PSS=0b00;
  4577   00203C  0EF3               	movlw	-13
  4578   00203E  010E               	movlb	14	; () banked
  4579   002040  17C6               	andwf	198,f,b	;volatile
  4580   002042                     
  4581                           ; BSR set to: 14
  4582                           ;comparator.c: 10:     DAC1CON0bits.NSS=0b0;
  4583   002042  91C6               	bcf	198,0,b	;volatile
  4584                           
  4585                           ;comparator.c: 14:     DAC1CON1bits.DAC1R=20;
  4586   002044  51C7               	movf	199,w,b	;volatile
  4587   002046  0BE0               	andlw	-32
  4588   002048  0914               	iorlw	20
  4589   00204A  6FC7               	movwf	199,b	;volatile
  4590   00204C                     
  4591                           ; BSR set to: 14
  4592                           ;comparator.c: 15:     DAC1CON0bits.DAC1EN=1;
  4593   00204C  8FC6               	bsf	198,7,b	;volatile
  4594   00204E                     
  4595                           ; BSR set to: 14
  4596   00204E  0012               	return		;funcret
  4597   002050                     __end_of_DAC_init:
  4598                           	callstack 0
  4599                           
  4600 ;; *************** function _ADC_init *****************
  4601 ;; Defined at:
  4602 ;;		line 11 in file "ADC.c"
  4603 ;; Parameters:    Size  Location     Type
  4604 ;;		None
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;		None
  4607 ;; Return value:  Size  Location     Type
  4608 ;;                  1    wreg      void 
  4609 ;; Registers used:
  4610 ;;		wreg, status,2
  4611 ;; Tracked objects:
  4612 ;;		On entry : 0/0
  4613 ;;		On exit  : 0/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4620 ;;Total ram usage:        0 bytes
  4621 ;; Hardware stack levels used: 1
  4622 ;; Hardware stack levels required when called: 3
  4623 ;; This function calls:
  4624 ;;		Nothing
  4625 ;; This function is called by:
  4626 ;;		_main
  4627 ;; This function uses a non-reentrant model
  4628 ;;
  4629                           
  4630                           	psect	text34
  4631   001FF6                     __ptext34:
  4632                           	callstack 0
  4633   001FF6                     _ADC_init:
  4634                           	callstack 27
  4635   001FF6                     
  4636                           ;ADC.c: 13:     TRISAbits.TRISA3=1;
  4637   001FF6  8681               	bsf	129,3,c	;volatile
  4638                           
  4639                           ;ADC.c: 14:     ANSELAbits.ANSELA3=1;
  4640   001FF8  010E               	movlb	14	; () banked
  4641   001FFA  8792               	bsf	146,3,b	;volatile
  4642                           
  4643                           ;ADC.c: 17:     ADREFbits.ADNREF = 0;
  4644   001FFC  010F               	movlb	15	; () banked
  4645   001FFE  9958               	bcf	88,4,b	;volatile
  4646   002000                     
  4647                           ; BSR set to: 15
  4648                           ;ADC.c: 18:     ADREFbits.ADPREF = 0b00;
  4649   002000  0EFC               	movlw	-4
  4650   002002  1758               	andwf	88,f,b	;volatile
  4651                           
  4652                           ;ADC.c: 19:     ADPCH=0b11;
  4653   002004  0E03               	movlw	3
  4654   002006  6F5F               	movwf	95,b	;volatile
  4655   002008                     
  4656                           ; BSR set to: 15
  4657                           ;ADC.c: 20:     ADCON0bits.ADFM = 0;
  4658   002008  9460               	bcf	96,2,c	;volatile
  4659   00200A                     
  4660                           ; BSR set to: 15
  4661                           ;ADC.c: 21:     ADCON0bits.ADCS = 1;
  4662   00200A  8860               	bsf	96,4,c	;volatile
  4663   00200C                     
  4664                           ; BSR set to: 15
  4665                           ;ADC.c: 22:     ADCON0bits.ADON = 1;
  4666   00200C  8E60               	bsf	96,7,c	;volatile
  4667   00200E                     
  4668                           ; BSR set to: 15
  4669   00200E  0012               	return		;funcret
  4670   002010                     __end_of_ADC_init:
  4671                           	callstack 0
  4672                           
  4673 ;; *************** function _LowISR *****************
  4674 ;; Defined at:
  4675 ;;		line 45 in file "interrupts.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;		None
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;		None
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  1    wreg      void 
  4682 ;; Registers used:
  4683 ;;		wreg, status,2, status,0
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4691 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4692 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4693 ;;Total ram usage:        3 bytes
  4694 ;; Hardware stack levels used: 1
  4695 ;; Hardware stack levels required when called: 2
  4696 ;; This function calls:
  4697 ;;		Nothing
  4698 ;; This function is called by:
  4699 ;;		Interrupt level 1
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703                           	psect	intcodelo
  4704   000018                     __pintcodelo:
  4705                           	callstack 0
  4706   000018                     _LowISR:
  4707                           	callstack 19
  4708                           
  4709                           ; BSR set to: 15
  4710                           ;incstack = 0
  4711   000018  8051               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4712   00001A  CFD8 F00A          	movff	status,??_LowISR
  4713   00001E  CFE8 F00B          	movff	wreg,??_LowISR+1
  4714   000022  CFE0 F00C          	movff	bsr,??_LowISR+2
  4715   000026                     
  4716                           ;interrupts.c: 47:     if(PIR0bits.TMR0IF){
  4717   000026  010E               	movlb	14	; () banked
  4718   000028  AB33               	btfss	51,5,b	;volatile
  4719   00002A  EF19  F000         	goto	i1u88_21
  4720   00002E  EF1B  F000         	goto	i1u88_20
  4721   000032                     i1u88_21:
  4722   000032  EF22  F000         	goto	i1l1952
  4723   000036                     i1u88_20:
  4724   000036                     
  4725                           ; BSR set to: 14
  4726                           ;interrupts.c: 48:         seconds++;
  4727   000036  4A4A               	infsnz	_seconds^0,f,c
  4728   000038  2A4B               	incf	(_seconds+1)^0,f,c
  4729   00003A                     
  4730                           ; BSR set to: 14
  4731                           ;interrupts.c: 49:         TMR0H=00001011;
  4732   00003A  0E09               	movlw	9
  4733   00003C  6ED4               	movwf	212,c	;volatile
  4734   00003E                     
  4735                           ; BSR set to: 14
  4736                           ;interrupts.c: 50:         TMR0L=11011011;
  4737   00003E  0EC3               	movlw	195
  4738   000040  6ED3               	movwf	211,c	;volatile
  4739   000042                     
  4740                           ; BSR set to: 14
  4741                           ;interrupts.c: 51:         PIR0bits.TMR0IF = 0;
  4742   000042  9B33               	bcf	51,5,b	;volatile
  4743   000044                     i1l1952:
  4744                           
  4745                           ; BSR set to: 14
  4746                           ;interrupts.c: 54:     if (hour==5)
  4747   000044  0E05               	movlw	5
  4748   000046  184D               	xorwf	_hour^0,w,c
  4749   000048  104E               	iorwf	(_hour+1)^0,w,c
  4750   00004A  A4D8               	btfss	status,2,c
  4751   00004C  EF2A  F000         	goto	i1u89_21
  4752   000050  EF2C  F000         	goto	i1u89_20
  4753   000054                     i1u89_21:
  4754   000054  EF2D  F000         	goto	i1l267
  4755   000058                     i1u89_20:
  4756   000058                     
  4757                           ; BSR set to: 14
  4758                           ;interrupts.c: 55:     {;interrupts.c: 56:         LATHbits.LATH3 = 1;
  4759   000058  8680               	bsf	128,3,c	;volatile
  4760   00005A                     i1l267:
  4761                           
  4762                           ; BSR set to: 14
  4763   00005A  C00C  FFE0         	movff	??_LowISR+2,bsr
  4764   00005E  C00B  FFE8         	movff	??_LowISR+1,wreg
  4765   000062  C00A  FFD8         	movff	??_LowISR,status
  4766   000066  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4767   000068  0010               	retfie	
  4768   00006A                     __end_of_LowISR:
  4769                           	callstack 0
  4770                           
  4771 ;; *************** function _HighISR *****************
  4772 ;; Defined at:
  4773 ;;		line 28 in file "interrupts.c"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;		None
  4776 ;; Auto vars:     Size  Location     Type
  4777 ;;		None
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  1    wreg      void 
  4780 ;; Registers used:
  4781 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4782 ;; Tracked objects:
  4783 ;;		On entry : 0/0
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4789 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4790 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4791 ;;Total ram usage:        3 bytes
  4792 ;; Hardware stack levels used: 1
  4793 ;; Hardware stack levels required when called: 1
  4794 ;; This function calls:
  4795 ;;		___wmul
  4796 ;; This function is called by:
  4797 ;;		Interrupt level 2
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           	psect	intcode
  4802   000008                     __pintcode:
  4803                           	callstack 0
  4804   000008                     _HighISR:
  4805                           	callstack 19
  4806                           
  4807                           ; BSR set to: 14
  4808                           ;incstack = 0
  4809   000008  8251               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4810   00000A  EF42  F00C         	goto	int_func
  4811                           
  4812                           	psect	intcode_body
  4813   001884                     __pintcode_body:
  4814                           	callstack 19
  4815   001884                     int_func:
  4816                           	callstack 19
  4817   001884  CFF3 F008          	movff	prodl,??_HighISR+1
  4818   001888  CFF4 F009          	movff	prodh,??_HighISR+2
  4819   00188C                     
  4820                           ;interrupts.c: 30:         if(PIR2bits.C1IF){
  4821   00188C  010E               	movlb	14	; () banked
  4822   00188E  A135               	btfss	53,0,b	;volatile
  4823   001890  EF4C  F00C         	goto	i2u171_41
  4824   001894  EF4E  F00C         	goto	i2u171_40
  4825   001898                     i2u171_41:
  4826   001898  EF90  F00C         	goto	i2l260
  4827   00189C                     i2u171_40:
  4828   00189C                     
  4829                           ; BSR set to: 14
  4830                           ;interrupts.c: 31:         LATHbits.LATH3 = !LATHbits.LATH3;
  4831   00189C  A680               	btfss	128,3,c	;volatile
  4832   00189E  EF53  F00C         	goto	i2u172_41
  4833   0018A2  EF57  F00C         	goto	i2u172_40
  4834   0018A6                     i2u172_41:
  4835   0018A6  6A07               	clrf	??_HighISR^0,c
  4836   0018A8  2A07               	incf	??_HighISR^0,f,c
  4837   0018AA  EF58  F00C         	goto	i2u173_48
  4838   0018AE                     i2u172_40:
  4839   0018AE  6A07               	clrf	??_HighISR^0,c
  4840   0018B0                     i2u173_48:
  4841   0018B0  4607               	rlncf	??_HighISR^0,f,c
  4842   0018B2  4607               	rlncf	??_HighISR^0,f,c
  4843   0018B4  4607               	rlncf	??_HighISR^0,f,c
  4844   0018B6  5080               	movf	128,w,c	;volatile
  4845   0018B8  1807               	xorwf	??_HighISR^0,w,c
  4846   0018BA  0BF7               	andlw	-9
  4847   0018BC  1807               	xorwf	??_HighISR^0,w,c
  4848   0018BE  6E80               	movwf	128,c	;volatile
  4849   0018C0                     
  4850                           ;interrupts.c: 32:         if (LATHbits.LATH3==0)
  4851   0018C0  B680               	btfsc	128,3,c	;volatile
  4852   0018C2  EF65  F00C         	goto	i2u174_41
  4853   0018C6  EF67  F00C         	goto	i2u174_40
  4854   0018CA                     i2u174_41:
  4855   0018CA  EF77  F00C         	goto	i2l2546
  4856   0018CE                     i2u174_40:
  4857   0018CE                     
  4858                           ;interrupts.c: 33:         {;interrupts.c: 34:             SR = seconds + (hour*10);
  4859   0018CE  C04D  F001         	movff	_hour,___wmul@multiplier
  4860   0018D2  C04E  F002         	movff	_hour+1,___wmul@multiplier+1
  4861   0018D6  0E00               	movlw	0
  4862   0018D8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4863   0018DA  0E0A               	movlw	10
  4864   0018DC  6E03               	movwf	___wmul@multiplicand^0,c
  4865   0018DE  ECB4  F00F         	call	___wmul	;wreg free
  4866   0018E2  504A               	movf	_seconds^0,w,c
  4867   0018E4  2401               	addwf	?___wmul^0,w,c
  4868   0018E6  6E48               	movwf	_SR^0,c
  4869   0018E8  504B               	movf	(_seconds+1)^0,w,c
  4870   0018EA  2002               	addwfc	(?___wmul+1)^0,w,c
  4871   0018EC  6E49               	movwf	(_SR+1)^0,c
  4872   0018EE                     i2l2546:
  4873                           
  4874                           ;interrupts.c: 36:         if (LATHbits.LATH3 == 1)
  4875   0018EE  A680               	btfss	128,3,c	;volatile
  4876   0018F0  EF7C  F00C         	goto	i2u175_41
  4877   0018F4  EF7E  F00C         	goto	i2u175_40
  4878   0018F8                     i2u175_41:
  4879   0018F8  EF8E  F00C         	goto	i2l2550
  4880   0018FC                     i2u175_40:
  4881   0018FC                     
  4882                           ;interrupts.c: 37:         {;interrupts.c: 38:             SS = seconds + (hour*10);
  4883   0018FC  C04D  F001         	movff	_hour,___wmul@multiplier
  4884   001900  C04E  F002         	movff	_hour+1,___wmul@multiplier+1
  4885   001904  0E00               	movlw	0
  4886   001906  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4887   001908  0E0A               	movlw	10
  4888   00190A  6E03               	movwf	___wmul@multiplicand^0,c
  4889   00190C  ECB4  F00F         	call	___wmul	;wreg free
  4890   001910  504A               	movf	_seconds^0,w,c
  4891   001912  2401               	addwf	?___wmul^0,w,c
  4892   001914  6E46               	movwf	_SS^0,c
  4893   001916  504B               	movf	(_seconds+1)^0,w,c
  4894   001918  2002               	addwfc	(?___wmul+1)^0,w,c
  4895   00191A  6E47               	movwf	(_SS+1)^0,c
  4896   00191C                     i2l2550:
  4897                           
  4898                           ;interrupts.c: 40:         PIR2bits.C1IF=0;
  4899   00191C  010E               	movlb	14	; () banked
  4900   00191E  9135               	bcf	53,0,b	;volatile
  4901   001920                     i2l260:
  4902                           
  4903                           ; BSR set to: 14
  4904   001920  C009  FFF4         	movff	??_HighISR+2,prodh
  4905   001924  C008  FFF3         	movff	??_HighISR+1,prodl
  4906   001928  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4907   00192A  0011               	retfie		f
  4908   00192C                     __end_of_HighISR:
  4909                           	callstack 0
  4910                           
  4911 ;; *************** function ___wmul *****************
  4912 ;; Defined at:
  4913 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;  multiplier      2    0[COMRAM] unsigned int 
  4916 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;  product         2    4[COMRAM] unsigned int 
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  2    0[COMRAM] unsigned int 
  4921 ;; Registers used:
  4922 ;;		wreg, status,2, status,0, prodl, prodh
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4928 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4929 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4931 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4932 ;;Total ram usage:        6 bytes
  4933 ;; Hardware stack levels used: 1
  4934 ;; This function calls:
  4935 ;;		Nothing
  4936 ;; This function is called by:
  4937 ;;		_HighISR
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941                           	psect	text37
  4942   001F68                     __ptext37:
  4943                           	callstack 0
  4944   001F68                     ___wmul:
  4945                           	callstack 19
  4946   001F68  5001               	movf	___wmul@multiplier^0,w,c
  4947   001F6A  0203               	mulwf	___wmul@multiplicand^0,c
  4948   001F6C  CFF3 F005          	movff	prodl,___wmul@product
  4949   001F70  CFF4 F006          	movff	prodh,___wmul@product+1
  4950   001F74  5001               	movf	___wmul@multiplier^0,w,c
  4951   001F76  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4952   001F78  50F3               	movf	243,w,c
  4953   001F7A  2606               	addwf	(___wmul@product+1)^0,f,c
  4954   001F7C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4955   001F7E  0203               	mulwf	___wmul@multiplicand^0,c
  4956   001F80  50F3               	movf	243,w,c
  4957   001F82  2606               	addwf	(___wmul@product+1)^0,f,c
  4958   001F84  C005  F001         	movff	___wmul@product,?___wmul
  4959   001F88  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4960   001F8C  0012               	return		;funcret
  4961   001F8E                     __end_of___wmul:
  4962                           	callstack 0
  4963                           
  4964                           	psect	rparam
  4965   000000                     
  4966                           	psect	temp
  4967   000051                     btemp:
  4968                           	callstack 0
  4969   000051                     	ds	1
  4970   000000                     int$flags	set	btemp
  4971   000000                     wtemp8	set	btemp+1
  4972   000000                     ttemp5	set	btemp+1
  4973   000000                     ttemp6	set	btemp+4
  4974   000000                     ttemp7	set	btemp+8
  4975                           
  4976                           	psect	idloc
  4977                           
  4978                           ;Config register IDLOC0 @ 0x200000
  4979                           ;	unspecified, using default values
  4980   200000                     	org	2097152
  4981   200000  0FFF               	dw	4095
  4982                           
  4983                           ;Config register IDLOC1 @ 0x200002
  4984                           ;	unspecified, using default values
  4985   200002                     	org	2097154
  4986   200002  0FFF               	dw	4095
  4987                           
  4988                           ;Config register IDLOC2 @ 0x200004
  4989                           ;	unspecified, using default values
  4990   200004                     	org	2097156
  4991   200004  0FFF               	dw	4095
  4992                           
  4993                           ;Config register IDLOC3 @ 0x200006
  4994                           ;	unspecified, using default values
  4995   200006                     	org	2097158
  4996   200006  0FFF               	dw	4095
  4997                           
  4998                           ;Config register IDLOC4 @ 0x200008
  4999                           ;	unspecified, using default values
  5000   200008                     	org	2097160
  5001   200008  0FFF               	dw	4095
  5002                           
  5003                           ;Config register IDLOC5 @ 0x20000A
  5004                           ;	unspecified, using default values
  5005   20000A                     	org	2097162
  5006   20000A  0FFF               	dw	4095
  5007                           
  5008                           ;Config register IDLOC6 @ 0x20000C
  5009                           ;	unspecified, using default values
  5010   20000C                     	org	2097164
  5011   20000C  0FFF               	dw	4095
  5012                           
  5013                           ;Config register IDLOC7 @ 0x20000E
  5014                           ;	unspecified, using default values
  5015   20000E                     	org	2097166
  5016   20000E  0FFF               	dw	4095
  5017                           
  5018                           	psect	config
  5019                           
  5020                           ;Config register CONFIG1L @ 0x300000
  5021                           ;	External Oscillator mode Selection bits
  5022                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5023                           ;	Power-up default value for COSC bits
  5024                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5025   300000                     	org	3145728
  5026   300000  AA                 	db	170
  5027                           
  5028                           ;Config register CONFIG1H @ 0x300001
  5029                           ;	unspecified, using default values
  5030                           ;	Clock Out Enable bit
  5031                           ;	CLKOUTEN = 0x1, unprogrammed default
  5032                           ;	Clock Switch Enable bit
  5033                           ;	CSWEN = 0x1, unprogrammed default
  5034                           ;	Fail-Safe Clock Monitor Enable bit
  5035                           ;	FCMEN = 0x1, unprogrammed default
  5036   300001                     	org	3145729
  5037   300001  FF                 	db	255
  5038                           
  5039                           ;Config register CONFIG2L @ 0x300002
  5040                           ;	unspecified, using default values
  5041                           ;	Master Clear Enable bit
  5042                           ;	MCLRE = 0x1, unprogrammed default
  5043                           ;	Power-up Timer Enable bit
  5044                           ;	PWRTE = 0x1, unprogrammed default
  5045                           ;	Low-power BOR enable bit
  5046                           ;	LPBOREN = 0x1, unprogrammed default
  5047                           ;	Brown-out Reset Enable bits
  5048                           ;	BOREN = 0x3, unprogrammed default
  5049   300002                     	org	3145730
  5050   300002  FF                 	db	255
  5051                           
  5052                           ;Config register CONFIG2H @ 0x300003
  5053                           ;	unspecified, using default values
  5054                           ;	Brown Out Reset Voltage selection bits
  5055                           ;	BORV = 0x3, unprogrammed default
  5056                           ;	ZCD Disable bit
  5057                           ;	ZCD = 0x1, unprogrammed default
  5058                           ;	PPSLOCK bit One-Way Set Enable bit
  5059                           ;	PPS1WAY = 0x1, unprogrammed default
  5060                           ;	Stack Full/Underflow Reset Enable bit
  5061                           ;	STVREN = 0x1, unprogrammed default
  5062                           ;	Debugger Enable bit
  5063                           ;	DEBUG = 0x1, unprogrammed default
  5064                           ;	Extended Instruction Set Enable bit
  5065                           ;	XINST = 0x1, unprogrammed default
  5066   300003                     	org	3145731
  5067   300003  FF                 	db	255
  5068                           
  5069                           ;Config register CONFIG3L @ 0x300004
  5070                           ;	WDT Period Select bits
  5071                           ;	WDTCPS = 0x1F, unprogrammed default
  5072                           ;	WDT operating mode
  5073                           ;	WDTE = OFF, WDT Disabled
  5074   300004                     	org	3145732
  5075   300004  9F                 	db	159
  5076                           
  5077                           ;Config register CONFIG3H @ 0x300005
  5078                           ;	unspecified, using default values
  5079                           ;	WDT Window Select bits
  5080                           ;	WDTCWS = 0x7, unprogrammed default
  5081                           ;	WDT input clock selector
  5082                           ;	WDTCCS = 0x7, unprogrammed default
  5083   300005                     	org	3145733
  5084   300005  FF                 	db	255
  5085                           
  5086                           ;Config register CONFIG4L @ 0x300006
  5087                           ;	unspecified, using default values
  5088                           ;	Write Protection Block 0
  5089                           ;	WRT0 = 0x1, unprogrammed default
  5090                           ;	Write Protection Block 1
  5091                           ;	WRT1 = 0x1, unprogrammed default
  5092                           ;	Write Protection Block 2
  5093                           ;	WRT2 = 0x1, unprogrammed default
  5094                           ;	Write Protection Block 3
  5095                           ;	WRT3 = 0x1, unprogrammed default
  5096                           ;	Write Protection Block 3
  5097                           ;	WRT4 = 0x1, unprogrammed default
  5098                           ;	Write Protection Block 3
  5099                           ;	WRT5 = 0x1, unprogrammed default
  5100                           ;	Write Protection Block 3
  5101                           ;	WRT6 = 0x1, unprogrammed default
  5102                           ;	Write Protection Block 3
  5103                           ;	WRT7 = 0x1, unprogrammed default
  5104   300006                     	org	3145734
  5105   300006  FF                 	db	255
  5106                           
  5107                           ;Config register CONFIG4H @ 0x300007
  5108                           ;	unspecified, using default values
  5109                           ;	Configuration Register Write Protection bit
  5110                           ;	WRTC = 0x1, unprogrammed default
  5111                           ;	Boot Block Write Protection bit
  5112                           ;	WRTB = 0x1, unprogrammed default
  5113                           ;	Data EEPROM Write Protection bit
  5114                           ;	WRTD = 0x1, unprogrammed default
  5115                           ;	Scanner Enable bit
  5116                           ;	SCANE = 0x1, unprogrammed default
  5117                           ;	Low Voltage Programming Enable bit
  5118                           ;	LVP = 0x1, unprogrammed default
  5119   300007                     	org	3145735
  5120   300007  FF                 	db	255
  5121                           
  5122                           ;Config register CONFIG5L @ 0x300008
  5123                           ;	unspecified, using default values
  5124                           ;	UserNVM Program Memory Code Protection bit
  5125                           ;	CP = 0x1, unprogrammed default
  5126                           ;	DataNVM Memory Code Protection bit
  5127                           ;	CPD = 0x1, unprogrammed default
  5128   300008                     	org	3145736
  5129   300008  FF                 	db	255
  5130                           
  5131                           ;Config register CONFIG5H @ 0x300009
  5132                           ;	unspecified, using default values
  5133   300009                     	org	3145737
  5134   300009  FF                 	db	255
  5135                           
  5136                           ;Config register CONFIG6L @ 0x30000A
  5137                           ;	unspecified, using default values
  5138                           ;	Table Read Protection Block 0
  5139                           ;	EBTR0 = 0x1, unprogrammed default
  5140                           ;	Table Read Protection Block 1
  5141                           ;	EBTR1 = 0x1, unprogrammed default
  5142                           ;	Table Read Protection Block 2
  5143                           ;	EBTR2 = 0x1, unprogrammed default
  5144                           ;	Table Read Protection Block 3
  5145                           ;	EBTR3 = 0x1, unprogrammed default
  5146                           ;	Table Read Protection Block 4
  5147                           ;	EBTR4 = 0x1, unprogrammed default
  5148                           ;	Table Read Protection Block 5
  5149                           ;	EBTR5 = 0x1, unprogrammed default
  5150                           ;	Table Read Protection Block 6
  5151                           ;	EBTR6 = 0x1, unprogrammed default
  5152                           ;	Table Read Protection Block 7
  5153                           ;	EBTR7 = 0x1, unprogrammed default
  5154   30000A                     	org	3145738
  5155   30000A  FF                 	db	255
  5156                           
  5157                           ;Config register CONFIG6H @ 0x30000B
  5158                           ;	unspecified, using default values
  5159                           ;	Boot Block Table Read Protection bit
  5160                           ;	EBTRB = 0x1, unprogrammed default
  5161   30000B                     	org	3145739
  5162   30000B  FF                 	db	255
  5163                           tosu	equ	0xFFF
  5164                           tosh	equ	0xFFE
  5165                           tosl	equ	0xFFD
  5166                           stkptr	equ	0xFFC
  5167                           pclatu	equ	0xFFB
  5168                           pclath	equ	0xFFA
  5169                           pcl	equ	0xFF9
  5170                           tblptru	equ	0xFF8
  5171                           tblptrh	equ	0xFF7
  5172                           tblptrl	equ	0xFF6
  5173                           tablat	equ	0xFF5
  5174                           prodh	equ	0xFF4
  5175                           prodl	equ	0xFF3
  5176                           indf0	equ	0xFEF
  5177                           postinc0	equ	0xFEE
  5178                           postdec0	equ	0xFED
  5179                           preinc0	equ	0xFEC
  5180                           plusw0	equ	0xFEB
  5181                           fsr0h	equ	0xFEA
  5182                           fsr0l	equ	0xFE9
  5183                           wreg	equ	0xFE8
  5184                           indf1	equ	0xFE7
  5185                           postinc1	equ	0xFE6
  5186                           postdec1	equ	0xFE5
  5187                           preinc1	equ	0xFE4
  5188                           plusw1	equ	0xFE3
  5189                           fsr1h	equ	0xFE2
  5190                           fsr1l	equ	0xFE1
  5191                           bsr	equ	0xFE0
  5192                           indf2	equ	0xFDF
  5193                           postinc2	equ	0xFDE
  5194                           postdec2	equ	0xFDD
  5195                           preinc2	equ	0xFDC
  5196                           plusw2	equ	0xFDB
  5197                           fsr2h	equ	0xFDA
  5198                           fsr2l	equ	0xFD9
  5199                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    0
    Data        26
    BSS         53
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     69      80
    BANK0           160     72      72
    BANK1           256    100     180
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2065$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@strdate(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2012$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2012$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    time2String@buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@strdate(BANK1[100]), 

    LCD_sendstring@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@strdate(BANK1[100]), 


Critical Paths under _main in COMRAM

    _main->_time2String
    _time_adjuster->___awdiv
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_sendstring->_LCD_sendbyte
    _increment->_LEDarray_disp_bin
    _LCD_setline->_LCD_sendbyte
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    _HighISR->___wmul

Critical Paths under _main in BANK0

    _main->_time2String
    _time2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               200   200      0   13718
                                              0 BANK1    100   100      0
                           _ADC_init
            _Comp1_init_falling_edge
             _Comp1_init_rising_edge
                    _Interrupts_init
                           _LCD_Init
                        _LCD_setline
                      _LEDarray_init
                        _Timer0_init
                          _day1_init
                    _daylightsavings
                          _increment
                           _poweroff
                    _streetLightInit
                           _test_day
                        _time2String
                      _time_adjuster
 ---------------------------------------------------------------------------------
 (1) _time_adjuster                                        8     4      4     969
                                             20 COMRAM     8     4      4
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     625
                                             12 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _time2String                                         14     2     12    9345
                                             67 COMRAM     2     2      0
                                             60 BANK0     12     0     12
                     _LCD_sendstring
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             29    15     14    7316
                                             33 BANK0     27    13     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6830
                                             65 COMRAM     2     2      0
                                             27 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           23    17      6    6369
                                             57 COMRAM     8     2      6
                                             17 BANK0     10    10      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    4802
                                             39 COMRAM    18     8     10
                                              0 BANK0     17    17      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2533
                                             28 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1177
                                             21 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     857
                                             12 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             30 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             12 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                             12 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _LCD_sendstring                                       2     0      2    1272
                                             15 COMRAM     2     0      2
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _test_day                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _streetLightInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _poweroff                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _increment                                            2     2      0     935
                                             38 COMRAM     2     2      0
                  _LEDarray_disp_bin
 ---------------------------------------------------------------------------------
 (2) _LEDarray_disp_bin                                   26    24      2     935
                                             12 COMRAM    26    24      2
 ---------------------------------------------------------------------------------
 (1) _daylightsavings                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _day1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_setline                                          1     1      0    1179
                                             15 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    1241
                                             15 COMRAM     2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendbyte                                         2     1      1    1117
                                             13 COMRAM     2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (4) _LCD_sendnibble                                       1     1      0     124
                                             12 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (5) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init_rising_edge                               0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (1) _Comp1_init_falling_edge                              0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _LowISR                                              3     3      0       0
                                              9 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _HighISR                                             3     3      0     463
                                              6 COMRAM     3     3      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Comp1_init_falling_edge
     _DAC_init
   _Comp1_init_rising_edge
     _DAC_init
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_setline
     _LCD_sendbyte
   _LEDarray_init
   _Timer0_init
   _day1_init
   _daylightsavings
   _increment
     _LEDarray_disp_bin
   _poweroff
   _streetLightInit
   _test_day
   _time2String
     _LCD_sendstring
       _LCD_sendbyte
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _time_adjuster
     ___awdiv

 _LowISR (ROOT)

 _HighISR (ROOT)
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     64      B4       7       70.3%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     48      48       5       45.0%
BITBIGSFRlhlhh      84      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     45      50       1       85.1%
BITBIGSFRllhh       5C      0       0      43        0.0%
BITBIGSFRhhll       4A      0       0      34        0.0%
BITBIGSFRlhll       33      0       0      42        0.0%
BITBIGSFRllllll     30      0       0      49        0.0%
BITBIGSFRhhlhh      1B      0       0      33        0.0%
BITBIGSFRlhhhhl     14      0       0      37        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRlhlhll      8      0       0      41        0.0%
BITBIGSFRllllh       7      0       0      47        0.0%
BITBIGSFRllhll       7      0       0      45        0.0%
BITBIGSFRlhhl        6      0       0      39        0.0%
BITBIGSFRlhhhl       3      0       0      38        0.0%
BITBIGSFRllhlh       1      0       0      44        0.0%
BITBIGSFRlllllh      1      0       0      48        0.0%
BITBIGSFRlllh        1      0       0      46        0.0%
BITBIGSFRlhhhhl      1      0       0      36        0.0%
BITBIGSFRhl          1      0       0      35        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     14C      50        0.0%
DATA                 0      0     14C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Nov 09 20:23:11 2022

                             _AD 016A                               l45 200E  
                             _SN 0168                               _SR 0048  
                             _SS 0046                     ___awdiv@sign 0012  
                             bsr 000FE0              ___wmul@multiplicand 0003  
              ??_Interrupts_init 000D                              l100 1F66  
                            l104 169A                              l107 16F4  
                            l163 204E                              l252 2060  
                            l500 160C                              l166 1FB0  
                            l511 1ADE                              l408 1FF4  
                            l504 1EA8                              l169 1FD4  
                            l601 1CA8                              l507 1E6E  
                            l516 1B62                              l364 19F6  
                            l570 1C0A                              l731 1384  
                            l572 1C20                              l484 2074  
                            l565 206E                              l581 1F40  
                            l574 1C36                              l718 1220  
                            l487 203A                              l576 1C44  
                            l568 1BF4                              l584 19CC  
                            l579 1F28                              l595 1EDC  
                            l835 1882                              l589 1F10  
__end_of_Comp1_init_falling_edge 1FD6          __end_of_streetLightInit 2076  
                            _abs 1DF2                              _pad 1B64  
                            wreg 000FE8                             ?_abs 001F  
                           l3000 19C2                             l1304 1B86  
                           l1313 0EA2                             l3010 1F06  
                           l3002 2028                             l1315 0EAA  
                           l3004 1EE0                             l3020 1524  
                           l3012 14D6                             l1308 1BDC  
                           l1316 0EF2                             l1340 1DAC  
                           l3006 1EEE                             l3030 156E  
                           l3022 153C                             l3014 14F6  
                           l1334 14D4                             l1327 1098  
                           l3008 1EF8                             l3040 15A6  
                           l3032 157A                             l3024 1540  
                           l3016 14FE                             l1344 1E28  
                           l3050 1608                             l3042 15E0  
                           l3034 1582                             l3026 154C  
                           l3018 151C                             l1370 2078  
                           l1282 1D5C                             l3130 19DA  
                           l1347 1E30                             l3044 15E8  
                           l3036 158A                             l3028 1554  
                           l3052 1E70                             l3060 1A62  
                           l3140 19FC                             l3132 19DE  
                           l3046 15EC                             l3038 159E  
                           l3054 1E8A                             l3070 1AC4  
                           l3062 1A82                             l3142 1A00  
                           l3134 19E2                             l3126 19CE  
                           l1359 17BE                             l1367 1DF0  
                           l3080 1B0A                             l3048 1600  
                           l3056 1EA6                             l2600 1DCC  
                           l3064 1A96                             l3072 1ACC  
                           l3144 1A04                             l3136 19EE  
                           l3128 19D6                             l3090 1B5C  
                           l3082 1B1C                             l2610 10CC  
                           l2602 1DD0                             l3074 1AD4  
                           l3066 1AAA                             l3058 1A5A  
                           l3146 1A18                             l3138 19F2  
                           l3084 1B20                             l3076 1AE0  
                           l2620 110E                             l2612 10D0  
                           l2604 109A                             l2700 1E0C  
                           l3092 1C46                             l3068 1ABC  
                           l3148 1A1C                             l2702 2062  
                           l3086 1B34                             l3078 1AF6  
                           l2630 1168                             l2622 112C  
                           l2614 10DE                             l2606 109E  
                           l2710 0E32                             l3094 1C84  
                           l2704 2064                             l3088 1B48  
                           l2632 1196                             l2624 1134  
                           l2640 11D0                             l2616 10FE  
                           l2608 10AC                             l2720 0EB2  
                           l2712 0E48                             l2800 149A  
                           l3096 1C90                             l2706 206C  
                           l2810 1F14                             l2642 11E0  
                           l2634 11B6                             l2626 1148  
                           l2618 1102                             l2650 1226  
                           l2730 0EEE                             l2722 0EC4  
                           l2714 0E58                             l2812 1F22  
                           l2644 1200                             l2636 11B8  
                           l2628 1156                             l2660 1286  
                           l2652 1234                             l2740 0F94  
                           l2732 0EFA                             l2724 0ECA  
                           l2716 0E78                             l2708 0E12  
                           l2804 14AC                             l2820 1D5E  
                           l2900 1836                             l2814 1F2A  
                           l2830 160E                             l2638 11CA  
                           l2670 12FC                             l2662 12A4  
                           l2654 1254                             l2590 1742  
                           l2582 16F6                             l2750 1052  
                           l2742 0F9A                             l2734 0F04  
                           l2726 0EDA                             l2718 0E94  
                           l2822 1D6A                             l2902 184C  
                           l2910 1862                             l2920 2000  
                           l2760 1BE0                             l2816 1F32  
                           l2840 165A                             l2680 1364  
                           l2672 131C                             l2664 12AC  
                           l2656 1258                             l2648 1222  
                           l2592 1778                             l2584 1708  
                           l2752 1062                             l2736 0F0A  
                           l2744 0FFE                             l2728 0EE6  
                           l2824 1D86                             l2912 1872  
                           l2904 1854                             l2922 2008  
                           l2850 2042                             l2930 1F8E  
                           l2770 1C1A                             l2762 1BEE  
                           l2818 1F38                             l2842 1674  
                           l2674 132E                             l2666 12C0  
                           l2658 1266                             l2586 171A  
                           l2690 1B92                             l2754 1068  
                           l2746 101A                             l2738 0F8C  
                           l2826 1DA2                             l2914 187A  
                           l2906 1856                             l2924 200A  
                           l2852 204C                             l2940 1FA8  
                           l2932 1F90                             l2772 1C22  
                           l2764 1BF6                             l2844 167A  
                           l2836 161E                             l2860 1EC4  
                           l2668 12CE                             l2676 1334  
                           l2588 1724                             l2596 1DAE  
                           l2692 1BA6                             l2684 1B64  
                           l2756 1078                             l2748 1038  
                           l2780 1386                             l2908 185C  
                           l2926 200C                             l2918 1FF6  
                           l2950 1FC8                             l2942 1FAC  
                           l2934 1FA2                             l2774 1C30  
                           l2766 1C04                             l2846 167E  
                           l2838 163C                             l2854 1EAA  
                           l2678 1344                             l2598 1DBA  
                           l2694 1BAA                             l2686 1B72  
                           l2790 13DA                             l2782 13AA  
                           l2870 1D4A                             l2862 1D0C  
                           ?_pad 001D                             l2848 203C  
                           l2952 1FCA                             l2944 1FB2  
                           l2936 1FA4                             l2776 1C38  
                           l2768 1C0C                             l2928 1F42  
                           l2960 2070                             l2856 1EAE  
                           l2696 1BC8                             l2688 1B7E  
                           l2792 13F6                             l2784 13B8  
                           l2864 1D1E                             l2880 17DA  
                           l2954 1FCC                             l2946 1FB4  
                           l2938 1FA6                             l2778 1C3C  
                           l2962 1FD6                             l2970 1E32  
                           l2858 1EC0                             l2698 1DF2  
                           l2794 1412                             l2786 13C6  
                           l2866 1D26                             l2890 1800  
                           l2882 17DE                             l2874 17C0  
                           l2956 1FD0                             l2948 1FC6  
                           l2980 1962                             l2964 1FDE  
                           l2972 1E6C                             l2796 146A  
                           l2788 13CA                             l2868 1D2E  
                           l2892 1812                             l2884 17EC  
                           l2876 17C4                             l2958 2050  
                           l2990 198E                             l2982 196A  
                           l2974 192C                             l2966 1FE8  
                           l2894 181A                             l2886 17F4  
                           l2878 17D2                             l2992 1998  
                           l2984 1974                             l2976 1944  
                           l2968 1FF2                             l2896 1822  
                           l2888 17F8                             l2994 19A0  
                           l2986 197C                             l2978 195C  
                           l2898 1830                             l2996 19AA  
                           l2988 1986                             l2998 19B8  
                           STR_1 0E01                             u2000 0E94  
                           u2001 0E90                             u2010 0EC4  
                           u2011 0EC0                             u2100 1C30  
                           u2020 0EDA                             u2101 1C2C  
                           u2021 0ED6                             u2030 101A  
                           u2110 13AA                             u2031 1016  
                           u2111 13A6                             u2040 1038  
                           u2120 13F6                             u2041 1034  
                           u2121 13F2                             u2050 1052  
                           u2130 1412                             u2051 104E  
                           u2131 140E                             u2140 1F22  
                           u2060 1062                             u2300 1812  
                           u2141 1F1E                             u2205 16B6  
                           u2061 105E                             u2301 180E  
                           u2070 1BEE                             u2206 16B8  
                           u2150 1DA2                             u2310 1830  
                           u2071 1BEA                             u2215 16C0  
                           u2151 1D9E                             u2311 182C  
                           u2080 1C04                             u2216 16C2  
                           u2160 163C                             u2400 159E  
                           u2320 184C                             u2081 1C00  
                           u2225 16CA                             u2161 1638  
                           u2401 159A                             u2321 1848  
                           u2090 1C1A                             u2226 16CC  
                           u2170 169A                             u2410 15E0  
                           u2330 1872                             u2091 1C16  
                           u2235 16D4                             u2171 1696  
                           u2411 15DC                             u2331 186E  
                           u2340 1EEE                             u2500 1B1C  
                           u2236 16D6                             u2420 1600  
                           u2341 1EEA                             u2501 1B18  
                           u2245 16DE                             u2421 15FC  
                           u2350 1F06                             u2510 1B34  
                           u2246 16E0                             u2430 1E8A  
                           u2270 1EDC                             u2351 1F02  
                           u2511 1B30                             u2255 16E8  
                           u2431 1E86                             u2271 1ED8  
                           u2520 1B48                             u2256 16EA  
                           u2360 14F6                             u2440 1EA6  
                           u1800 1DF0                             u2280 17D2  
                           u2521 1B44                             u2265 16F2  
                           u2185 16A2                             u2361 14F2  
                           u2441 1EA2                             u1801 1DEC  
                           u2281 17CE                             u2530 1B5C  
                           u2266 16F4                             u2186 16A4  
                           u2370 151C                             u1810 10AC  
                           u2290 17EC                             u2450 1A96  
                           u2531 1B58                             u2195 16AC  
                           u2371 1518                             u1811 10A8  
                           u2291 17E8                             u2451 1A92  
                           u2196 16AE                             u2380 153C  
                           u1820 10DE                             u1900 12A4  
                           u2460 1AAA                             u2381 1538  
                           u1821 10DA                             u1901 12A0  
                           u2461 1AA6                             u2390 156E  
                           u1910 12CE                             u2470 1ABC  
                           u2607 1976                             u2391 156A  
                           u1831 1108                             u1911 12CA  
                           u2471 1AB8                             u2480 1AF6  
                           u1840 112C                             u1920 12FC  
                           u1760 1708                             u2617 1988  
                           u2481 1AF2                             u1841 1128  
                           u1921 12F8                             u1761 1704  
                           u2490 1B0A                             u1850 1156  
                           u1930 1344                             u1770 171A  
                           u2627 199A                             u2491 1B06  
                           u1851 1152                             u1931 1340  
                           u1771 1716                             u1860 1196  
                           u1780 1742                             u1940 1B72  
                           u2637 19B0                             u1861 1192  
                           u1781 173E                             u1941 1B6E  
                           u1870 11E0                             u1790 1778  
                           u1950 1BC8                             u2647 1F3A  
                           u1871 11DC                             u1791 1774  
                           u1951 1BC4                             u1880 1234  
                           u1960 1E0C                             u2657 1C3E  
                           u1881 1230                             u1961 1E08  
                           u2577 1C9A                             u1890 1266  
                           u1970 0E44                             u2667 2066  
                           u2587 194E                             u1891 1262  
                           u1971 0E3E                             u1980 0E46  
                           u2597 1964                             u1990 0E58  
                           u1991 0E54                             abs@a 001F  
                           _dbuf 0172                             _main 19CE  
                           _dtoa 0E12                             _hour 004D  
                           _prec 0166                             _year 01AA  
                           pad@i 0024                             pad@p 0021  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           indf2 000FDF                             fsr1l 000FE1  
                           pad@w 0026                             fsr2l 000FD9  
                           btemp 0051                     ?_LCD_setline 0001  
                           prodh 000FF4                             prodl 000FF3  
                           start 006A                 __end_of_ADC_init 2010  
                    main@strdate 0100                 __end_of_DAC_init 2050  
                __end_of_HighISR 192C                     ___param_bank 000000  
                          ??_abs 0021                            ??_pad 0023  
               __end_of_LCD_Init 19CE                  __end_of___aodiv 1222  
                          ?_main 0001                            ?_dtoa 0028  
                __end_of___aomod 1386                            _ADPCH 000F5F  
                __end_of___awdiv 1884                  ___awdiv@divisor 000F  
                          i1l267 005A                            i2l260 1920  
                          i2l604 1F8C                  ___awdiv@counter 0011  
                   vfpfcnvrt@fmt 003C                            _TMR0H 000FD4  
                          _TMR0L 000FD3                  _daylightsavings 1AE0  
                          _flags 004C                            _fputc 16F6  
                          _fputs 1DAE                            _month 0192  
                          pad@fp 001D                            _width 0164  
                          _putch 2078                            dtoa@d 002A  
                          dtoa@i 006F                            dtoa@n 0066  
                          dtoa@p 0062                            dtoa@s 006E  
                          dtoa@w 0064                    ?_LCD_sendbyte 000E  
                          tablat 000FF5                            ttemp5 0052  
                          ttemp6 0055                            ttemp7 0059  
                          status 000FD8                            wtemp8 0052  
                __end_of_sprintf 1D5E                  __initialization 1CAA  
                   __end_of_main 1A5A                     __end_of_dtoa 109A  
              __end_of_LCD_E_TOG 2070                           ??_main 0046  
                         ??_dtoa 0032                    __activetblptr 000001  
               ?_streetLightInit 0001                     ?_time2String 009C  
                         ?_fputc 000D                           ?_fputs 0016  
                         _ADRESH 000F64                   ??_LCD_sendbyte 000F  
               ___awdiv@dividend 000D                           ?_putch 0001  
                         i1l1950 0042                           i1l1942 0026  
                         i1l1944 0036                           i1l1952 0044  
                         i1l1954 0058                           i1l1946 003A  
                         i1l1948 003E                           i2l2504 1F68  
                         i2l2506 1F84                           i2l2540 189C  
                         i2l2550 191C                           i2l2542 18C0  
                         i2l2544 18CE                           i2l2546 18EE  
                         i2l2538 188C                           i2l2548 18FC  
                      ??_HighISR 0007                _LEDarray_disp_bin 160E  
                         _LowISR 0018               ?_LEDarray_disp_bin 000D  
                  ??_Timer0_init 000D                     vfprintf@cfmt 0042  
                      ??___aodiv 001D                        ??___aomod 001D  
                         ___wmul 1F68                        ??___awdiv 0011  
          LEDarray_disp_bin@mask 0023          __end_of_daylightsavings 1B64  
            ??_LEDarray_disp_bin 000F                           clear_0 1CE8  
                         clear_1 1CF4                 ___awdiv@quotient 0013  
                         isa$std 000001                           pad@buf 001F  
                         dtoa@fp 0028                           fputc@c 000D  
                         fputs@c 001A                           fputs@i 001B  
                   __pdataCOMRAM 004F                           fputs@s 0016  
                   __mediumconst 0000                 __end_of_test_day 203C  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                        ?_ADC_init 0001  
               __end_of_poweroff 1EAA                           putch@c 0001  
                      ?_DAC_init 0001                 __end_of_vfprintf 1DAE  
                      ??_sprintf 0044        __end_of_LEDarray_disp_bin 16F6  
                     __accesstop 0060          __end_of__initialization 1CFA  
                      ?_LCD_Init 0001         ??_Comp1_init_rising_edge 000D  
                  ___rparam_used 000001                    _LEDarray_init 1F42  
                _Interrupts_init 2050                   __pcstackCOMRAM 0001  
                   __pidataBANK1 2010                    __end_of_fputc 17C0  
                  __end_of_fputs 1DF2                    __end_of_putch 207A  
      time_adjuster@sunrise_time 0015              __end_of_Timer0_init 1FF6  
                     ??_ADC_init 000D                       ??_DAC_init 000D  
                        ??_fputc 0011                          ??_fputs 001A  
                        ??_putch 000D                       __pbssBANK1 0164  
         time_adjuster@solarnoon 0019                       ??_LCD_Init 0010  
                 _LCD_sendnibble 1BDE                       __pnvCOMRAM 004D  
                 ?_LEDarray_init 0001                   _LCD_sendstring 1EAA  
                        ?_LowISR 0001            __end_of_time_adjuster 1AE0  
                   _day_of_month 01AC                          ?___wmul 0001  
           __end_of_LCD_sendbyte 1F42         time_adjuster@sunset_time 0017  
               ?_daylightsavings 0001                __end_of_day1_init 1E70  
                _seconds_in_hour 0170                          i1u88_20 0036  
                        i1u88_21 0032                          i1u89_20 0058  
                        i1u89_21 0054           __end_of_LCD_sendnibble 1C46  
        __end_of_Interrupts_init 2062                          _HighISR 0008  
         __end_of_LCD_sendstring 1EDE                        _ADREFbits 000F58  
        _Comp1_init_falling_edge 1FB2                          __Hparam 0000  
                        __Lparam 0000                      _Timer0_init 1FD6  
                      ?_test_day 0001                          ___aodiv 109A  
                        ___aomod 1222                          ___awdiv 17C0  
                      ?_poweroff 0001                        ?_vfprintf 007B  
                   __psmallconst 0E00                          __pcinit 1CAA  
                        __ramtop 0E00                          __ptext0 19CE  
                        __ptext1 1A5A                          __ptext2 17C0  
                        __ptext3 1C46                          __ptext4 1D0C  
                        __ptext5 1D5E                          __ptext6 1386  
                        __ptext7 0E12                          __ptext8 1B64  
                        __ptext9 1DAE                __end_of_increment 160E  
                        _seconds 004A                        _LCD_E_TOG 2062  
                LCD_setline@line 0010                          _sprintf 1D0C  
                 __pintcode_body 1884             end_of_initialization 1CFA  
                ?_LCD_sendnibble 0001          time_adjuster@adjustment 001B  
                        fputc@fp 000F                  ??_LEDarray_init 000D  
                        int_func 1884                          fputs@fp 0018  
                ?_LCD_sendstring 0010                __end_of_vfpfcnvrt 14D6  
                     ??_test_day 000D                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
               vfpfcnvrt@convarg 0071                       ??_poweroff 000D  
                     ??_vfprintf 0042           _Comp1_init_rising_edge 1F8E  
                     ?_LCD_E_TOG 0001                        _TRISAbits 000F81  
                      _TRISBbits 000F82                        _TRISCbits 000F83  
                      _TRISEbits 000F85                        _TRISFbits 000F86  
                      _TRISGbits 000F87                        _TRISHbits 000F88  
      ??_Comp1_init_falling_edge 000D                      _CM1CON0bits 000ED0  
                    _CM1CON1bits 000ED1                 ?_Interrupts_init 0001  
                 __end_of_LowISR 006A                      vfpfcnvrt@ap 003E  
                    vfpfcnvrt@cp 0079                      vfpfcnvrt@fp 003A  
                 __end_of___wmul 1F8E             LCD_sendnibble@number 000D  
                  __pidataCOMRAM 2076              start_initialization 1CAA  
                    __end_of_abs 1E32                      __end_of_pad 1BDE  
                   _LCD_sendbyte 1F12                    ??_LCD_setline 0010  
                       ??_LowISR 000A                      vfprintf@fmt 007D  
           LEDarray_disp_bin@ctr 0025             LCD_sendstring@string 0010  
                       ??___wmul 0005                      __pdataBANK1 0192  
                    __pbssCOMRAM 0046                      ??_LCD_E_TOG 000D  
                  __pcstackBANK0 0060                    __pcstackBANK1 0100  
               ___aodiv@dividend 000D                        _day1_init 1E32  
                       ?_HighISR 0001                        __pnvBANK1 01AA  
              ??_streetLightInit 000D                        _dtoa$2093 0060  
                   ?_Timer0_init 0001                      _day_of_week 01AE  
                    _day_of_year 01B0                        __pintcode 0008  
                       ?___aodiv 000D                         ?___aomod 000D  
                       ?___awdiv 000D                 ___aodiv@quotient 001F  
       LEDarray_disp_bin@led_arr 0011              __end_of_LCD_setline 1F12  
                    __pintcodelo 0018                      __smallconst 0E00  
                  ??_time2String 0044                 ??_LCD_sendnibble 000D  
                       _ADC_init 1FF6                        _increment 14D6  
                       _DAC_init 203C                       ?_day1_init 0001  
               ??_LCD_sendstring 0012                         ?_sprintf 0081  
               LCD_sendbyte@Byte 000F                         _LCD_Init 192C  
               LCD_sendbyte@type 000E                   ___wmul@product 0005  
                       _LATAbits 000F79                         _LATBbits 000F7A  
                       _LATCbits 000F7B                         _LATEbits 000F7D  
                       _LATFbits 000F7E                         _LATGbits 000F7F  
                       _LATHbits 000F80                         _IPR0bits 000E1F  
                       _PIE0bits 000E29                         _IPR2bits 000E21  
                       _PIE2bits 000E2B                         i2u171_40 189C  
                       i2u171_41 1898                         i2u172_40 18AE  
                       i2u172_41 18A6                         i2u174_40 18CE  
                       i2u173_48 18B0                         i2u174_41 18CA  
                       i2u175_40 18FC                         i2u175_41 18F8  
                       _PIR0bits 000E33                         _PIR2bits 000E35  
                      _month_num 01B2                     time2String@d 00A2  
                   time2String@h 009E                     time2String@m 00A4  
                   time2String@s 00A0                     time2String@y 00A6  
                      _prevState 016C          ?_Comp1_init_rising_edge 0001  
                      _vfpfcnvrt 1386                       _ADCON0bits 000F60  
              ___wmul@multiplier 0001                     _hours_in_day 016E  
                     ?_increment 0001                       _CM1NCHbits 000ED2  
                     _CM1PCHbits 000ED3                        copy_data0 1CBE  
            __end_of_time2String 1CAA            __end_of_LEDarray_init 1F68  
                    _LCD_setline 1EDE                         __Hrparam 0000  
                     vfprintf@ap 007F                         __Lrparam 0000  
                     vfprintf@fp 007B                     __Lsmallconst 0E00  
                  _time_adjuster 1A5A   __end_of_Comp1_init_rising_edge 1FB2  
                     ?_vfpfcnvrt 003A                  ___aodiv@divisor 0015  
                ___aodiv@counter 001D                       _ANSELAbits 000E92  
                     sprintf@fmt 0083                       _T0CON0bits 000FD5  
                     _T0CON1bits 000FD6                         __ptext10 16F6  
                       __ptext11 2078                         __ptext20 160E  
                       __ptext12 1DF2                         __ptext21 1AE0  
                       __ptext13 1222                         __ptext30 2050  
                       __ptext22 1E32                         __ptext14 109A  
                       __ptext31 1F8E                         __ptext23 1FD6  
                       __ptext15 1EAA                         __ptext32 1FB2  
                       __ptext24 1F42                         __ptext16 2028  
                       __ptext33 203C                         __ptext25 1EDE  
                       __ptext17 2070                         __ptext34 1FF6  
                       __ptext26 192C                         __ptext18 1E70  
                       __ptext27 1F12                         __ptext19 14D6  
                       __ptext28 1BDE                         __ptext37 1F68  
                       __ptext29 2062                      ??_day1_init 000D  
        LEDarray_disp_bin@number 000D                ??_daylightsavings 000D  
                 ?_time_adjuster 0015                         isa$xinst 000000  
                       _test_day 2028                         int$flags 0051  
                       _poweroff 1E70                         _vfprintf 1D5E  
               ___aomod@dividend 000D                       _INTCONbits 000FF2  
                    _time2String 1C46                      ??_increment 0027  
       ?_Comp1_init_falling_edge 0001                  _streetLightInit 2070  
                       intlevel1 0000                         intlevel2 0000  
                      sprintf@ap 008F                     _DAC1CON0bits 000EC6  
                   _DAC1CON1bits 000EC7                   time2String@buf 009C  
                ___aomod@divisor 0015                      ??_vfpfcnvrt 0040  
                ___aomod@counter 001D                         sprintf@f 0091  
                       sprintf@s 0081                     ___aodiv@sign 001E  
              _adjustment_of_day 004F                  ??_time_adjuster 0019  
                   ___aomod@sign 001E  
