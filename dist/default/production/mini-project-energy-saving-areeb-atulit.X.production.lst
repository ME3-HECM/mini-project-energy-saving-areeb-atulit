

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Nov 08 02:17:55 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    65   000000                     
    66                           ; Generated 06/04/2022 GMT
    67                           ; 
    68                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution. Publication is not required when
    82                           ;        this file is used in an embedded application.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F67K40 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100   000000                     
   101                           	psect	idataBANK1
   102   00242E                     __pidataBANK1:
   103                           	callstack 0
   104                           
   105                           ;initializer for _month
   106   00242E  001F               	dw	31
   107   002430  001C               	dw	28
   108   002432  001F               	dw	31
   109   002434  001E               	dw	30
   110   002436  001F               	dw	31
   111   002438  001E               	dw	30
   112   00243A  001F               	dw	31
   113   00243C  001F               	dw	31
   114   00243E  001E               	dw	30
   115   002440  001F               	dw	31
   116   002442  001E               	dw	30
   117   002444  001F               	dw	31
   118                           
   119                           	psect	smallconst
   120   000E00                     __psmallconst:
   121                           	callstack 0
   122   000E00  00                 	db	0
   123   000E01  0000               	dw	0
   124   000E03  0000               	dw	0
   125   000E05  CFDC               	dw	53212
   126   000E07  35D1               	dw	13777
   127   000E09                     __end_of_dp_l:
   128                           	callstack 0
   129   000E09  0000               	dw	0
   130   000E0B  0000               	dw	0
   131   000E0D  C000               	dw	49152
   132   000E0F  3F15               	dw	16149
   133   000E11                     __end_of_dp_h:
   134                           	callstack 0
   135   000E11  4260               	dw	16992
   136   000E13  0DA2               	dw	3490
   137   000E15                     __end_of_tiny@sqrtf$F2355:
   138                           	callstack 0
   139   000E15  A570               	dw	42352
   140   000E17  36EC               	dw	14060
   141   000E19                     __end_of_ivln2_l:
   142                           	callstack 0
   143   000E19  AA3B               	dw	43579
   144   000E1B  3FB8               	dw	16312
   145   000E1D                     __end_of_ivln2:
   146                           	callstack 0
   147   000E1D  384F               	dw	14415
   148   000E1F  3F76               	dw	16246
   149   000E21                     __end_of_cp:
   150                           	callstack 0
   151   000E21  AA3C               	dw	43580
   152   000E23  3338               	dw	13112
   153   000E25                     __end_of_ovt:
   154                           	callstack 0
   155   000E25  BE8C               	dw	48780
   156   000E27  35BF               	dw	13759
   157   000E29                     __end_of_lg2_l:
   158                           	callstack 0
   159   000E29  7200               	dw	29184
   160   000E2B  3F31               	dw	16177
   161   000E2D                     __end_of_lg2_h:
   162                           	callstack 0
   163   000E2D  7218               	dw	29208
   164   000E2F  3F31               	dw	16177
   165   000E31                     __end_of_lg2:
   166                           	callstack 0
   167   000E31  BB4C               	dw	47948
   168   000E33  3331               	dw	13105
   169   000E35                     __end_of_P5:
   170                           	callstack 0
   171   000E35  EA0E               	dw	59918
   172   000E37  B5DD               	dw	46557
   173   000E39                     __end_of_P4:
   174                           	callstack 0
   175   000E39  B355               	dw	45909
   176   000E3B  388A               	dw	14474
   177   000E3D                     __end_of_P3:
   178                           	callstack 0
   179   000E3D  0B61               	dw	2913
   180   000E3F  BB36               	dw	47926
   181   000E41                     __end_of_P2:
   182                           	callstack 0
   183   000E41  AAAB               	dw	43691
   184   000E43  3E2A               	dw	15914
   185   000E45                     __end_of_P1:
   186                           	callstack 0
   187   000E45  F142               	dw	61762
   188   000E47  3E53               	dw	15955
   189   000E49                     __end_of_L6:
   190                           	callstack 0
   191   000E49  3255               	dw	12885
   192   000E4B  3E6C               	dw	15980
   193   000E4D                     __end_of_L5:
   194                           	callstack 0
   195   000E4D  A305               	dw	41733
   196   000E4F  3E8B               	dw	16011
   197   000E51                     __end_of_L4:
   198                           	callstack 0
   199   000E51  AAAB               	dw	43691
   200   000E53  3EAA               	dw	16042
   201   000E55                     __end_of_L3:
   202                           	callstack 0
   203   000E55  6DB7               	dw	28087
   204   000E57  3EDB               	dw	16091
   205   000E59                     __end_of_L2:
   206                           	callstack 0
   207   000E59  999A               	dw	39322
   208   000E5B  3F19               	dw	16153
   209   000E5D                     __end_of_L1:
   210                           	callstack 0
   211   000E5D  4260               	dw	16992
   212   000E5F  0DA2               	dw	3490
   213   000E61                     __end_of_tiny:
   214                           	callstack 0
   215   000E61  F2CA               	dw	62154
   216   000E63  7149               	dw	29001
   217   000E65                     __end_of_huge:
   218                           	callstack 0
   219   000E65  0000               	dw	0
   220   000E67  4B80               	dw	19328
   221   000E69                     __end_of_two24:
   222                           	callstack 0
   223   000E69  0000               	dw	0
   224   000E6B  3F80               	dw	16256
   225   000E6D  0000               	dw	0
   226   000E6F  3FC0               	dw	16320
   227   000E71                     __end_of_bp:
   228                           	callstack 0
   229   000E71  AA00               	dw	43520
   230   000E73  3FB8               	dw	16312
   231   000E75                     __end_of_ivln2_h:
   232                           	callstack 0
   233   000E75  23C6               	dw	9158
   234   000E77  B8F6               	dw	47350
   235   000E79                     __end_of_cp_l:
   236                           	callstack 0
   237   000E79  4000               	dw	16384
   238   000E7B  3F76               	dw	16246
   239   000E7D                     __end_of_cp_h:
   240                           	callstack 0
   241   000000                     _TRISEbits	set	3973
   242   000000                     _TRISCbits	set	3971
   243   000000                     _LATEbits	set	3965
   244   000000                     _LATCbits	set	3963
   245   000000                     _TRISDbits	set	3972
   246   000000                     _T0CON0bits	set	4053
   247   000000                     _T0CON1bits	set	4054
   248   000000                     _LATDbits	set	3964
   249   000000                     _LATHbits	set	3968
   250   000000                     _CM1CON1bits	set	3793
   251   000000                     _LATBbits	set	3962
   252   000000                     _LATFbits	set	3966
   253   000000                     _TRISBbits	set	3970
   254   000000                     _TRISFbits	set	3974
   255   000000                     _TRISGbits	set	3975
   256   000E7D                     STR_2:
   257                           
   258                           ; BSR set to: 14
   259   000E7D  25                 	db	37
   260   000E7E  64                 	db	100	;'d'
   261   000E7F  2F                 	db	47
   262   000E80  25                 	db	37
   263   000E81  30                 	db	48	;'0'
   264   000E82  32                 	db	50	;'2'
   265   000E83  64                 	db	100	;'d'
   266   000E84  2F                 	db	47
   267   000E85  25                 	db	37
   268   000E86  30                 	db	48	;'0'
   269   000E87  33                 	db	51	;'3'
   270   000E88  64                 	db	100	;'d'
   271   000E89  00                 	db	0
   272   000E8A                     
   273                           ; BSR set to: 14
   274   000E8A  25                 	db	37
   275   000E8B  64                 	db	100	;'d'
   276   000E8C  3A                 	db	58	;':'
   277   000E8D  25                 	db	37
   278   000E8E  30                 	db	48	;'0'
   279   000E8F  32                 	db	50	;'2'
   280   000E90  64                 	db	100	;'d'
   281   000E91  3A                 	db	58	;':'
   282   000E92  25                 	db	37
   283   000E93  30                 	db	48	;'0'
   284   000E94  33                 	db	51	;'3'
   285   000E95  64                 	db	100	;'d'
   286   000E96  00                 	db	0
   287   000E97  00                 	db	0	; dummy byte at the end
   288   000000                     
   289                           	psect	nvBANK0
   290   00009D                     __pnvBANK0:
   291                           	callstack 0
   292   00009D                     _year:
   293                           	callstack 0
   294   00009D                     	ds	2
   295   00009F                     _day_of_week:
   296                           	callstack 0
   297   00009F                     	ds	2
   298   0000A1                     _month_num:
   299                           	callstack 0
   300   0000A1                     	ds	2
   301                           
   302                           	psect	nvBANK1
   303   00019C                     __pnvBANK1:
   304                           	callstack 0
   305   00019C                     _day_of_month:
   306                           	callstack 0
   307   00019C                     	ds	2
   308   00019E                     _day_of_year:
   309                           	callstack 0
   310   00019E                     	ds	2
   311   000000                     _IPR0bits	set	3615
   312   000000                     _IPR2bits	set	3617
   313   000000                     _PIE0bits	set	3625
   314   000000                     _PIE2bits	set	3627
   315   000000                     _ANSELAbits	set	3730
   316   000000                     _TRISAbits	set	3969
   317   000000                     _DAC1CON0bits	set	3782
   318   000000                     _ADREFbits	set	3928
   319   000000                     _ADPCH	set	3935
   320   000000                     _ADRESH	set	3940
   321   000000                     _ADCON0bits	set	3936
   322   000000                     _LATAbits	set	3961
   323   000000                     _LATGbits	set	3967
   324   000000                     _TRISHbits	set	3976
   325   000000                     _TMR0L	set	4051
   326   000000                     _TMR0H	set	4052
   327   000000                     _INTCONbits	set	4082
   328   000000                     _CM1CON0bits	set	3792
   329   000000                     _CM1NCHbits	set	3794
   330   000000                     _DAC1CON1bits	set	3783
   331   000000                     _CM1PCHbits	set	3795
   332   000000                     _PIR0bits	set	3635
   333   000000                     _PIR2bits	set	3637
   334                           
   335                           ; #config settings
   336                           
   337                           	psect	cinit
   338   0020D0                     __pcinit:
   339                           	callstack 0
   340   0020D0                     start_initialization:
   341                           	callstack 0
   342   0020D0                     __initialization:
   343                           	callstack 0
   344                           
   345                           ; Initialize objects allocated to BANK1 (24 bytes)
   346                           ; load TBLPTR registers with __pidataBANK1
   347   0020D0  0E2E               	movlw	low __pidataBANK1
   348   0020D2  6EF6               	movwf	tblptrl,c
   349   0020D4  0E24               	movlw	high __pidataBANK1
   350   0020D6  6EF7               	movwf	tblptrh,c
   351   0020D8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   352   0020DA  6EF8               	movwf	tblptru,c
   353   0020DC  EE01  F084         	lfsr	0,__pdataBANK1
   354   0020E0  EE10 F018          	lfsr	1,24
   355   0020E4                     copy_data0:
   356   0020E4  0009               	tblrd		*+
   357   0020E6  CFF5 FFEE          	movff	tablat,postinc0
   358   0020EA  50E5               	movf	postdec1,w,c
   359   0020EC  50E1               	movf	fsr1l,w,c
   360   0020EE  E1FA               	bnz	copy_data0
   361                           
   362                           ; Clear objects allocated to BANK1 (32 bytes)
   363   0020F0  EE01  F064         	lfsr	0,__pbssBANK1
   364   0020F4  0E20               	movlw	32
   365   0020F6                     clear_0:
   366   0020F6  6AEE               	clrf	postinc0,c
   367   0020F8  06E8               	decf	wreg,f,c
   368   0020FA  E1FD               	bnz	clear_0
   369                           
   370                           ; Clear objects allocated to BANK0 (12 bytes)
   371   0020FC  EE00  F091         	lfsr	0,__pbssBANK0
   372   002100  0E0C               	movlw	12
   373   002102                     clear_1:
   374   002102  6AEE               	clrf	postinc0,c
   375   002104  06E8               	decf	wreg,f,c
   376   002106  E1FD               	bnz	clear_1
   377                           
   378                           ; Clear objects allocated to COMRAM (5 bytes)
   379   002108  6A55               	clrf	(__pbssCOMRAM+4)& (0+255),c
   380   00210A  6A54               	clrf	(__pbssCOMRAM+3)& (0+255),c
   381   00210C  6A53               	clrf	(__pbssCOMRAM+2)& (0+255),c
   382   00210E  6A52               	clrf	(__pbssCOMRAM+1)& (0+255),c
   383   002110  6A51               	clrf	__pbssCOMRAM& (0+255),c
   384   002112                     end_of_initialization:
   385                           	callstack 0
   386   002112                     __end_of__initialization:
   387                           	callstack 0
   388   002112  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   389   002114  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   390   002116  0100               	movlb	0
   391   002118  EF90  F00E         	goto	_main	;jump to C main() function
   392                           
   393                           	psect	bssCOMRAM
   394   000051                     __pbssCOMRAM:
   395                           	callstack 0
   396   000051                     _hour:
   397                           	callstack 0
   398   000051                     	ds	2
   399   000053                     _seconds:
   400                           	callstack 0
   401   000053                     	ds	2
   402   000055                     _flags:
   403                           	callstack 0
   404   000055                     	ds	1
   405                           
   406                           	psect	bssBANK0
   407   000091                     __pbssBANK0:
   408                           	callstack 0
   409   000091                     fabsf@F465:
   410                           	callstack 0
   411   000091                     	ds	4
   412   000095                     _errno:
   413                           	callstack 0
   414   000095                     	ds	2
   415   000097                     _width:
   416                           	callstack 0
   417   000097                     	ds	2
   418   000099                     _prec:
   419                           	callstack 0
   420   000099                     	ds	2
   421   00009B                     _comp_check:
   422                           	callstack 0
   423   00009B                     	ds	2
   424                           
   425                           	psect	bssBANK1
   426   000164                     __pbssBANK1:
   427                           	callstack 0
   428   000164                     _dbuf:
   429                           	callstack 0
   430   000164                     	ds	32
   431                           
   432                           	psect	dataBANK1
   433   000184                     __pdataBANK1:
   434                           	callstack 0
   435   000184                     _month:
   436                           	callstack 0
   437   000184                     	ds	24
   438                           
   439                           	psect	cstackBANK1
   440   000100                     __pcstackBANK1:
   441                           	callstack 0
   442   000100                     main@strdate:
   443                           	callstack 0
   444                           
   445                           ; 100 bytes @ 0x0
   446   000100                     	ds	100
   447                           
   448                           	psect	cstackBANK0
   449   000060                     __pcstackBANK0:
   450                           	callstack 0
   451   000060                     vfpfcnvrt@convarg:
   452                           	callstack 0
   453                           
   454                           ; 8 bytes @ 0x0
   455   000060                     	ds	8
   456   000068                     vfpfcnvrt@done:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x8
   460   000068                     	ds	2
   461   00006A                     vfpfcnvrt@cp:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0xA
   465   00006A                     	ds	2
   466   00006C                     ?_vfprintf:
   467                           	callstack 0
   468   00006C                     vfprintf@fp:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0xC
   472   00006C                     	ds	2
   473   00006E                     vfprintf@fmt:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0xE
   477   00006E                     	ds	2
   478   000070                     vfprintf@ap:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x10
   482   000070                     	ds	2
   483   000072                     ?_sprintf:
   484                           	callstack 0
   485   000072                     sprintf@s:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x12
   489   000072                     	ds	2
   490   000074                     sprintf@fmt:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x14
   494   000074                     	ds	8
   495   00007C                     sprintf@ap:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x1C
   499   00007C                     	ds	2
   500   00007E                     sprintf@f:
   501                           	callstack 0
   502                           
   503                           ; 11 bytes @ 0x1E
   504   00007E                     	ds	11
   505   000089                     date2String@buf:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x29
   509   000089                     	ds	2
   510   00008B                     date2String@d:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x2B
   514   00008B                     	ds	2
   515   00008D                     date2String@m:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x2D
   519   00008D                     	ds	2
   520   00008F                     date2String@y:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x2F
   524   00008F                     	ds	2
   525                           
   526                           	psect	cstackCOMRAM
   527   000001                     __pcstackCOMRAM:
   528                           	callstack 0
   529   000001                     ??_HighISR:
   530   000001                     
   531                           ; 1 bytes @ 0x0
   532   000001                     	ds	1
   533   000002                     ??_LowISR:
   534                           
   535                           ; 1 bytes @ 0x1
   536   000002                     	ds	4
   537   000006                     ?_isdigit:
   538                           	callstack 0
   539   000006                     ?_isspace:
   540                           	callstack 0
   541   000006                     ?___wmul:
   542                           	callstack 0
   543   000006                     ?___awdiv:
   544                           	callstack 0
   545   000006                     ?___aodiv:
   546                           	callstack 0
   547   000006                     ?___aomod:
   548                           	callstack 0
   549   000006                     LCD_sendnibble@number:
   550                           	callstack 0
   551   000006                     LEDarray_disp_bin@number:
   552                           	callstack 0
   553   000006                     ___wmul@multiplier:
   554                           	callstack 0
   555   000006                     ___awdiv@dividend:
   556                           	callstack 0
   557   000006                     isdigit@c:
   558                           	callstack 0
   559   000006                     isspace@c:
   560                           	callstack 0
   561   000006                     fputc@c:
   562                           	callstack 0
   563   000006                     ___aodiv@dividend:
   564                           	callstack 0
   565   000006                     ___aomod@dividend:
   566                           	callstack 0
   567                           
   568                           ; 8 bytes @ 0x5
   569   000006                     	ds	1
   570   000007                     LCD_sendbyte@type:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0x6
   574   000007                     	ds	1
   575   000008                     ??_LEDarray_disp_bin:
   576   000008                     ??_isdigit:
   577   000008                     ??_isspace:
   578   000008                     LCD_sendbyte@Byte:
   579                           	callstack 0
   580   000008                     ___wmul@multiplicand:
   581                           	callstack 0
   582   000008                     ___awdiv@divisor:
   583                           	callstack 0
   584   000008                     fputc@fp:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x7
   588   000008                     	ds	1
   589   000009                     ??_LCD_Init:
   590   000009                     LCD_setline@line:
   591                           	callstack 0
   592   000009                     LCD_sendstring@string:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x8
   596   000009                     	ds	1
   597   00000A                     ??_fputc:
   598   00000A                     ___awdiv@counter:
   599                           	callstack 0
   600   00000A                     _isspace$2190:
   601                           	callstack 0
   602   00000A                     ___wmul@product:
   603                           	callstack 0
   604   00000A                     LEDarray_disp_bin@led_arr:
   605                           	callstack 0
   606                           
   607                           ; 18 bytes @ 0x9
   608   00000A                     	ds	1
   609   00000B                     ___awdiv@sign:
   610                           	callstack 0
   611                           
   612                           ; 1 bytes @ 0xA
   613   00000B                     	ds	1
   614   00000C                     ?_sunrise:
   615                           	callstack 0
   616   00000C                     ?_sunset:
   617                           	callstack 0
   618   00000C                     ?_atoi:
   619                           	callstack 0
   620   00000C                     ___awdiv@quotient:
   621                           	callstack 0
   622   00000C                     atoi@s:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0xB
   626   00000C                     	ds	2
   627   00000E                     ??_sunrise:
   628   00000E                     ??_sunset:
   629   00000E                     ??_atoi:
   630   00000E                     ___aodiv@divisor:
   631                           	callstack 0
   632   00000E                     ___aomod@divisor:
   633                           	callstack 0
   634                           
   635                           ; 8 bytes @ 0xD
   636   00000E                     	ds	1
   637   00000F                     sunrise@prevState:
   638                           	callstack 0
   639   00000F                     sunset@prevState:
   640                           	callstack 0
   641   00000F                     fputs@s:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0xE
   645   00000F                     	ds	2
   646   000011                     sunrise@sunrise_time:
   647                           	callstack 0
   648   000011                     sunset@sunset_time:
   649                           	callstack 0
   650   000011                     atoi@neg:
   651                           	callstack 0
   652   000011                     fputs@fp:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x10
   656   000011                     	ds	2
   657   000013                     fputs@c:
   658                           	callstack 0
   659   000013                     timeadjuster@sunrise_time:
   660                           	callstack 0
   661   000013                     atoi@n:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x12
   665   000013                     	ds	1
   666   000014                     fputs@i:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x13
   670   000014                     	ds	1
   671   000015                     timeadjuster@sunset_time:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x14
   675   000015                     	ds	1
   676   000016                     ___aodiv@counter:
   677                           	callstack 0
   678   000016                     ___aomod@counter:
   679                           	callstack 0
   680   000016                     pad@fp:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x15
   684   000016                     	ds	1
   685   000017                     ___aodiv@sign:
   686                           	callstack 0
   687   000017                     ___aomod@sign:
   688                           	callstack 0
   689   000017                     timeadjuster@solarnoon:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x16
   693   000017                     	ds	1
   694   000018                     ?_abs:
   695                           	callstack 0
   696   000018                     pad@buf:
   697                           	callstack 0
   698   000018                     abs@a:
   699                           	callstack 0
   700   000018                     ___aodiv@quotient:
   701                           	callstack 0
   702                           
   703                           ; 8 bytes @ 0x17
   704   000018                     	ds	1
   705   000019                     timeadjuster@adjustment:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x18
   709   000019                     	ds	1
   710   00001A                     ??_abs:
   711   00001A                     pad@p:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x19
   715   00001A                     	ds	2
   716   00001C                     ??_pad:
   717   00001C                     LEDarray_disp_bin@mask:
   718                           	callstack 0
   719                           
   720                           ; 2 bytes @ 0x1B
   721   00001C                     	ds	1
   722   00001D                     pad@i:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x1C
   726   00001D                     	ds	1
   727   00001E                     LEDarray_disp_bin@ctr:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x1D
   731   00001E                     	ds	1
   732   00001F                     pad@w:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x1E
   736   00001F                     	ds	1
   737   000020                     ??_increment:
   738                           
   739                           ; 1 bytes @ 0x1F
   740   000020                     	ds	1
   741   000021                     dtoa@fp:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x20
   745   000021                     	ds	2
   746   000023                     dtoa@d:
   747                           	callstack 0
   748                           
   749                           ; 8 bytes @ 0x22
   750   000023                     	ds	8
   751   00002B                     ??_dtoa:
   752                           
   753                           ; 1 bytes @ 0x2A
   754   00002B                     	ds	8
   755   000033                     _dtoa$2141:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0x32
   759   000033                     	ds	2
   760   000035                     dtoa@p:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x34
   764   000035                     	ds	2
   765   000037                     dtoa@w:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x36
   769   000037                     	ds	2
   770   000039                     dtoa@n:
   771                           	callstack 0
   772                           
   773                           ; 8 bytes @ 0x38
   774   000039                     	ds	8
   775   000041                     dtoa@s:
   776                           	callstack 0
   777                           
   778                           ; 1 bytes @ 0x40
   779   000041                     	ds	1
   780   000042                     dtoa@i:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x41
   784   000042                     	ds	2
   785   000044                     vfpfcnvrt@fp:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x43
   789   000044                     	ds	2
   790   000046                     vfpfcnvrt@fmt:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x45
   794   000046                     	ds	2
   795   000048                     vfpfcnvrt@ap:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x47
   799   000048                     	ds	2
   800   00004A                     ??_vfpfcnvrt:
   801                           
   802                           ; 1 bytes @ 0x49
   803   00004A                     	ds	3
   804   00004D                     vfprintf@cfmt:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x4C
   808   00004D                     	ds	2
   809   00004F                     ??_date2String:
   810   00004F                     
   811                           ; 1 bytes @ 0x4E
   812   00004F                     	ds	2
   813   000051                     
   814                           ; 1 bytes @ 0x50
   815 ;;
   816 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   817 ;;
   818 ;; *************** function _main *****************
   819 ;; Defined at:
   820 ;;		line 19 in file "main.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;		None
   823 ;; Auto vars:     Size  Location     Type
   824 ;;  strdate       100    0[BANK1 ] unsigned char [100]
   825 ;;  strtime       100    0        unsigned char [100]
   826 ;; Return value:  Size  Location     Type
   827 ;;                  1    wreg      void 
   828 ;; Registers used:
   829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   836 ;;      Locals:         0       0     100       0       0       0       0       0       0       0       0       0       
      +0       0       0
   837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   838 ;;      Totals:         0       0     100       0       0       0       0       0       0       0       0       0       
      +0       0       0
   839 ;;Total ram usage:      100 bytes
   840 ;; Hardware stack levels required when called: 11
   841 ;; This function calls:
   842 ;;		_ADC_init
   843 ;;		_Comp1_init_falling_edge
   844 ;;		_Comp1_init_rising_edge
   845 ;;		_Interrupts_init
   846 ;;		_LCD_Init
   847 ;;		_LCD_setline
   848 ;;		_LEDarray_init
   849 ;;		_Timer0_init
   850 ;;		_date2String
   851 ;;		_day1_init
   852 ;;		_daylightsavings
   853 ;;		_increment
   854 ;;		_poweroff
   855 ;;		_streetLightInit
   856 ;;		_sunrise
   857 ;;		_sunset
   858 ;;		_timeadjuster
   859 ;; This function is called by:
   860 ;;		Startup code after reset
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           	psect	text0
   865   001D20                     __ptext0:
   866                           	callstack 0
   867   001D20                     _main:
   868                           	callstack 20
   869   001D20                     
   870                           ;main.c: 21:     streetLightInit();
   871   001D20  EC3D  F012         	call	_streetLightInit	;wreg free
   872                           
   873                           ;main.c: 22:     LEDarray_init();
   874   001D24  ECC3  F011         	call	_LEDarray_init	;wreg free
   875   001D28                     
   876                           ;main.c: 23:     Timer0_init();
   877   001D28  ECFA  F011         	call	_Timer0_init	;wreg free
   878   001D2C                     
   879                           ;main.c: 24:     Comp1_init_rising_edge();
   880   001D2C  ECD6  F011         	call	_Comp1_init_rising_edge	;wreg free
   881   001D30                     
   882                           ;main.c: 25:     Comp1_init_falling_edge();
   883   001D30  ECE8  F011         	call	_Comp1_init_falling_edge	;wreg free
   884   001D34                     
   885                           ;main.c: 26:     Interrupts_init();
   886   001D34  EC2D  F012         	call	_Interrupts_init	;wreg free
   887                           
   888                           ;main.c: 27:     ADC_init();
   889   001D38  EC0A  F012         	call	_ADC_init	;wreg free
   890                           
   891                           ;main.c: 28:     day1_init();
   892   001D3C  ECD3  F010         	call	_day1_init	;wreg free
   893   001D40                     
   894                           ;main.c: 29:     LCD_Init();
   895   001D40  EC3F  F00E         	call	_LCD_Init	;wreg free
   896   001D44                     l3753:
   897                           
   898                           ;main.c: 33:         increment();
   899   001D44  EC29  F00C         	call	_increment	;wreg free
   900   001D48                     
   901                           ;main.c: 34:         poweroff();
   902   001D48  EC31  F011         	call	_poweroff	;wreg free
   903   001D4C                     
   904                           ;main.c: 35:         sunrise();
   905   001D4C  EC7C  F00F         	call	_sunrise	;wreg free
   906   001D50                     
   907                           ;main.c: 36:         sunset();
   908   001D50  EC46  F00F         	call	_sunset	;wreg free
   909   001D54                     
   910                           ;main.c: 37:         timeadjuster(sunrise(),sunset());
   911   001D54  EC7C  F00F         	call	_sunrise	;wreg free
   912   001D58  C00C  F013         	movff	?_sunrise,timeadjuster@sunrise_time
   913   001D5C  C00D  F014         	movff	?_sunrise+1,timeadjuster@sunrise_time+1
   914   001D60  EC46  F00F         	call	_sunset	;wreg free
   915   001D64  C00C  F015         	movff	?_sunset,timeadjuster@sunset_time
   916   001D68  C00D  F016         	movff	?_sunset+1,timeadjuster@sunset_time+1
   917   001D6C  EC0F  F00F         	call	_timeadjuster	;wreg free
   918   001D70                     
   919                           ;main.c: 38:         daylightsavings();
   920   001D70  ECE6  F00F         	call	_daylightsavings	;wreg free
   921   001D74                     
   922                           ;main.c: 41:         LCD_setline(2);
   923   001D74  0E02               	movlw	2
   924   001D76  EC68  F011         	call	_LCD_setline
   925   001D7A                     
   926                           ;main.c: 42:         date2String(strdate, day_of_year, month_num,year);
   927   001D7A  0E00               	movlw	low main@strdate
   928   001D7C  0100               	movlb	0	; () banked
   929   001D7E  6F89               	movwf	date2String@buf& (0+255),b
   930   001D80  0E01               	movlw	high main@strdate
   931   001D82  6F8A               	movwf	(date2String@buf+1)& (0+255),b
   932   001D84  C19E  F08B         	movff	_day_of_year,date2String@d
   933   001D88  C19F  F08C         	movff	_day_of_year+1,date2String@d+1
   934   001D8C  C0A1  F08D         	movff	_month_num,date2String@m
   935   001D90  C0A2  F08E         	movff	_month_num+1,date2String@m+1
   936   001D94  C09D  F08F         	movff	_year,date2String@y
   937   001D98  C09E  F090         	movff	_year+1,date2String@y+1
   938   001D9C  ECD4  F00E         	call	_date2String	;wreg free
   939   001DA0  EFA2  F00E         	goto	l3753
   940   001DA4  EF50  F000         	goto	start
   941   001DA8                     __end_of_main:
   942                           	callstack 0
   943                           
   944 ;; *************** function _timeadjuster *****************
   945 ;; Defined at:
   946 ;;		line 107 in file "Functions.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;  sunrise_time    2   18[COMRAM] int 
   949 ;;  sunset_time     2   20[COMRAM] int 
   950 ;; Auto vars:     Size  Location     Type
   951 ;;  adjustment      2   24[COMRAM] int 
   952 ;;  solarnoon       2   22[COMRAM] int 
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		wreg, status,2, status,0, cstack
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   962 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   963 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   965 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   966 ;;Total ram usage:        8 bytes
   967 ;; Hardware stack levels used: 1
   968 ;; Hardware stack levels required when called: 3
   969 ;; This function calls:
   970 ;;		___awdiv
   971 ;; This function is called by:
   972 ;;		_main
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	text1
   977   001E1E                     __ptext1:
   978                           	callstack 0
   979   001E1E                     _timeadjuster:
   980                           	callstack 27
   981   001E1E                     
   982                           ;Functions.c: 110:     int adjustment = 0;
   983   001E1E  0E00               	movlw	0
   984   001E20  6E1A               	movwf	(timeadjuster@adjustment+1)^0,c
   985   001E22  0E00               	movlw	0
   986   001E24  6E19               	movwf	timeadjuster@adjustment^0,c
   987   001E26                     
   988                           ;Functions.c: 111:     solarnoon = (sunrise_time+sunset_time)/2;
   989   001E26  5015               	movf	timeadjuster@sunset_time^0,w,c
   990   001E28  2413               	addwf	timeadjuster@sunrise_time^0,w,c
   991   001E2A  6E06               	movwf	___awdiv@dividend^0,c
   992   001E2C  5016               	movf	(timeadjuster@sunset_time+1)^0,w,c
   993   001E2E  2014               	addwfc	(timeadjuster@sunrise_time+1)^0,w,c
   994   001E30  6E07               	movwf	(___awdiv@dividend+1)^0,c
   995   001E32  0E00               	movlw	0
   996   001E34  6E09               	movwf	(___awdiv@divisor+1)^0,c
   997   001E36  0E02               	movlw	2
   998   001E38  6E08               	movwf	___awdiv@divisor^0,c
   999   001E3A  EC88  F00D         	call	___awdiv	;wreg free
  1000   001E3E  C006  F017         	movff	?___awdiv,timeadjuster@solarnoon
  1001   001E42  C007  F018         	movff	?___awdiv+1,timeadjuster@solarnoon+1
  1002   001E46                     
  1003                           ;Functions.c: 112:     adjustment = (12*3600)-solarnoon;
  1004   001E46  5017               	movf	timeadjuster@solarnoon^0,w,c
  1005   001E48  08C0               	sublw	192
  1006   001E4A  6E19               	movwf	timeadjuster@adjustment^0,c
  1007   001E4C  5018               	movf	(timeadjuster@solarnoon+1)^0,w,c
  1008   001E4E  A0D8               	btfss	status,0,c
  1009   001E50  2AE8               	incf	wreg,f,c
  1010   001E52  08A8               	sublw	168
  1011   001E54  6E1A               	movwf	(timeadjuster@adjustment+1)^0,c
  1012   001E56                     
  1013                           ;Functions.c: 113:     if (hour==11 && seconds==1800)
  1014   001E56  0E0B               	movlw	11
  1015   001E58  1851               	xorwf	_hour^0,w,c
  1016   001E5A  1052               	iorwf	(_hour+1)^0,w,c
  1017   001E5C  A4D8               	btfss	status,2,c
  1018   001E5E  EF33  F00F         	goto	u3011
  1019   001E62  EF35  F00F         	goto	u3010
  1020   001E66                     u3011:
  1021   001E66  EF45  F00F         	goto	l389
  1022   001E6A                     u3010:
  1023   001E6A  0E08               	movlw	8
  1024   001E6C  1853               	xorwf	_seconds^0,w,c
  1025   001E6E  E107               	bnz	u3021
  1026   001E70  0E07               	movlw	7
  1027   001E72  1854               	xorwf	(_seconds+1)^0,w,c
  1028   001E74  A4D8               	btfss	status,2,c
  1029   001E76  EF3F  F00F         	goto	u3021
  1030   001E7A  EF41  F00F         	goto	u3020
  1031   001E7E                     u3021:
  1032   001E7E  EF45  F00F         	goto	l389
  1033   001E82                     u3020:
  1034   001E82                     
  1035                           ;Functions.c: 114:     {;Functions.c: 115:         seconds+=adjustment;
  1036   001E82  5019               	movf	timeadjuster@adjustment^0,w,c
  1037   001E84  2653               	addwf	_seconds^0,f,c
  1038   001E86  501A               	movf	(timeadjuster@adjustment+1)^0,w,c
  1039   001E88  2254               	addwfc	(_seconds+1)^0,f,c
  1040   001E8A                     l389:
  1041   001E8A  0012               	return		;funcret
  1042   001E8C                     __end_of_timeadjuster:
  1043                           	callstack 0
  1044                           
  1045 ;; *************** function ___awdiv *****************
  1046 ;; Defined at:
  1047 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;  dividend        2    5[COMRAM] int 
  1050 ;;  divisor         2    7[COMRAM] int 
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;  quotient        2   11[COMRAM] int 
  1053 ;;  sign            1   10[COMRAM] unsigned char 
  1054 ;;  counter         1    9[COMRAM] unsigned char 
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  2    5[COMRAM] int 
  1057 ;; Registers used:
  1058 ;;		wreg, status,2, status,0
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1064 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1065 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1067 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1068 ;;Total ram usage:        8 bytes
  1069 ;; Hardware stack levels used: 1
  1070 ;; Hardware stack levels required when called: 2
  1071 ;; This function calls:
  1072 ;;		Nothing
  1073 ;; This function is called by:
  1074 ;;		_timeadjuster
  1075 ;;		_ADC_lightMeter
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text2
  1080   001B10                     __ptext2:
  1081                           	callstack 0
  1082   001B10                     ___awdiv:
  1083                           	callstack 27
  1084   001B10  0E00               	movlw	0
  1085   001B12  6E0B               	movwf	___awdiv@sign^0,c
  1086   001B14  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
  1087   001B16  EF91  F00D         	goto	u2810
  1088   001B1A  EF8F  F00D         	goto	u2811
  1089   001B1E                     u2811:
  1090   001B1E  EF97  F00D         	goto	l3469
  1091   001B22                     u2810:
  1092   001B22  6C08               	negf	___awdiv@divisor^0,c
  1093   001B24  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  1094   001B26  B0D8               	btfsc	status,0,c
  1095   001B28  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  1096   001B2A  0E01               	movlw	1
  1097   001B2C  6E0B               	movwf	___awdiv@sign^0,c
  1098   001B2E                     l3469:
  1099   001B2E  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
  1100   001B30  EF9E  F00D         	goto	u2820
  1101   001B34  EF9C  F00D         	goto	u2821
  1102   001B38                     u2821:
  1103   001B38  EFA4  F00D         	goto	l3475
  1104   001B3C                     u2820:
  1105   001B3C  6C06               	negf	___awdiv@dividend^0,c
  1106   001B3E  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  1107   001B40  B0D8               	btfsc	status,0,c
  1108   001B42  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  1109   001B44  0E01               	movlw	1
  1110   001B46  1A0B               	xorwf	___awdiv@sign^0,f,c
  1111   001B48                     l3475:
  1112   001B48  0E00               	movlw	0
  1113   001B4A  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  1114   001B4C  0E00               	movlw	0
  1115   001B4E  6E0C               	movwf	___awdiv@quotient^0,c
  1116   001B50  5008               	movf	___awdiv@divisor^0,w,c
  1117   001B52  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  1118   001B54  B4D8               	btfsc	status,2,c
  1119   001B56  EFAF  F00D         	goto	u2831
  1120   001B5A  EFB1  F00D         	goto	u2830
  1121   001B5E                     u2831:
  1122   001B5E  EFD9  F00D         	goto	l3497
  1123   001B62                     u2830:
  1124   001B62  0E01               	movlw	1
  1125   001B64  6E0A               	movwf	___awdiv@counter^0,c
  1126   001B66  EFB9  F00D         	goto	l3483
  1127   001B6A                     l3481:
  1128   001B6A  90D8               	bcf	status,0,c
  1129   001B6C  3608               	rlcf	___awdiv@divisor^0,f,c
  1130   001B6E  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  1131   001B70  2A0A               	incf	___awdiv@counter^0,f,c
  1132   001B72                     l3483:
  1133   001B72  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  1134   001B74  EFBE  F00D         	goto	u2841
  1135   001B78  EFC0  F00D         	goto	u2840
  1136   001B7C                     u2841:
  1137   001B7C  EFB5  F00D         	goto	l3481
  1138   001B80                     u2840:
  1139   001B80                     l3485:
  1140   001B80  90D8               	bcf	status,0,c
  1141   001B82  360C               	rlcf	___awdiv@quotient^0,f,c
  1142   001B84  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  1143   001B86  5008               	movf	___awdiv@divisor^0,w,c
  1144   001B88  5C06               	subwf	___awdiv@dividend^0,w,c
  1145   001B8A  5009               	movf	(___awdiv@divisor+1)^0,w,c
  1146   001B8C  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  1147   001B8E  A0D8               	btfss	status,0,c
  1148   001B90  EFCC  F00D         	goto	u2851
  1149   001B94  EFCE  F00D         	goto	u2850
  1150   001B98                     u2851:
  1151   001B98  EFD3  F00D         	goto	l3493
  1152   001B9C                     u2850:
  1153   001B9C  5008               	movf	___awdiv@divisor^0,w,c
  1154   001B9E  5E06               	subwf	___awdiv@dividend^0,f,c
  1155   001BA0  5009               	movf	(___awdiv@divisor+1)^0,w,c
  1156   001BA2  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  1157   001BA4  800C               	bsf	___awdiv@quotient^0,0,c
  1158   001BA6                     l3493:
  1159   001BA6  90D8               	bcf	status,0,c
  1160   001BA8  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  1161   001BAA  3208               	rrcf	___awdiv@divisor^0,f,c
  1162   001BAC  2E0A               	decfsz	___awdiv@counter^0,f,c
  1163   001BAE  EFC0  F00D         	goto	l3485
  1164   001BB2                     l3497:
  1165   001BB2  500B               	movf	___awdiv@sign^0,w,c
  1166   001BB4  B4D8               	btfsc	status,2,c
  1167   001BB6  EFDF  F00D         	goto	u2861
  1168   001BBA  EFE1  F00D         	goto	u2860
  1169   001BBE                     u2861:
  1170   001BBE  EFE5  F00D         	goto	l3501
  1171   001BC2                     u2860:
  1172   001BC2  6C0C               	negf	___awdiv@quotient^0,c
  1173   001BC4  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  1174   001BC6  B0D8               	btfsc	status,0,c
  1175   001BC8  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  1176   001BCA                     l3501:
  1177   001BCA  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  1178   001BCE  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  1179   001BD2  0012               	return		;funcret
  1180   001BD4                     __end_of___awdiv:
  1181                           	callstack 0
  1182                           
  1183 ;; *************** function _sunset *****************
  1184 ;; Defined at:
  1185 ;;		line 93 in file "Functions.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;		None
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  sunset_time     2   16[COMRAM] int 
  1190 ;;  prevState       2   14[COMRAM] int 
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  2   11[COMRAM] int 
  1193 ;; Registers used:
  1194 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1200 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1201 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1202 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1203 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1204 ;;Total ram usage:        7 bytes
  1205 ;; Hardware stack levels used: 1
  1206 ;; Hardware stack levels required when called: 3
  1207 ;; This function calls:
  1208 ;;		___wmul
  1209 ;; This function is called by:
  1210 ;;		_main
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           	psect	text3
  1215   001E8C                     __ptext3:
  1216                           	callstack 0
  1217   001E8C                     _sunset:
  1218                           	callstack 27
  1219   001E8C                     
  1220                           ;Functions.c: 95:     int prevState = LATHbits.LATH3;
  1221   001E8C  B680               	btfsc	128,3,c	;volatile
  1222   001E8E  EF4B  F00F         	goto	u2981
  1223   001E92  EF4F  F00F         	goto	u2980
  1224   001E96                     u2981:
  1225   001E96  6A0E               	clrf	??_sunset^0,c
  1226   001E98  2A0E               	incf	??_sunset^0,f,c
  1227   001E9A  EF50  F00F         	goto	u2988
  1228   001E9E                     u2980:
  1229   001E9E  6A0E               	clrf	??_sunset^0,c
  1230   001EA0                     u2988:
  1231   001EA0  500E               	movf	??_sunset^0,w,c
  1232   001EA2  6E0F               	movwf	sunset@prevState^0,c
  1233   001EA4  6A10               	clrf	(sunset@prevState+1)^0,c
  1234                           
  1235                           ;Functions.c: 97:     if (16<=hour<=20)
  1236   001EA6  0E00               	movlw	0
  1237   001EA8  6E12               	movwf	(sunset@sunset_time+1)^0,c
  1238   001EAA  0E00               	movlw	0
  1239   001EAC  6E11               	movwf	sunset@sunset_time^0,c
  1240   001EAE                     
  1241                           ;Functions.c: 98:     {;Functions.c: 99:         if (prevState==0 && LATHbits.LATH3==1)
  1242   001EAE  500F               	movf	sunset@prevState^0,w,c
  1243   001EB0  1010               	iorwf	(sunset@prevState+1)^0,w,c
  1244   001EB2  A4D8               	btfss	status,2,c
  1245   001EB4  EF5E  F00F         	goto	u2991
  1246   001EB8  EF60  F00F         	goto	u2990
  1247   001EBC                     u2991:
  1248   001EBC  EF77  F00F         	goto	l3651
  1249   001EC0                     u2990:
  1250   001EC0  A680               	btfss	128,3,c	;volatile
  1251   001EC2  EF65  F00F         	goto	u3001
  1252   001EC6  EF67  F00F         	goto	u3000
  1253   001ECA                     u3001:
  1254   001ECA  EF77  F00F         	goto	l3651
  1255   001ECE                     u3000:
  1256   001ECE                     
  1257                           ;Functions.c: 100:         {;Functions.c: 101:             sunset_time = seconds+(hour*3
      +                          600);
  1258   001ECE  C051  F006         	movff	_hour,___wmul@multiplier
  1259   001ED2  C052  F007         	movff	_hour+1,___wmul@multiplier+1
  1260   001ED6  0E0E               	movlw	14
  1261   001ED8  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  1262   001EDA  0E10               	movlw	16
  1263   001EDC  6E08               	movwf	___wmul@multiplicand^0,c
  1264   001EDE  ECB0  F011         	call	___wmul	;wreg free
  1265   001EE2  5053               	movf	_seconds^0,w,c
  1266   001EE4  2406               	addwf	?___wmul^0,w,c
  1267   001EE6  6E11               	movwf	sunset@sunset_time^0,c
  1268   001EE8  5054               	movf	(_seconds+1)^0,w,c
  1269   001EEA  2007               	addwfc	(?___wmul+1)^0,w,c
  1270   001EEC  6E12               	movwf	(sunset@sunset_time+1)^0,c
  1271   001EEE                     l3651:
  1272                           
  1273                           ;Functions.c: 104:     return sunset_time;
  1274   001EEE  C011  F00C         	movff	sunset@sunset_time,?_sunset
  1275   001EF2  C012  F00D         	movff	sunset@sunset_time+1,?_sunset+1
  1276   001EF6  0012               	return		;funcret
  1277   001EF8                     __end_of_sunset:
  1278                           	callstack 0
  1279                           
  1280 ;; *************** function _sunrise *****************
  1281 ;; Defined at:
  1282 ;;		line 79 in file "Functions.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  sunrise_time    2   16[COMRAM] int 
  1287 ;;  prevState       2   14[COMRAM] int 
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  2   11[COMRAM] int 
  1290 ;; Registers used:
  1291 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1298 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1299 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1300 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1301 ;;Total ram usage:        7 bytes
  1302 ;; Hardware stack levels used: 1
  1303 ;; Hardware stack levels required when called: 3
  1304 ;; This function calls:
  1305 ;;		___wmul
  1306 ;; This function is called by:
  1307 ;;		_main
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           	psect	text4
  1312   001EF8                     __ptext4:
  1313                           	callstack 0
  1314   001EF8                     _sunrise:
  1315                           	callstack 27
  1316   001EF8                     
  1317                           ;Functions.c: 81:     int prevState = LATHbits.LATH3;
  1318   001EF8  B680               	btfsc	128,3,c	;volatile
  1319   001EFA  EF81  F00F         	goto	u2951
  1320   001EFE  EF85  F00F         	goto	u2950
  1321   001F02                     u2951:
  1322   001F02  6A0E               	clrf	??_sunrise^0,c
  1323   001F04  2A0E               	incf	??_sunrise^0,f,c
  1324   001F06  EF86  F00F         	goto	u2958
  1325   001F0A                     u2950:
  1326   001F0A  6A0E               	clrf	??_sunrise^0,c
  1327   001F0C                     u2958:
  1328   001F0C  500E               	movf	??_sunrise^0,w,c
  1329   001F0E  6E0F               	movwf	sunrise@prevState^0,c
  1330   001F10  6A10               	clrf	(sunrise@prevState+1)^0,c
  1331                           
  1332                           ;Functions.c: 83:     if (5<=hour<=8)
  1333   001F12  0E00               	movlw	0
  1334   001F14  6E12               	movwf	(sunrise@sunrise_time+1)^0,c
  1335   001F16  0E00               	movlw	0
  1336   001F18  6E11               	movwf	sunrise@sunrise_time^0,c
  1337   001F1A                     
  1338                           ;Functions.c: 84:     {;Functions.c: 85:         if (prevState==1 && LATHbits.LATH3==0)
  1339   001F1A  040F               	decf	sunrise@prevState^0,w,c
  1340   001F1C  1010               	iorwf	(sunrise@prevState+1)^0,w,c
  1341   001F1E  A4D8               	btfss	status,2,c
  1342   001F20  EF94  F00F         	goto	u2961
  1343   001F24  EF96  F00F         	goto	u2960
  1344   001F28                     u2961:
  1345   001F28  EFAD  F00F         	goto	l3639
  1346   001F2C                     u2960:
  1347   001F2C  B680               	btfsc	128,3,c	;volatile
  1348   001F2E  EF9B  F00F         	goto	u2971
  1349   001F32  EF9D  F00F         	goto	u2970
  1350   001F36                     u2971:
  1351   001F36  EFAD  F00F         	goto	l3639
  1352   001F3A                     u2970:
  1353   001F3A                     
  1354                           ;Functions.c: 86:         {;Functions.c: 87:             sunrise_time = seconds+(hour*36
      +                          00);
  1355   001F3A  C051  F006         	movff	_hour,___wmul@multiplier
  1356   001F3E  C052  F007         	movff	_hour+1,___wmul@multiplier+1
  1357   001F42  0E0E               	movlw	14
  1358   001F44  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  1359   001F46  0E10               	movlw	16
  1360   001F48  6E08               	movwf	___wmul@multiplicand^0,c
  1361   001F4A  ECB0  F011         	call	___wmul	;wreg free
  1362   001F4E  5053               	movf	_seconds^0,w,c
  1363   001F50  2406               	addwf	?___wmul^0,w,c
  1364   001F52  6E11               	movwf	sunrise@sunrise_time^0,c
  1365   001F54  5054               	movf	(_seconds+1)^0,w,c
  1366   001F56  2007               	addwfc	(?___wmul+1)^0,w,c
  1367   001F58  6E12               	movwf	(sunrise@sunrise_time+1)^0,c
  1368   001F5A                     l3639:
  1369                           
  1370                           ;Functions.c: 90:     return sunrise_time;
  1371   001F5A  C011  F00C         	movff	sunrise@sunrise_time,?_sunrise
  1372   001F5E  C012  F00D         	movff	sunrise@sunrise_time+1,?_sunrise+1
  1373   001F62  0012               	return		;funcret
  1374   001F64                     __end_of_sunrise:
  1375                           	callstack 0
  1376                           
  1377 ;; *************** function _streetLightInit *****************
  1378 ;; Defined at:
  1379 ;;		line 12 in file "Functions.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		None
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1397 ;;Total ram usage:        0 bytes
  1398 ;; Hardware stack levels used: 1
  1399 ;; Hardware stack levels required when called: 2
  1400 ;; This function calls:
  1401 ;;		Nothing
  1402 ;; This function is called by:
  1403 ;;		_main
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text5
  1408   00247A                     __ptext5:
  1409                           	callstack 0
  1410   00247A                     _streetLightInit:
  1411                           	callstack 28
  1412   00247A                     
  1413                           ;Functions.c: 14:     LATHbits.LATH3 = 0;
  1414   00247A  9680               	bcf	128,3,c	;volatile
  1415                           
  1416                           ;Functions.c: 15:     TRISHbits.TRISH3 = 0;
  1417   00247C  9688               	bcf	136,3,c	;volatile
  1418                           
  1419                           ;Functions.c: 16:     LATDbits.LATD7 = 1;
  1420   00247E  8E7C               	bsf	124,7,c	;volatile
  1421                           
  1422                           ;Functions.c: 17:     TRISDbits.TRISD7 = 0;
  1423   002480  9E84               	bcf	132,7,c	;volatile
  1424   002482  0012               	return		;funcret
  1425   002484                     __end_of_streetLightInit:
  1426                           	callstack 0
  1427                           
  1428 ;; *************** function _poweroff *****************
  1429 ;; Defined at:
  1430 ;;		line 58 in file "Functions.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;		None
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;		None
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  1    wreg      void 
  1437 ;; Registers used:
  1438 ;;		wreg, status,2, status,0
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1448 ;;Total ram usage:        0 bytes
  1449 ;; Hardware stack levels used: 1
  1450 ;; Hardware stack levels required when called: 2
  1451 ;; This function calls:
  1452 ;;		Nothing
  1453 ;; This function is called by:
  1454 ;;		_main
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text6
  1459   002262                     __ptext6:
  1460                           	callstack 0
  1461   002262                     _poweroff:
  1462                           	callstack 28
  1463   002262                     
  1464                           ;Functions.c: 61:         if (1 <= hour && hour < 5) {
  1465   002262  BE52               	btfsc	(_hour+1)^0,7,c
  1466   002264  EF3C  F011         	goto	u2931
  1467   002268  5052               	movf	(_hour+1)^0,w,c
  1468   00226A  E108               	bnz	u2930
  1469   00226C  0451               	decf	_hour^0,w,c
  1470   00226E  A0D8               	btfss	status,0,c
  1471   002270  EF3C  F011         	goto	u2931
  1472   002274  EF3E  F011         	goto	u2930
  1473   002278                     u2931:
  1474   002278  EF4D  F011         	goto	l372
  1475   00227C                     u2930:
  1476   00227C  BE52               	btfsc	(_hour+1)^0,7,c
  1477   00227E  EF4C  F011         	goto	u2940
  1478   002282  5052               	movf	(_hour+1)^0,w,c
  1479   002284  E107               	bnz	u2941
  1480   002286  0E05               	movlw	5
  1481   002288  5C51               	subwf	_hour^0,w,c
  1482   00228A  B0D8               	btfsc	status,0,c
  1483   00228C  EF4A  F011         	goto	u2941
  1484   002290  EF4C  F011         	goto	u2940
  1485   002294                     u2941:
  1486   002294  EF4D  F011         	goto	l372
  1487   002298                     u2940:
  1488   002298                     
  1489                           ;Functions.c: 62:             LATHbits.LATH3 = 0;
  1490   002298  9680               	bcf	128,3,c	;volatile
  1491   00229A                     l372:
  1492   00229A  0012               	return		;funcret
  1493   00229C                     __end_of_poweroff:
  1494                           	callstack 0
  1495                           
  1496 ;; *************** function _increment *****************
  1497 ;; Defined at:
  1498 ;;		line 19 in file "Functions.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;		None
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;		None
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      void 
  1505 ;; Registers used:
  1506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1514 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1515 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1516 ;;Total ram usage:        2 bytes
  1517 ;; Hardware stack levels used: 1
  1518 ;; Hardware stack levels required when called: 3
  1519 ;; This function calls:
  1520 ;;		_LEDarray_disp_bin
  1521 ;; This function is called by:
  1522 ;;		_main
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           	psect	text7
  1527   001852                     __ptext7:
  1528                           	callstack 0
  1529   001852                     _increment:
  1530                           	callstack 27
  1531   001852                     
  1532                           ;Functions.c: 21:     if (year%4 == 0)
  1533   001852  0E03               	movlw	3
  1534   001854  0100               	movlb	0	; () banked
  1535   001856  159D               	andwf	_year& (0+255),w,b
  1536   001858  6E20               	movwf	??_increment^0,c
  1537   00185A  0E00               	movlw	0
  1538   00185C  159E               	andwf	(_year+1)& (0+255),w,b
  1539   00185E  6E21               	movwf	(??_increment+1)^0,c
  1540   001860  5020               	movf	??_increment^0,w,c
  1541   001862  1021               	iorwf	(??_increment+1)^0,w,c
  1542   001864  A4D8               	btfss	status,2,c
  1543   001866  EF37  F00C         	goto	u2871
  1544   00186A  EF39  F00C         	goto	u2870
  1545   00186E                     u2871:
  1546   00186E  EF40  F00C         	goto	l3593
  1547   001872                     u2870:
  1548   001872                     
  1549                           ; BSR set to: 0
  1550                           ;Functions.c: 22:     {;Functions.c: 23:         month[1] = 29;
  1551   001872  0E00               	movlw	0
  1552   001874  0101               	movlb	1	; () banked
  1553   001876  6F87               	movwf	(_month+3)& (0+255),b
  1554   001878  0E1D               	movlw	29
  1555   00187A  6F86               	movwf	(_month+2)& (0+255),b
  1556                           
  1557                           ;Functions.c: 24:     }
  1558   00187C  EF45  F00C         	goto	l3595
  1559   001880                     l3593:
  1560                           
  1561                           ; BSR set to: 0
  1562                           ;Functions.c: 26:     {;Functions.c: 27:         month[1] = 28;
  1563   001880  0E00               	movlw	0
  1564   001882  0101               	movlb	1	; () banked
  1565   001884  6F87               	movwf	(_month+3)& (0+255),b
  1566   001886  0E1C               	movlw	28
  1567   001888  6F86               	movwf	(_month+2)& (0+255),b
  1568   00188A                     l3595:
  1569                           
  1570                           ; BSR set to: 1
  1571                           ;Functions.c: 29:     if (seconds == 1)
  1572   00188A  0453               	decf	_seconds^0,w,c
  1573   00188C  1054               	iorwf	(_seconds+1)^0,w,c
  1574   00188E  A4D8               	btfss	status,2,c
  1575   001890  EF4C  F00C         	goto	u2881
  1576   001894  EF4E  F00C         	goto	u2880
  1577   001898                     u2881:
  1578   001898  EF5A  F00C         	goto	l3603
  1579   00189C                     u2880:
  1580   00189C                     
  1581                           ; BSR set to: 1
  1582                           ;Functions.c: 30:     {;Functions.c: 31:         hour++;
  1583   00189C  4A51               	infsnz	_hour^0,f,c
  1584   00189E  2A52               	incf	(_hour+1)^0,f,c
  1585   0018A0                     
  1586                           ; BSR set to: 1
  1587                           ;Functions.c: 32:         LEDarray_disp_bin(hour);
  1588   0018A0  C051  F006         	movff	_hour,LEDarray_disp_bin@number
  1589   0018A4  C052  F007         	movff	_hour+1,LEDarray_disp_bin@number+1
  1590   0018A8  ECAF  F00C         	call	_LEDarray_disp_bin	;wreg free
  1591   0018AC                     
  1592                           ;Functions.c: 33:         seconds = 0;
  1593   0018AC  0E00               	movlw	0
  1594   0018AE  6E54               	movwf	(_seconds+1)^0,c
  1595   0018B0  0E00               	movlw	0
  1596   0018B2  6E53               	movwf	_seconds^0,c
  1597   0018B4                     l3603:
  1598                           
  1599                           ;Functions.c: 35:     if (hour == 24)
  1600   0018B4  0E18               	movlw	24
  1601   0018B6  1851               	xorwf	_hour^0,w,c
  1602   0018B8  1052               	iorwf	(_hour+1)^0,w,c
  1603   0018BA  A4D8               	btfss	status,2,c
  1604   0018BC  EF62  F00C         	goto	u2891
  1605   0018C0  EF64  F00C         	goto	u2890
  1606   0018C4                     u2891:
  1607   0018C4  EF71  F00C         	goto	l3609
  1608   0018C8                     u2890:
  1609   0018C8                     
  1610                           ;Functions.c: 36:     {;Functions.c: 37:         day_of_year++;
  1611   0018C8  0101               	movlb	1	; () banked
  1612   0018CA  4B9E               	infsnz	_day_of_year& (0+255),f,b
  1613   0018CC  2B9F               	incf	(_day_of_year+1)& (0+255),f,b
  1614                           
  1615                           ;Functions.c: 38:         day_of_week++;
  1616   0018CE  0100               	movlb	0	; () banked
  1617   0018D0  4B9F               	infsnz	_day_of_week& (0+255),f,b
  1618   0018D2  2BA0               	incf	(_day_of_week+1)& (0+255),f,b
  1619                           
  1620                           ;Functions.c: 39:         day_of_month++;
  1621   0018D4  0101               	movlb	1	; () banked
  1622   0018D6  4B9C               	infsnz	_day_of_month& (0+255),f,b
  1623   0018D8  2B9D               	incf	(_day_of_month+1)& (0+255),f,b
  1624   0018DA                     
  1625                           ; BSR set to: 1
  1626                           ;Functions.c: 40:         hour = 0;
  1627   0018DA  0E00               	movlw	0
  1628   0018DC  6E52               	movwf	(_hour+1)^0,c
  1629   0018DE  0E00               	movlw	0
  1630   0018E0  6E51               	movwf	_hour^0,c
  1631   0018E2                     l3609:
  1632                           
  1633                           ;Functions.c: 42:     if (day_of_week == 7)
  1634   0018E2  0E07               	movlw	7
  1635   0018E4  0100               	movlb	0	; () banked
  1636   0018E6  199F               	xorwf	_day_of_week& (0+255),w,b
  1637   0018E8  11A0               	iorwf	(_day_of_week+1)& (0+255),w,b
  1638   0018EA  A4D8               	btfss	status,2,c
  1639   0018EC  EF7A  F00C         	goto	u2901
  1640   0018F0  EF7C  F00C         	goto	u2900
  1641   0018F4                     u2901:
  1642   0018F4  EF80  F00C         	goto	l3613
  1643   0018F8                     u2900:
  1644   0018F8                     
  1645                           ; BSR set to: 0
  1646                           ;Functions.c: 43:     {;Functions.c: 44:         day_of_week = 0;
  1647   0018F8  0E00               	movlw	0
  1648   0018FA  6FA0               	movwf	(_day_of_week+1)& (0+255),b
  1649   0018FC  0E00               	movlw	0
  1650   0018FE  6F9F               	movwf	_day_of_week& (0+255),b
  1651   001900                     l3613:
  1652                           
  1653                           ; BSR set to: 0
  1654                           ;Functions.c: 46:     if (day_of_month == month[month_num-1])
  1655   001900  90D8               	bcf	status,0,c
  1656   001902  35A1               	rlcf	_month_num& (0+255),w,b
  1657   001904  6ED9               	movwf	fsr2l,c
  1658   001906  35A2               	rlcf	(_month_num+1)& (0+255),w,b
  1659   001908  6EDA               	movwf	fsr2h,c
  1660   00190A  0E82               	movlw	low (_month+65534)
  1661   00190C  26D9               	addwf	fsr2l,f,c
  1662   00190E  0E01               	movlw	high (_month+65534)
  1663   001910  22DA               	addwfc	fsr2h,f,c
  1664   001912  0101               	movlb	1	; () banked
  1665   001914  519C               	movf	_day_of_month& (0+255),w,b
  1666   001916  18DE               	xorwf	postinc2,w,c
  1667   001918  E107               	bnz	u2911
  1668   00191A  519D               	movf	(_day_of_month+1)& (0+255),w,b
  1669   00191C  18DE               	xorwf	postinc2,w,c
  1670   00191E  A4D8               	btfss	status,2,c
  1671   001920  EF94  F00C         	goto	u2911
  1672   001924  EF96  F00C         	goto	u2910
  1673   001928                     u2911:
  1674   001928  EF9D  F00C         	goto	l3619
  1675   00192C                     u2910:
  1676   00192C                     
  1677                           ; BSR set to: 1
  1678                           ;Functions.c: 47:     {;Functions.c: 48:         day_of_month = 0;
  1679   00192C  0E00               	movlw	0
  1680   00192E  6F9D               	movwf	(_day_of_month+1)& (0+255),b
  1681   001930  0E00               	movlw	0
  1682   001932  6F9C               	movwf	_day_of_month& (0+255),b
  1683   001934                     
  1684                           ; BSR set to: 1
  1685                           ;Functions.c: 49:         month_num++;
  1686   001934  0100               	movlb	0	; () banked
  1687   001936  4BA1               	infsnz	_month_num& (0+255),f,b
  1688   001938  2BA2               	incf	(_month_num+1)& (0+255),f,b
  1689   00193A                     l3619:
  1690                           
  1691                           ;Functions.c: 51:     if (month_num == 13)
  1692   00193A  0E0D               	movlw	13
  1693   00193C  0100               	movlb	0	; () banked
  1694   00193E  19A1               	xorwf	_month_num& (0+255),w,b
  1695   001940  11A2               	iorwf	(_month_num+1)& (0+255),w,b
  1696   001942  A4D8               	btfss	status,2,c
  1697   001944  EFA6  F00C         	goto	u2921
  1698   001948  EFA8  F00C         	goto	u2920
  1699   00194C                     u2921:
  1700   00194C  EFAE  F00C         	goto	l368
  1701   001950                     u2920:
  1702   001950                     
  1703                           ; BSR set to: 0
  1704                           ;Functions.c: 52:     {;Functions.c: 53:         month_num=0;
  1705   001950  0E00               	movlw	0
  1706   001952  6FA2               	movwf	(_month_num+1)& (0+255),b
  1707   001954  0E00               	movlw	0
  1708   001956  6FA1               	movwf	_month_num& (0+255),b
  1709   001958                     
  1710                           ; BSR set to: 0
  1711                           ;Functions.c: 54:         year++;
  1712   001958  4B9D               	infsnz	_year& (0+255),f,b
  1713   00195A  2B9E               	incf	(_year+1)& (0+255),f,b
  1714   00195C                     l368:
  1715                           
  1716                           ; BSR set to: 0
  1717   00195C  0012               	return		;funcret
  1718   00195E                     __end_of_increment:
  1719                           	callstack 0
  1720                           
  1721 ;; *************** function _LEDarray_disp_bin *****************
  1722 ;; Defined at:
  1723 ;;		line 38 in file "LEDarray.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  number          2    5[COMRAM] unsigned int 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  ctr             2   29[COMRAM] int 
  1728 ;;  led_arr        18    9[COMRAM] int [9]
  1729 ;;  mask            2   27[COMRAM] int 
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      void 
  1732 ;; Registers used:
  1733 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1740 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1741 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1742 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1743 ;;Total ram usage:       26 bytes
  1744 ;; Hardware stack levels used: 1
  1745 ;; Hardware stack levels required when called: 2
  1746 ;; This function calls:
  1747 ;;		Nothing
  1748 ;; This function is called by:
  1749 ;;		_increment
  1750 ;;		_ADC_lightMeter
  1751 ;;		_LEDarray_disp_dec
  1752 ;;		_LEDarray_disp_PPM
  1753 ;;		_incrementseconds
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           	psect	text8
  1758   00195E                     __ptext8:
  1759                           	callstack 0
  1760   00195E                     _LEDarray_disp_bin:
  1761                           	callstack 27
  1762   00195E                     
  1763                           ;LEDarray.c: 38: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 39: {;LEDarray.
      +                          c: 43:     int mask= 0b000000001;
  1764   00195E  0E00               	movlw	0
  1765   001960  6E1D               	movwf	(LEDarray_disp_bin@mask+1)^0,c
  1766   001962  0E01               	movlw	1
  1767   001964  6E1C               	movwf	LEDarray_disp_bin@mask^0,c
  1768                           
  1769                           ;LEDarray.c: 44:     int led_arr[9];;LEDarray.c: 45:     for(int ctr=0;ctr<9;ctr++){
  1770   001966  0E00               	movlw	0
  1771   001968  6E1F               	movwf	(LEDarray_disp_bin@ctr+1)^0,c
  1772   00196A  0E00               	movlw	0
  1773   00196C  6E1E               	movwf	LEDarray_disp_bin@ctr^0,c
  1774   00196E                     l3423:
  1775                           
  1776                           ;LEDarray.c: 46:         if (number & mask)
  1777   00196E  5006               	movf	LEDarray_disp_bin@number^0,w,c
  1778   001970  141C               	andwf	LEDarray_disp_bin@mask^0,w,c
  1779   001972  6E08               	movwf	??_LEDarray_disp_bin^0,c
  1780   001974  5007               	movf	(LEDarray_disp_bin@number+1)^0,w,c
  1781   001976  141D               	andwf	(LEDarray_disp_bin@mask+1)^0,w,c
  1782   001978  6E09               	movwf	(??_LEDarray_disp_bin+1)^0,c
  1783   00197A  5008               	movf	??_LEDarray_disp_bin^0,w,c
  1784   00197C  1009               	iorwf	(??_LEDarray_disp_bin+1)^0,w,c
  1785   00197E  B4D8               	btfsc	status,2,c
  1786   001980  EFC4  F00C         	goto	u2691
  1787   001984  EFC6  F00C         	goto	u2690
  1788   001988                     u2691:
  1789   001988  EFD5  F00C         	goto	l3427
  1790   00198C                     u2690:
  1791   00198C                     
  1792                           ;LEDarray.c: 47:             led_arr[ctr]=1;
  1793   00198C  90D8               	bcf	status,0,c
  1794   00198E  341E               	rlcf	LEDarray_disp_bin@ctr^0,w,c
  1795   001990  6ED9               	movwf	fsr2l,c
  1796   001992  341F               	rlcf	(LEDarray_disp_bin@ctr+1)^0,w,c
  1797   001994  6EDA               	movwf	fsr2h,c
  1798   001996  0E0A               	movlw	low LEDarray_disp_bin@led_arr
  1799   001998  26D9               	addwf	fsr2l,f,c
  1800   00199A  0E00               	movlw	high LEDarray_disp_bin@led_arr
  1801   00199C  22DA               	addwfc	fsr2h,f,c
  1802   00199E  0E01               	movlw	1
  1803   0019A0  6EDE               	movwf	postinc2,c
  1804   0019A2  0E00               	movlw	0
  1805   0019A4  6EDD               	movwf	postdec2,c
  1806   0019A6  EFE2  F00C         	goto	l3429
  1807   0019AA                     l3427:
  1808                           
  1809                           ;LEDarray.c: 50:             led_arr[ctr]=0;
  1810   0019AA  90D8               	bcf	status,0,c
  1811   0019AC  341E               	rlcf	LEDarray_disp_bin@ctr^0,w,c
  1812   0019AE  6ED9               	movwf	fsr2l,c
  1813   0019B0  341F               	rlcf	(LEDarray_disp_bin@ctr+1)^0,w,c
  1814   0019B2  6EDA               	movwf	fsr2h,c
  1815   0019B4  0E0A               	movlw	low LEDarray_disp_bin@led_arr
  1816   0019B6  26D9               	addwf	fsr2l,f,c
  1817   0019B8  0E00               	movlw	high LEDarray_disp_bin@led_arr
  1818   0019BA  22DA               	addwfc	fsr2h,f,c
  1819   0019BC  0E00               	movlw	0
  1820   0019BE  6EDE               	movwf	postinc2,c
  1821   0019C0  0E00               	movlw	0
  1822   0019C2  6EDD               	movwf	postdec2,c
  1823   0019C4                     l3429:
  1824                           
  1825                           ;LEDarray.c: 52:         mask<<=1;
  1826   0019C4  90D8               	bcf	status,0,c
  1827   0019C6  361C               	rlcf	LEDarray_disp_bin@mask^0,f,c
  1828   0019C8  361D               	rlcf	(LEDarray_disp_bin@mask+1)^0,f,c
  1829   0019CA                     
  1830                           ;LEDarray.c: 53:     }
  1831   0019CA  4A1E               	infsnz	LEDarray_disp_bin@ctr^0,f,c
  1832   0019CC  2A1F               	incf	(LEDarray_disp_bin@ctr+1)^0,f,c
  1833   0019CE  BE1F               	btfsc	(LEDarray_disp_bin@ctr+1)^0,7,c
  1834   0019D0  EFF3  F00C         	goto	u2701
  1835   0019D4  501F               	movf	(LEDarray_disp_bin@ctr+1)^0,w,c
  1836   0019D6  E109               	bnz	u2700
  1837   0019D8  0E09               	movlw	9
  1838   0019DA  5C1E               	subwf	LEDarray_disp_bin@ctr^0,w,c
  1839   0019DC  A0D8               	btfss	status,0,c
  1840   0019DE  EFF3  F00C         	goto	u2701
  1841   0019E2  EFF5  F00C         	goto	u2700
  1842   0019E6                     u2701:
  1843   0019E6  EFB7  F00C         	goto	l3423
  1844   0019EA                     u2700:
  1845   0019EA                     
  1846                           ;LEDarray.c: 55:     LATGbits.LATG0 = led_arr[0];
  1847   0019EA  B00A               	btfsc	LEDarray_disp_bin@led_arr^0,0,c
  1848   0019EC  D002               	bra	u2715
  1849   0019EE  907F               	bcf	127,0,c	;volatile
  1850   0019F0  D001               	bra	u2716
  1851   0019F2                     u2715:
  1852   0019F2  807F               	bsf	127,0,c	;volatile
  1853   0019F4                     u2716:
  1854                           
  1855                           ;LEDarray.c: 56:     LATGbits.LATG1 = led_arr[1];
  1856   0019F4  B00C               	btfsc	(LEDarray_disp_bin@led_arr+2)^0,0,c
  1857   0019F6  D002               	bra	u2725
  1858   0019F8  927F               	bcf	127,1,c	;volatile
  1859   0019FA  D001               	bra	u2726
  1860   0019FC                     u2725:
  1861   0019FC  827F               	bsf	127,1,c	;volatile
  1862   0019FE                     u2726:
  1863                           
  1864                           ;LEDarray.c: 57:     LATAbits.LATA2 = led_arr[2];
  1865   0019FE  B00E               	btfsc	(LEDarray_disp_bin@led_arr+4)^0,0,c
  1866   001A00  D002               	bra	u2735
  1867   001A02  9479               	bcf	121,2,c	;volatile
  1868   001A04  D001               	bra	u2736
  1869   001A06                     u2735:
  1870   001A06  8479               	bsf	121,2,c	;volatile
  1871   001A08                     u2736:
  1872                           
  1873                           ;LEDarray.c: 58:     LATFbits.LATF6 = led_arr[3];
  1874   001A08  B010               	btfsc	(LEDarray_disp_bin@led_arr+6)^0,0,c
  1875   001A0A  D002               	bra	u2745
  1876   001A0C  9C7E               	bcf	126,6,c	;volatile
  1877   001A0E  D001               	bra	u2746
  1878   001A10                     u2745:
  1879   001A10  8C7E               	bsf	126,6,c	;volatile
  1880   001A12                     u2746:
  1881                           
  1882                           ;LEDarray.c: 59:     LATAbits.LATA4 = led_arr[4];
  1883   001A12  B012               	btfsc	(LEDarray_disp_bin@led_arr+8)^0,0,c
  1884   001A14  D002               	bra	u2755
  1885   001A16  9879               	bcf	121,4,c	;volatile
  1886   001A18  D001               	bra	u2756
  1887   001A1A                     u2755:
  1888   001A1A  8879               	bsf	121,4,c	;volatile
  1889   001A1C                     u2756:
  1890                           
  1891                           ;LEDarray.c: 60:     LATAbits.LATA5 = led_arr[5];
  1892   001A1C  B014               	btfsc	(LEDarray_disp_bin@led_arr+10)^0,0,c
  1893   001A1E  D002               	bra	u2765
  1894   001A20  9A79               	bcf	121,5,c	;volatile
  1895   001A22  D001               	bra	u2766
  1896   001A24                     u2765:
  1897   001A24  8A79               	bsf	121,5,c	;volatile
  1898   001A26                     u2766:
  1899                           
  1900                           ;LEDarray.c: 61:     LATFbits.LATF0 = led_arr[6];
  1901   001A26  B016               	btfsc	(LEDarray_disp_bin@led_arr+12)^0,0,c
  1902   001A28  D002               	bra	u2775
  1903   001A2A  907E               	bcf	126,0,c	;volatile
  1904   001A2C  D001               	bra	u2776
  1905   001A2E                     u2775:
  1906   001A2E  807E               	bsf	126,0,c	;volatile
  1907   001A30                     u2776:
  1908                           
  1909                           ;LEDarray.c: 62:     LATBbits.LATB0 = led_arr[7];
  1910   001A30  B018               	btfsc	(LEDarray_disp_bin@led_arr+14)^0,0,c
  1911   001A32  D002               	bra	u2785
  1912   001A34  907A               	bcf	122,0,c	;volatile
  1913   001A36  D001               	bra	u2786
  1914   001A38                     u2785:
  1915   001A38  807A               	bsf	122,0,c	;volatile
  1916   001A3A                     u2786:
  1917                           
  1918                           ;LEDarray.c: 63:     LATBbits.LATB1 = led_arr[8];
  1919   001A3A  B01A               	btfsc	(LEDarray_disp_bin@led_arr+16)^0,0,c
  1920   001A3C  D002               	bra	u2795
  1921   001A3E  927A               	bcf	122,1,c	;volatile
  1922   001A40  D001               	bra	u2796
  1923   001A42                     u2795:
  1924   001A42  827A               	bsf	122,1,c	;volatile
  1925   001A44                     u2796:
  1926   001A44  0012               	return		;funcret
  1927   001A46                     __end_of_LEDarray_disp_bin:
  1928                           	callstack 0
  1929                           
  1930 ;; *************** function _daylightsavings *****************
  1931 ;; Defined at:
  1932 ;;		line 118 in file "Functions.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;		None
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;		None
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  1    wreg      void 
  1939 ;; Registers used:
  1940 ;;		wreg, status,2, status,0
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1950 ;;Total ram usage:        0 bytes
  1951 ;; Hardware stack levels used: 1
  1952 ;; Hardware stack levels required when called: 2
  1953 ;; This function calls:
  1954 ;;		Nothing
  1955 ;; This function is called by:
  1956 ;;		_main
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           	psect	text9
  1961   001FCC                     __ptext9:
  1962                           	callstack 0
  1963   001FCC                     _daylightsavings:
  1964                           	callstack 28
  1965   001FCC                     
  1966                           ;Functions.c: 120:     if (month_num ==3 && day_of_week==7 && 25<=day_of_month<=31)
  1967   001FCC  0E03               	movlw	3
  1968   001FCE  0100               	movlb	0	; () banked
  1969   001FD0  19A1               	xorwf	_month_num& (0+255),w,b
  1970   001FD2  11A2               	iorwf	(_month_num+1)& (0+255),w,b
  1971   001FD4  A4D8               	btfss	status,2,c
  1972   001FD6  EFEF  F00F         	goto	u3031
  1973   001FDA  EFF1  F00F         	goto	u3030
  1974   001FDE                     u3031:
  1975   001FDE  EFFD  F00F         	goto	l3673
  1976   001FE2                     u3030:
  1977   001FE2                     
  1978                           ; BSR set to: 0
  1979   001FE2  0E07               	movlw	7
  1980   001FE4  199F               	xorwf	_day_of_week& (0+255),w,b
  1981   001FE6  11A0               	iorwf	(_day_of_week+1)& (0+255),w,b
  1982   001FE8  A4D8               	btfss	status,2,c
  1983   001FEA  EFF9  F00F         	goto	u3041
  1984   001FEE  EFFB  F00F         	goto	u3040
  1985   001FF2                     u3041:
  1986   001FF2  EFFD  F00F         	goto	l3673
  1987   001FF6                     u3040:
  1988   001FF6                     
  1989                           ; BSR set to: 0
  1990                           ;Functions.c: 121:     {;Functions.c: 122:         hour++;
  1991   001FF6  4A51               	infsnz	_hour^0,f,c
  1992   001FF8  2A52               	incf	(_hour+1)^0,f,c
  1993   001FFA                     l3673:
  1994                           
  1995                           ; BSR set to: 0
  1996                           ;Functions.c: 124:     if (month_num ==10 && day_of_week==7 && 25<=day_of_month<=31)
  1997   001FFA  0E0A               	movlw	10
  1998   001FFC  19A1               	xorwf	_month_num& (0+255),w,b
  1999   001FFE  11A2               	iorwf	(_month_num+1)& (0+255),w,b
  2000   002000  A4D8               	btfss	status,2,c
  2001   002002  EF05  F010         	goto	u3051
  2002   002006  EF07  F010         	goto	u3050
  2003   00200A                     u3051:
  2004   00200A  EF14  F010         	goto	l394
  2005   00200E                     u3050:
  2006   00200E                     
  2007                           ; BSR set to: 0
  2008   00200E  0E07               	movlw	7
  2009   002010  199F               	xorwf	_day_of_week& (0+255),w,b
  2010   002012  11A0               	iorwf	(_day_of_week+1)& (0+255),w,b
  2011   002014  A4D8               	btfss	status,2,c
  2012   002016  EF0F  F010         	goto	u3061
  2013   00201A  EF11  F010         	goto	u3060
  2014   00201E                     u3061:
  2015   00201E  EF14  F010         	goto	l394
  2016   002022                     u3060:
  2017   002022                     
  2018                           ; BSR set to: 0
  2019                           ;Functions.c: 125:     {;Functions.c: 126:         hour--;
  2020   002022  0651               	decf	_hour^0,f,c
  2021   002024  A0D8               	btfss	status,0,c
  2022   002026  0652               	decf	(_hour+1)^0,f,c
  2023   002028                     l394:
  2024                           
  2025                           ; BSR set to: 0
  2026   002028  0012               	return		;funcret
  2027   00202A                     __end_of_daylightsavings:
  2028                           	callstack 0
  2029                           
  2030 ;; *************** function _day1_init *****************
  2031 ;; Defined at:
  2032 ;;		line 67 in file "Functions.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;		None
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;		None
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg, status,2
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2050 ;;Total ram usage:        0 bytes
  2051 ;; Hardware stack levels used: 1
  2052 ;; Hardware stack levels required when called: 2
  2053 ;; This function calls:
  2054 ;;		Nothing
  2055 ;; This function is called by:
  2056 ;;		_main
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text10
  2061   0021A6                     __ptext10:
  2062                           	callstack 0
  2063   0021A6                     _day1_init:
  2064                           	callstack 28
  2065   0021A6                     
  2066                           ;Functions.c: 69:     seconds = 0;
  2067   0021A6  0E00               	movlw	0
  2068   0021A8  6E54               	movwf	(_seconds+1)^0,c
  2069   0021AA  0E00               	movlw	0
  2070   0021AC  6E53               	movwf	_seconds^0,c
  2071                           
  2072                           ;Functions.c: 70:     hour = 0;
  2073   0021AE  0E00               	movlw	0
  2074   0021B0  6E52               	movwf	(_hour+1)^0,c
  2075   0021B2  0E00               	movlw	0
  2076   0021B4  6E51               	movwf	_hour^0,c
  2077                           
  2078                           ;Functions.c: 71:     day_of_year = 1;
  2079   0021B6  0E00               	movlw	0
  2080   0021B8  0101               	movlb	1	; () banked
  2081   0021BA  6F9F               	movwf	(_day_of_year+1)& (0+255),b
  2082   0021BC  0E01               	movlw	1
  2083   0021BE  6F9E               	movwf	_day_of_year& (0+255),b
  2084                           
  2085                           ;Functions.c: 72:     day_of_month = 1;
  2086   0021C0  0E00               	movlw	0
  2087   0021C2  6F9D               	movwf	(_day_of_month+1)& (0+255),b
  2088   0021C4  0E01               	movlw	1
  2089   0021C6  6F9C               	movwf	_day_of_month& (0+255),b
  2090                           
  2091                           ;Functions.c: 73:     day_of_week = 6;
  2092   0021C8  0E00               	movlw	0
  2093   0021CA  0100               	movlb	0	; () banked
  2094   0021CC  6FA0               	movwf	(_day_of_week+1)& (0+255),b
  2095   0021CE  0E06               	movlw	6
  2096   0021D0  6F9F               	movwf	_day_of_week& (0+255),b
  2097                           
  2098                           ;Functions.c: 74:     year = 2022;
  2099   0021D2  0E07               	movlw	7
  2100   0021D4  6F9E               	movwf	(_year+1)& (0+255),b
  2101   0021D6  0EE6               	movlw	230
  2102   0021D8  6F9D               	movwf	_year& (0+255),b
  2103                           
  2104                           ;Functions.c: 75:     month_num = 1;
  2105   0021DA  0E00               	movlw	0
  2106   0021DC  6FA2               	movwf	(_month_num+1)& (0+255),b
  2107   0021DE  0E01               	movlw	1
  2108   0021E0  6FA1               	movwf	_month_num& (0+255),b
  2109   0021E2                     
  2110                           ; BSR set to: 0
  2111                           ;Functions.c: 76:     LATHbits.LATH3 = 1;
  2112   0021E2  8680               	bsf	128,3,c	;volatile
  2113   0021E4                     
  2114                           ; BSR set to: 0
  2115   0021E4  0012               	return		;funcret
  2116   0021E6                     __end_of_day1_init:
  2117                           	callstack 0
  2118                           
  2119 ;; *************** function _date2String *****************
  2120 ;; Defined at:
  2121 ;;		line 145 in file "LCD.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;  buf             2   41[BANK0 ] PTR unsigned char 
  2124 ;;		 -> main@strdate(100), 
  2125 ;;  d               2   43[BANK0 ] unsigned int 
  2126 ;;  m               2   45[BANK0 ] unsigned int 
  2127 ;;  y               2   47[BANK0 ] unsigned int 
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2139 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2141 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2142 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2143 ;;Total ram usage:       10 bytes
  2144 ;; Hardware stack levels used: 1
  2145 ;; Hardware stack levels required when called: 10
  2146 ;; This function calls:
  2147 ;;		_LCD_sendbyte
  2148 ;;		_LCD_sendstring
  2149 ;;		_sprintf
  2150 ;; This function is called by:
  2151 ;;		_main
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           	psect	text11
  2156   001DA8                     __ptext11:
  2157                           	callstack 0
  2158   001DA8                     _date2String:
  2159                           	callstack 20
  2160   001DA8                     
  2161                           ;LCD.c: 145: void date2String(char *buf, unsigned int d, unsigned int m,unsigned int y);
      +                          LCD.c: 146: {;LCD.c: 147:     sprintf(buf,"%d/%02d/%03d",d,m,y);
  2162   001DA8  C089  F072         	movff	date2String@buf,sprintf@s
  2163   001DAC  C08A  F073         	movff	date2String@buf+1,sprintf@s+1
  2164   001DB0  0E7D               	movlw	low STR_2
  2165   001DB2  0100               	movlb	0	; () banked
  2166   001DB4  6F74               	movwf	sprintf@fmt& (0+255),b
  2167   001DB6  0E0E               	movlw	high STR_2
  2168   001DB8  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  2169   001DBA  C08B  F076         	movff	date2String@d,?_sprintf+4
  2170   001DBE  C08C  F077         	movff	date2String@d+1,?_sprintf+5
  2171   001DC2  C08D  F078         	movff	date2String@m,?_sprintf+6
  2172   001DC6  C08E  F079         	movff	date2String@m+1,?_sprintf+7
  2173   001DCA  C08F  F07A         	movff	date2String@y,?_sprintf+8
  2174   001DCE  C090  F07B         	movff	date2String@y+1,?_sprintf+9
  2175   001DD2  EC3F  F010         	call	_sprintf	;wreg free
  2176   001DD6                     
  2177                           ;LCD.c: 148:     LCD_sendstring(buf);
  2178   001DD6  C089  F009         	movff	date2String@buf,LCD_sendstring@string
  2179   001DDA  C08A  F00A         	movff	date2String@buf+1,LCD_sendstring@string+1
  2180   001DDE  EC4E  F011         	call	_LCD_sendstring	;wreg free
  2181   001DE2                     
  2182                           ;LCD.c: 149:     _delay((unsigned long)((950)*(64000000/4000.0)));
  2183   001DE2  0E4E               	movlw	78
  2184   001DE4  6E50               	movwf	(??_date2String+1)^0,c
  2185   001DE6  0E1D               	movlw	29
  2186   001DE8  6E4F               	movwf	??_date2String^0,c
  2187   001DEA  0E0C               	movlw	12
  2188   001DEC                     u3137:
  2189   001DEC  2EE8               	decfsz	wreg,f,c
  2190   001DEE  D7FE               	bra	u3137
  2191   001DF0  2E4F               	decfsz	??_date2String^0,f,c
  2192   001DF2  D7FC               	bra	u3137
  2193   001DF4  2E50               	decfsz	(??_date2String+1)^0,f,c
  2194   001DF6  D7FA               	bra	u3137
  2195   001DF8  D000               	nop2	
  2196   001DFA                     
  2197                           ;LCD.c: 151:     LCD_sendbyte(0b00000001,0);
  2198   001DFA  0E00               	movlw	0
  2199   001DFC  6E07               	movwf	LCD_sendbyte@type^0,c
  2200   001DFE  0E01               	movlw	1
  2201   001E00  EC82  F011         	call	_LCD_sendbyte
  2202   001E04                     
  2203                           ;LCD.c: 152:     _delay((unsigned long)((500)*(64000000/4000.0)));
  2204   001E04  0E29               	movlw	41
  2205   001E06  6E50               	movwf	(??_date2String+1)^0,c
  2206   001E08  0E96               	movlw	150
  2207   001E0A  6E4F               	movwf	??_date2String^0,c
  2208   001E0C  0E7F               	movlw	127
  2209   001E0E                     u3147:
  2210   001E0E  2EE8               	decfsz	wreg,f,c
  2211   001E10  D7FE               	bra	u3147
  2212   001E12  2E4F               	decfsz	??_date2String^0,f,c
  2213   001E14  D7FC               	bra	u3147
  2214   001E16  2E50               	decfsz	(??_date2String+1)^0,f,c
  2215   001E18  D7FA               	bra	u3147
  2216   001E1A  F000               	nop	
  2217   001E1C  0012               	return		;funcret
  2218   001E1E                     __end_of_date2String:
  2219                           	callstack 0
  2220                           
  2221 ;; *************** function _sprintf *****************
  2222 ;; Defined at:
  2223 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;  s               2   18[BANK0 ] PTR unsigned char 
  2226 ;;		 -> main@strdate(100), 
  2227 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  2228 ;;		 -> STR_2(13), STR_1(13), 
  2229 ;; Auto vars:     Size  Location     Type
  2230 ;;  f              11   30[BANK0 ] struct _IO_FILE
  2231 ;;  ap              2   28[BANK0 ] PTR void [1]
  2232 ;;		 -> ?_sprintf(2), 
  2233 ;;  ret             2    0        int 
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  2   18[BANK0 ] int 
  2236 ;; Registers used:
  2237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2243 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2244 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2246 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2247 ;;Total ram usage:       23 bytes
  2248 ;; Hardware stack levels used: 1
  2249 ;; Hardware stack levels required when called: 9
  2250 ;; This function calls:
  2251 ;;		_vfprintf
  2252 ;; This function is called by:
  2253 ;;		_date2String
  2254 ;;		_time2String
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           	psect	text12
  2259   00207E                     __ptext12:
  2260                           	callstack 0
  2261   00207E                     _sprintf:
  2262                           	callstack 20
  2263   00207E  0E76               	movlw	low (?_sprintf+4)
  2264   002080  0100               	movlb	0	; () banked
  2265   002082  6F7C               	movwf	sprintf@ap& (0+255),b
  2266   002084  0E00               	movlw	high (?_sprintf+4)
  2267   002086  6F7D               	movwf	(sprintf@ap+1)& (0+255),b
  2268   002088  C072  F07E         	movff	sprintf@s,sprintf@f
  2269   00208C  C073  F07F         	movff	sprintf@s+1,sprintf@f+1
  2270   002090                     
  2271                           ; BSR set to: 0
  2272   002090  0E00               	movlw	0
  2273   002092  6F82               	movwf	(sprintf@f+4)& (0+255),b
  2274   002094  0E00               	movlw	0
  2275   002096  6F81               	movwf	(sprintf@f+3)& (0+255),b
  2276   002098                     
  2277                           ; BSR set to: 0
  2278   002098  0E00               	movlw	0
  2279   00209A  6F88               	movwf	(sprintf@f+10)& (0+255),b
  2280   00209C  0E00               	movlw	0
  2281   00209E  6F87               	movwf	(sprintf@f+9)& (0+255),b
  2282   0020A0                     
  2283                           ; BSR set to: 0
  2284   0020A0  0E7E               	movlw	low sprintf@f
  2285   0020A2  6F6C               	movwf	vfprintf@fp& (0+255),b
  2286   0020A4  0E00               	movlw	high sprintf@f
  2287   0020A6  6F6D               	movwf	(vfprintf@fp+1)& (0+255),b
  2288   0020A8  C074  F06E         	movff	sprintf@fmt,vfprintf@fmt
  2289   0020AC  C075  F06F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2290   0020B0  0E7C               	movlw	low sprintf@ap
  2291   0020B2  6F70               	movwf	vfprintf@ap& (0+255),b
  2292   0020B4  0E00               	movlw	high sprintf@ap
  2293   0020B6  6F71               	movwf	(vfprintf@ap+1)& (0+255),b
  2294   0020B8  EC15  F010         	call	_vfprintf	;wreg free
  2295   0020BC  0100               	movlb	0	; () banked
  2296   0020BE  5181               	movf	(sprintf@f+3)& (0+255),w,b
  2297   0020C0  2572               	addwf	sprintf@s& (0+255),w,b
  2298   0020C2  6ED9               	movwf	fsr2l,c
  2299   0020C4  5182               	movf	(sprintf@f+4)& (0+255),w,b
  2300   0020C6  2173               	addwfc	(sprintf@s+1)& (0+255),w,b
  2301   0020C8  6EDA               	movwf	fsr2h,c
  2302   0020CA  0E00               	movlw	0
  2303   0020CC  6EDF               	movwf	indf2,c
  2304   0020CE                     
  2305                           ; BSR set to: 0
  2306   0020CE  0012               	return		;funcret
  2307   0020D0                     __end_of_sprintf:
  2308                           	callstack 0
  2309                           
  2310 ;; *************** function _vfprintf *****************
  2311 ;; Defined at:
  2312 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  2315 ;;		 -> sprintf@f(11), 
  2316 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  2317 ;;		 -> STR_2(13), STR_1(13), 
  2318 ;;  ap              2   16[BANK0 ] PTR PTR void 
  2319 ;;		 -> sprintf@ap(2), 
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;  cfmt            2   76[COMRAM] PTR unsigned char 
  2322 ;;		 -> STR_2(13), STR_1(13), 
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  2   12[BANK0 ] int 
  2325 ;; Registers used:
  2326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2332 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2333 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2335 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2336 ;;Total ram usage:        8 bytes
  2337 ;; Hardware stack levels used: 1
  2338 ;; Hardware stack levels required when called: 8
  2339 ;; This function calls:
  2340 ;;		_vfpfcnvrt
  2341 ;; This function is called by:
  2342 ;;		_sprintf
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           	psect	text13
  2347   00202A                     __ptext13:
  2348                           	callstack 0
  2349   00202A                     _vfprintf:
  2350                           	callstack 20
  2351   00202A                     
  2352                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2353   00202A  C06E  F04D         	movff	vfprintf@fmt,vfprintf@cfmt
  2354   00202E  C06F  F04E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2355                           
  2356                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2357   002032  EF29  F010         	goto	l3411
  2358   002036                     l3409:
  2359                           
  2360                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2361   002036  C06C  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
  2362   00203A  C06D  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2363   00203E  0E4D               	movlw	low vfprintf@cfmt
  2364   002040  6E46               	movwf	vfpfcnvrt@fmt^0,c
  2365   002042  0E00               	movlw	high vfprintf@cfmt
  2366   002044  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2367   002046  C070  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
  2368   00204A  C071  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2369   00204E  EC4C  F007         	call	_vfpfcnvrt	;wreg free
  2370   002052                     l3411:
  2371                           
  2372                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2373   002052  C04D  FFF6         	movff	vfprintf@cfmt,tblptrl
  2374   002056  C04E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2375   00205A                     	if	0	;tblptru may be non-zero
  2376   00205A                     	endif
  2377   00205A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2378   00205A  0E00               	movlw	low (__mediumconst shr (0+16))
  2379   00205C  6EF8               	movwf	tblptru,c
  2380   00205E                     	endif
  2381   00205E  0008               	tblrd		*
  2382   002060  50F5               	movf	tablat,w,c
  2383   002062  0900               	iorlw	0
  2384   002064  A4D8               	btfss	status,2,c
  2385   002066  EF37  F010         	goto	u2681
  2386   00206A  EF39  F010         	goto	u2680
  2387   00206E                     u2681:
  2388   00206E  EF1B  F010         	goto	l3409
  2389   002072                     u2680:
  2390   002072                     
  2391                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2392   002072  0E00               	movlw	0
  2393   002074  0100               	movlb	0	; () banked
  2394   002076  6F6D               	movwf	(?_vfprintf+1)& (0+255),b
  2395   002078  0E00               	movlw	0
  2396   00207A  6F6C               	movwf	?_vfprintf& (0+255),b
  2397   00207C                     
  2398                           ; BSR set to: 0
  2399   00207C  0012               	return		;funcret
  2400   00207E                     __end_of_vfprintf:
  2401                           	callstack 0
  2402                           
  2403 ;; *************** function _vfpfcnvrt *****************
  2404 ;; Defined at:
  2405 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  2408 ;;		 -> sprintf@f(11), 
  2409 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
  2410 ;;		 -> vfprintf@cfmt(2), 
  2411 ;;  ap              2   71[COMRAM] PTR PTR void 
  2412 ;;		 -> sprintf@ap(2), 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  convarg         8    0[BANK0 ] struct .
  2415 ;;  cp              2   10[BANK0 ] PTR unsigned char 
  2416 ;;		 -> STR_2(13), STR_1(13), 
  2417 ;;  done            2    8[BANK0 ] int 
  2418 ;;  i               2    0        int 
  2419 ;;  c               1    0        unsigned char 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  1    wreg      void 
  2422 ;; Registers used:
  2423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2429 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2430 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2431 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2432 ;;      Totals:         9      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2433 ;;Total ram usage:       21 bytes
  2434 ;; Hardware stack levels used: 1
  2435 ;; Hardware stack levels required when called: 7
  2436 ;; This function calls:
  2437 ;;		_atoi
  2438 ;;		_dtoa
  2439 ;;		_fputc
  2440 ;;		_isdigit
  2441 ;; This function is called by:
  2442 ;;		_vfprintf
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           	psect	text14
  2447   000E98                     __ptext14:
  2448                           	callstack 0
  2449   000E98                     _vfpfcnvrt:
  2450                           	callstack 20
  2451   000E98                     
  2452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2453   000E98  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2454   000E9C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2455   000EA0  CFDE FFF6          	movff	postinc2,tblptrl
  2456   000EA4  CFDD FFF7          	movff	postdec2,tblptrh
  2457   000EA8                     	if	0	;tblptru may be non-zero
  2458   000EA8                     	endif
  2459   000EA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2460   000EA8  0E00               	movlw	low (__mediumconst shr (0+16))
  2461   000EAA  6EF8               	movwf	tblptru,c
  2462   000EAC                     	endif
  2463   000EAC  0008               	tblrd		*
  2464   000EAE  50F5               	movf	tablat,w,c
  2465   000EB0  0A25               	xorlw	37
  2466   000EB2  A4D8               	btfss	status,2,c
  2467   000EB4  EF5E  F007         	goto	u2601
  2468   000EB8  EF60  F007         	goto	u2600
  2469   000EBC                     u2601:
  2470   000EBC  EF92  F008         	goto	l3383
  2471   000EC0                     u2600:
  2472   000EC0                     
  2473                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2474   000EC0  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2475   000EC4  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2476   000EC8  2ADE               	incf	postinc2,f,c
  2477   000ECA  0E00               	movlw	0
  2478   000ECC  22DD               	addwfc	postdec2,f,c
  2479   000ECE                     
  2480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2481   000ECE  0E00               	movlw	0
  2482   000ED0  0100               	movlb	0	; () banked
  2483   000ED2  6F98               	movwf	(_width+1)& (0+255),b
  2484   000ED4  0E00               	movlw	0
  2485   000ED6  6F97               	movwf	_width& (0+255),b
  2486   000ED8  C097  F055         	movff	_width,_flags
  2487   000EDC                     
  2488                           ; BSR set to: 0
  2489                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2490   000EDC  6999               	setf	_prec& (0+255),b
  2491   000EDE  699A               	setf	(_prec+1)& (0+255),b
  2492   000EE0                     
  2493                           ; BSR set to: 0
  2494                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  2495   000EE0  0E00               	movlw	0
  2496   000EE2  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2497   000EE4  0E00               	movlw	0
  2498   000EE6  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  2499                           
  2500                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  2501   000EE8  EFA2  F007         	goto	l3349
  2502   000EEC                     l3339:
  2503                           
  2504                           ; BSR set to: 0
  2505                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  2506   000EEC  8255               	bsf	_flags^0,1,c
  2507   000EEE                     
  2508                           ; BSR set to: 0
  2509                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  2510   000EEE  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2511   000EF2  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2512   000EF6  2ADE               	incf	postinc2,f,c
  2513   000EF8  0E00               	movlw	0
  2514   000EFA  22DD               	addwfc	postdec2,f,c
  2515                           
  2516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  2517   000EFC  EFA2  F007         	goto	l3349
  2518   000F00                     l3343:
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  2522   000F00  0E00               	movlw	0
  2523   000F02  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2524   000F04  0E01               	movlw	1
  2525   000F06  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  2526                           
  2527                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  2528   000F08  EFA2  F007         	goto	l3349
  2529   000F0C                     l3347:
  2530                           
  2531                           ; BSR set to: 0
  2532   000F0C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2533   000F10  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2534   000F14  CFDE FFF6          	movff	postinc2,tblptrl
  2535   000F18  CFDD FFF7          	movff	postdec2,tblptrh
  2536   000F1C                     	if	0	;tblptru may be non-zero
  2537   000F1C                     	endif
  2538   000F1C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2539   000F1C  0E00               	movlw	low (__mediumconst shr (0+16))
  2540   000F1E  6EF8               	movwf	tblptru,c
  2541   000F20                     	endif
  2542   000F20  0008               	tblrd		*
  2543   000F22  50F5               	movf	tablat,w,c
  2544   000F24  6E4A               	movwf	??_vfpfcnvrt^0,c
  2545   000F26  6A4B               	clrf	(??_vfpfcnvrt+1)^0,c
  2546                           
  2547                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2548                           ; Switch size 1, requested type "simple"
  2549                           ; Number of cases is 1, Range of values is 0 to 0
  2550                           ; switch strategies available:
  2551                           ; Name         Instructions Cycles
  2552                           ; simple_byte            4     3 (average)
  2553                           ;	Chosen strategy is simple_byte
  2554   000F28  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  2555   000F2A  0A00               	xorlw	0	; case 0
  2556   000F2C  B4D8               	btfsc	status,2,c
  2557   000F2E  EF9B  F007         	goto	l3843
  2558   000F32  EF80  F007         	goto	l3343
  2559   000F36                     l3843:
  2560                           
  2561                           ; BSR set to: 0
  2562                           ; Switch size 1, requested type "simple"
  2563                           ; Number of cases is 1, Range of values is 48 to 48
  2564                           ; switch strategies available:
  2565                           ; Name         Instructions Cycles
  2566                           ; simple_byte            4     3 (average)
  2567                           ;	Chosen strategy is simple_byte
  2568   000F36  504A               	movf	??_vfpfcnvrt^0,w,c
  2569   000F38  0A30               	xorlw	48	; case 48
  2570   000F3A  B4D8               	btfsc	status,2,c
  2571   000F3C  EF76  F007         	goto	l3339
  2572   000F40  EF80  F007         	goto	l3343
  2573   000F44                     l3349:
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  2577   000F44  5168               	movf	vfpfcnvrt@done& (0+255),w,b
  2578   000F46  1169               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2579   000F48  B4D8               	btfsc	status,2,c
  2580   000F4A  EFA9  F007         	goto	u2611
  2581   000F4E  EFAB  F007         	goto	u2610
  2582   000F52                     u2611:
  2583   000F52  EF86  F007         	goto	l3347
  2584   000F56                     u2610:
  2585   000F56                     
  2586                           ; BSR set to: 0
  2587                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  2588   000F56  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2589   000F5A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2590   000F5E  CFDE FFF6          	movff	postinc2,tblptrl
  2591   000F62  CFDD FFF7          	movff	postdec2,tblptrh
  2592   000F66                     	if	0	;tblptru may be non-zero
  2593   000F66                     	endif
  2594   000F66                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2595   000F66  0E00               	movlw	low (__mediumconst shr (0+16))
  2596   000F68  6EF8               	movwf	tblptru,c
  2597   000F6A                     	endif
  2598   000F6A  0008               	tblrd		*
  2599   000F6C  50F5               	movf	tablat,w,c
  2600   000F6E  0A2A               	xorlw	42
  2601   000F70  A4D8               	btfss	status,2,c
  2602   000F72  EFBD  F007         	goto	u2621
  2603   000F76  EFBF  F007         	goto	u2620
  2604   000F7A                     u2621:
  2605   000F7A  EFE8  F007         	goto	l3359
  2606   000F7E                     u2620:
  2607   000F7E                     
  2608                           ; BSR set to: 0
  2609                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  2610   000F7E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2611   000F82  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2612   000F86  2ADE               	incf	postinc2,f,c
  2613   000F88  0E00               	movlw	0
  2614   000F8A  22DD               	addwfc	postdec2,f,c
  2615                           
  2616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2617   000F8C  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2618   000F90  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2619   000F94  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  2620   000F98  0E02               	movlw	2
  2621   000F9A  26DE               	addwf	postinc2,f,c
  2622   000F9C  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  2623   000FA0  0E00               	movlw	0
  2624   000FA2  22DD               	addwfc	postdec2,f,c
  2625   000FA4  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2626   000FA8  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2627   000FAC  CFDE F097          	movff	postinc2,_width
  2628   000FB0  CFDD F098          	movff	postdec2,_width+1
  2629   000FB4                     
  2630                           ; BSR set to: 0
  2631                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  2632   000FB4  BF98               	btfsc	(_width+1)& (0+255),7,b
  2633   000FB6  EFE1  F007         	goto	u2630
  2634   000FBA  EFDF  F007         	goto	u2631
  2635   000FBE                     u2631:
  2636   000FBE  EF1D  F008         	goto	l3367
  2637   000FC2                     u2630:
  2638   000FC2                     
  2639                           ; BSR set to: 0
  2640                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  2641   000FC2  8055               	bsf	_flags^0,0,c
  2642                           
  2643                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  2644   000FC4  6D97               	negf	_width& (0+255),b
  2645   000FC6  1F98               	comf	(_width+1)& (0+255),f,b
  2646   000FC8  B0D8               	btfsc	status,0,c
  2647   000FCA  2B98               	incf	(_width+1)& (0+255),f,b
  2648   000FCC  EF1D  F008         	goto	l3367
  2649   000FD0                     l3359:
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  2653   000FD0  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2654   000FD4  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2655   000FD8  CFDE F00C          	movff	postinc2,atoi@s
  2656   000FDC  CFDD F00D          	movff	postdec2,atoi@s+1
  2657   000FE0  EC7A  F00B         	call	_atoi	;wreg free
  2658   000FE4  C00C  F097         	movff	?_atoi,_width
  2659   000FE8  C00D  F098         	movff	?_atoi+1,_width+1
  2660                           
  2661                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2662   000FEC  EFFF  F007         	goto	l3365
  2663   000FF0                     l3361:
  2664                           
  2665                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  2666   000FF0  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2667   000FF4  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2668   000FF8  2ADE               	incf	postinc2,f,c
  2669   000FFA  0E00               	movlw	0
  2670   000FFC  22DD               	addwfc	postdec2,f,c
  2671   000FFE                     l3365:
  2672   000FFE  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2673   001002  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2674   001006  CFDE FFF6          	movff	postinc2,tblptrl
  2675   00100A  CFDD FFF7          	movff	postdec2,tblptrh
  2676   00100E                     	if	0	;tblptru may be non-zero
  2677   00100E                     	endif
  2678   00100E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2679   00100E  0E00               	movlw	low (__mediumconst shr (0+16))
  2680   001010  6EF8               	movwf	tblptru,c
  2681   001012                     	endif
  2682   001012  0008               	tblrd		*
  2683   001014  CFF5 F04A          	movff	tablat,??_vfpfcnvrt
  2684   001018  0ED0               	movlw	208
  2685   00101A  244A               	addwf	??_vfpfcnvrt^0,w,c
  2686   00101C  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
  2687   00101E  6A4C               	clrf	(??_vfpfcnvrt+2)^0,c
  2688   001020  0EFF               	movlw	255
  2689   001022  224C               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  2690   001024  504C               	movf	(??_vfpfcnvrt+2)^0,w,c
  2691   001026  E109               	bnz	u2640
  2692   001028  0E0A               	movlw	10
  2693   00102A  5C4B               	subwf	(??_vfpfcnvrt+1)^0,w,c
  2694   00102C  A0D8               	btfss	status,0,c
  2695   00102E  EF1B  F008         	goto	u2641
  2696   001032  EF1D  F008         	goto	u2640
  2697   001036                     u2641:
  2698   001036  EFF8  F007         	goto	l3361
  2699   00103A                     u2640:
  2700   00103A                     l3367:
  2701                           
  2702                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2703   00103A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2704   00103E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2705   001042  CFDE F06A          	movff	postinc2,vfpfcnvrt@cp
  2706   001046  CFDD F06B          	movff	postdec2,vfpfcnvrt@cp+1
  2707   00104A                     
  2708                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2709   00104A  C06A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2710   00104E  C06B  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2711   001052                     	if	0	;tblptru may be non-zero
  2712   001052                     	endif
  2713   001052                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2714   001052  0E00               	movlw	low (__mediumconst shr (0+16))
  2715   001054  6EF8               	movwf	tblptru,c
  2716   001056                     	endif
  2717   001056  0008               	tblrd		*
  2718   001058  50F5               	movf	tablat,w,c
  2719   00105A  0A64               	xorlw	100
  2720   00105C  B4D8               	btfsc	status,2,c
  2721   00105E  EF33  F008         	goto	u2651
  2722   001062  EF35  F008         	goto	u2650
  2723   001066                     u2651:
  2724   001066  EF45  F008         	goto	l3373
  2725   00106A                     u2650:
  2726   00106A  C06A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2727   00106E  C06B  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2728   001072                     	if	0	;tblptru may be non-zero
  2729   001072                     	endif
  2730   001072                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2731   001072  0E00               	movlw	low (__mediumconst shr (0+16))
  2732   001074  6EF8               	movwf	tblptru,c
  2733   001076                     	endif
  2734   001076  0008               	tblrd		*
  2735   001078  50F5               	movf	tablat,w,c
  2736   00107A  0A69               	xorlw	105
  2737   00107C  A4D8               	btfss	status,2,c
  2738   00107E  EF43  F008         	goto	u2661
  2739   001082  EF45  F008         	goto	u2660
  2740   001086                     u2661:
  2741   001086  EF89  F008         	goto	l3379
  2742   00108A                     u2660:
  2743   00108A                     l3373:
  2744                           
  2745                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2746   00108A  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2747   00108E  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2748   001092  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  2749   001096  0E02               	movlw	2
  2750   001098  26DE               	addwf	postinc2,f,c
  2751   00109A  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  2752   00109E  0E00               	movlw	0
  2753   0010A0  22DD               	addwfc	postdec2,f,c
  2754   0010A2  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2755   0010A6  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2756   0010AA  CFDE F060          	movff	postinc2,vfpfcnvrt@convarg
  2757   0010AE  CFDD F061          	movff	postdec2,vfpfcnvrt@convarg+1
  2758   0010B2  0100               	movlb	0	; () banked
  2759   0010B4  0E00               	movlw	0
  2760   0010B6  BF61               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2761   0010B8  0EFF               	movlw	-1
  2762   0010BA  6F62               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2763   0010BC  6F63               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2764   0010BE  6F64               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2765   0010C0  6F65               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2766   0010C2  6F66               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2767   0010C4  6F67               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2768                           
  2769                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2770   0010C6  0E01               	movlw	1
  2771   0010C8  256A               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2772   0010CA  6E4A               	movwf	??_vfpfcnvrt^0,c
  2773   0010CC  0E00               	movlw	0
  2774   0010CE  216B               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2775   0010D0  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
  2776   0010D2  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2777   0010D6  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2778   0010DA  C04A  FFDE         	movff	??_vfpfcnvrt,postinc2
  2779   0010DE  C04B  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2780   0010E2                     
  2781                           ; BSR set to: 0
  2782                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2783   0010E2  C044  F021         	movff	vfpfcnvrt@fp,dtoa@fp
  2784   0010E6  C045  F022         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2785   0010EA  C060  F023         	movff	vfpfcnvrt@convarg,dtoa@d
  2786   0010EE  C061  F024         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2787   0010F2  C062  F025         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2788   0010F6  C063  F026         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2789   0010FA  C064  F027         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2790   0010FE  C065  F028         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2791   001102  C066  F029         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2792   001106  C067  F02A         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2793   00110A  ECA9  F008         	call	_dtoa	;wreg free
  2794   00110E  EFA8  F008         	goto	l1209
  2795   001112                     l3379:
  2796                           
  2797                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2798   001112  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2799   001116  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2800   00111A  2ADE               	incf	postinc2,f,c
  2801   00111C  0E00               	movlw	0
  2802   00111E  22DD               	addwfc	postdec2,f,c
  2803   001120  EFA8  F008         	goto	l1209
  2804   001124                     l3383:
  2805                           
  2806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2807   001124  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2808   001128  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2809   00112C  CFDE FFF6          	movff	postinc2,tblptrl
  2810   001130  CFDD FFF7          	movff	postdec2,tblptrh
  2811   001134                     	if	0	;tblptru may be non-zero
  2812   001134                     	endif
  2813   001134                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2814   001134  0E00               	movlw	low (__mediumconst shr (0+16))
  2815   001136  6EF8               	movwf	tblptru,c
  2816   001138                     	endif
  2817   001138  0008               	tblrd		*
  2818   00113A  50F5               	movf	tablat,w,c
  2819   00113C  6E06               	movwf	fputc@c^0,c
  2820   00113E  6A07               	clrf	(fputc@c+1)^0,c
  2821   001140  C044  F008         	movff	vfpfcnvrt@fp,fputc@fp
  2822   001144  C045  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2823   001148  EC23  F00D         	call	_fputc	;wreg free
  2824   00114C  EF89  F008         	goto	l3379
  2825   001150                     l1209:
  2826   001150  0012               	return		;funcret
  2827   001152                     __end_of_vfpfcnvrt:
  2828                           	callstack 0
  2829                           
  2830 ;; *************** function _dtoa *****************
  2831 ;; Defined at:
  2832 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  2835 ;;		 -> sprintf@f(11), 
  2836 ;;  d               8   34[COMRAM] long long 
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;  n               8   56[COMRAM] long long 
  2839 ;;  i               2   65[COMRAM] int 
  2840 ;;  w               2   54[COMRAM] int 
  2841 ;;  p               2   52[COMRAM] int 
  2842 ;;  s               1   64[COMRAM] unsigned char 
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  1    wreg      void 
  2845 ;; Registers used:
  2846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2852 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2853 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2854 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2855 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2856 ;;Total ram usage:       35 bytes
  2857 ;; Hardware stack levels used: 1
  2858 ;; Hardware stack levels required when called: 6
  2859 ;; This function calls:
  2860 ;;		___aodiv
  2861 ;;		___aomod
  2862 ;;		_abs
  2863 ;;		_pad
  2864 ;; This function is called by:
  2865 ;;		_vfpfcnvrt
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869                           	psect	text15
  2870   001152                     __ptext15:
  2871                           	callstack 0
  2872   001152                     _dtoa:
  2873                           	callstack 20
  2874   001152                     
  2875                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2876   001152  C023  F039         	movff	dtoa@d,dtoa@n
  2877   001156  C024  F03A         	movff	dtoa@d+1,dtoa@n+1
  2878   00115A  C025  F03B         	movff	dtoa@d+2,dtoa@n+2
  2879   00115E  C026  F03C         	movff	dtoa@d+3,dtoa@n+3
  2880   001162  C027  F03D         	movff	dtoa@d+4,dtoa@n+4
  2881   001166  C028  F03E         	movff	dtoa@d+5,dtoa@n+5
  2882   00116A  C029  F03F         	movff	dtoa@d+6,dtoa@n+6
  2883   00116E  C02A  F040         	movff	dtoa@d+7,dtoa@n+7
  2884   001172                     
  2885                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2886   001172  BE40               	btfsc	(dtoa@n+7)^0,7,c
  2887   001174  EFBE  F008         	goto	u2391
  2888   001178  EFC1  F008         	goto	u2390
  2889   00117C                     u2391:
  2890   00117C  0E01               	movlw	1
  2891   00117E  EFC2  F008         	goto	u2400
  2892   001182                     u2390:
  2893   001182  0E00               	movlw	0
  2894   001184                     u2400:
  2895   001184  6E41               	movwf	dtoa@s^0,c
  2896   001186                     
  2897                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2898   001186  5041               	movf	dtoa@s^0,w,c
  2899   001188  B4D8               	btfsc	status,2,c
  2900   00118A  EFC9  F008         	goto	u2411
  2901   00118E  EFCB  F008         	goto	u2410
  2902   001192                     u2411:
  2903   001192  EFDB  F008         	goto	l3225
  2904   001196                     u2410:
  2905   001196                     
  2906                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2907   001196  1E40               	comf	(dtoa@n+7)^0,f,c
  2908   001198  1E3F               	comf	(dtoa@n+6)^0,f,c
  2909   00119A  1E3E               	comf	(dtoa@n+5)^0,f,c
  2910   00119C  1E3D               	comf	(dtoa@n+4)^0,f,c
  2911   00119E  1E3C               	comf	(dtoa@n+3)^0,f,c
  2912   0011A0  1E3B               	comf	(dtoa@n+2)^0,f,c
  2913   0011A2  1E3A               	comf	(dtoa@n+1)^0,f,c
  2914   0011A4  6C39               	negf	dtoa@n^0,c
  2915   0011A6  0E00               	movlw	0
  2916   0011A8  223A               	addwfc	(dtoa@n+1)^0,f,c
  2917   0011AA  223B               	addwfc	(dtoa@n+2)^0,f,c
  2918   0011AC  223C               	addwfc	(dtoa@n+3)^0,f,c
  2919   0011AE  223D               	addwfc	(dtoa@n+4)^0,f,c
  2920   0011B0  223E               	addwfc	(dtoa@n+5)^0,f,c
  2921   0011B2  223F               	addwfc	(dtoa@n+6)^0,f,c
  2922   0011B4  2240               	addwfc	(dtoa@n+7)^0,f,c
  2923   0011B6                     l3225:
  2924                           
  2925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 458:     if (!(pr
      +                          ec < 0)) {
  2926   0011B6  0100               	movlb	0	; () banked
  2927   0011B8  BF9A               	btfsc	(_prec+1)& (0+255),7,b
  2928   0011BA  EFE1  F008         	goto	u2421
  2929   0011BE  EFE3  F008         	goto	u2420
  2930   0011C2                     u2421:
  2931   0011C2  EFE4  F008         	goto	l3229
  2932   0011C6                     u2420:
  2933   0011C6                     
  2934                           ; BSR set to: 0
  2935                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 459:         flag
      +                          s &= ~(1 << 1);
  2936   0011C6  9255               	bcf	_flags^0,1,c
  2937   0011C8                     l3229:
  2938                           
  2939                           ; BSR set to: 0
  2940                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2941   0011C8  BF9A               	btfsc	(_prec+1)& (0+255),7,b
  2942   0011CA  EFF1  F008         	goto	u2430
  2943   0011CE  519A               	movf	(_prec+1)& (0+255),w,b
  2944   0011D0  E106               	bnz	u2431
  2945   0011D2  0599               	decf	_prec& (0+255),w,b
  2946   0011D4  B0D8               	btfsc	status,0,c
  2947   0011D6  EFEF  F008         	goto	u2431
  2948   0011DA  EFF1  F008         	goto	u2430
  2949   0011DE                     u2431:
  2950   0011DE  EFF7  F008         	goto	l1171
  2951   0011E2                     u2430:
  2952   0011E2                     
  2953                           ; BSR set to: 0
  2954   0011E2  0E00               	movlw	0
  2955   0011E4  6E36               	movwf	(dtoa@p+1)^0,c
  2956   0011E6  0E01               	movlw	1
  2957   0011E8  6E35               	movwf	dtoa@p^0,c
  2958   0011EA  EFFB  F008         	goto	l1173
  2959   0011EE                     l1171:
  2960                           
  2961                           ; BSR set to: 0
  2962   0011EE  C099  F035         	movff	_prec,dtoa@p
  2963   0011F2  C09A  F036         	movff	_prec+1,dtoa@p+1
  2964   0011F6                     l1173:
  2965                           
  2966                           ; BSR set to: 0
  2967                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2968   0011F6  C097  F037         	movff	_width,dtoa@w
  2969   0011FA  C098  F038         	movff	_width+1,dtoa@w+1
  2970   0011FE                     
  2971                           ; BSR set to: 0
  2972                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2973   0011FE  5041               	movf	dtoa@s^0,w,c
  2974   001200  B4D8               	btfsc	status,2,c
  2975   001202  EF05  F009         	goto	u2441
  2976   001206  EF07  F009         	goto	u2440
  2977   00120A                     u2441:
  2978   00120A  EF1E  F009         	goto	l1174
  2979   00120E                     u2440:
  2980   00120E                     
  2981                           ; BSR set to: 0
  2982                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2983   00120E  0637               	decf	dtoa@w^0,f,c
  2984   001210  A0D8               	btfss	status,0,c
  2985   001212  0638               	decf	(dtoa@w+1)^0,f,c
  2986   001214                     
  2987                           ; BSR set to: 0
  2988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2989   001214  5041               	movf	dtoa@s^0,w,c
  2990   001216  A4D8               	btfss	status,2,c
  2991   001218  EF10  F009         	goto	u2451
  2992   00121C  EF12  F009         	goto	u2450
  2993   001220                     u2451:
  2994   001220  EF18  F009         	goto	l3241
  2995   001224                     u2450:
  2996   001224                     
  2997                           ; BSR set to: 0
  2998   001224  0E00               	movlw	0
  2999   001226  6E34               	movwf	(_dtoa$2141+1)^0,c
  3000   001228  0E2B               	movlw	43
  3001   00122A  6E33               	movwf	_dtoa$2141^0,c
  3002   00122C  EF1C  F009         	goto	l3243
  3003   001230                     l3241:
  3004                           
  3005                           ; BSR set to: 0
  3006   001230  0E00               	movlw	0
  3007   001232  6E34               	movwf	(_dtoa$2141+1)^0,c
  3008   001234  0E2D               	movlw	45
  3009   001236  6E33               	movwf	_dtoa$2141^0,c
  3010   001238                     l3243:
  3011                           
  3012                           ; BSR set to: 0
  3013   001238  C033  F041         	movff	_dtoa$2141,dtoa@s
  3014   00123C                     l1174:
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  3018   00123C  0E00               	movlw	0
  3019   00123E  6E43               	movwf	(dtoa@i+1)^0,c
  3020   001240  0E1F               	movlw	31
  3021   001242  6E42               	movwf	dtoa@i^0,c
  3022   001244                     
  3023                           ; BSR set to: 0
  3024                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  3025   001244  0E00               	movlw	0
  3026   001246  0101               	movlb	1	; () banked
  3027   001248  6F83               	movwf	(_dbuf+31)& (0+255),b
  3028                           
  3029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3030   00124A  EFA3  F009         	goto	l3257
  3031   00124E                     l3247:
  3032                           
  3033                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  3034   00124E  0642               	decf	dtoa@i^0,f,c
  3035   001250  A0D8               	btfss	status,0,c
  3036   001252  0643               	decf	(dtoa@i+1)^0,f,c
  3037   001254                     
  3038                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3039   001254  0E64               	movlw	low _dbuf
  3040   001256  2442               	addwf	dtoa@i^0,w,c
  3041   001258  6ED9               	movwf	fsr2l,c
  3042   00125A  0E01               	movlw	high _dbuf
  3043   00125C  2043               	addwfc	(dtoa@i+1)^0,w,c
  3044   00125E  6EDA               	movwf	fsr2h,c
  3045   001260  C039  F006         	movff	dtoa@n,___aomod@dividend
  3046   001264  C03A  F007         	movff	dtoa@n+1,___aomod@dividend+1
  3047   001268  C03B  F008         	movff	dtoa@n+2,___aomod@dividend+2
  3048   00126C  C03C  F009         	movff	dtoa@n+3,___aomod@dividend+3
  3049   001270  C03D  F00A         	movff	dtoa@n+4,___aomod@dividend+4
  3050   001274  C03E  F00B         	movff	dtoa@n+5,___aomod@dividend+5
  3051   001278  C03F  F00C         	movff	dtoa@n+6,___aomod@dividend+6
  3052   00127C  C040  F00D         	movff	dtoa@n+7,___aomod@dividend+7
  3053   001280  0E0A               	movlw	10
  3054   001282  6E0E               	movwf	___aomod@divisor^0,c
  3055   001284  0E00               	movlw	0
  3056   001286  6E0F               	movwf	(___aomod@divisor+1)^0,c
  3057   001288  0E00               	movlw	0
  3058   00128A  6E10               	movwf	(___aomod@divisor+2)^0,c
  3059   00128C  0E00               	movlw	0
  3060   00128E  6E11               	movwf	(___aomod@divisor+3)^0,c
  3061   001290  0E00               	movlw	0
  3062   001292  6E12               	movwf	(___aomod@divisor+4)^0,c
  3063   001294  0E00               	movlw	0
  3064   001296  6E13               	movwf	(___aomod@divisor+5)^0,c
  3065   001298  0E00               	movlw	0
  3066   00129A  6E14               	movwf	(___aomod@divisor+6)^0,c
  3067   00129C  0E00               	movlw	0
  3068   00129E  6E15               	movwf	(___aomod@divisor+7)^0,c
  3069   0012A0  ECC8  F00A         	call	___aomod	;wreg free
  3070   0012A4  C006  F02B         	movff	?___aomod,??_dtoa
  3071   0012A8  C007  F02C         	movff	?___aomod+1,??_dtoa+1
  3072   0012AC  C008  F02D         	movff	?___aomod+2,??_dtoa+2
  3073   0012B0  C009  F02E         	movff	?___aomod+3,??_dtoa+3
  3074   0012B4  C00A  F02F         	movff	?___aomod+4,??_dtoa+4
  3075   0012B8  C00B  F030         	movff	?___aomod+5,??_dtoa+5
  3076   0012BC  C00C  F031         	movff	?___aomod+6,??_dtoa+6
  3077   0012C0  C00D  F032         	movff	?___aomod+7,??_dtoa+7
  3078   0012C4  C02B  F018         	movff	??_dtoa,abs@a
  3079   0012C8  C02C  F019         	movff	??_dtoa+1,abs@a+1
  3080   0012CC  ECF3  F010         	call	_abs	;wreg free
  3081   0012D0  5018               	movf	?_abs^0,w,c
  3082   0012D2  0F30               	addlw	48
  3083   0012D4  6EDF               	movwf	indf2,c
  3084   0012D6                     
  3085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  3086   0012D6  0635               	decf	dtoa@p^0,f,c
  3087   0012D8  A0D8               	btfss	status,0,c
  3088   0012DA  0636               	decf	(dtoa@p+1)^0,f,c
  3089   0012DC                     
  3090                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  3091   0012DC  0637               	decf	dtoa@w^0,f,c
  3092   0012DE  A0D8               	btfss	status,0,c
  3093   0012E0  0638               	decf	(dtoa@w+1)^0,f,c
  3094   0012E2                     
  3095                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  3096   0012E2  C039  F006         	movff	dtoa@n,___aodiv@dividend
  3097   0012E6  C03A  F007         	movff	dtoa@n+1,___aodiv@dividend+1
  3098   0012EA  C03B  F008         	movff	dtoa@n+2,___aodiv@dividend+2
  3099   0012EE  C03C  F009         	movff	dtoa@n+3,___aodiv@dividend+3
  3100   0012F2  C03D  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
  3101   0012F6  C03E  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
  3102   0012FA  C03F  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
  3103   0012FE  C040  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
  3104   001302  0E0A               	movlw	10
  3105   001304  6E0E               	movwf	___aodiv@divisor^0,c
  3106   001306  0E00               	movlw	0
  3107   001308  6E0F               	movwf	(___aodiv@divisor+1)^0,c
  3108   00130A  0E00               	movlw	0
  3109   00130C  6E10               	movwf	(___aodiv@divisor+2)^0,c
  3110   00130E  0E00               	movlw	0
  3111   001310  6E11               	movwf	(___aodiv@divisor+3)^0,c
  3112   001312  0E00               	movlw	0
  3113   001314  6E12               	movwf	(___aodiv@divisor+4)^0,c
  3114   001316  0E00               	movlw	0
  3115   001318  6E13               	movwf	(___aodiv@divisor+5)^0,c
  3116   00131A  0E00               	movlw	0
  3117   00131C  6E14               	movwf	(___aodiv@divisor+6)^0,c
  3118   00131E  0E00               	movlw	0
  3119   001320  6E15               	movwf	(___aodiv@divisor+7)^0,c
  3120   001322  EC04  F00A         	call	___aodiv	;wreg free
  3121   001326  C006  F039         	movff	?___aodiv,dtoa@n
  3122   00132A  C007  F03A         	movff	?___aodiv+1,dtoa@n+1
  3123   00132E  C008  F03B         	movff	?___aodiv+2,dtoa@n+2
  3124   001332  C009  F03C         	movff	?___aodiv+3,dtoa@n+3
  3125   001336  C00A  F03D         	movff	?___aodiv+4,dtoa@n+4
  3126   00133A  C00B  F03E         	movff	?___aodiv+5,dtoa@n+5
  3127   00133E  C00C  F03F         	movff	?___aodiv+6,dtoa@n+6
  3128   001342  C00D  F040         	movff	?___aodiv+7,dtoa@n+7
  3129   001346                     l3257:
  3130                           
  3131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3132   001346  BE43               	btfsc	(dtoa@i+1)^0,7,c
  3133   001348  EFAE  F009         	goto	u2461
  3134   00134C  5043               	movf	(dtoa@i+1)^0,w,c
  3135   00134E  E108               	bnz	u2460
  3136   001350  0442               	decf	dtoa@i^0,w,c
  3137   001352  A0D8               	btfss	status,0,c
  3138   001354  EFAE  F009         	goto	u2461
  3139   001358  EFB0  F009         	goto	u2460
  3140   00135C                     u2461:
  3141   00135C  EFE0  F009         	goto	l3267
  3142   001360                     u2460:
  3143   001360  5039               	movf	dtoa@n^0,w,c
  3144   001362  103A               	iorwf	(dtoa@n+1)^0,w,c
  3145   001364  103B               	iorwf	(dtoa@n+2)^0,w,c
  3146   001366  103C               	iorwf	(dtoa@n+3)^0,w,c
  3147   001368  103D               	iorwf	(dtoa@n+4)^0,w,c
  3148   00136A  103E               	iorwf	(dtoa@n+5)^0,w,c
  3149   00136C  103F               	iorwf	(dtoa@n+6)^0,w,c
  3150   00136E  1040               	iorwf	(dtoa@n+7)^0,w,c
  3151   001370  A4D8               	btfss	status,2,c
  3152   001372  EFBD  F009         	goto	u2471
  3153   001376  EFBF  F009         	goto	u2470
  3154   00137A                     u2471:
  3155   00137A  EF27  F009         	goto	l3247
  3156   00137E                     u2470:
  3157   00137E  BE36               	btfsc	(dtoa@p+1)^0,7,c
  3158   001380  EFCC  F009         	goto	u2480
  3159   001384  5036               	movf	(dtoa@p+1)^0,w,c
  3160   001386  E106               	bnz	u2481
  3161   001388  0435               	decf	dtoa@p^0,w,c
  3162   00138A  B0D8               	btfsc	status,0,c
  3163   00138C  EFCA  F009         	goto	u2481
  3164   001390  EFCC  F009         	goto	u2480
  3165   001394                     u2481:
  3166   001394  EF27  F009         	goto	l3247
  3167   001398                     u2480:
  3168   001398  BE38               	btfsc	(dtoa@w+1)^0,7,c
  3169   00139A  EFD7  F009         	goto	u2491
  3170   00139E  5038               	movf	(dtoa@w+1)^0,w,c
  3171   0013A0  E108               	bnz	u2490
  3172   0013A2  0437               	decf	dtoa@w^0,w,c
  3173   0013A4  A0D8               	btfss	status,0,c
  3174   0013A6  EFD7  F009         	goto	u2491
  3175   0013AA  EFD9  F009         	goto	u2490
  3176   0013AE                     u2491:
  3177   0013AE  EFE0  F009         	goto	l3267
  3178   0013B2                     u2490:
  3179   0013B2  B255               	btfsc	_flags^0,1,c
  3180   0013B4  EFDE  F009         	goto	u2501
  3181   0013B8  EFE0  F009         	goto	u2500
  3182   0013BC                     u2501:
  3183   0013BC  EF27  F009         	goto	l3247
  3184   0013C0                     u2500:
  3185   0013C0                     l3267:
  3186                           
  3187                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  3188   0013C0  5041               	movf	dtoa@s^0,w,c
  3189   0013C2  B4D8               	btfsc	status,2,c
  3190   0013C4  EFE6  F009         	goto	u2511
  3191   0013C8  EFE8  F009         	goto	u2510
  3192   0013CC                     u2511:
  3193   0013CC  EFF3  F009         	goto	l3273
  3194   0013D0                     u2510:
  3195   0013D0                     
  3196                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  3197   0013D0  0642               	decf	dtoa@i^0,f,c
  3198   0013D2  A0D8               	btfss	status,0,c
  3199   0013D4  0643               	decf	(dtoa@i+1)^0,f,c
  3200   0013D6                     
  3201                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  3202   0013D6  0E64               	movlw	low _dbuf
  3203   0013D8  2442               	addwf	dtoa@i^0,w,c
  3204   0013DA  6ED9               	movwf	fsr2l,c
  3205   0013DC  0E01               	movlw	high _dbuf
  3206   0013DE  2043               	addwfc	(dtoa@i+1)^0,w,c
  3207   0013E0  6EDA               	movwf	fsr2h,c
  3208   0013E2  C041  FFDF         	movff	dtoa@s,indf2
  3209   0013E6                     l3273:
  3210                           
  3211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3212   0013E6  C021  F016         	movff	dtoa@fp,pad@fp
  3213   0013EA  C022  F017         	movff	dtoa@fp+1,pad@fp+1
  3214   0013EE  0E64               	movlw	low _dbuf
  3215   0013F0  2442               	addwf	dtoa@i^0,w,c
  3216   0013F2  6E18               	movwf	pad@buf^0,c
  3217   0013F4  0E01               	movlw	high _dbuf
  3218   0013F6  2043               	addwfc	(dtoa@i+1)^0,w,c
  3219   0013F8  6E19               	movwf	(pad@buf+1)^0,c
  3220   0013FA  C037  F01A         	movff	dtoa@w,pad@p
  3221   0013FE  C038  F01B         	movff	dtoa@w+1,pad@p+1
  3222   001402  ECEA  F00D         	call	_pad	;wreg free
  3223   001406  0012               	return		;funcret
  3224   001408                     __end_of_dtoa:
  3225                           	callstack 0
  3226                           
  3227 ;; *************** function _pad *****************
  3228 ;; Defined at:
  3229 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  3232 ;;		 -> sprintf@f(11), 
  3233 ;;  buf             2   23[COMRAM] PTR unsigned char 
  3234 ;;		 -> dbuf(32), 
  3235 ;;  p               2   25[COMRAM] int 
  3236 ;; Auto vars:     Size  Location     Type
  3237 ;;  w               2   30[COMRAM] int 
  3238 ;;  i               2   28[COMRAM] int 
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  1    wreg      void 
  3241 ;; Registers used:
  3242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3248 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3249 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3250 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3251 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3252 ;;Total ram usage:       11 bytes
  3253 ;; Hardware stack levels used: 1
  3254 ;; Hardware stack levels required when called: 5
  3255 ;; This function calls:
  3256 ;;		_fputc
  3257 ;;		_fputs
  3258 ;; This function is called by:
  3259 ;;		_dtoa
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           	psect	text16
  3264   001BD4                     __ptext16:
  3265                           	callstack 0
  3266   001BD4                     _pad:
  3267                           	callstack 20
  3268   001BD4                     
  3269                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  3270   001BD4  A055               	btfss	_flags^0,0,c
  3271   001BD6  EFEF  F00D         	goto	u2301
  3272   001BDA  EFF1  F00D         	goto	u2300
  3273   001BDE                     u2301:
  3274   001BDE  EFFB  F00D         	goto	l3177
  3275   001BE2                     u2300:
  3276   001BE2                     
  3277                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  3278   001BE2  C018  F00F         	movff	pad@buf,fputs@s
  3279   001BE6  C019  F010         	movff	pad@buf+1,fputs@s+1
  3280   001BEA  C016  F011         	movff	pad@fp,fputs@fp
  3281   001BEE  C017  F012         	movff	pad@fp+1,fputs@fp+1
  3282   001BF2  ECB1  F010         	call	_fputs	;wreg free
  3283   001BF6                     l3177:
  3284                           
  3285                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  3286   001BF6  BE1B               	btfsc	(pad@p+1)^0,7,c
  3287   001BF8  EF00  F00E         	goto	u2311
  3288   001BFC  EF02  F00E         	goto	u2310
  3289   001C00                     u2311:
  3290   001C00  EF08  F00E         	goto	l3181
  3291   001C04                     u2310:
  3292   001C04  C01A  F01F         	movff	pad@p,pad@w
  3293   001C08  C01B  F020         	movff	pad@p+1,pad@w+1
  3294   001C0C  EF0C  F00E         	goto	l1160
  3295   001C10                     l3181:
  3296   001C10  0E00               	movlw	0
  3297   001C12  6E20               	movwf	(pad@w+1)^0,c
  3298   001C14  0E00               	movlw	0
  3299   001C16  6E1F               	movwf	pad@w^0,c
  3300   001C18                     l1160:
  3301                           
  3302                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3303   001C18  0E00               	movlw	0
  3304   001C1A  6E1E               	movwf	(pad@i+1)^0,c
  3305   001C1C  0E00               	movlw	0
  3306   001C1E  6E1D               	movwf	pad@i^0,c
  3307                           
  3308                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3309   001C20  EF1E  F00E         	goto	l3187
  3310   001C24                     l3183:
  3311                           
  3312                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3313   001C24  0E00               	movlw	0
  3314   001C26  6E07               	movwf	(fputc@c+1)^0,c
  3315   001C28  0E20               	movlw	32
  3316   001C2A  6E06               	movwf	fputc@c^0,c
  3317   001C2C  C016  F008         	movff	pad@fp,fputc@fp
  3318   001C30  C017  F009         	movff	pad@fp+1,fputc@fp+1
  3319   001C34  EC23  F00D         	call	_fputc	;wreg free
  3320   001C38                     
  3321                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3322   001C38  4A1D               	infsnz	pad@i^0,f,c
  3323   001C3A  2A1E               	incf	(pad@i+1)^0,f,c
  3324   001C3C                     l3187:
  3325                           
  3326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3327   001C3C  501F               	movf	pad@w^0,w,c
  3328   001C3E  5C1D               	subwf	pad@i^0,w,c
  3329   001C40  501E               	movf	(pad@i+1)^0,w,c
  3330   001C42  0A80               	xorlw	128
  3331   001C44  6E1C               	movwf	??_pad^0,c
  3332   001C46  5020               	movf	(pad@w+1)^0,w,c
  3333   001C48  0A80               	xorlw	128
  3334   001C4A  581C               	subwfb	??_pad^0,w,c
  3335   001C4C  A0D8               	btfss	status,0,c
  3336   001C4E  EF2B  F00E         	goto	u2321
  3337   001C52  EF2D  F00E         	goto	u2320
  3338   001C56                     u2321:
  3339   001C56  EF12  F00E         	goto	l3183
  3340   001C5A                     u2320:
  3341   001C5A                     
  3342                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  3343   001C5A  B055               	btfsc	_flags^0,0,c
  3344   001C5C  EF32  F00E         	goto	u2331
  3345   001C60  EF34  F00E         	goto	u2330
  3346   001C64                     u2331:
  3347   001C64  EF3E  F00E         	goto	l1165
  3348   001C68                     u2330:
  3349   001C68                     
  3350                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3351   001C68  C018  F00F         	movff	pad@buf,fputs@s
  3352   001C6C  C019  F010         	movff	pad@buf+1,fputs@s+1
  3353   001C70  C016  F011         	movff	pad@fp,fputs@fp
  3354   001C74  C017  F012         	movff	pad@fp+1,fputs@fp+1
  3355   001C78  ECB1  F010         	call	_fputs	;wreg free
  3356   001C7C                     l1165:
  3357   001C7C  0012               	return		;funcret
  3358   001C7E                     __end_of_pad:
  3359                           	callstack 0
  3360                           
  3361 ;; *************** function _fputs *****************
  3362 ;; Defined at:
  3363 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;  s               2   14[COMRAM] PTR const unsigned char 
  3366 ;;		 -> dbuf(32), 
  3367 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3368 ;;		 -> sprintf@f(11), 
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;  i               2   19[COMRAM] int 
  3371 ;;  c               1   18[COMRAM] unsigned char 
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  2   14[COMRAM] int 
  3374 ;; Registers used:
  3375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3381 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3382 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3384 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3385 ;;Total ram usage:        7 bytes
  3386 ;; Hardware stack levels used: 1
  3387 ;; Hardware stack levels required when called: 4
  3388 ;; This function calls:
  3389 ;;		_fputc
  3390 ;; This function is called by:
  3391 ;;		_pad
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           	psect	text17
  3396   002162                     __ptext17:
  3397                           	callstack 0
  3398   002162                     _fputs:
  3399                           	callstack 20
  3400   002162  0E00               	movlw	0
  3401   002164  6E15               	movwf	(fputs@i+1)^0,c
  3402   002166  0E00               	movlw	0
  3403   002168  6E14               	movwf	fputs@i^0,c
  3404   00216A  EFC2  F010         	goto	l3085
  3405   00216E                     l3081:
  3406   00216E  C013  F006         	movff	fputs@c,fputc@c
  3407   002172  6A07               	clrf	(fputc@c+1)^0,c
  3408   002174  C011  F008         	movff	fputs@fp,fputc@fp
  3409   002178  C012  F009         	movff	fputs@fp+1,fputc@fp+1
  3410   00217C  EC23  F00D         	call	_fputc	;wreg free
  3411   002180  4A14               	infsnz	fputs@i^0,f,c
  3412   002182  2A15               	incf	(fputs@i+1)^0,f,c
  3413   002184                     l3085:
  3414   002184  5014               	movf	fputs@i^0,w,c
  3415   002186  240F               	addwf	fputs@s^0,w,c
  3416   002188  6ED9               	movwf	fsr2l,c
  3417   00218A  5015               	movf	(fputs@i+1)^0,w,c
  3418   00218C  2010               	addwfc	(fputs@s+1)^0,w,c
  3419   00218E  6EDA               	movwf	fsr2h,c
  3420   002190  50DF               	movf	indf2,w,c
  3421   002192  6E13               	movwf	fputs@c^0,c
  3422   002194  5013               	movf	fputs@c^0,w,c
  3423   002196  A4D8               	btfss	status,2,c
  3424   002198  EFD0  F010         	goto	u2161
  3425   00219C  EFD2  F010         	goto	u2160
  3426   0021A0                     u2161:
  3427   0021A0  EFB7  F010         	goto	l3081
  3428   0021A4                     u2160:
  3429   0021A4  0012               	return		;funcret
  3430   0021A6                     __end_of_fputs:
  3431                           	callstack 0
  3432                           
  3433 ;; *************** function _fputc *****************
  3434 ;; Defined at:
  3435 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;  c               2    5[COMRAM] int 
  3438 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
  3439 ;;		 -> sprintf@f(11), 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;		None
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  2    5[COMRAM] int 
  3444 ;; Registers used:
  3445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3451 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3453 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3454 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3455 ;;Total ram usage:        9 bytes
  3456 ;; Hardware stack levels used: 1
  3457 ;; Hardware stack levels required when called: 3
  3458 ;; This function calls:
  3459 ;;		_putch
  3460 ;; This function is called by:
  3461 ;;		_pad
  3462 ;;		_vfpfcnvrt
  3463 ;;		_fputs
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           	psect	text18
  3468   001A46                     __ptext18:
  3469                           	callstack 0
  3470   001A46                     _fputc:
  3471                           	callstack 23
  3472   001A46  5008               	movf	fputc@fp^0,w,c
  3473   001A48  1009               	iorwf	(fputc@fp+1)^0,w,c
  3474   001A4A  B4D8               	btfsc	status,2,c
  3475   001A4C  EF2A  F00D         	goto	u2121
  3476   001A50  EF2C  F00D         	goto	u2120
  3477   001A54                     u2121:
  3478   001A54  EF35  F00D         	goto	l3069
  3479   001A58                     u2120:
  3480   001A58  5008               	movf	fputc@fp^0,w,c
  3481   001A5A  1009               	iorwf	(fputc@fp+1)^0,w,c
  3482   001A5C  A4D8               	btfss	status,2,c
  3483   001A5E  EF33  F00D         	goto	u2131
  3484   001A62  EF35  F00D         	goto	u2130
  3485   001A66                     u2131:
  3486   001A66  EF3A  F00D         	goto	l3071
  3487   001A6A                     u2130:
  3488   001A6A                     l3069:
  3489   001A6A  5006               	movf	fputc@c^0,w,c
  3490   001A6C  EC42  F012         	call	_putch
  3491   001A70  EF87  F00D         	goto	l1273
  3492   001A74                     l3071:
  3493   001A74  EE20 F009          	lfsr	2,9
  3494   001A78  5008               	movf	fputc@fp^0,w,c
  3495   001A7A  26D9               	addwf	fsr2l,f,c
  3496   001A7C  5009               	movf	(fputc@fp+1)^0,w,c
  3497   001A7E  22DA               	addwfc	fsr2h,f,c
  3498   001A80  50DE               	movf	postinc2,w,c
  3499   001A82  10DE               	iorwf	postinc2,w,c
  3500   001A84  B4D8               	btfsc	status,2,c
  3501   001A86  EF47  F00D         	goto	u2141
  3502   001A8A  EF49  F00D         	goto	u2140
  3503   001A8E                     u2141:
  3504   001A8E  EF64  F00D         	goto	l3075
  3505   001A92                     u2140:
  3506   001A92  EE20 F009          	lfsr	2,9
  3507   001A96  5008               	movf	fputc@fp^0,w,c
  3508   001A98  26D9               	addwf	fsr2l,f,c
  3509   001A9A  5009               	movf	(fputc@fp+1)^0,w,c
  3510   001A9C  22DA               	addwfc	fsr2h,f,c
  3511   001A9E  EE10 F003          	lfsr	1,3
  3512   001AA2  5008               	movf	fputc@fp^0,w,c
  3513   001AA4  26E1               	addwf	fsr1l,f,c
  3514   001AA6  5009               	movf	(fputc@fp+1)^0,w,c
  3515   001AA8  22E2               	addwfc	fsr1h,f,c
  3516   001AAA  50DE               	movf	postinc2,w,c
  3517   001AAC  5CE6               	subwf	postinc1,w,c
  3518   001AAE  50E6               	movf	postinc1,w,c
  3519   001AB0  0A80               	xorlw	128
  3520   001AB2  6E0E               	movwf	(??_fputc+4)^0,c
  3521   001AB4  50DE               	movf	postinc2,w,c
  3522   001AB6  0A80               	xorlw	128
  3523   001AB8  580E               	subwfb	(??_fputc+4)^0,w,c
  3524   001ABA  B0D8               	btfsc	status,0,c
  3525   001ABC  EF62  F00D         	goto	u2151
  3526   001AC0  EF64  F00D         	goto	u2150
  3527   001AC4                     u2151:
  3528   001AC4  EF87  F00D         	goto	l1273
  3529   001AC8                     u2150:
  3530   001AC8                     l3075:
  3531   001AC8  EE20 F003          	lfsr	2,3
  3532   001ACC  5008               	movf	fputc@fp^0,w,c
  3533   001ACE  26D9               	addwf	fsr2l,f,c
  3534   001AD0  5009               	movf	(fputc@fp+1)^0,w,c
  3535   001AD2  22DA               	addwfc	fsr2h,f,c
  3536   001AD4  CFDE F00A          	movff	postinc2,??_fputc
  3537   001AD8  CFDD F00B          	movff	postdec2,??_fputc+1
  3538   001ADC  C008  FFD9         	movff	fputc@fp,fsr2l
  3539   001AE0  C009  FFDA         	movff	fputc@fp+1,fsr2h
  3540   001AE4  CFDE F00C          	movff	postinc2,??_fputc+2
  3541   001AE8  CFDD F00D          	movff	postdec2,??_fputc+3
  3542   001AEC  500A               	movf	??_fputc^0,w,c
  3543   001AEE  240C               	addwf	(??_fputc+2)^0,w,c
  3544   001AF0  6ED9               	movwf	fsr2l,c
  3545   001AF2  500B               	movf	(??_fputc+1)^0,w,c
  3546   001AF4  200D               	addwfc	(??_fputc+3)^0,w,c
  3547   001AF6  6EDA               	movwf	fsr2h,c
  3548   001AF8  C006  FFDF         	movff	fputc@c,indf2
  3549   001AFC  EE20 F003          	lfsr	2,3
  3550   001B00  5008               	movf	fputc@fp^0,w,c
  3551   001B02  26D9               	addwf	fsr2l,f,c
  3552   001B04  5009               	movf	(fputc@fp+1)^0,w,c
  3553   001B06  22DA               	addwfc	fsr2h,f,c
  3554   001B08  2ADE               	incf	postinc2,f,c
  3555   001B0A  0E00               	movlw	0
  3556   001B0C  22DD               	addwfc	postdec2,f,c
  3557   001B0E                     l1273:
  3558   001B0E  0012               	return		;funcret
  3559   001B10                     __end_of_fputc:
  3560                           	callstack 0
  3561                           
  3562 ;; *************** function _putch *****************
  3563 ;; Defined at:
  3564 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;  c               1    wreg     unsigned char 
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;  c               1    0[COMRAM] unsigned char 
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      void 
  3571 ;; Registers used:
  3572 ;;		wreg
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3582 ;;Total ram usage:        0 bytes
  3583 ;; Hardware stack levels used: 1
  3584 ;; Hardware stack levels required when called: 2
  3585 ;; This function calls:
  3586 ;;		Nothing
  3587 ;; This function is called by:
  3588 ;;		_fputc
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592                           	psect	text19
  3593   002484                     __ptext19:
  3594                           	callstack 0
  3595   002484                     _putch:
  3596                           	callstack 23
  3597   002484  0012               	return		;funcret
  3598   002486                     __end_of_putch:
  3599                           	callstack 0
  3600                           
  3601 ;; *************** function _abs *****************
  3602 ;; Defined at:
  3603 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  a               2   23[COMRAM] int 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;		None
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  2   23[COMRAM] int 
  3610 ;; Registers used:
  3611 ;;		wreg, status,2, status,0
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3617 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3619 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3620 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3621 ;;Total ram usage:        4 bytes
  3622 ;; Hardware stack levels used: 1
  3623 ;; Hardware stack levels required when called: 2
  3624 ;; This function calls:
  3625 ;;		Nothing
  3626 ;; This function is called by:
  3627 ;;		_dtoa
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           	psect	text20
  3632   0021E6                     __ptext20:
  3633                           	callstack 0
  3634   0021E6                     _abs:
  3635                           	callstack 23
  3636   0021E6  BE19               	btfsc	(abs@a+1)^0,7,c
  3637   0021E8  EF00  F011         	goto	u2340
  3638   0021EC  5019               	movf	(abs@a+1)^0,w,c
  3639   0021EE  E106               	bnz	u2341
  3640   0021F0  0418               	decf	abs@a^0,w,c
  3641   0021F2  B0D8               	btfsc	status,0,c
  3642   0021F4  EFFE  F010         	goto	u2341
  3643   0021F8  EF00  F011         	goto	u2340
  3644   0021FC                     u2341:
  3645   0021FC  EF0E  F011         	goto	l1219
  3646   002200                     u2340:
  3647   002200  C018  F01A         	movff	abs@a,??_abs
  3648   002204  C019  F01B         	movff	abs@a+1,??_abs+1
  3649   002208  1E1A               	comf	??_abs^0,f,c
  3650   00220A  1E1B               	comf	(??_abs+1)^0,f,c
  3651   00220C  4A1A               	infsnz	??_abs^0,f,c
  3652   00220E  2A1B               	incf	(??_abs+1)^0,f,c
  3653   002210  C01A  F018         	movff	??_abs,?_abs
  3654   002214  C01B  F019         	movff	??_abs+1,?_abs+1
  3655   002218  EF12  F011         	goto	l1222
  3656   00221C                     l1219:
  3657   00221C  C018  F018         	movff	abs@a,?_abs
  3658   002220  C019  F019         	movff	abs@a+1,?_abs+1
  3659   002224                     l1222:
  3660   002224  0012               	return		;funcret
  3661   002226                     __end_of_abs:
  3662                           	callstack 0
  3663                           
  3664 ;; *************** function ___aomod *****************
  3665 ;; Defined at:
  3666 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;  dividend        8    5[COMRAM] long long 
  3669 ;;  divisor         8   13[COMRAM] long long 
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;  sign            1   22[COMRAM] unsigned char 
  3672 ;;  counter         1   21[COMRAM] unsigned char 
  3673 ;; Return value:  Size  Location     Type
  3674 ;;                  8    5[COMRAM] long long 
  3675 ;; Registers used:
  3676 ;;		wreg, status,2, status,0
  3677 ;; Tracked objects:
  3678 ;;		On entry : 0/0
  3679 ;;		On exit  : 0/0
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3682 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3683 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3685 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3686 ;;Total ram usage:       18 bytes
  3687 ;; Hardware stack levels used: 1
  3688 ;; Hardware stack levels required when called: 2
  3689 ;; This function calls:
  3690 ;;		Nothing
  3691 ;; This function is called by:
  3692 ;;		_dtoa
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696                           	psect	text21
  3697   001590                     __ptext21:
  3698                           	callstack 0
  3699   001590                     ___aomod:
  3700                           	callstack 23
  3701   001590  0E00               	movlw	0
  3702   001592  6E17               	movwf	___aomod@sign^0,c
  3703   001594  BE0D               	btfsc	(___aomod@dividend+7)^0,7,c
  3704   001596  EFD1  F00A         	goto	u2240
  3705   00159A  EFCF  F00A         	goto	u2241
  3706   00159E                     u2241:
  3707   00159E  EFE3  F00A         	goto	l3145
  3708   0015A2                     u2240:
  3709   0015A2  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  3710   0015A4  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  3711   0015A6  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  3712   0015A8  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  3713   0015AA  1E09               	comf	(___aomod@dividend+3)^0,f,c
  3714   0015AC  1E08               	comf	(___aomod@dividend+2)^0,f,c
  3715   0015AE  1E07               	comf	(___aomod@dividend+1)^0,f,c
  3716   0015B0  6C06               	negf	___aomod@dividend^0,c
  3717   0015B2  0E00               	movlw	0
  3718   0015B4  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  3719   0015B6  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  3720   0015B8  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  3721   0015BA  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  3722   0015BC  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  3723   0015BE  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  3724   0015C0  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  3725   0015C2  0E01               	movlw	1
  3726   0015C4  6E17               	movwf	___aomod@sign^0,c
  3727   0015C6                     l3145:
  3728   0015C6  BE15               	btfsc	(___aomod@divisor+7)^0,7,c
  3729   0015C8  EFEA  F00A         	goto	u2250
  3730   0015CC  EFE8  F00A         	goto	u2251
  3731   0015D0                     u2251:
  3732   0015D0  EFFA  F00A         	goto	l3149
  3733   0015D4                     u2250:
  3734   0015D4  1E15               	comf	(___aomod@divisor+7)^0,f,c
  3735   0015D6  1E14               	comf	(___aomod@divisor+6)^0,f,c
  3736   0015D8  1E13               	comf	(___aomod@divisor+5)^0,f,c
  3737   0015DA  1E12               	comf	(___aomod@divisor+4)^0,f,c
  3738   0015DC  1E11               	comf	(___aomod@divisor+3)^0,f,c
  3739   0015DE  1E10               	comf	(___aomod@divisor+2)^0,f,c
  3740   0015E0  1E0F               	comf	(___aomod@divisor+1)^0,f,c
  3741   0015E2  6C0E               	negf	___aomod@divisor^0,c
  3742   0015E4  0E00               	movlw	0
  3743   0015E6  220F               	addwfc	(___aomod@divisor+1)^0,f,c
  3744   0015E8  2210               	addwfc	(___aomod@divisor+2)^0,f,c
  3745   0015EA  2211               	addwfc	(___aomod@divisor+3)^0,f,c
  3746   0015EC  2212               	addwfc	(___aomod@divisor+4)^0,f,c
  3747   0015EE  2213               	addwfc	(___aomod@divisor+5)^0,f,c
  3748   0015F0  2214               	addwfc	(___aomod@divisor+6)^0,f,c
  3749   0015F2  2215               	addwfc	(___aomod@divisor+7)^0,f,c
  3750   0015F4                     l3149:
  3751   0015F4  500E               	movf	___aomod@divisor^0,w,c
  3752   0015F6  100F               	iorwf	(___aomod@divisor+1)^0,w,c
  3753   0015F8  1010               	iorwf	(___aomod@divisor+2)^0,w,c
  3754   0015FA  1011               	iorwf	(___aomod@divisor+3)^0,w,c
  3755   0015FC  1012               	iorwf	(___aomod@divisor+4)^0,w,c
  3756   0015FE  1013               	iorwf	(___aomod@divisor+5)^0,w,c
  3757   001600  1014               	iorwf	(___aomod@divisor+6)^0,w,c
  3758   001602  1015               	iorwf	(___aomod@divisor+7)^0,w,c
  3759   001604  B4D8               	btfsc	status,2,c
  3760   001606  EF07  F00B         	goto	u2261
  3761   00160A  EF09  F00B         	goto	u2260
  3762   00160E                     u2261:
  3763   00160E  EF51  F00B         	goto	l3165
  3764   001612                     u2260:
  3765   001612  0E01               	movlw	1
  3766   001614  6E16               	movwf	___aomod@counter^0,c
  3767   001616  EF17  F00B         	goto	l3155
  3768   00161A                     l3153:
  3769   00161A  90D8               	bcf	status,0,c
  3770   00161C  360E               	rlcf	___aomod@divisor^0,f,c
  3771   00161E  360F               	rlcf	(___aomod@divisor+1)^0,f,c
  3772   001620  3610               	rlcf	(___aomod@divisor+2)^0,f,c
  3773   001622  3611               	rlcf	(___aomod@divisor+3)^0,f,c
  3774   001624  3612               	rlcf	(___aomod@divisor+4)^0,f,c
  3775   001626  3613               	rlcf	(___aomod@divisor+5)^0,f,c
  3776   001628  3614               	rlcf	(___aomod@divisor+6)^0,f,c
  3777   00162A  3615               	rlcf	(___aomod@divisor+7)^0,f,c
  3778   00162C  2A16               	incf	___aomod@counter^0,f,c
  3779   00162E                     l3155:
  3780   00162E  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  3781   001630  EF1C  F00B         	goto	u2271
  3782   001634  EF1E  F00B         	goto	u2270
  3783   001638                     u2271:
  3784   001638  EF0D  F00B         	goto	l3153
  3785   00163C                     u2270:
  3786   00163C                     l3157:
  3787   00163C  500E               	movf	___aomod@divisor^0,w,c
  3788   00163E  5C06               	subwf	___aomod@dividend^0,w,c
  3789   001640  500F               	movf	(___aomod@divisor+1)^0,w,c
  3790   001642  5807               	subwfb	(___aomod@dividend+1)^0,w,c
  3791   001644  5010               	movf	(___aomod@divisor+2)^0,w,c
  3792   001646  5808               	subwfb	(___aomod@dividend+2)^0,w,c
  3793   001648  5011               	movf	(___aomod@divisor+3)^0,w,c
  3794   00164A  5809               	subwfb	(___aomod@dividend+3)^0,w,c
  3795   00164C  5012               	movf	(___aomod@divisor+4)^0,w,c
  3796   00164E  580A               	subwfb	(___aomod@dividend+4)^0,w,c
  3797   001650  5013               	movf	(___aomod@divisor+5)^0,w,c
  3798   001652  580B               	subwfb	(___aomod@dividend+5)^0,w,c
  3799   001654  5014               	movf	(___aomod@divisor+6)^0,w,c
  3800   001656  580C               	subwfb	(___aomod@dividend+6)^0,w,c
  3801   001658  5015               	movf	(___aomod@divisor+7)^0,w,c
  3802   00165A  580D               	subwfb	(___aomod@dividend+7)^0,w,c
  3803   00165C  A0D8               	btfss	status,0,c
  3804   00165E  EF33  F00B         	goto	u2281
  3805   001662  EF35  F00B         	goto	u2280
  3806   001666                     u2281:
  3807   001666  EF45  F00B         	goto	l3161
  3808   00166A                     u2280:
  3809   00166A  500E               	movf	___aomod@divisor^0,w,c
  3810   00166C  5E06               	subwf	___aomod@dividend^0,f,c
  3811   00166E  500F               	movf	(___aomod@divisor+1)^0,w,c
  3812   001670  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
  3813   001672  5010               	movf	(___aomod@divisor+2)^0,w,c
  3814   001674  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
  3815   001676  5011               	movf	(___aomod@divisor+3)^0,w,c
  3816   001678  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
  3817   00167A  5012               	movf	(___aomod@divisor+4)^0,w,c
  3818   00167C  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
  3819   00167E  5013               	movf	(___aomod@divisor+5)^0,w,c
  3820   001680  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
  3821   001682  5014               	movf	(___aomod@divisor+6)^0,w,c
  3822   001684  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
  3823   001686  5015               	movf	(___aomod@divisor+7)^0,w,c
  3824   001688  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
  3825   00168A                     l3161:
  3826   00168A  90D8               	bcf	status,0,c
  3827   00168C  3215               	rrcf	(___aomod@divisor+7)^0,f,c
  3828   00168E  3214               	rrcf	(___aomod@divisor+6)^0,f,c
  3829   001690  3213               	rrcf	(___aomod@divisor+5)^0,f,c
  3830   001692  3212               	rrcf	(___aomod@divisor+4)^0,f,c
  3831   001694  3211               	rrcf	(___aomod@divisor+3)^0,f,c
  3832   001696  3210               	rrcf	(___aomod@divisor+2)^0,f,c
  3833   001698  320F               	rrcf	(___aomod@divisor+1)^0,f,c
  3834   00169A  320E               	rrcf	___aomod@divisor^0,f,c
  3835   00169C  2E16               	decfsz	___aomod@counter^0,f,c
  3836   00169E  EF1E  F00B         	goto	l3157
  3837   0016A2                     l3165:
  3838   0016A2  5017               	movf	___aomod@sign^0,w,c
  3839   0016A4  B4D8               	btfsc	status,2,c
  3840   0016A6  EF57  F00B         	goto	u2291
  3841   0016AA  EF59  F00B         	goto	u2290
  3842   0016AE                     u2291:
  3843   0016AE  EF69  F00B         	goto	l3169
  3844   0016B2                     u2290:
  3845   0016B2  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  3846   0016B4  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  3847   0016B6  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  3848   0016B8  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  3849   0016BA  1E09               	comf	(___aomod@dividend+3)^0,f,c
  3850   0016BC  1E08               	comf	(___aomod@dividend+2)^0,f,c
  3851   0016BE  1E07               	comf	(___aomod@dividend+1)^0,f,c
  3852   0016C0  6C06               	negf	___aomod@dividend^0,c
  3853   0016C2  0E00               	movlw	0
  3854   0016C4  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  3855   0016C6  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  3856   0016C8  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  3857   0016CA  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  3858   0016CC  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  3859   0016CE  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  3860   0016D0  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  3861   0016D2                     l3169:
  3862   0016D2  C006  F006         	movff	___aomod@dividend,?___aomod
  3863   0016D6  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
  3864   0016DA  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
  3865   0016DE  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
  3866   0016E2  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
  3867   0016E6  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
  3868   0016EA  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
  3869   0016EE  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
  3870   0016F2  0012               	return		;funcret
  3871   0016F4                     __end_of___aomod:
  3872                           	callstack 0
  3873                           
  3874 ;; *************** function ___aodiv *****************
  3875 ;; Defined at:
  3876 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;  dividend        8    5[COMRAM] long long 
  3879 ;;  divisor         8   13[COMRAM] long long 
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;  quotient        8   23[COMRAM] long long 
  3882 ;;  sign            1   22[COMRAM] unsigned char 
  3883 ;;  counter         1   21[COMRAM] unsigned char 
  3884 ;; Return value:  Size  Location     Type
  3885 ;;                  8    5[COMRAM] long long 
  3886 ;; Registers used:
  3887 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3893 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3894 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3896 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3897 ;;Total ram usage:       26 bytes
  3898 ;; Hardware stack levels used: 1
  3899 ;; Hardware stack levels required when called: 2
  3900 ;; This function calls:
  3901 ;;		Nothing
  3902 ;; This function is called by:
  3903 ;;		_dtoa
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907                           	psect	text22
  3908   001408                     __ptext22:
  3909                           	callstack 0
  3910   001408                     ___aodiv:
  3911                           	callstack 23
  3912   001408  0E00               	movlw	0
  3913   00140A  6E17               	movwf	___aodiv@sign^0,c
  3914   00140C  BE15               	btfsc	(___aodiv@divisor+7)^0,7,c
  3915   00140E  EF0D  F00A         	goto	u2170
  3916   001412  EF0B  F00A         	goto	u2171
  3917   001416                     u2171:
  3918   001416  EF1F  F00A         	goto	l3101
  3919   00141A                     u2170:
  3920   00141A  1E15               	comf	(___aodiv@divisor+7)^0,f,c
  3921   00141C  1E14               	comf	(___aodiv@divisor+6)^0,f,c
  3922   00141E  1E13               	comf	(___aodiv@divisor+5)^0,f,c
  3923   001420  1E12               	comf	(___aodiv@divisor+4)^0,f,c
  3924   001422  1E11               	comf	(___aodiv@divisor+3)^0,f,c
  3925   001424  1E10               	comf	(___aodiv@divisor+2)^0,f,c
  3926   001426  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
  3927   001428  6C0E               	negf	___aodiv@divisor^0,c
  3928   00142A  0E00               	movlw	0
  3929   00142C  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
  3930   00142E  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
  3931   001430  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
  3932   001432  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
  3933   001434  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
  3934   001436  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
  3935   001438  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
  3936   00143A  0E01               	movlw	1
  3937   00143C  6E17               	movwf	___aodiv@sign^0,c
  3938   00143E                     l3101:
  3939   00143E  BE0D               	btfsc	(___aodiv@dividend+7)^0,7,c
  3940   001440  EF26  F00A         	goto	u2180
  3941   001444  EF24  F00A         	goto	u2181
  3942   001448                     u2181:
  3943   001448  EF38  F00A         	goto	l3107
  3944   00144C                     u2180:
  3945   00144C  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
  3946   00144E  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
  3947   001450  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
  3948   001452  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
  3949   001454  1E09               	comf	(___aodiv@dividend+3)^0,f,c
  3950   001456  1E08               	comf	(___aodiv@dividend+2)^0,f,c
  3951   001458  1E07               	comf	(___aodiv@dividend+1)^0,f,c
  3952   00145A  6C06               	negf	___aodiv@dividend^0,c
  3953   00145C  0E00               	movlw	0
  3954   00145E  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
  3955   001460  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
  3956   001462  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
  3957   001464  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
  3958   001466  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
  3959   001468  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
  3960   00146A  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
  3961   00146C  0E01               	movlw	1
  3962   00146E  1A17               	xorwf	___aodiv@sign^0,f,c
  3963   001470                     l3107:
  3964   001470  EE20  F018         	lfsr	2,___aodiv@quotient
  3965   001474  0E07               	movlw	7
  3966   001476                     u2191:
  3967   001476  6ADE               	clrf	postinc2,c
  3968   001478  06E8               	decf	wreg,f,c
  3969   00147A  E2FD               	bc	u2191
  3970   00147C  500E               	movf	___aodiv@divisor^0,w,c
  3971   00147E  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
  3972   001480  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
  3973   001482  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
  3974   001484  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
  3975   001486  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
  3976   001488  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
  3977   00148A  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
  3978   00148C  B4D8               	btfsc	status,2,c
  3979   00148E  EF4B  F00A         	goto	u2201
  3980   001492  EF4D  F00A         	goto	u2200
  3981   001496                     u2201:
  3982   001496  EF9F  F00A         	goto	l3129
  3983   00149A                     u2200:
  3984   00149A  0E01               	movlw	1
  3985   00149C  6E16               	movwf	___aodiv@counter^0,c
  3986   00149E  EF5B  F00A         	goto	l3115
  3987   0014A2                     l3113:
  3988   0014A2  90D8               	bcf	status,0,c
  3989   0014A4  360E               	rlcf	___aodiv@divisor^0,f,c
  3990   0014A6  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
  3991   0014A8  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
  3992   0014AA  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
  3993   0014AC  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
  3994   0014AE  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
  3995   0014B0  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
  3996   0014B2  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
  3997   0014B4  2A16               	incf	___aodiv@counter^0,f,c
  3998   0014B6                     l3115:
  3999   0014B6  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  4000   0014B8  EF60  F00A         	goto	u2211
  4001   0014BC  EF62  F00A         	goto	u2210
  4002   0014C0                     u2211:
  4003   0014C0  EF51  F00A         	goto	l3113
  4004   0014C4                     u2210:
  4005   0014C4                     l3117:
  4006   0014C4  90D8               	bcf	status,0,c
  4007   0014C6  3618               	rlcf	___aodiv@quotient^0,f,c
  4008   0014C8  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
  4009   0014CA  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
  4010   0014CC  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
  4011   0014CE  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
  4012   0014D0  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
  4013   0014D2  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
  4014   0014D4  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
  4015   0014D6  500E               	movf	___aodiv@divisor^0,w,c
  4016   0014D8  5C06               	subwf	___aodiv@dividend^0,w,c
  4017   0014DA  500F               	movf	(___aodiv@divisor+1)^0,w,c
  4018   0014DC  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
  4019   0014DE  5010               	movf	(___aodiv@divisor+2)^0,w,c
  4020   0014E0  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
  4021   0014E2  5011               	movf	(___aodiv@divisor+3)^0,w,c
  4022   0014E4  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
  4023   0014E6  5012               	movf	(___aodiv@divisor+4)^0,w,c
  4024   0014E8  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
  4025   0014EA  5013               	movf	(___aodiv@divisor+5)^0,w,c
  4026   0014EC  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
  4027   0014EE  5014               	movf	(___aodiv@divisor+6)^0,w,c
  4028   0014F0  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
  4029   0014F2  5015               	movf	(___aodiv@divisor+7)^0,w,c
  4030   0014F4  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
  4031   0014F6  A0D8               	btfss	status,0,c
  4032   0014F8  EF80  F00A         	goto	u2221
  4033   0014FC  EF82  F00A         	goto	u2220
  4034   001500                     u2221:
  4035   001500  EF93  F00A         	goto	l3125
  4036   001504                     u2220:
  4037   001504  500E               	movf	___aodiv@divisor^0,w,c
  4038   001506  5E06               	subwf	___aodiv@dividend^0,f,c
  4039   001508  500F               	movf	(___aodiv@divisor+1)^0,w,c
  4040   00150A  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
  4041   00150C  5010               	movf	(___aodiv@divisor+2)^0,w,c
  4042   00150E  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
  4043   001510  5011               	movf	(___aodiv@divisor+3)^0,w,c
  4044   001512  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
  4045   001514  5012               	movf	(___aodiv@divisor+4)^0,w,c
  4046   001516  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
  4047   001518  5013               	movf	(___aodiv@divisor+5)^0,w,c
  4048   00151A  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
  4049   00151C  5014               	movf	(___aodiv@divisor+6)^0,w,c
  4050   00151E  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
  4051   001520  5015               	movf	(___aodiv@divisor+7)^0,w,c
  4052   001522  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
  4053   001524  8018               	bsf	___aodiv@quotient^0,0,c
  4054   001526                     l3125:
  4055   001526  90D8               	bcf	status,0,c
  4056   001528  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
  4057   00152A  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
  4058   00152C  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
  4059   00152E  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
  4060   001530  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
  4061   001532  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
  4062   001534  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
  4063   001536  320E               	rrcf	___aodiv@divisor^0,f,c
  4064   001538  2E16               	decfsz	___aodiv@counter^0,f,c
  4065   00153A  EF62  F00A         	goto	l3117
  4066   00153E                     l3129:
  4067   00153E  5017               	movf	___aodiv@sign^0,w,c
  4068   001540  B4D8               	btfsc	status,2,c
  4069   001542  EFA5  F00A         	goto	u2231
  4070   001546  EFA7  F00A         	goto	u2230
  4071   00154A                     u2231:
  4072   00154A  EFB7  F00A         	goto	l3133
  4073   00154E                     u2230:
  4074   00154E  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
  4075   001550  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
  4076   001552  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
  4077   001554  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
  4078   001556  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
  4079   001558  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
  4080   00155A  1E19               	comf	(___aodiv@quotient+1)^0,f,c
  4081   00155C  6C18               	negf	___aodiv@quotient^0,c
  4082   00155E  0E00               	movlw	0
  4083   001560  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
  4084   001562  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
  4085   001564  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
  4086   001566  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
  4087   001568  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
  4088   00156A  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
  4089   00156C  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
  4090   00156E                     l3133:
  4091   00156E  C018  F006         	movff	___aodiv@quotient,?___aodiv
  4092   001572  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
  4093   001576  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
  4094   00157A  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
  4095   00157E  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
  4096   001582  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
  4097   001586  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
  4098   00158A  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
  4099   00158E  0012               	return		;funcret
  4100   001590                     __end_of___aodiv:
  4101                           	callstack 0
  4102                           
  4103 ;; *************** function _atoi *****************
  4104 ;; Defined at:
  4105 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;  s               2   11[COMRAM] PTR const unsigned char 
  4108 ;;		 -> STR_2(13), STR_1(13), 
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;  n               2   18[COMRAM] int 
  4111 ;;  neg             2   16[COMRAM] int 
  4112 ;; Return value:  Size  Location     Type
  4113 ;;                  2   11[COMRAM] int 
  4114 ;; Registers used:
  4115 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4116 ;; Tracked objects:
  4117 ;;		On entry : 0/0
  4118 ;;		On exit  : 0/0
  4119 ;;		Unchanged: 0/0
  4120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4121 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4122 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4123 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4124 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4125 ;;Total ram usage:        9 bytes
  4126 ;; Hardware stack levels used: 1
  4127 ;; Hardware stack levels required when called: 3
  4128 ;; This function calls:
  4129 ;;		___wmul
  4130 ;;		_isdigit
  4131 ;;		_isspace
  4132 ;; This function is called by:
  4133 ;;		_vfpfcnvrt
  4134 ;; This function uses a non-reentrant model
  4135 ;;
  4136                           
  4137                           	psect	text23
  4138   0016F4                     __ptext23:
  4139                           	callstack 0
  4140   0016F4                     _atoi:
  4141                           	callstack 23
  4142   0016F4  0E00               	movlw	0
  4143   0016F6  6E14               	movwf	(atoi@n+1)^0,c
  4144   0016F8  0E00               	movlw	0
  4145   0016FA  6E13               	movwf	atoi@n^0,c
  4146   0016FC  0E00               	movlw	0
  4147   0016FE  6E12               	movwf	(atoi@neg+1)^0,c
  4148   001700  0E00               	movlw	0
  4149   001702  6E11               	movwf	atoi@neg^0,c
  4150   001704  EF86  F00B         	goto	l3283
  4151   001708                     l3279:
  4152   001708  4A0C               	infsnz	atoi@s^0,f,c
  4153   00170A  2A0D               	incf	(atoi@s+1)^0,f,c
  4154   00170C                     l3283:
  4155   00170C  C00C  FFF6         	movff	atoi@s,tblptrl
  4156   001710  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4157   001714                     	if	0	;tblptru may be non-zero
  4158   001714                     	endif
  4159   001714                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4160   001714  0E00               	movlw	low (__mediumconst shr (0+16))
  4161   001716  6EF8               	movwf	tblptru,c
  4162   001718                     	endif
  4163   001718  0008               	tblrd		*
  4164   00171A  50F5               	movf	tablat,w,c
  4165   00171C  0A20               	xorlw	32
  4166   00171E  B4D8               	btfsc	status,2,c
  4167   001720  EF94  F00B         	goto	u2521
  4168   001724  EF96  F00B         	goto	u2520
  4169   001728                     u2521:
  4170   001728  EF84  F00B         	goto	l3279
  4171   00172C                     u2520:
  4172   00172C  C00C  FFF6         	movff	atoi@s,tblptrl
  4173   001730  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4174   001734                     	if	0	;tblptru may be non-zero
  4175   001734                     	endif
  4176   001734                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4177   001734  0E00               	movlw	low (__mediumconst shr (0+16))
  4178   001736  6EF8               	movwf	tblptru,c
  4179   001738                     	endif
  4180   001738  0008               	tblrd		*
  4181   00173A  CFF5 F00E          	movff	tablat,??_atoi
  4182   00173E  0EF7               	movlw	247
  4183   001740  240E               	addwf	??_atoi^0,w,c
  4184   001742  6E0F               	movwf	(??_atoi+1)^0,c
  4185   001744  6A10               	clrf	(??_atoi+2)^0,c
  4186   001746  0EFF               	movlw	255
  4187   001748  2210               	addwfc	(??_atoi+2)^0,f,c
  4188   00174A  5010               	movf	(??_atoi+2)^0,w,c
  4189   00174C  E109               	bnz	u2530
  4190   00174E  0E05               	movlw	5
  4191   001750  5C0F               	subwf	(??_atoi+1)^0,w,c
  4192   001752  A0D8               	btfss	status,0,c
  4193   001754  EFAE  F00B         	goto	u2531
  4194   001758  EFB0  F00B         	goto	u2530
  4195   00175C                     u2531:
  4196   00175C  EF84  F00B         	goto	l3279
  4197   001760                     u2530:
  4198   001760  EFBA  F00B         	goto	l3291
  4199   001764                     l3287:
  4200   001764  0E00               	movlw	0
  4201   001766  6E12               	movwf	(atoi@neg+1)^0,c
  4202   001768  0E01               	movlw	1
  4203   00176A  6E11               	movwf	atoi@neg^0,c
  4204   00176C                     l3289:
  4205   00176C  4A0C               	infsnz	atoi@s^0,f,c
  4206   00176E  2A0D               	incf	(atoi@s+1)^0,f,c
  4207   001770  EFF3  F00B         	goto	l3299
  4208   001774                     l3291:
  4209   001774  C00C  FFF6         	movff	atoi@s,tblptrl
  4210   001778  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4211   00177C                     	if	0	;tblptru may be non-zero
  4212   00177C                     	endif
  4213   00177C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4214   00177C  0E00               	movlw	low (__mediumconst shr (0+16))
  4215   00177E  6EF8               	movwf	tblptru,c
  4216   001780                     	endif
  4217   001780  0008               	tblrd		*
  4218   001782  50F5               	movf	tablat,w,c
  4219   001784  6E0E               	movwf	??_atoi^0,c
  4220   001786  6A0F               	clrf	(??_atoi+1)^0,c
  4221                           
  4222                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4223                           ; Switch size 1, requested type "simple"
  4224                           ; Number of cases is 1, Range of values is 0 to 0
  4225                           ; switch strategies available:
  4226                           ; Name         Instructions Cycles
  4227                           ; simple_byte            4     3 (average)
  4228                           ;	Chosen strategy is simple_byte
  4229   001788  500F               	movf	(??_atoi+1)^0,w,c
  4230   00178A  0A00               	xorlw	0	; case 0
  4231   00178C  B4D8               	btfsc	status,2,c
  4232   00178E  EFCB  F00B         	goto	l3845
  4233   001792  EFF3  F00B         	goto	l3299
  4234   001796                     l3845:
  4235                           
  4236                           ; Switch size 1, requested type "simple"
  4237                           ; Number of cases is 2, Range of values is 43 to 45
  4238                           ; switch strategies available:
  4239                           ; Name         Instructions Cycles
  4240                           ; simple_byte            7     4 (average)
  4241                           ;	Chosen strategy is simple_byte
  4242   001796  500E               	movf	??_atoi^0,w,c
  4243   001798  0A2B               	xorlw	43	; case 43
  4244   00179A  B4D8               	btfsc	status,2,c
  4245   00179C  EFB6  F00B         	goto	l3289
  4246   0017A0  0A06               	xorlw	6	; case 45
  4247   0017A2  B4D8               	btfsc	status,2,c
  4248   0017A4  EFB2  F00B         	goto	l3287
  4249   0017A8  EFF3  F00B         	goto	l3299
  4250   0017AC                     l3293:
  4251   0017AC  C013  F006         	movff	atoi@n,___wmul@multiplier
  4252   0017B0  C014  F007         	movff	atoi@n+1,___wmul@multiplier+1
  4253   0017B4  0E00               	movlw	0
  4254   0017B6  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  4255   0017B8  0E0A               	movlw	10
  4256   0017BA  6E08               	movwf	___wmul@multiplicand^0,c
  4257   0017BC  ECB0  F011         	call	___wmul	;wreg free
  4258   0017C0  C00C  FFF6         	movff	atoi@s,tblptrl
  4259   0017C4  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4260   0017C8                     	if	0	;tblptru may be non-zero
  4261   0017C8                     	endif
  4262   0017C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4263   0017C8  0E00               	movlw	low (__mediumconst shr (0+16))
  4264   0017CA  6EF8               	movwf	tblptru,c
  4265   0017CC                     	endif
  4266   0017CC  0008               	tblrd		*
  4267   0017CE  50F5               	movf	tablat,w,c
  4268   0017D0  5E06               	subwf	?___wmul^0,f,c
  4269   0017D2  0E00               	movlw	0
  4270   0017D4  5A07               	subwfb	(?___wmul+1)^0,f,c
  4271   0017D6  0E30               	movlw	48
  4272   0017D8  2406               	addwf	?___wmul^0,w,c
  4273   0017DA  6E13               	movwf	atoi@n^0,c
  4274   0017DC  0E00               	movlw	0
  4275   0017DE  2007               	addwfc	(?___wmul+1)^0,w,c
  4276   0017E0  6E14               	movwf	(atoi@n+1)^0,c
  4277   0017E2  EFB6  F00B         	goto	l3289
  4278   0017E6                     l3299:
  4279   0017E6  C00C  FFF6         	movff	atoi@s,tblptrl
  4280   0017EA  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4281   0017EE                     	if	0	;tblptru may be non-zero
  4282   0017EE                     	endif
  4283   0017EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4284   0017EE  0E00               	movlw	low (__mediumconst shr (0+16))
  4285   0017F0  6EF8               	movwf	tblptru,c
  4286   0017F2                     	endif
  4287   0017F2  0008               	tblrd		*
  4288   0017F4  CFF5 F00E          	movff	tablat,??_atoi
  4289   0017F8  0ED0               	movlw	208
  4290   0017FA  240E               	addwf	??_atoi^0,w,c
  4291   0017FC  6E0F               	movwf	(??_atoi+1)^0,c
  4292   0017FE  6A10               	clrf	(??_atoi+2)^0,c
  4293   001800  0EFF               	movlw	255
  4294   001802  2210               	addwfc	(??_atoi+2)^0,f,c
  4295   001804  5010               	movf	(??_atoi+2)^0,w,c
  4296   001806  E109               	bnz	u2540
  4297   001808  0E0A               	movlw	10
  4298   00180A  5C0F               	subwf	(??_atoi+1)^0,w,c
  4299   00180C  A0D8               	btfss	status,0,c
  4300   00180E  EF0B  F00C         	goto	u2541
  4301   001812  EF0D  F00C         	goto	u2540
  4302   001816                     u2541:
  4303   001816  EFD6  F00B         	goto	l3293
  4304   00181A                     u2540:
  4305   00181A  5011               	movf	atoi@neg^0,w,c
  4306   00181C  1012               	iorwf	(atoi@neg+1)^0,w,c
  4307   00181E  A4D8               	btfss	status,2,c
  4308   001820  EF14  F00C         	goto	u2551
  4309   001824  EF16  F00C         	goto	u2550
  4310   001828                     u2551:
  4311   001828  EF24  F00C         	goto	l1244
  4312   00182C                     u2550:
  4313   00182C  C013  F00E         	movff	atoi@n,??_atoi
  4314   001830  C014  F00F         	movff	atoi@n+1,??_atoi+1
  4315   001834  1E0E               	comf	??_atoi^0,f,c
  4316   001836  1E0F               	comf	(??_atoi+1)^0,f,c
  4317   001838  4A0E               	infsnz	??_atoi^0,f,c
  4318   00183A  2A0F               	incf	(??_atoi+1)^0,f,c
  4319   00183C  C00E  F00C         	movff	??_atoi,?_atoi
  4320   001840  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  4321   001844  EF28  F00C         	goto	l1247
  4322   001848                     l1244:
  4323   001848  C013  F00C         	movff	atoi@n,?_atoi
  4324   00184C  C014  F00D         	movff	atoi@n+1,?_atoi+1
  4325   001850                     l1247:
  4326   001850  0012               	return		;funcret
  4327   001852                     __end_of_atoi:
  4328                           	callstack 0
  4329                           
  4330 ;; *************** function _isspace *****************
  4331 ;; Defined at:
  4332 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  4333 ;; Parameters:    Size  Location     Type
  4334 ;;  c               2    5[COMRAM] int 
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;		None
  4337 ;; Return value:  Size  Location     Type
  4338 ;;                  2    5[COMRAM] int 
  4339 ;; Registers used:
  4340 ;;		wreg, status,2, status,0
  4341 ;; Tracked objects:
  4342 ;;		On entry : 0/0
  4343 ;;		On exit  : 0/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4346 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4347 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4348 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4349 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4350 ;;Total ram usage:        5 bytes
  4351 ;; Hardware stack levels used: 1
  4352 ;; Hardware stack levels required when called: 2
  4353 ;; This function calls:
  4354 ;;		Nothing
  4355 ;; This function is called by:
  4356 ;;		_atoi
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360                           	psect	text24
  4361   00211C                     __ptext24:
  4362                           	callstack 0
  4363   00211C                     _isspace:
  4364                           	callstack 23
  4365   00211C  0E01               	movlw	1
  4366   00211E  6E0A               	movwf	_isspace$2190^0,c
  4367   002120  0E20               	movlw	32
  4368   002122  1806               	xorwf	isspace@c^0,w,c
  4369   002124  1007               	iorwf	(isspace@c+1)^0,w,c
  4370   002126  B4D8               	btfsc	status,2,c
  4371   002128  EF98  F010         	goto	u2371
  4372   00212C  EF9A  F010         	goto	u2370
  4373   002130                     u2371:
  4374   002130  EFAD  F010         	goto	l3207
  4375   002134                     u2370:
  4376   002134  0EF7               	movlw	247
  4377   002136  2406               	addwf	isspace@c^0,w,c
  4378   002138  6E08               	movwf	??_isspace^0,c
  4379   00213A  0EFF               	movlw	255
  4380   00213C  2007               	addwfc	(isspace@c+1)^0,w,c
  4381   00213E  6E09               	movwf	(??_isspace+1)^0,c
  4382   002140  5009               	movf	(??_isspace+1)^0,w,c
  4383   002142  E109               	bnz	u2380
  4384   002144  0E05               	movlw	5
  4385   002146  5C08               	subwf	??_isspace^0,w,c
  4386   002148  A0D8               	btfss	status,0,c
  4387   00214A  EFA9  F010         	goto	u2381
  4388   00214E  EFAB  F010         	goto	u2380
  4389   002152                     u2381:
  4390   002152  EFAD  F010         	goto	l3207
  4391   002156                     u2380:
  4392   002156  0E00               	movlw	0
  4393   002158  6E0A               	movwf	_isspace$2190^0,c
  4394   00215A                     l3207:
  4395   00215A  C00A  F006         	movff	_isspace$2190,?_isspace
  4396   00215E  6A07               	clrf	(?_isspace+1)^0,c
  4397   002160  0012               	return		;funcret
  4398   002162                     __end_of_isspace:
  4399                           	callstack 0
  4400                           
  4401 ;; *************** function _isdigit *****************
  4402 ;; Defined at:
  4403 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;  c               2    5[COMRAM] int 
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;		None
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  2    5[COMRAM] int 
  4410 ;; Registers used:
  4411 ;;		wreg, status,2, status,0
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4417 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4419 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4420 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4421 ;;Total ram usage:        4 bytes
  4422 ;; Hardware stack levels used: 1
  4423 ;; Hardware stack levels required when called: 2
  4424 ;; This function calls:
  4425 ;;		Nothing
  4426 ;; This function is called by:
  4427 ;;		_vfpfcnvrt
  4428 ;;		_atoi
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432                           	psect	text25
  4433   002334                     __ptext25:
  4434                           	callstack 0
  4435   002334                     _isdigit:
  4436                           	callstack 24
  4437   002334  0ED0               	movlw	208
  4438   002336  2406               	addwf	isdigit@c^0,w,c
  4439   002338  6E08               	movwf	??_isdigit^0,c
  4440   00233A  0EFF               	movlw	255
  4441   00233C  2007               	addwfc	(isdigit@c+1)^0,w,c
  4442   00233E  6E09               	movwf	(??_isdigit+1)^0,c
  4443   002340  5009               	movf	(??_isdigit+1)^0,w,c
  4444   002342  E10A               	bnz	u2350
  4445   002344  0E0A               	movlw	10
  4446   002346  5C08               	subwf	??_isdigit^0,w,c
  4447   002348  A0D8               	btfss	status,0,c
  4448   00234A  EFA9  F011         	goto	u2351
  4449   00234E  EFAC  F011         	goto	u2350
  4450   002352                     u2351:
  4451   002352  0E01               	movlw	1
  4452   002354  EFAD  F011         	goto	u2360
  4453   002358                     u2350:
  4454   002358  0E00               	movlw	0
  4455   00235A                     u2360:
  4456   00235A  6E06               	movwf	?_isdigit^0,c
  4457   00235C  6A07               	clrf	(?_isdigit+1)^0,c
  4458   00235E  0012               	return		;funcret
  4459   002360                     __end_of_isdigit:
  4460                           	callstack 0
  4461                           
  4462 ;; *************** function ___wmul *****************
  4463 ;; Defined at:
  4464 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;  multiplier      2    5[COMRAM] unsigned int 
  4467 ;;  multiplicand    2    7[COMRAM] unsigned int 
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;  product         2    9[COMRAM] unsigned int 
  4470 ;; Return value:  Size  Location     Type
  4471 ;;                  2    5[COMRAM] unsigned int 
  4472 ;; Registers used:
  4473 ;;		wreg, status,2, status,0, prodl, prodh
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4479 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4480 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4482 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4483 ;;Total ram usage:        6 bytes
  4484 ;; Hardware stack levels used: 1
  4485 ;; Hardware stack levels required when called: 2
  4486 ;; This function calls:
  4487 ;;		Nothing
  4488 ;; This function is called by:
  4489 ;;		_sunrise
  4490 ;;		_sunset
  4491 ;;		_atoi
  4492 ;;		_ADC_lightMeter
  4493 ;; This function uses a non-reentrant model
  4494 ;;
  4495                           
  4496                           	psect	text26
  4497   002360                     __ptext26:
  4498                           	callstack 0
  4499   002360                     ___wmul:
  4500                           	callstack 27
  4501   002360  5006               	movf	___wmul@multiplier^0,w,c
  4502   002362  0208               	mulwf	___wmul@multiplicand^0,c
  4503   002364  CFF3 F00A          	movff	prodl,___wmul@product
  4504   002368  CFF4 F00B          	movff	prodh,___wmul@product+1
  4505   00236C  5006               	movf	___wmul@multiplier^0,w,c
  4506   00236E  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  4507   002370  50F3               	movf	243,w,c
  4508   002372  260B               	addwf	(___wmul@product+1)^0,f,c
  4509   002374  5007               	movf	(___wmul@multiplier+1)^0,w,c
  4510   002376  0208               	mulwf	___wmul@multiplicand^0,c
  4511   002378  50F3               	movf	243,w,c
  4512   00237A  260B               	addwf	(___wmul@product+1)^0,f,c
  4513   00237C  C00A  F006         	movff	___wmul@product,?___wmul
  4514   002380  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  4515   002384  0012               	return		;funcret
  4516   002386                     __end_of___wmul:
  4517                           	callstack 0
  4518                           
  4519 ;; *************** function _LCD_sendstring *****************
  4520 ;; Defined at:
  4521 ;;		line 109 in file "LCD.c"
  4522 ;; Parameters:    Size  Location     Type
  4523 ;;  string          2    8[COMRAM] PTR unsigned char 
  4524 ;;		 -> main@strdate(100), 
  4525 ;; Auto vars:     Size  Location     Type
  4526 ;;		None
  4527 ;; Return value:  Size  Location     Type
  4528 ;;                  1    wreg      void 
  4529 ;; Registers used:
  4530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4531 ;; Tracked objects:
  4532 ;;		On entry : 0/0
  4533 ;;		On exit  : 0/0
  4534 ;;		Unchanged: 0/0
  4535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4536 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4539 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4540 ;;Total ram usage:        2 bytes
  4541 ;; Hardware stack levels used: 1
  4542 ;; Hardware stack levels required when called: 5
  4543 ;; This function calls:
  4544 ;;		_LCD_sendbyte
  4545 ;; This function is called by:
  4546 ;;		_date2String
  4547 ;;		_time2String
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550                           
  4551                           	psect	text27
  4552   00229C                     __ptext27:
  4553                           	callstack 0
  4554   00229C                     _LCD_sendstring:
  4555                           	callstack 24
  4556   00229C                     
  4557                           ;LCD.c: 111: {;LCD.c: 112:  while(*string != 0){
  4558   00229C  EF5B  F011         	goto	l3447
  4559   0022A0                     l3443:
  4560                           
  4561                           ;LCD.c: 113:   LCD_sendbyte(*string++,1);
  4562   0022A0  0E01               	movlw	1
  4563   0022A2  6E07               	movwf	LCD_sendbyte@type^0,c
  4564   0022A4  C009  FFD9         	movff	LCD_sendstring@string,fsr2l
  4565   0022A8  C00A  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  4566   0022AC  50DF               	movf	indf2,w,c
  4567   0022AE  EC82  F011         	call	_LCD_sendbyte
  4568   0022B2  4A09               	infsnz	LCD_sendstring@string^0,f,c
  4569   0022B4  2A0A               	incf	(LCD_sendstring@string+1)^0,f,c
  4570   0022B6                     l3447:
  4571                           
  4572                           ;LCD.c: 112:  while(*string != 0){
  4573   0022B6  C009  FFD9         	movff	LCD_sendstring@string,fsr2l
  4574   0022BA  C00A  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  4575   0022BE  50DF               	movf	indf2,w,c
  4576   0022C0  A4D8               	btfss	status,2,c
  4577   0022C2  EF65  F011         	goto	u2801
  4578   0022C6  EF67  F011         	goto	u2800
  4579   0022CA                     u2801:
  4580   0022CA  EF50  F011         	goto	l3443
  4581   0022CE                     u2800:
  4582   0022CE  0012               	return		;funcret
  4583   0022D0                     __end_of_LCD_sendstring:
  4584                           	callstack 0
  4585                           
  4586 ;; *************** function _Timer0_init *****************
  4587 ;; Defined at:
  4588 ;;		line 7 in file "timers.c"
  4589 ;; Parameters:    Size  Location     Type
  4590 ;;		None
  4591 ;; Auto vars:     Size  Location     Type
  4592 ;;		None
  4593 ;; Return value:  Size  Location     Type
  4594 ;;                  1    wreg      void 
  4595 ;; Registers used:
  4596 ;;		wreg, status,2
  4597 ;; Tracked objects:
  4598 ;;		On entry : 0/0
  4599 ;;		On exit  : 0/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4606 ;;Total ram usage:        0 bytes
  4607 ;; Hardware stack levels used: 1
  4608 ;; Hardware stack levels required when called: 2
  4609 ;; This function calls:
  4610 ;;		Nothing
  4611 ;; This function is called by:
  4612 ;;		_main
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616                           	psect	text28
  4617   0023F4                     __ptext28:
  4618                           	callstack 0
  4619   0023F4                     _Timer0_init:
  4620                           	callstack 28
  4621   0023F4                     
  4622                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  4623   0023F4  50D6               	movf	214,w,c	;volatile
  4624   0023F6  0B1F               	andlw	-225
  4625   0023F8  0940               	iorlw	64
  4626   0023FA  6ED6               	movwf	214,c	;volatile
  4627   0023FC                     
  4628                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  4629   0023FC  88D6               	bsf	214,4,c	;volatile
  4630                           
  4631                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  4632   0023FE  50D6               	movf	214,w,c	;volatile
  4633   002400  0BF0               	andlw	-16
  4634   002402  0908               	iorlw	8
  4635   002404  6ED6               	movwf	214,c	;volatile
  4636   002406                     
  4637                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  4638   002406  88D5               	bsf	213,4,c	;volatile
  4639                           
  4640                           ;timers.c: 15:     TMR0H=0b00001011;
  4641   002408  0E0B               	movlw	11
  4642   00240A  6ED4               	movwf	212,c	;volatile
  4643                           
  4644                           ;timers.c: 16:     TMR0L=0b11011011;
  4645   00240C  0EDB               	movlw	219
  4646   00240E  6ED3               	movwf	211,c	;volatile
  4647   002410                     
  4648                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  4649   002410  8ED5               	bsf	213,7,c	;volatile
  4650   002412  0012               	return		;funcret
  4651   002414                     __end_of_Timer0_init:
  4652                           	callstack 0
  4653                           
  4654 ;; *************** function _LEDarray_init *****************
  4655 ;; Defined at:
  4656 ;;		line 10 in file "LEDarray.c"
  4657 ;; Parameters:    Size  Location     Type
  4658 ;;		None
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;		None
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  1    wreg      void 
  4663 ;; Registers used:
  4664 ;;		None
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4674 ;;Total ram usage:        0 bytes
  4675 ;; Hardware stack levels used: 1
  4676 ;; Hardware stack levels required when called: 2
  4677 ;; This function calls:
  4678 ;;		Nothing
  4679 ;; This function is called by:
  4680 ;;		_main
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           	psect	text29
  4685   002386                     __ptext29:
  4686                           	callstack 0
  4687   002386                     _LEDarray_init:
  4688                           	callstack 28
  4689   002386                     
  4690                           ;LEDarray.c: 13:     TRISGbits.TRISG0 = 0;
  4691   002386  9087               	bcf	135,0,c	;volatile
  4692                           
  4693                           ;LEDarray.c: 14:     TRISGbits.TRISG1 = 0;
  4694   002388  9287               	bcf	135,1,c	;volatile
  4695                           
  4696                           ;LEDarray.c: 15:     TRISAbits.TRISA2 = 0;
  4697   00238A  9481               	bcf	129,2,c	;volatile
  4698                           
  4699                           ;LEDarray.c: 16:     TRISFbits.TRISF6 = 0;
  4700   00238C  9C86               	bcf	134,6,c	;volatile
  4701                           
  4702                           ;LEDarray.c: 17:     TRISAbits.TRISA4 = 0;
  4703   00238E  9881               	bcf	129,4,c	;volatile
  4704                           
  4705                           ;LEDarray.c: 18:     TRISAbits.TRISA5 = 0;
  4706   002390  9A81               	bcf	129,5,c	;volatile
  4707                           
  4708                           ;LEDarray.c: 19:     TRISFbits.TRISF0 = 0;
  4709   002392  9086               	bcf	134,0,c	;volatile
  4710                           
  4711                           ;LEDarray.c: 20:     TRISBbits.TRISB0 = 0;
  4712   002394  9082               	bcf	130,0,c	;volatile
  4713                           
  4714                           ;LEDarray.c: 21:     TRISBbits.TRISB1 = 0;
  4715   002396  9282               	bcf	130,1,c	;volatile
  4716                           
  4717                           ;LEDarray.c: 24:     LATGbits.LATG0 = 0;
  4718   002398  907F               	bcf	127,0,c	;volatile
  4719                           
  4720                           ;LEDarray.c: 25:     LATGbits.LATG1 = 0;
  4721   00239A  927F               	bcf	127,1,c	;volatile
  4722                           
  4723                           ;LEDarray.c: 26:     LATAbits.LATA2 = 0;
  4724   00239C  9479               	bcf	121,2,c	;volatile
  4725                           
  4726                           ;LEDarray.c: 27:     LATFbits.LATF6 = 0;
  4727   00239E  9C7E               	bcf	126,6,c	;volatile
  4728                           
  4729                           ;LEDarray.c: 28:     LATAbits.LATA4 = 0;
  4730   0023A0  9879               	bcf	121,4,c	;volatile
  4731                           
  4732                           ;LEDarray.c: 29:     LATAbits.LATA5 = 0;
  4733   0023A2  9A79               	bcf	121,5,c	;volatile
  4734                           
  4735                           ;LEDarray.c: 30:     LATFbits.LATF0 = 0;
  4736   0023A4  907E               	bcf	126,0,c	;volatile
  4737                           
  4738                           ;LEDarray.c: 31:     LATBbits.LATB0 = 0;
  4739   0023A6  907A               	bcf	122,0,c	;volatile
  4740                           
  4741                           ;LEDarray.c: 32:     LATBbits.LATB1 = 0;
  4742   0023A8  927A               	bcf	122,1,c	;volatile
  4743   0023AA  0012               	return		;funcret
  4744   0023AC                     __end_of_LEDarray_init:
  4745                           	callstack 0
  4746                           
  4747 ;; *************** function _LCD_setline *****************
  4748 ;; Defined at:
  4749 ;;		line 95 in file "LCD.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;  line            1    wreg     unsigned char 
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;  line            1    8[COMRAM] unsigned char 
  4754 ;; Return value:  Size  Location     Type
  4755 ;;                  1    wreg      void 
  4756 ;; Registers used:
  4757 ;;		wreg, status,2, status,0, cstack
  4758 ;; Tracked objects:
  4759 ;;		On entry : 0/0
  4760 ;;		On exit  : 0/0
  4761 ;;		Unchanged: 0/0
  4762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4764 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4766 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4767 ;;Total ram usage:        1 bytes
  4768 ;; Hardware stack levels used: 1
  4769 ;; Hardware stack levels required when called: 5
  4770 ;; This function calls:
  4771 ;;		_LCD_sendbyte
  4772 ;; This function is called by:
  4773 ;;		_main
  4774 ;; This function uses a non-reentrant model
  4775 ;;
  4776                           
  4777                           	psect	text30
  4778   0022D0                     __ptext30:
  4779                           	callstack 0
  4780   0022D0                     _LCD_setline:
  4781                           	callstack 25
  4782                           
  4783                           ;incstack = 0
  4784                           ;LCD_setline@line stored from wreg
  4785   0022D0  6E09               	movwf	LCD_setline@line^0,c
  4786   0022D2                     
  4787                           ;LCD.c: 96:     if(line&0b01)
  4788   0022D2  A009               	btfss	LCD_setline@line^0,0,c
  4789   0022D4  EF6E  F011         	goto	u3071
  4790   0022D8  EF70  F011         	goto	u3070
  4791   0022DC                     u3071:
  4792   0022DC  EF75  F011         	goto	l3683
  4793   0022E0                     u3070:
  4794   0022E0                     
  4795                           ;LCD.c: 97:     {;LCD.c: 98:         LCD_sendbyte(0x80,0);
  4796   0022E0  0E00               	movlw	0
  4797   0022E2  6E07               	movwf	LCD_sendbyte@type^0,c
  4798   0022E4  0E80               	movlw	128
  4799   0022E6  EC82  F011         	call	_LCD_sendbyte
  4800   0022EA                     l3683:
  4801                           
  4802                           ;LCD.c: 100:     if(line&0b10)
  4803   0022EA  A209               	btfss	LCD_setline@line^0,1,c
  4804   0022EC  EF7A  F011         	goto	u3081
  4805   0022F0  EF7C  F011         	goto	u3080
  4806   0022F4                     u3081:
  4807   0022F4  EF81  F011         	goto	l437
  4808   0022F8                     u3080:
  4809   0022F8                     
  4810                           ;LCD.c: 101:     {;LCD.c: 102:         LCD_sendbyte(0xC0,0);
  4811   0022F8  0E00               	movlw	0
  4812   0022FA  6E07               	movwf	LCD_sendbyte@type^0,c
  4813   0022FC  0EC0               	movlw	192
  4814   0022FE  EC82  F011         	call	_LCD_sendbyte
  4815   002302                     l437:
  4816   002302  0012               	return		;funcret
  4817   002304                     __end_of_LCD_setline:
  4818                           	callstack 0
  4819                           
  4820 ;; *************** function _LCD_Init *****************
  4821 ;; Defined at:
  4822 ;;		line 53 in file "LCD.c"
  4823 ;; Parameters:    Size  Location     Type
  4824 ;;		None
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;		None
  4827 ;; Return value:  Size  Location     Type
  4828 ;;                  1    wreg      void 
  4829 ;; Registers used:
  4830 ;;		wreg, status,2, status,0, cstack
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4838 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4839 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4840 ;;Total ram usage:        2 bytes
  4841 ;; Hardware stack levels used: 1
  4842 ;; Hardware stack levels required when called: 5
  4843 ;; This function calls:
  4844 ;;		_LCD_sendbyte
  4845 ;;		_LCD_sendnibble
  4846 ;; This function is called by:
  4847 ;;		_main
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           	psect	text31
  4852   001C7E                     __ptext31:
  4853                           	callstack 0
  4854   001C7E                     _LCD_Init:
  4855                           	callstack 25
  4856   001C7E                     
  4857                           ;LCD.c: 57:     TRISCbits.TRISC2 = 0;
  4858   001C7E  9483               	bcf	131,2,c	;volatile
  4859                           
  4860                           ;LCD.c: 58:     TRISCbits.TRISC6 = 0;
  4861   001C80  9C83               	bcf	131,6,c	;volatile
  4862                           
  4863                           ;LCD.c: 60:     TRISBbits.TRISB3 = 0;
  4864   001C82  9682               	bcf	130,3,c	;volatile
  4865                           
  4866                           ;LCD.c: 61:     TRISBbits.TRISB2 = 0;
  4867   001C84  9482               	bcf	130,2,c	;volatile
  4868                           
  4869                           ;LCD.c: 62:     TRISEbits.TRISE1 = 0;
  4870   001C86  9285               	bcf	133,1,c	;volatile
  4871                           
  4872                           ;LCD.c: 63:     TRISEbits.TRISE3 = 0;
  4873   001C88  9685               	bcf	133,3,c	;volatile
  4874                           
  4875                           ;LCD.c: 65:     LATBbits.LATB3 = 0;
  4876   001C8A  967A               	bcf	122,3,c	;volatile
  4877                           
  4878                           ;LCD.c: 66:     LATBbits.LATB2 = 0;
  4879   001C8C  947A               	bcf	122,2,c	;volatile
  4880                           
  4881                           ;LCD.c: 67:     LATEbits.LATE1 = 0;
  4882   001C8E  927D               	bcf	125,1,c	;volatile
  4883                           
  4884                           ;LCD.c: 68:     LATEbits.LATE3 = 0;
  4885   001C90  967D               	bcf	125,3,c	;volatile
  4886                           
  4887                           ;LCD.c: 70:     LATCbits.LATC2 = 0;
  4888   001C92  947B               	bcf	123,2,c	;volatile
  4889                           
  4890                           ;LCD.c: 71:     LATCbits.LATC6 = 0;
  4891   001C94  9C7B               	bcf	123,6,c	;volatile
  4892   001C96                     
  4893                           ;LCD.c: 72:     _delay((unsigned long)((40)*(64000000/4000.0)));
  4894   001C96  0E04               	movlw	4
  4895   001C98  6E0A               	movwf	(??_LCD_Init+1)^0,c
  4896   001C9A  0E40               	movlw	64
  4897   001C9C  6E09               	movwf	??_LCD_Init^0,c
  4898   001C9E  0E26               	movlw	38
  4899   001CA0                     u3157:
  4900   001CA0  2EE8               	decfsz	wreg,f,c
  4901   001CA2  D7FE               	bra	u3157
  4902   001CA4  2E09               	decfsz	??_LCD_Init^0,f,c
  4903   001CA6  D7FC               	bra	u3157
  4904   001CA8  2E0A               	decfsz	(??_LCD_Init+1)^0,f,c
  4905   001CAA  D7FA               	bra	u3157
  4906   001CAC  D000               	nop2	
  4907   001CAE                     
  4908                           ;LCD.c: 77:     LCD_sendnibble(0b0011);
  4909   001CAE  0E03               	movlw	3
  4910   001CB0  ECB2  F00F         	call	_LCD_sendnibble
  4911   001CB4                     
  4912                           ;LCD.c: 78:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  4913   001CB4  0ED5               	movlw	213
  4914   001CB6                     u3167:
  4915   001CB6  2EE8               	decfsz	wreg,f,c
  4916   001CB8  D7FE               	bra	u3167
  4917   001CBA  F000               	nop	
  4918   001CBC                     
  4919                           ;LCD.c: 79:     LCD_sendbyte(0b00101100,0);
  4920   001CBC  0E00               	movlw	0
  4921   001CBE  6E07               	movwf	LCD_sendbyte@type^0,c
  4922   001CC0  0E2C               	movlw	44
  4923   001CC2  EC82  F011         	call	_LCD_sendbyte
  4924   001CC6                     
  4925                           ;LCD.c: 80:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  4926   001CC6  0ED5               	movlw	213
  4927   001CC8                     u3177:
  4928   001CC8  2EE8               	decfsz	wreg,f,c
  4929   001CCA  D7FE               	bra	u3177
  4930   001CCC  F000               	nop	
  4931   001CCE                     
  4932                           ;LCD.c: 81:     LCD_sendbyte(0b00101100,0);
  4933   001CCE  0E00               	movlw	0
  4934   001CD0  6E07               	movwf	LCD_sendbyte@type^0,c
  4935   001CD2  0E2C               	movlw	44
  4936   001CD4  EC82  F011         	call	_LCD_sendbyte
  4937   001CD8                     
  4938                           ;LCD.c: 82:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  4939   001CD8  0ED5               	movlw	213
  4940   001CDA                     u3187:
  4941   001CDA  2EE8               	decfsz	wreg,f,c
  4942   001CDC  D7FE               	bra	u3187
  4943   001CDE  F000               	nop	
  4944   001CE0                     
  4945                           ;LCD.c: 83:     LCD_sendbyte(0b00001100,0);
  4946   001CE0  0E00               	movlw	0
  4947   001CE2  6E07               	movwf	LCD_sendbyte@type^0,c
  4948   001CE4  0E0C               	movlw	12
  4949   001CE6  EC82  F011         	call	_LCD_sendbyte
  4950   001CEA                     
  4951                           ;LCD.c: 84:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  4952   001CEA  0ED5               	movlw	213
  4953   001CEC                     u3197:
  4954   001CEC  2EE8               	decfsz	wreg,f,c
  4955   001CEE  D7FE               	bra	u3197
  4956   001CF0  F000               	nop	
  4957   001CF2                     
  4958                           ;LCD.c: 85:     LCD_sendbyte(0b00000001,0);
  4959   001CF2  0E00               	movlw	0
  4960   001CF4  6E07               	movwf	LCD_sendbyte@type^0,c
  4961   001CF6  0E01               	movlw	1
  4962   001CF8  EC82  F011         	call	_LCD_sendbyte
  4963   001CFC                     
  4964                           ;LCD.c: 86:     _delay((unsigned long)((1.53)*(64000000/4000.0)));
  4965   001CFC  0E20               	movlw	32
  4966   001CFE  6E09               	movwf	??_LCD_Init^0,c
  4967   001D00  0ECA               	movlw	202
  4968   001D02                     u3207:
  4969   001D02  2EE8               	decfsz	wreg,f,c
  4970   001D04  D7FE               	bra	u3207
  4971   001D06  2E09               	decfsz	??_LCD_Init^0,f,c
  4972   001D08  D7FC               	bra	u3207
  4973   001D0A                     
  4974                           ;LCD.c: 87:     LCD_sendbyte(0b00000111,0);
  4975   001D0A  0E00               	movlw	0
  4976   001D0C  6E07               	movwf	LCD_sendbyte@type^0,c
  4977   001D0E  0E07               	movlw	7
  4978   001D10  EC82  F011         	call	_LCD_sendbyte
  4979   001D14                     
  4980                           ;LCD.c: 88:     LCD_sendbyte(0b00001100,0);
  4981   001D14  0E00               	movlw	0
  4982   001D16  6E07               	movwf	LCD_sendbyte@type^0,c
  4983   001D18  0E0C               	movlw	12
  4984   001D1A  EC82  F011         	call	_LCD_sendbyte
  4985   001D1E  0012               	return		;funcret
  4986   001D20                     __end_of_LCD_Init:
  4987                           	callstack 0
  4988                           
  4989 ;; *************** function _LCD_sendbyte *****************
  4990 ;; Defined at:
  4991 ;;		line 36 in file "LCD.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;  Byte            1    wreg     unsigned char 
  4994 ;;  type            1    6[COMRAM] unsigned char 
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;  Byte            1    7[COMRAM] unsigned char 
  4997 ;; Return value:  Size  Location     Type
  4998 ;;                  1    wreg      void 
  4999 ;; Registers used:
  5000 ;;		wreg, status,2, status,0, cstack
  5001 ;; Tracked objects:
  5002 ;;		On entry : 0/0
  5003 ;;		On exit  : 0/0
  5004 ;;		Unchanged: 0/0
  5005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5006 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5007 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5009 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5010 ;;Total ram usage:        2 bytes
  5011 ;; Hardware stack levels used: 1
  5012 ;; Hardware stack levels required when called: 4
  5013 ;; This function calls:
  5014 ;;		_LCD_sendnibble
  5015 ;; This function is called by:
  5016 ;;		_LCD_Init
  5017 ;;		_LCD_setline
  5018 ;;		_LCD_sendstring
  5019 ;;		_date2String
  5020 ;;		_LCD_scroll
  5021 ;;		_time2String
  5022 ;; This function uses a non-reentrant model
  5023 ;;
  5024                           
  5025                           	psect	text32
  5026   002304                     __ptext32:
  5027                           	callstack 0
  5028   002304                     _LCD_sendbyte:
  5029                           	callstack 24
  5030                           
  5031                           ;incstack = 0
  5032                           ;LCD_sendbyte@Byte stored from wreg
  5033   002304  6E08               	movwf	LCD_sendbyte@Byte^0,c
  5034   002306                     
  5035                           ;LCD.c: 37:     if(type&0b1)
  5036   002306  A007               	btfss	LCD_sendbyte@type^0,0,c
  5037   002308  EF88  F011         	goto	u2671
  5038   00230C  EF8A  F011         	goto	u2670
  5039   002310                     u2671:
  5040   002310  EF8D  F011         	goto	l427
  5041   002314                     u2670:
  5042   002314                     
  5043                           ;LCD.c: 38:     {;LCD.c: 39:         LATCbits.LATC6 = 1;
  5044   002314  8C7B               	bsf	123,6,c	;volatile
  5045                           
  5046                           ;LCD.c: 40:     }
  5047   002316  EF8E  F011         	goto	l3401
  5048   00231A                     l427:
  5049                           
  5050                           ;LCD.c: 42:     {;LCD.c: 43:         (LATCbits.LATC6 = 0);
  5051   00231A  9C7B               	bcf	123,6,c	;volatile
  5052   00231C                     l3401:
  5053                           
  5054                           ;LCD.c: 45:     LCD_sendnibble(Byte>>4);
  5055   00231C  3808               	swapf	LCD_sendbyte@Byte^0,w,c
  5056   00231E  0B0F               	andlw	15
  5057   002320  ECB2  F00F         	call	_LCD_sendnibble
  5058   002324                     
  5059                           ;LCD.c: 46:     LCD_sendnibble(Byte);
  5060   002324  5008               	movf	LCD_sendbyte@Byte^0,w,c
  5061   002326  ECB2  F00F         	call	_LCD_sendnibble
  5062   00232A                     
  5063                           ;LCD.c: 47:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  5064   00232A  0EA0               	movlw	160
  5065   00232C                     u3217:
  5066   00232C  D000               	nop2	
  5067   00232E  2EE8               	decfsz	wreg,f,c
  5068   002330  D7FD               	bra	u3217
  5069   002332  0012               	return		;funcret
  5070   002334                     __end_of_LCD_sendbyte:
  5071                           	callstack 0
  5072                           
  5073 ;; *************** function _LCD_sendnibble *****************
  5074 ;; Defined at:
  5075 ;;		line 17 in file "LCD.c"
  5076 ;; Parameters:    Size  Location     Type
  5077 ;;  number          1    wreg     unsigned char 
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;  number          1    5[COMRAM] unsigned char 
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  1    wreg      void 
  5082 ;; Registers used:
  5083 ;;		wreg, cstack
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5090 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5092 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5093 ;;Total ram usage:        1 bytes
  5094 ;; Hardware stack levels used: 1
  5095 ;; Hardware stack levels required when called: 3
  5096 ;; This function calls:
  5097 ;;		_LCD_E_TOG
  5098 ;; This function is called by:
  5099 ;;		_LCD_sendbyte
  5100 ;;		_LCD_Init
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103                           
  5104                           	psect	text33
  5105   001F64                     __ptext33:
  5106                           	callstack 0
  5107   001F64                     _LCD_sendnibble:
  5108                           	callstack 24
  5109                           
  5110                           ;incstack = 0
  5111                           ;LCD_sendnibble@number stored from wreg
  5112   001F64  6E06               	movwf	LCD_sendnibble@number^0,c
  5113   001F66                     
  5114                           ;LCD.c: 20:     if(number&0b0001) LATBbits.LATB3=1;
  5115   001F66  A006               	btfss	LCD_sendnibble@number^0,0,c
  5116   001F68  EFB8  F00F         	goto	u2561
  5117   001F6C  EFBA  F00F         	goto	u2560
  5118   001F70                     u2561:
  5119   001F70  EFBD  F00F         	goto	l416
  5120   001F74                     u2560:
  5121   001F74  867A               	bsf	122,3,c	;volatile
  5122   001F76  EFBE  F00F         	goto	l3313
  5123   001F7A                     l416:
  5124   001F7A  967A               	bcf	122,3,c	;volatile
  5125   001F7C                     l3313:
  5126                           
  5127                           ;LCD.c: 22:     if(number&0b0010) LATBbits.LATB2=1;
  5128   001F7C  A206               	btfss	LCD_sendnibble@number^0,1,c
  5129   001F7E  EFC3  F00F         	goto	u2571
  5130   001F82  EFC5  F00F         	goto	u2570
  5131   001F86                     u2571:
  5132   001F86  EFC8  F00F         	goto	l418
  5133   001F8A                     u2570:
  5134   001F8A  847A               	bsf	122,2,c	;volatile
  5135   001F8C  EFC9  F00F         	goto	l3317
  5136   001F90                     l418:
  5137   001F90  947A               	bcf	122,2,c	;volatile
  5138   001F92                     l3317:
  5139                           
  5140                           ;LCD.c: 24:     if(number&0b0100) LATEbits.LATE3=1;
  5141   001F92  A406               	btfss	LCD_sendnibble@number^0,2,c
  5142   001F94  EFCE  F00F         	goto	u2581
  5143   001F98  EFD0  F00F         	goto	u2580
  5144   001F9C                     u2581:
  5145   001F9C  EFD3  F00F         	goto	l420
  5146   001FA0                     u2580:
  5147   001FA0  867D               	bsf	125,3,c	;volatile
  5148   001FA2  EFD4  F00F         	goto	l3321
  5149   001FA6                     l420:
  5150   001FA6  967D               	bcf	125,3,c	;volatile
  5151   001FA8                     l3321:
  5152                           
  5153                           ;LCD.c: 26:     if(number&0b1000) LATEbits.LATE1=1;
  5154   001FA8  A606               	btfss	LCD_sendnibble@number^0,3,c
  5155   001FAA  EFD9  F00F         	goto	u2591
  5156   001FAE  EFDB  F00F         	goto	u2590
  5157   001FB2                     u2591:
  5158   001FB2  EFDE  F00F         	goto	l422
  5159   001FB6                     u2590:
  5160   001FB6  827D               	bsf	125,1,c	;volatile
  5161   001FB8  EFDF  F00F         	goto	l3325
  5162   001FBC                     l422:
  5163   001FBC  927D               	bcf	125,1,c	;volatile
  5164   001FBE                     l3325:
  5165                           
  5166                           ;LCD.c: 28:     LCD_E_TOG();
  5167   001FBE  EC36  F012         	call	_LCD_E_TOG	;wreg free
  5168   001FC2                     
  5169                           ;LCD.c: 29:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  5170   001FC2  0E1A               	movlw	26
  5171   001FC4                     u3227:
  5172   001FC4  2EE8               	decfsz	wreg,f,c
  5173   001FC6  D7FE               	bra	u3227
  5174   001FC8  D000               	nop2	
  5175   001FCA  0012               	return		;funcret
  5176   001FCC                     __end_of_LCD_sendnibble:
  5177                           	callstack 0
  5178                           
  5179 ;; *************** function _LCD_E_TOG *****************
  5180 ;; Defined at:
  5181 ;;		line 8 in file "LCD.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;		None
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;		None
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  1    wreg      void 
  5188 ;; Registers used:
  5189 ;;		wreg
  5190 ;; Tracked objects:
  5191 ;;		On entry : 0/0
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5199 ;;Total ram usage:        0 bytes
  5200 ;; Hardware stack levels used: 1
  5201 ;; Hardware stack levels required when called: 2
  5202 ;; This function calls:
  5203 ;;		Nothing
  5204 ;; This function is called by:
  5205 ;;		_LCD_sendnibble
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           	psect	text34
  5210   00246C                     __ptext34:
  5211                           	callstack 0
  5212   00246C                     _LCD_E_TOG:
  5213                           	callstack 24
  5214   00246C                     
  5215                           ;LCD.c: 9:     LATCbits.LATC2=1;
  5216   00246C  847B               	bsf	123,2,c	;volatile
  5217   00246E                     
  5218                           ;LCD.c: 10:     _delay((unsigned long)((2)*(64000000/4000000.0)));
  5219   00246E  0E0A               	movlw	10
  5220   002470                     u3237:
  5221   002470  2EE8               	decfsz	wreg,f,c
  5222   002472  D7FE               	bra	u3237
  5223   002474  D000               	nop2	
  5224   002476                     
  5225                           ;LCD.c: 11:     LATCbits.LATC2=0;
  5226   002476  947B               	bcf	123,2,c	;volatile
  5227   002478  0012               	return		;funcret
  5228   00247A                     __end_of_LCD_E_TOG:
  5229                           	callstack 0
  5230                           
  5231 ;; *************** function _Interrupts_init *****************
  5232 ;; Defined at:
  5233 ;;		line 10 in file "interrupts.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;		None
  5236 ;; Auto vars:     Size  Location     Type
  5237 ;;		None
  5238 ;; Return value:  Size  Location     Type
  5239 ;;                  1    wreg      void 
  5240 ;; Registers used:
  5241 ;;		None
  5242 ;; Tracked objects:
  5243 ;;		On entry : 0/0
  5244 ;;		On exit  : 0/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5251 ;;Total ram usage:        0 bytes
  5252 ;; Hardware stack levels used: 1
  5253 ;; Hardware stack levels required when called: 2
  5254 ;; This function calls:
  5255 ;;		Nothing
  5256 ;; This function is called by:
  5257 ;;		_main
  5258 ;; This function uses a non-reentrant model
  5259 ;;
  5260                           
  5261                           	psect	text35
  5262   00245A                     __ptext35:
  5263                           	callstack 0
  5264   00245A                     _Interrupts_init:
  5265                           	callstack 28
  5266   00245A                     
  5267                           ;interrupts.c: 14:     PIE2bits.C1IE=1;
  5268   00245A  010E               	movlb	14	; () banked
  5269   00245C  812B               	bsf	43,0,b	;volatile
  5270                           
  5271                           ;interrupts.c: 15:     PIE0bits.TMR0IE=1;
  5272   00245E  8B29               	bsf	41,5,b	;volatile
  5273                           
  5274                           ;interrupts.c: 16:     IPR2bits.C1IP = 1;
  5275   002460  8121               	bsf	33,0,b	;volatile
  5276                           
  5277                           ;interrupts.c: 17:     IPR0bits.TMR0IP = 0;
  5278   002462  9B1F               	bcf	31,5,b	;volatile
  5279                           
  5280                           ;interrupts.c: 18:     INTCONbits.IPEN=1;
  5281   002464  8AF2               	bsf	242,5,c	;volatile
  5282                           
  5283                           ;interrupts.c: 19:     INTCONbits.PEIE=1;
  5284   002466  8CF2               	bsf	242,6,c	;volatile
  5285                           
  5286                           ;interrupts.c: 20:     INTCONbits.GIE=1;
  5287   002468  8EF2               	bsf	242,7,c	;volatile
  5288   00246A                     
  5289                           ; BSR set to: 14
  5290   00246A  0012               	return		;funcret
  5291   00246C                     __end_of_Interrupts_init:
  5292                           	callstack 0
  5293                           
  5294 ;; *************** function _Comp1_init_rising_edge *****************
  5295 ;; Defined at:
  5296 ;;		line 24 in file "comparator.c"
  5297 ;; Parameters:    Size  Location     Type
  5298 ;;		None
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;		None
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  1    wreg      void 
  5303 ;; Registers used:
  5304 ;;		wreg, status,2, cstack
  5305 ;; Tracked objects:
  5306 ;;		On entry : 0/0
  5307 ;;		On exit  : 0/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5314 ;;Total ram usage:        0 bytes
  5315 ;; Hardware stack levels used: 1
  5316 ;; Hardware stack levels required when called: 3
  5317 ;; This function calls:
  5318 ;;		_DAC_init
  5319 ;; This function is called by:
  5320 ;;		_main
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323                           
  5324                           	psect	text36
  5325   0023AC                     __ptext36:
  5326                           	callstack 0
  5327   0023AC                     _Comp1_init_rising_edge:
  5328                           	callstack 27
  5329   0023AC                     
  5330                           ;comparator.c: 26:     TRISFbits.TRISF7=1;
  5331   0023AC  8E86               	bsf	134,7,c	;volatile
  5332   0023AE                     
  5333                           ;comparator.c: 27:     CM1NCHbits.NCH=0b011;
  5334   0023AE  010E               	movlb	14	; () banked
  5335   0023B0  51D2               	movf	210,w,b	;volatile
  5336   0023B2  0BF8               	andlw	-8
  5337   0023B4  0903               	iorlw	3
  5338   0023B6  6FD2               	movwf	210,b	;volatile
  5339                           
  5340                           ;comparator.c: 28:     CM1PCHbits.PCH=0b101;
  5341   0023B8  51D3               	movf	211,w,b	;volatile
  5342   0023BA  0BF8               	andlw	-8
  5343   0023BC  0905               	iorlw	5
  5344   0023BE  6FD3               	movwf	211,b	;volatile
  5345   0023C0                     
  5346                           ; BSR set to: 14
  5347                           ;comparator.c: 29:     CM1CON0bits.HYS=1;
  5348   0023C0  83D0               	bsf	208,1,b	;volatile
  5349   0023C2                     
  5350                           ; BSR set to: 14
  5351                           ;comparator.c: 30:     CM1CON0bits.POL=1;
  5352   0023C2  89D0               	bsf	208,4,b	;volatile
  5353   0023C4                     
  5354                           ; BSR set to: 14
  5355                           ;comparator.c: 31:     CM1CON1bits.INTP=1;
  5356   0023C4  83D1               	bsf	209,1,b	;volatile
  5357   0023C6                     
  5358                           ; BSR set to: 14
  5359                           ;comparator.c: 32:     DAC_init();
  5360   0023C6  EC23  F012         	call	_DAC_init	;wreg free
  5361   0023CA                     
  5362                           ;comparator.c: 33:     CM1CON0bits.EN=1;
  5363   0023CA  010E               	movlb	14	; () banked
  5364   0023CC  8FD0               	bsf	208,7,b	;volatile
  5365   0023CE                     
  5366                           ; BSR set to: 14
  5367   0023CE  0012               	return		;funcret
  5368   0023D0                     __end_of_Comp1_init_rising_edge:
  5369                           	callstack 0
  5370                           
  5371 ;; *************** function _Comp1_init_falling_edge *****************
  5372 ;; Defined at:
  5373 ;;		line 37 in file "comparator.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;		None
  5376 ;; Auto vars:     Size  Location     Type
  5377 ;;		None
  5378 ;; Return value:  Size  Location     Type
  5379 ;;                  1    wreg      void 
  5380 ;; Registers used:
  5381 ;;		wreg, status,2, cstack
  5382 ;; Tracked objects:
  5383 ;;		On entry : 0/0
  5384 ;;		On exit  : 0/0
  5385 ;;		Unchanged: 0/0
  5386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5391 ;;Total ram usage:        0 bytes
  5392 ;; Hardware stack levels used: 1
  5393 ;; Hardware stack levels required when called: 3
  5394 ;; This function calls:
  5395 ;;		_DAC_init
  5396 ;; This function is called by:
  5397 ;;		_main
  5398 ;; This function uses a non-reentrant model
  5399 ;;
  5400                           
  5401                           	psect	text37
  5402   0023D0                     __ptext37:
  5403                           	callstack 0
  5404   0023D0                     _Comp1_init_falling_edge:
  5405                           	callstack 27
  5406   0023D0                     
  5407                           ;comparator.c: 39:     TRISFbits.TRISF7=1;
  5408   0023D0  8E86               	bsf	134,7,c	;volatile
  5409   0023D2                     
  5410                           ;comparator.c: 40:     CM1NCHbits.NCH=0b011;
  5411   0023D2  010E               	movlb	14	; () banked
  5412   0023D4  51D2               	movf	210,w,b	;volatile
  5413   0023D6  0BF8               	andlw	-8
  5414   0023D8  0903               	iorlw	3
  5415   0023DA  6FD2               	movwf	210,b	;volatile
  5416                           
  5417                           ;comparator.c: 41:     CM1PCHbits.PCH=0b101;
  5418   0023DC  51D3               	movf	211,w,b	;volatile
  5419   0023DE  0BF8               	andlw	-8
  5420   0023E0  0905               	iorlw	5
  5421   0023E2  6FD3               	movwf	211,b	;volatile
  5422   0023E4                     
  5423                           ; BSR set to: 14
  5424                           ;comparator.c: 42:     CM1CON0bits.HYS=1;
  5425   0023E4  83D0               	bsf	208,1,b	;volatile
  5426   0023E6                     
  5427                           ; BSR set to: 14
  5428                           ;comparator.c: 43:     CM1CON0bits.POL=1;
  5429   0023E6  89D0               	bsf	208,4,b	;volatile
  5430   0023E8                     
  5431                           ; BSR set to: 14
  5432                           ;comparator.c: 44:     CM1CON1bits.INTN=1;
  5433   0023E8  81D1               	bsf	209,0,b	;volatile
  5434   0023EA                     
  5435                           ; BSR set to: 14
  5436                           ;comparator.c: 45:     DAC_init();
  5437   0023EA  EC23  F012         	call	_DAC_init	;wreg free
  5438   0023EE                     
  5439                           ;comparator.c: 46:     CM1CON0bits.EN=1;
  5440   0023EE  010E               	movlb	14	; () banked
  5441   0023F0  8FD0               	bsf	208,7,b	;volatile
  5442   0023F2                     
  5443                           ; BSR set to: 14
  5444   0023F2  0012               	return		;funcret
  5445   0023F4                     __end_of_Comp1_init_falling_edge:
  5446                           	callstack 0
  5447                           
  5448 ;; *************** function _DAC_init *****************
  5449 ;; Defined at:
  5450 ;;		line 7 in file "comparator.c"
  5451 ;; Parameters:    Size  Location     Type
  5452 ;;		None
  5453 ;; Auto vars:     Size  Location     Type
  5454 ;;		None
  5455 ;; Return value:  Size  Location     Type
  5456 ;;                  1    wreg      void 
  5457 ;; Registers used:
  5458 ;;		wreg, status,2
  5459 ;; Tracked objects:
  5460 ;;		On entry : 0/0
  5461 ;;		On exit  : 0/0
  5462 ;;		Unchanged: 0/0
  5463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5468 ;;Total ram usage:        0 bytes
  5469 ;; Hardware stack levels used: 1
  5470 ;; Hardware stack levels required when called: 2
  5471 ;; This function calls:
  5472 ;;		Nothing
  5473 ;; This function is called by:
  5474 ;;		_Comp1_init_rising_edge
  5475 ;;		_Comp1_init_falling_edge
  5476 ;; This function uses a non-reentrant model
  5477 ;;
  5478                           
  5479                           	psect	text38
  5480   002446                     __ptext38:
  5481                           	callstack 0
  5482   002446                     _DAC_init:
  5483                           	callstack 27
  5484   002446                     
  5485                           ;comparator.c: 9:     DAC1CON0bits.PSS=0b00;
  5486   002446  0EF3               	movlw	-13
  5487   002448  010E               	movlb	14	; () banked
  5488   00244A  17C6               	andwf	198,f,b	;volatile
  5489   00244C                     
  5490                           ; BSR set to: 14
  5491                           ;comparator.c: 10:     DAC1CON0bits.NSS=0b0;
  5492   00244C  91C6               	bcf	198,0,b	;volatile
  5493                           
  5494                           ;comparator.c: 14:     DAC1CON1bits.DAC1R=20;
  5495   00244E  51C7               	movf	199,w,b	;volatile
  5496   002450  0BE0               	andlw	-32
  5497   002452  0914               	iorlw	20
  5498   002454  6FC7               	movwf	199,b	;volatile
  5499   002456                     
  5500                           ; BSR set to: 14
  5501                           ;comparator.c: 15:     DAC1CON0bits.DAC1EN=1;
  5502   002456  8FC6               	bsf	198,7,b	;volatile
  5503   002458                     
  5504                           ; BSR set to: 14
  5505   002458  0012               	return		;funcret
  5506   00245A                     __end_of_DAC_init:
  5507                           	callstack 0
  5508                           
  5509 ;; *************** function _ADC_init *****************
  5510 ;; Defined at:
  5511 ;;		line 11 in file "ADC.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;		None
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;		None
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  1    wreg      void 
  5518 ;; Registers used:
  5519 ;;		wreg, status,2
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5529 ;;Total ram usage:        0 bytes
  5530 ;; Hardware stack levels used: 1
  5531 ;; Hardware stack levels required when called: 2
  5532 ;; This function calls:
  5533 ;;		Nothing
  5534 ;; This function is called by:
  5535 ;;		_main
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           	psect	text39
  5540   002414                     __ptext39:
  5541                           	callstack 0
  5542   002414                     _ADC_init:
  5543                           	callstack 28
  5544   002414                     
  5545                           ;ADC.c: 13:     TRISAbits.TRISA3=1;
  5546   002414  8681               	bsf	129,3,c	;volatile
  5547                           
  5548                           ;ADC.c: 14:     ANSELAbits.ANSELA3=1;
  5549   002416  010E               	movlb	14	; () banked
  5550   002418  8792               	bsf	146,3,b	;volatile
  5551                           
  5552                           ;ADC.c: 17:     ADREFbits.ADNREF = 0;
  5553   00241A  010F               	movlb	15	; () banked
  5554   00241C  9958               	bcf	88,4,b	;volatile
  5555   00241E                     
  5556                           ; BSR set to: 15
  5557                           ;ADC.c: 18:     ADREFbits.ADPREF = 0b00;
  5558   00241E  0EFC               	movlw	-4
  5559   002420  1758               	andwf	88,f,b	;volatile
  5560                           
  5561                           ;ADC.c: 19:     ADPCH=0b11;
  5562   002422  0E03               	movlw	3
  5563   002424  6F5F               	movwf	95,b	;volatile
  5564   002426                     
  5565                           ; BSR set to: 15
  5566                           ;ADC.c: 20:     ADCON0bits.ADFM = 0;
  5567   002426  9460               	bcf	96,2,c	;volatile
  5568   002428                     
  5569                           ; BSR set to: 15
  5570                           ;ADC.c: 21:     ADCON0bits.ADCS = 1;
  5571   002428  8860               	bsf	96,4,c	;volatile
  5572   00242A                     
  5573                           ; BSR set to: 15
  5574                           ;ADC.c: 22:     ADCON0bits.ADON = 1;
  5575   00242A  8E60               	bsf	96,7,c	;volatile
  5576   00242C                     
  5577                           ; BSR set to: 15
  5578   00242C  0012               	return		;funcret
  5579   00242E                     __end_of_ADC_init:
  5580                           	callstack 0
  5581                           
  5582 ;; *************** function _LowISR *****************
  5583 ;; Defined at:
  5584 ;;		line 37 in file "interrupts.c"
  5585 ;; Parameters:    Size  Location     Type
  5586 ;;		None
  5587 ;; Auto vars:     Size  Location     Type
  5588 ;;		None
  5589 ;; Return value:  Size  Location     Type
  5590 ;;                  1    wreg      void 
  5591 ;; Registers used:
  5592 ;;		wreg, status,2, status,0
  5593 ;; Tracked objects:
  5594 ;;		On entry : 0/0
  5595 ;;		On exit  : 0/0
  5596 ;;		Unchanged: 0/0
  5597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5600 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5601 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5602 ;;Total ram usage:        4 bytes
  5603 ;; Hardware stack levels used: 1
  5604 ;; Hardware stack levels required when called: 1
  5605 ;; This function calls:
  5606 ;;		Nothing
  5607 ;; This function is called by:
  5608 ;;		Interrupt level 1
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           	psect	intcodelo
  5613   000018                     __pintcodelo:
  5614                           	callstack 0
  5615   000018                     _LowISR:
  5616                           	callstack 20
  5617                           
  5618                           ; BSR set to: 15
  5619                           ;incstack = 0
  5620   000018  8056               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  5621   00001A  CFD8 F003          	movff	status,??_LowISR+1
  5622   00001E  CFE8 F004          	movff	wreg,??_LowISR+2
  5623   000022  CFE0 F005          	movff	bsr,??_LowISR+3
  5624   000026                     
  5625                           ;interrupts.c: 39:     if(PIR0bits.TMR0IF){
  5626   000026  010E               	movlb	14	; () banked
  5627   000028  AB33               	btfss	51,5,b	;volatile
  5628   00002A  EF19  F000         	goto	i1u106_21
  5629   00002E  EF1B  F000         	goto	i1u106_20
  5630   000032                     i1u106_21:
  5631   000032  EF22  F000         	goto	i1l2213
  5632   000036                     i1u106_20:
  5633   000036                     
  5634                           ; BSR set to: 14
  5635                           ;interrupts.c: 40:         seconds++;
  5636   000036  4A53               	infsnz	_seconds^0,f,c
  5637   000038  2A54               	incf	(_seconds+1)^0,f,c
  5638   00003A                     
  5639                           ; BSR set to: 14
  5640                           ;interrupts.c: 41:         TMR0H=00001011;
  5641   00003A  0E09               	movlw	9
  5642   00003C  6ED4               	movwf	212,c	;volatile
  5643   00003E                     
  5644                           ; BSR set to: 14
  5645                           ;interrupts.c: 42:         TMR0L=11011011;
  5646   00003E  0EC3               	movlw	195
  5647   000040  6ED3               	movwf	211,c	;volatile
  5648   000042                     
  5649                           ; BSR set to: 14
  5650                           ;interrupts.c: 43:         PIR0bits.TMR0IF = 0;
  5651   000042  9B33               	bcf	51,5,b	;volatile
  5652   000044                     i1l2213:
  5653                           
  5654                           ; BSR set to: 14
  5655                           ;interrupts.c: 46:     if(seconds==5)
  5656   000044  0E05               	movlw	5
  5657   000046  1853               	xorwf	_seconds^0,w,c
  5658   000048  1054               	iorwf	(_seconds+1)^0,w,c
  5659   00004A  A4D8               	btfss	status,2,c
  5660   00004C  EF2A  F000         	goto	i1u107_21
  5661   000050  EF2C  F000         	goto	i1u107_20
  5662   000054                     i1u107_21:
  5663   000054  EF3D  F000         	goto	i1l205
  5664   000058                     i1u107_20:
  5665   000058                     
  5666                           ; BSR set to: 14
  5667                           ;interrupts.c: 47:     {;interrupts.c: 48:         LATDbits.LATD7 = !LATDbits.LATD7;
  5668   000058  AE7C               	btfss	124,7,c	;volatile
  5669   00005A  EF31  F000         	goto	i1u108_21
  5670   00005E  EF35  F000         	goto	i1u108_20
  5671   000062                     i1u108_21:
  5672   000062  6A02               	clrf	??_LowISR^0,c
  5673   000064  2A02               	incf	??_LowISR^0,f,c
  5674   000066  EF36  F000         	goto	i1u109_28
  5675   00006A                     i1u108_20:
  5676   00006A  6A02               	clrf	??_LowISR^0,c
  5677   00006C                     i1u109_28:
  5678   00006C  3202               	rrcf	??_LowISR^0,f,c
  5679   00006E  3202               	rrcf	??_LowISR^0,f,c
  5680   000070  507C               	movf	124,w,c	;volatile
  5681   000072  1802               	xorwf	??_LowISR^0,w,c
  5682   000074  0B7F               	andlw	-129
  5683   000076  1802               	xorwf	??_LowISR^0,w,c
  5684   000078  6E7C               	movwf	124,c	;volatile
  5685   00007A                     i1l205:
  5686                           
  5687                           ;interrupts.c: 50:     if (hour==5)
  5688   00007A  0E05               	movlw	5
  5689   00007C  1851               	xorwf	_hour^0,w,c
  5690   00007E  1052               	iorwf	(_hour+1)^0,w,c
  5691   000080  A4D8               	btfss	status,2,c
  5692   000082  EF45  F000         	goto	i1u110_21
  5693   000086  EF47  F000         	goto	i1u110_20
  5694   00008A                     i1u110_21:
  5695   00008A  EF48  F000         	goto	i1l207
  5696   00008E                     i1u110_20:
  5697   00008E                     
  5698                           ;interrupts.c: 51:     {;interrupts.c: 52:         LATHbits.LATH3 = 1;
  5699   00008E  8680               	bsf	128,3,c	;volatile
  5700   000090                     i1l207:
  5701   000090  C005  FFE0         	movff	??_LowISR+3,bsr
  5702   000094  C004  FFE8         	movff	??_LowISR+2,wreg
  5703   000098  C003  FFD8         	movff	??_LowISR+1,status
  5704   00009C  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5705   00009E  0010               	retfie	
  5706   0000A0                     __end_of_LowISR:
  5707                           	callstack 0
  5708                           
  5709 ;; *************** function _HighISR *****************
  5710 ;; Defined at:
  5711 ;;		line 28 in file "interrupts.c"
  5712 ;; Parameters:    Size  Location     Type
  5713 ;;		None
  5714 ;; Auto vars:     Size  Location     Type
  5715 ;;		None
  5716 ;; Return value:  Size  Location     Type
  5717 ;;                  1    wreg      void 
  5718 ;; Registers used:
  5719 ;;		wreg, status,2, status,0
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5727 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5728 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5729 ;;Total ram usage:        1 bytes
  5730 ;; Hardware stack levels used: 1
  5731 ;; This function calls:
  5732 ;;		Nothing
  5733 ;; This function is called by:
  5734 ;;		Interrupt level 2
  5735 ;; This function uses a non-reentrant model
  5736 ;;
  5737                           
  5738                           	psect	intcode
  5739   000008                     __pintcode:
  5740                           	callstack 0
  5741   000008                     _HighISR:
  5742                           	callstack 20
  5743                           
  5744                           ;incstack = 0
  5745   000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5746   00000A  EF13  F011         	goto	int_func
  5747                           
  5748                           	psect	intcode_body
  5749   002226                     __pintcode_body:
  5750                           	callstack 20
  5751   002226                     int_func:
  5752                           	callstack 20
  5753   002226                     
  5754                           ;interrupts.c: 30:         if(PIR2bits.C1IF){
  5755   002226  010E               	movlb	14	; () banked
  5756   002228  A135               	btfss	53,0,b	;volatile
  5757   00222A  EF19  F011         	goto	i2u103_41
  5758   00222E  EF1B  F011         	goto	i2u103_40
  5759   002232                     i2u103_41:
  5760   002232  EF2F  F011         	goto	i2l199
  5761   002236                     i2u103_40:
  5762   002236                     
  5763                           ; BSR set to: 14
  5764                           ;interrupts.c: 31:         LATHbits.LATH3 = !LATHbits.LATH3;
  5765   002236  A680               	btfss	128,3,c	;volatile
  5766   002238  EF20  F011         	goto	i2u104_41
  5767   00223C  EF24  F011         	goto	i2u104_40
  5768   002240                     i2u104_41:
  5769   002240  6A01               	clrf	??_HighISR^0,c
  5770   002242  2A01               	incf	??_HighISR^0,f,c
  5771   002244  EF25  F011         	goto	i2u105_48
  5772   002248                     i2u104_40:
  5773   002248  6A01               	clrf	??_HighISR^0,c
  5774   00224A                     i2u105_48:
  5775   00224A  4601               	rlncf	??_HighISR^0,f,c
  5776   00224C  4601               	rlncf	??_HighISR^0,f,c
  5777   00224E  4601               	rlncf	??_HighISR^0,f,c
  5778   002250  5080               	movf	128,w,c	;volatile
  5779   002252  1801               	xorwf	??_HighISR^0,w,c
  5780   002254  0BF7               	andlw	-9
  5781   002256  1801               	xorwf	??_HighISR^0,w,c
  5782   002258  6E80               	movwf	128,c	;volatile
  5783   00225A                     
  5784                           ;interrupts.c: 32:         PIR2bits.C1IF=0;
  5785   00225A  010E               	movlb	14	; () banked
  5786   00225C  9135               	bcf	53,0,b	;volatile
  5787   00225E                     i2l199:
  5788                           
  5789                           ; BSR set to: 14
  5790   00225E  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5791   002260  0011               	retfie		f
  5792   002262                     __end_of_HighISR:
  5793                           	callstack 0
  5794                           
  5795                           	psect	rparam
  5796   000000                     
  5797                           	psect	temp
  5798   000056                     btemp:
  5799                           	callstack 0
  5800   000056                     	ds	1
  5801   000000                     int$flags	set	btemp
  5802   000000                     wtemp8	set	btemp+1
  5803   000000                     ttemp5	set	btemp+1
  5804   000000                     ttemp6	set	btemp+4
  5805   000000                     ttemp7	set	btemp+8
  5806                           
  5807                           	psect	idloc
  5808                           
  5809                           ;Config register IDLOC0 @ 0x200000
  5810                           ;	unspecified, using default values
  5811   200000                     	org	2097152
  5812   200000  0FFF               	dw	4095
  5813                           
  5814                           ;Config register IDLOC1 @ 0x200002
  5815                           ;	unspecified, using default values
  5816   200002                     	org	2097154
  5817   200002  0FFF               	dw	4095
  5818                           
  5819                           ;Config register IDLOC2 @ 0x200004
  5820                           ;	unspecified, using default values
  5821   200004                     	org	2097156
  5822   200004  0FFF               	dw	4095
  5823                           
  5824                           ;Config register IDLOC3 @ 0x200006
  5825                           ;	unspecified, using default values
  5826   200006                     	org	2097158
  5827   200006  0FFF               	dw	4095
  5828                           
  5829                           ;Config register IDLOC4 @ 0x200008
  5830                           ;	unspecified, using default values
  5831   200008                     	org	2097160
  5832   200008  0FFF               	dw	4095
  5833                           
  5834                           ;Config register IDLOC5 @ 0x20000A
  5835                           ;	unspecified, using default values
  5836   20000A                     	org	2097162
  5837   20000A  0FFF               	dw	4095
  5838                           
  5839                           ;Config register IDLOC6 @ 0x20000C
  5840                           ;	unspecified, using default values
  5841   20000C                     	org	2097164
  5842   20000C  0FFF               	dw	4095
  5843                           
  5844                           ;Config register IDLOC7 @ 0x20000E
  5845                           ;	unspecified, using default values
  5846   20000E                     	org	2097166
  5847   20000E  0FFF               	dw	4095
  5848                           
  5849                           	psect	config
  5850                           
  5851                           ;Config register CONFIG1L @ 0x300000
  5852                           ;	External Oscillator mode Selection bits
  5853                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5854                           ;	Power-up default value for COSC bits
  5855                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5856   300000                     	org	3145728
  5857   300000  AA                 	db	170
  5858                           
  5859                           ;Config register CONFIG1H @ 0x300001
  5860                           ;	unspecified, using default values
  5861                           ;	Clock Out Enable bit
  5862                           ;	CLKOUTEN = 0x1, unprogrammed default
  5863                           ;	Clock Switch Enable bit
  5864                           ;	CSWEN = 0x1, unprogrammed default
  5865                           ;	Fail-Safe Clock Monitor Enable bit
  5866                           ;	FCMEN = 0x1, unprogrammed default
  5867   300001                     	org	3145729
  5868   300001  FF                 	db	255
  5869                           
  5870                           ;Config register CONFIG2L @ 0x300002
  5871                           ;	unspecified, using default values
  5872                           ;	Master Clear Enable bit
  5873                           ;	MCLRE = 0x1, unprogrammed default
  5874                           ;	Power-up Timer Enable bit
  5875                           ;	PWRTE = 0x1, unprogrammed default
  5876                           ;	Low-power BOR enable bit
  5877                           ;	LPBOREN = 0x1, unprogrammed default
  5878                           ;	Brown-out Reset Enable bits
  5879                           ;	BOREN = 0x3, unprogrammed default
  5880   300002                     	org	3145730
  5881   300002  FF                 	db	255
  5882                           
  5883                           ;Config register CONFIG2H @ 0x300003
  5884                           ;	unspecified, using default values
  5885                           ;	Brown Out Reset Voltage selection bits
  5886                           ;	BORV = 0x3, unprogrammed default
  5887                           ;	ZCD Disable bit
  5888                           ;	ZCD = 0x1, unprogrammed default
  5889                           ;	PPSLOCK bit One-Way Set Enable bit
  5890                           ;	PPS1WAY = 0x1, unprogrammed default
  5891                           ;	Stack Full/Underflow Reset Enable bit
  5892                           ;	STVREN = 0x1, unprogrammed default
  5893                           ;	Debugger Enable bit
  5894                           ;	DEBUG = 0x1, unprogrammed default
  5895                           ;	Extended Instruction Set Enable bit
  5896                           ;	XINST = 0x1, unprogrammed default
  5897   300003                     	org	3145731
  5898   300003  FF                 	db	255
  5899                           
  5900                           ;Config register CONFIG3L @ 0x300004
  5901                           ;	WDT Period Select bits
  5902                           ;	WDTCPS = 0x1F, unprogrammed default
  5903                           ;	WDT operating mode
  5904                           ;	WDTE = OFF, WDT Disabled
  5905   300004                     	org	3145732
  5906   300004  9F                 	db	159
  5907                           
  5908                           ;Config register CONFIG3H @ 0x300005
  5909                           ;	unspecified, using default values
  5910                           ;	WDT Window Select bits
  5911                           ;	WDTCWS = 0x7, unprogrammed default
  5912                           ;	WDT input clock selector
  5913                           ;	WDTCCS = 0x7, unprogrammed default
  5914   300005                     	org	3145733
  5915   300005  FF                 	db	255
  5916                           
  5917                           ;Config register CONFIG4L @ 0x300006
  5918                           ;	unspecified, using default values
  5919                           ;	Write Protection Block 0
  5920                           ;	WRT0 = 0x1, unprogrammed default
  5921                           ;	Write Protection Block 1
  5922                           ;	WRT1 = 0x1, unprogrammed default
  5923                           ;	Write Protection Block 2
  5924                           ;	WRT2 = 0x1, unprogrammed default
  5925                           ;	Write Protection Block 3
  5926                           ;	WRT3 = 0x1, unprogrammed default
  5927                           ;	Write Protection Block 3
  5928                           ;	WRT4 = 0x1, unprogrammed default
  5929                           ;	Write Protection Block 3
  5930                           ;	WRT5 = 0x1, unprogrammed default
  5931                           ;	Write Protection Block 3
  5932                           ;	WRT6 = 0x1, unprogrammed default
  5933                           ;	Write Protection Block 3
  5934                           ;	WRT7 = 0x1, unprogrammed default
  5935   300006                     	org	3145734
  5936   300006  FF                 	db	255
  5937                           
  5938                           ;Config register CONFIG4H @ 0x300007
  5939                           ;	unspecified, using default values
  5940                           ;	Configuration Register Write Protection bit
  5941                           ;	WRTC = 0x1, unprogrammed default
  5942                           ;	Boot Block Write Protection bit
  5943                           ;	WRTB = 0x1, unprogrammed default
  5944                           ;	Data EEPROM Write Protection bit
  5945                           ;	WRTD = 0x1, unprogrammed default
  5946                           ;	Scanner Enable bit
  5947                           ;	SCANE = 0x1, unprogrammed default
  5948                           ;	Low Voltage Programming Enable bit
  5949                           ;	LVP = 0x1, unprogrammed default
  5950   300007                     	org	3145735
  5951   300007  FF                 	db	255
  5952                           
  5953                           ;Config register CONFIG5L @ 0x300008
  5954                           ;	unspecified, using default values
  5955                           ;	UserNVM Program Memory Code Protection bit
  5956                           ;	CP = 0x1, unprogrammed default
  5957                           ;	DataNVM Memory Code Protection bit
  5958                           ;	CPD = 0x1, unprogrammed default
  5959   300008                     	org	3145736
  5960   300008  FF                 	db	255
  5961                           
  5962                           ;Config register CONFIG5H @ 0x300009
  5963                           ;	unspecified, using default values
  5964   300009                     	org	3145737
  5965   300009  FF                 	db	255
  5966                           
  5967                           ;Config register CONFIG6L @ 0x30000A
  5968                           ;	unspecified, using default values
  5969                           ;	Table Read Protection Block 0
  5970                           ;	EBTR0 = 0x1, unprogrammed default
  5971                           ;	Table Read Protection Block 1
  5972                           ;	EBTR1 = 0x1, unprogrammed default
  5973                           ;	Table Read Protection Block 2
  5974                           ;	EBTR2 = 0x1, unprogrammed default
  5975                           ;	Table Read Protection Block 3
  5976                           ;	EBTR3 = 0x1, unprogrammed default
  5977                           ;	Table Read Protection Block 4
  5978                           ;	EBTR4 = 0x1, unprogrammed default
  5979                           ;	Table Read Protection Block 5
  5980                           ;	EBTR5 = 0x1, unprogrammed default
  5981                           ;	Table Read Protection Block 6
  5982                           ;	EBTR6 = 0x1, unprogrammed default
  5983                           ;	Table Read Protection Block 7
  5984                           ;	EBTR7 = 0x1, unprogrammed default
  5985   30000A                     	org	3145738
  5986   30000A  FF                 	db	255
  5987                           
  5988                           ;Config register CONFIG6H @ 0x30000B
  5989                           ;	unspecified, using default values
  5990                           ;	Boot Block Table Read Protection bit
  5991                           ;	EBTRB = 0x1, unprogrammed default
  5992   30000B                     	org	3145739
  5993   30000B  FF                 	db	255
  5994                           tosu	equ	0xFFF
  5995                           tosh	equ	0xFFE
  5996                           tosl	equ	0xFFD
  5997                           stkptr	equ	0xFFC
  5998                           pclatu	equ	0xFFB
  5999                           pclath	equ	0xFFA
  6000                           pcl	equ	0xFF9
  6001                           tblptru	equ	0xFF8
  6002                           tblptrh	equ	0xFF7
  6003                           tblptrl	equ	0xFF6
  6004                           tablat	equ	0xFF5
  6005                           prodh	equ	0xFF4
  6006                           prodl	equ	0xFF3
  6007                           indf0	equ	0xFEF
  6008                           postinc0	equ	0xFEE
  6009                           postdec0	equ	0xFED
  6010                           preinc0	equ	0xFEC
  6011                           plusw0	equ	0xFEB
  6012                           fsr0h	equ	0xFEA
  6013                           fsr0l	equ	0xFE9
  6014                           wreg	equ	0xFE8
  6015                           indf1	equ	0xFE7
  6016                           postinc1	equ	0xFE6
  6017                           postdec1	equ	0xFE5
  6018                           preinc1	equ	0xFE4
  6019                           plusw1	equ	0xFE3
  6020                           fsr1h	equ	0xFE2
  6021                           fsr1l	equ	0xFE1
  6022                           bsr	equ	0xFE0
  6023                           indf2	equ	0xFDF
  6024                           postinc2	equ	0xFDE
  6025                           postdec2	equ	0xFDD
  6026                           preinc2	equ	0xFDC
  6027                           plusw2	equ	0xFDB
  6028                           fsr2h	equ	0xFDA
  6029                           fsr2l	equ	0xFD9
  6030                           status	equ	0xFD8

Data Sizes:
    Strings     26
    Constant    124
    Data        24
    BSS         49
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     80      85
    BANK0           160     49      67
    BANK1           256    100     160
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2103$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@strdate(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2050$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2050$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    date2String@buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@strdate(BANK1[100]), 

    LCD_sendstring@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@strdate(BANK1[100]), 


Critical Paths under _main in COMRAM

    _main->_date2String
    _timeadjuster->_sunrise
    _timeadjuster->_sunset
    _sunset->___wmul
    _sunrise->___wmul
    _increment->_LEDarray_disp_bin
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _LCD_sendstring->_LCD_sendbyte
    _LCD_setline->_LCD_sendbyte
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_date2String
    _date2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               200   200      0   20724
                                              0 BANK1    100   100      0
                           _ADC_init
            _Comp1_init_falling_edge
             _Comp1_init_rising_edge
                    _Interrupts_init
                           _LCD_Init
                        _LCD_setline
                      _LEDarray_init
                        _Timer0_init
                        _date2String
                          _day1_init
                    _daylightsavings
                          _increment
                           _poweroff
                    _streetLightInit
                            _sunrise
                             _sunset
                       _timeadjuster
 ---------------------------------------------------------------------------------
 (1) _timeadjuster                                         8     4      4    1121
                                             18 COMRAM     8     4      4
                            ___awdiv
                            _sunrise (ARG)
                             _sunset (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     805
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _sunset                                               7     5      2    1023
                                             11 COMRAM     7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _sunrise                                              7     5      2    1023
                                             11 COMRAM     7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _streetLightInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _poweroff                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _increment                                            2     2      0    1025
                                             31 COMRAM     2     2      0
                  _LEDarray_disp_bin
 ---------------------------------------------------------------------------------
 (2) _LEDarray_disp_bin                                   26    24      2    1025
                                              5 COMRAM    26    24      2
 ---------------------------------------------------------------------------------
 (1) _daylightsavings                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _day1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _date2String                                         10     2      8   13703
                                             78 COMRAM     2     2      0
                                             41 BANK0      8     0      8
                       _LCD_sendbyte
                     _LCD_sendstring
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             25    15     10   10349
                                             18 BANK0     23    13     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    9677
                                             76 COMRAM     2     2      0
                                             12 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           24    18      6    9183
                                             67 COMRAM     9     3      6
                                              0 BANK0     12    12      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    5075
                                             32 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2775
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1357
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     857
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                 9     7      2    1944
                                             11 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              5     3      2     259
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              4     2      2     281
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     952
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _LCD_sendstring                                       2     0      2    1542
                                              8 COMRAM     2     0      2
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_setline                                          1     1      0    1359
                                              8 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    1421
                                              8 COMRAM     2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendbyte                                         2     1      1    1297
                                              6 COMRAM     2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (4) _LCD_sendnibble                                       1     1      0     124
                                              5 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (5) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init_rising_edge                               0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (1) _Comp1_init_falling_edge                              0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _LowISR                                              4     4      0       0
                                              1 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _HighISR                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Comp1_init_falling_edge
     _DAC_init
   _Comp1_init_rising_edge
     _DAC_init
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_setline
     _LCD_sendbyte
   _LEDarray_init
   _Timer0_init
   _date2String
     _LCD_sendbyte
     _LCD_sendstring
       _LCD_sendbyte
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _isdigit
   _day1_init
   _daylightsavings
   _increment
     _LEDarray_disp_bin
   _poweroff
   _streetLightInit
   _sunrise
     ___wmul
   _sunset
     ___wmul
   _timeadjuster
     ___awdiv
     _sunrise (ARG)
     _sunset (ARG)

 _LowISR (ROOT)

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     64      A0       7       62.5%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     31      43       5       41.9%
BITBIGSFRlhlhh      84      0       0      38        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     50      55       1       90.4%
BITBIGSFRllhh       5C      0       0      41        0.0%
BITBIGSFRhhll       4A      0       0      34        0.0%
BITBIGSFRlhll       33      0       0      40        0.0%
BITBIGSFRllllll     30      0       0      47        0.0%
BITBIGSFRhhlhh      1B      0       0      33        0.0%
BITBIGSFRlhhhhl     14      0       0      35        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRlhlhll      8      0       0      39        0.0%
BITBIGSFRllllh       7      0       0      45        0.0%
BITBIGSFRllhll       7      0       0      43        0.0%
BITBIGSFRlhhl        6      0       0      37        0.0%
BITBIGSFRlhhhl       3      0       0      36        0.0%
BITBIGSFRllhlh       1      0       0      42        0.0%
BITBIGSFRlllllh      1      0       0      46        0.0%
BITBIGSFRlllh        1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     138      48        0.0%
DATA                 0      0     138       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Nov 08 02:17:55 2022

                             _L1 0E59                               _L2 0E55  
                             _L3 0E51                               _L4 0E4D  
                             _L5 0E49                               _L6 0E45  
                             l35 242C                               _P1 0E41  
                             _P2 0E3D                               _P3 0E39  
                             _P4 0E35                               l81 23AA  
                             _P5 0E31                               l85 19EA  
                             l88 1A44                     ___awdiv@sign 000B  
                             _bp 0E69                               _cp 0E1D  
                             bsr 000FE0              ___wmul@multiplicand 0008  
              ??_Interrupts_init 0006                              l130 2458  
                            l133 23CE                              l136 23F2  
                            l420 1FA6                              l308 2412  
                            l413 2478                              l422 1FBC  
                            l424 1FCA                              l416 1F7A  
                            l432 1D1E                              l193 246A  
                            l418 1F90                              l427 231A  
                            l443 22CE                              l452 1E1C  
                            l372 229A                              l380 1F62  
                            l429 2332                              l437 2302  
                            l358 2482                              l455 2384  
                            l375 21E4                              l368 195C  
                            l385 1EF6                              l394 2028  
                            l389 1E8A                              l582 16F2  
                            l569 158E                              l686 1BD2  
__end_of_Comp1_init_falling_edge 23F4          __end_of_streetLightInit 2484  
                            _lg2 0E2D                              _abs 21E6  
                            _pad 1BD4                              _ovt 0E21  
                            wreg 000FE8                             ?_abs 0018  
                           l1133 20CE                             l1222 2224  
                           l1215 207C                             l1160 1C18  
                           l1209 1150                             l1250 235E  
                           l1219 221C                             l1163 1C5A  
                           l1171 11EE                             l1244 1848  
                           l3101 143E                             l1165 1C7C  
                           l1173 11F6                             l1174 123C  
                           l1247 1850                             l3111 149A  
                           l3103 144C                             l3201 2120  
                           l3121 1504                             l3113 14A2  
                           l3105 146C                             l1273 1B0E  
                           l1281 21A4                             l1258 2160  
                           l3211 246C                             l3203 2134  
                           l3131 154E                             l3123 1524  
                           l3115 14B6                             l3107 1470  
                           l1187 1406                             l3213 246E  
                           l3205 2156                             l3301 181A  
                           l3133 156E                             l3125 1526  
                           l3117 14C4                             l3109 147C  
                           l3141 15A2                             l3221 1186  
                           l3215 2476                             l3311 1F74  
                           l3207 215A                             l3303 182C  
                           l3127 1538                             l3119 14D6  
                           l3151 1612                             l3143 15C2  
                           l3071 1A74                             l3231 11E2  
                           l3223 1196                             l3321 1FA8  
                           l3313 1F7C                             l3401 231C  
                           l3129 153E                             l3161 168A  
                           l3153 161A                             l3145 15C6  
                           l3137 1590                             l3073 1A92  
                           l3065 1A46                             l3081 216E  
                           l3241 1230                             l3233 11FE  
                           l3225 11B6                             l3217 1152  
                           l1474 2484                             l3323 1FB6  
                           l3315 1F8A                             l3403 2324  
                           l3163 169C                             l3155 162E  
                           l3147 15D4                             l3139 1594  
                           l3075 1AC8                             l3067 1A58  
                           l3083 2180                             l3251 12D6  
                           l3243 1238                             l3235 120E  
                           l3227 11C6                             l3219 1172  
                           l3331 0EC0                             l3411 2052  
                           l3325 1FBE                             l3317 1F92  
                           l3309 1F66                             l3405 232A  
                           l3093 1408                             l3157 163C  
                           l3165 16A2                             l3149 15F4  
                           l3069 1A6A                             l3085 2184  
                           l3181 1C10                             l3173 1BD4  
                           l3261 137E                             l3253 12DC  
                           l3245 1244                             l3237 1214  
                           l3229 11C8                             l3341 0EEE  
                           l3333 0ECE                             l3413 2072  
                           l3501 1BCA                             l3511 2428  
                           l3327 1FC2                             l3319 1FA0  
                           l3087 2360                             l3095 140C  
                           l3167 16B2                             l3159 166A  
                           l3191 21E6                             l3079 2162  
                           l3183 1C24                             l3175 1BE2  
                           l3271 13D6                             l3263 1398  
                           l3255 12E2                             l3247 124E  
                           l3239 1224                             l3351 0F56  
                           l3343 0F00                             l3335 0EDC  
                           l3407 202A                             l3431 19CA  
                           l3423 196E                             l3513 242A  
                           l3505 2414                             l3521 23C0  
                           l3441 229C                             l3089 237C  
                           l3097 141A                             l3169 16D2  
                           l3193 2200                             l3185 1C38  
                           l3177 1BF6                             l3273 13E6  
                           l3265 13B2                             l3249 1254  
                           l3257 1346                             l3361 0FF0  
                           l3353 0F7E                             l3337 0EE0  
                           l3329 0E98                             l3409 2036  
                           l3433 19CE                             l3425 198C  
                           l3417 195E                             l3601 18AC  
                           l3507 241E                             l3435 2446  
                           l3531 23D0                             l3523 23C2  
                           l3515 2386                             l3443 22A0  
                           l3195 2334                             l3291 1774  
                           l3283 170C                             l3099 143A  
                           l3187 1C3C                             l3179 1C04  
                           l3259 1360                             l3267 13C0  
                           l3371 106A                             l3355 0FB4  
                           l3347 0F0C                             l3339 0EEC  
                           l3451 2090                             l3427 19AA  
                           l3611 18F8                             l3603 18B4  
                           l3509 2426                             l3437 244C  
                           l3541 23EA                             l3533 23D2  
                           l3525 23C4                             l3517 23AC  
                           l3445 22B2                             l3293 17AC  
                           l3285 172C                             l3277 16F4  
                           l3189 1C68                             l3269 13D0  
                           l3373 108A                             l3365 0FFE  
                           l3357 0FC2                             l3349 0F44  
                           l3453 2098                             l3429 19C4  
                           l3621 1950                             l3613 1900  
                           l3605 18C8                             l3461 1B10  
                           l3439 2456                             l3543 23EE  
                           l3535 23E4                             l3527 23C6  
                           l3519 23AE                             l3551 23FC  
                           l3447 22B6                             l3199 211C  
                           l3287 1764                             l3279 1708  
                           l3375 10E2                             l3367 103A  
                           l3359 0FD0                             l3383 1124  
                           l3455 20A0                             l3623 1958  
                           l3615 192C                             l3607 18DA  
                           l3631 1EF8                             l3471 1B3C  
                           l3463 1B14                             l3537 23E6  
                           l3529 23CA                             l3545 245A  
                           l3561 1C7E                             l3553 2406  
                           l3289 176C                             l3369 104A  
                           l3457 20BC                             l3449 207E  
                           l3617 1934                             l3609 18E2  
                           l3625 2262                             l3633 1F1A  
                           l3481 1B6A                             l3473 1B44  
                           l3465 1B22                             l3539 23E8  
                           l3571 1CC6                             l3563 1C96  
                           l3555 2410                             l3299 17E6  
                           l3379 1112                             l3619 193A  
                           l3627 227C                             l3547 247A  
                           l3635 1F2C                             l3651 1EEE  
                           l3643 1E8C                             l3491 1BA4  
                           l3483 1B72                             l3475 1B48  
                           l3467 1B2A                             l3397 2306  
                           l3581 1CF2                             l3573 1CCE  
                           l3565 1CAE                             l3549 23F4  
                           l3557 21A6                             l3629 2298  
                           l3637 1F3A                             l3645 1EAE  
                           l3493 1BA6                             l3485 1B80  
                           l3477 1B50                             l3469 1B2E  
                           l3661 1E56                             l3741 1D20  
                           ?_pad 0016                             l3399 2314  
                           l3583 1CFC                             l3575 1CD8  
                           l3567 1CB4                             l3559 21E2  
                           l3671 1FF6                             l3591 1872  
                           l3639 1F5A                             l3647 1EC0  
                           l3495 1BAC                             l3487 1B86  
                           l3479 1B62                             l3663 1E6A  
                           l3655 1E1E                             l3751 1D40  
                           l3743 1D28                             l3585 1D0A  
                           l3577 1CE0                             l3569 1CBC  
                           l3681 22E0                             l3673 1FFA  
                           l3593 1880                             l3649 1ECE  
                           l3489 1B9C                             l3497 1BB2  
                           l3665 1E82                             l3657 1E26  
                           l3761 1D54                             l3753 1D44  
                           l3745 1D2C                             l3587 1D14  
                           l3579 1CEA                             l3683 22EA  
                           l3843 0F36                             l3691 1DE2  
                           l3675 200E                             l3667 1FCC  
                           l3595 188A                             l3499 1BC2  
                           l3659 1E46                             l3763 1D70  
                           l3755 1D48                             l3747 1D30  
                           l3685 22F8                             l3845 1796  
                           l3693 1DFA                             l3677 2022  
                           l3669 1FE2                             l3597 189C  
                           l3589 1852                             l3765 1D74  
                           l3757 1D4C                             l3749 1D34  
                           l3679 22D2                             l3695 1E04  
                           l3687 1DA8                             l3599 18A0  
                           l3767 1D7A                             l3759 1D50  
                           l3689 1DD6                             STR_1 0E8A  
                           STR_2 0E7D                             u2200 149A  
                           u2120 1A58                             u3000 1ECE  
                           u2201 1496                             u2121 1A54  
                           u3001 1ECA                             u2210 14C4  
                           u2130 1A6A                             u3010 1E6A  
                           u2211 14C0                             u2131 1A66  
                           u3011 1E66                             u2220 1504  
                           u2140 1A92                             u2300 1BE2  
                           u3020 1E82                             u2221 1500  
                           u2141 1A8E                             u2301 1BDE  
                           u3021 1E7E                             u2230 154E  
                           u2150 1AC8                             u2310 1C04  
                           u3030 1FE2                             u2231 154A  
                           u2151 1AC4                             u2311 1C00  
                           u3031 1FDE                             u2240 15A2  
                           u2160 21A4                             u2320 1C5A  
                           u2400 1184                             u3040 1FF6  
                           u2241 159E                             u2161 21A0  
                           u2321 1C56                             u3041 1FF2  
                           u2170 141A                             u2250 15D4  
                           u2330 1C68                             u2410 1196  
                           u3050 200E                             u2171 1416  
                           u2251 15D0                             u2331 1C64  
                           u2411 1192                             u3051 200A  
                           u2180 144C                             u2260 1612  
                           u2340 2200                             u2500 13C0  
                           u2420 11C6                             u3060 2022  
                           u2181 1448                             u2261 160E  
                           u2341 21FC                             u2501 13BC  
                           u2421 11C2                             u3061 201E  
                           u3070 22E0                             u2350 2358  
                           u2270 163C                             u2510 13D0  
                           u2430 11E2                             u3207 1D02  
                           u3071 22DC                             u2351 2352  
                           u2191 1476                             u2271 1638  
                           u2511 13CC                             u2431 11DE  
                           u3080 22F8                             u2360 235A  
                           u2520 172C                             u2280 166A  
                           u2440 120E                             u2600 0EC0  
                           u3217 232C                             u3081 22F4  
                           u2521 1728                             u2281 1666  
                           u2441 120A                             u2601 0EBC  
                           u3137 1DEC                             u2370 2134  
                           u2530 1760                             u2290 16B2  
                           u2450 1224                             u2610 0F56  
                           u3227 1FC4                             u2371 2130  
                           u2531 175C                             u2291 16AE  
                           u2451 1220                             u2611 0F52  
                           u3147 1E0E                             u2380 2156  
                           u2540 181A                             u2460 1360  
                           u2620 0F7E                             u2700 19EA  
                           u3237 2470                             u3157 1CA0  
                           u2381 2152                             u2541 1816  
                           u2461 135C                             u2621 0F7A  
                           u2701 19E6                             u2550 182C  
                           u2470 137E                             u2390 1182  
                           u2630 0FC2                             u3167 1CB6  
                           u2551 1828                             u2471 137A  
                           u2391 117C                             u2631 0FBE  
                           u2560 1F74                             u2800 22CE  
                           u2480 1398                             u2640 103A  
                           u2561 1F70                             u3177 1CC8  
                           u2801 22CA                             u2481 1394  
                           u2641 1036                             u2570 1F8A  
                           u2490 13B2                             u2650 106A  
                           u2810 1B22                             u2571 1F86  
                           u3187 1CDA                             u2491 13AE  
                           u2651 1066                             u2715 19F2  
                           u2811 1B1E                             u2580 1FA0  
                           u2660 108A                             u2716 19F4  
                           u2900 18F8                             u2820 1B3C  
                           u2581 1F9C                             u3197 1CEC  
                           u2661 1086                             u2725 19FC  
                           u2901 18F4                             u2821 1B38  
                           u2590 1FB6                             u2670 2314  
                           u2726 19FE                             u2910 192C  
                           u2830 1B62                             u2591 1FB2  
                           u2671 2310                             u2735 1A06  
                           u2911 1928                             u2831 1B5E  
                           u2680 2072                             u2736 1A08  
                           u2920 1950                             u2840 1B80  
                           u2681 206E                             u2745 1A10  
                           u2921 194C                             u2841 1B7C  
                           u2746 1A12                             u2690 198C  
                           u2930 227C                             u2850 1B9C  
                           u2755 1A1A                             u2691 1988  
                           u2931 2278                             u2851 1B98  
                           u2756 1A1C                             u2940 2298  
                           u2860 1BC2                             u2765 1A24  
                           u2941 2294                             u2861 1BBE  
                           u2766 1A26                             u2870 1872  
                           u2950 1F0A                             u2775 1A2E  
                           u2871 186E                             u2951 1F02  
                           u2776 1A30                             u2880 189C  
                           u2960 1F2C                             u2785 1A38  
                           u2881 1898                             u2961 1F28  
                           u2786 1A3A                             u2890 18C8  
                           u2970 1F3A                             u2795 1A42  
                           u2891 18C4                             u2971 1F36  
                           u2796 1A44                             u2980 1E9E  
                           u2981 1E96                             u2958 1F0C  
                           u2990 1EC0                             u2991 1EBC  
                           u2988 1EA0                             abs@a 0018  
                           _dbuf 0164                             _cp_h 0E79  
                           _cp_l 0E75                             _dp_h 0E09  
                           _dp_l 0E01                             _atoi 16F4  
                           _main 1D20                             _dtoa 1152  
                           _huge 0E61                             _hour 0051  
                           _prec 0099                             _year 009D  
                           pad@i 001D                             pad@p 001A  
                           _tiny 0E5D                             fsr1h 000FE2  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr1l 000FE1                             pad@w 001F  
                           fsr2l 000FD9                             btemp 0056  
                   ?_LCD_setline 0001                             prodh 000FF4  
                           prodl 000FF3                             start 00A0  
               __end_of_ADC_init 242E                      main@strdate 0100  
               __end_of_DAC_init 245A                  __end_of_HighISR 2262  
                   ___param_bank 000000                            ??_abs 001A  
                          ??_pad 001C                 __end_of_LCD_Init 1D20  
                __end_of___aodiv 1590                            ?_atoi 000C  
                          ?_main 0001                            ?_dtoa 0021  
                __end_of___aomod 16F4                            _ADPCH 000F5F  
                __end_of___awdiv 1BD4                  ___awdiv@divisor 0008  
                          i1l205 007A                            i1l207 0090  
                          i2l199 225E                  ___awdiv@counter 000A  
                   vfpfcnvrt@fmt 0046                            _TMR0H 000FD4  
                          _TMR0L 000FD3                  _daylightsavings 1FCC  
                          _lg2_h 0E29                            _lg2_l 0E25  
                          _flags 0055                            _errno 0095  
                          _ivln2 0E19                            _fputc 1A46  
                          _fputs 2162                  __end_of_isdigit 2360  
                __end_of_ivln2_h 0E75                  __end_of_ivln2_l 0E19  
                          _two24 0E65                            _month 0184  
                          atoi@n 0013                            pad@fp 0016  
                          atoi@s 000C                            _width 0097  
                          _putch 2484                            dtoa@d 0023  
                          dtoa@i 0042                            dtoa@n 0039  
                          dtoa@p 0035                            dtoa@s 0041  
                          dtoa@w 0037                  __end_of_isspace 2162  
                  ?_LCD_sendbyte 0007                            tablat 000FF5  
        timeadjuster@sunset_time 0015                            ttemp5 0057  
                          ttemp6 005A                            ttemp7 005E  
                          status 000FD8                            wtemp8 0057  
                __end_of_sprintf 20D0                  __end_of_sunrise 1F64  
                __initialization 20D0                     __end_of_cp_h 0E7D  
                   __end_of_cp_l 0E79                     __end_of_dp_h 0E11  
                   __end_of_dp_l 0E09                     __end_of_atoi 1852  
                   __end_of_main 1DA8                     __end_of_dtoa 1408  
                   __end_of_huge 0E65                     __end_of_tiny 0E61  
              __end_of_LCD_E_TOG 247A                           ??_atoi 000E  
                         ??_main 0051                           ??_dtoa 002B  
                  __activetblptr 000003                 ?_streetLightInit 0001  
                         ?_fputc 0006                           ?_fputs 000F  
                         _ADRESH 000F64                   ??_LCD_sendbyte 0008  
               ___awdiv@dividend 0006                           ?_putch 0001  
                         i1l2211 0042                           i1l2203 0026  
                         i1l2205 0036                           i1l2213 0044  
                         i1l2215 0058                           i1l2207 003A  
                         i1l2217 008E                           i1l2209 003E  
                         i2l2201 225A                           i2l2197 2226  
                         i2l2199 2236                    vfpfcnvrt@done 0068  
                      ??_HighISR 0001                _LEDarray_disp_bin 195E  
                         _LowISR 0018               ?_LEDarray_disp_bin 0006  
                  ??_Timer0_init 0006                     vfprintf@cfmt 004D  
                      ??___aodiv 0016                        ??___aomod 0016  
                         ___wmul 2360                        ??___awdiv 000A  
          LEDarray_disp_bin@mask 001C          __end_of_daylightsavings 202A  
            ??_LEDarray_disp_bin 0008                           clear_0 20F6  
                         clear_1 2102                 ___awdiv@quotient 000C  
                         isa$std 000001                           pad@buf 0018  
                         dtoa@fp 0021                           _sunset 1E8C  
                         fputc@c 0006                sunset@sunset_time 0011  
                         fputs@c 0013                           fputs@i 0014  
                         fputs@s 000F                        ??_isdigit 0008  
                   __mediumconst 0000                        ??_isspace 0008  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                        ?_ADC_init 0001  
               __end_of_poweroff 229C                           putch@c 0001  
                      ?_DAC_init 0001                 __end_of_vfprintf 207E  
       timeadjuster@sunrise_time 0013                 _tiny@sqrtf$F2355 0E11  
                      ??_sprintf 004F                        ??_sunrise 000E  
      __end_of_LEDarray_disp_bin 1A46                       __accesstop 0060  
        __end_of__initialization 2112                        ?_LCD_Init 0001  
       ??_Comp1_init_rising_edge 0006                    ___rparam_used 000001  
                  _LEDarray_init 2386                  _Interrupts_init 245A  
                 __pcstackCOMRAM 0001                     __pidataBANK1 242E  
                  __end_of_lg2_h 0E2D                    __end_of_lg2_l 0E29  
                  __end_of_ivln2 0E1D                    __end_of_fputc 1B10  
                  __end_of_fputs 21A6                    __end_of_two24 0E69  
                  __end_of_putch 2486                       __end_of_L1 0E5D  
                     __end_of_L2 0E59                       __end_of_L3 0E55  
                     __end_of_L4 0E51                       __end_of_L5 0E4D  
                     __end_of_L6 0E49                       __end_of_P1 0E45  
                     __end_of_P2 0E41                       __end_of_P3 0E3D  
                     __end_of_P4 0E39                       __end_of_P5 0E35  
            __end_of_Timer0_init 2414                       __end_of_bp 0E71  
                     __end_of_cp 0E21                       ??_ADC_init 0006  
                     ??_DAC_init 0006                          ??_fputc 000A  
                        ??_fputs 0013                          ??_putch 0006  
                     __pbssBANK0 0091                       __pbssBANK1 0164  
                     ??_LCD_Init 0009                   _LCD_sendnibble 1F64  
                 ?_LEDarray_init 0001              sunrise@sunrise_time 0011  
                 _LCD_sendstring 229C                          ?_LowISR 0001  
                   _day_of_month 019C           timeadjuster@adjustment 0019  
                        ?___wmul 0006             __end_of_LCD_sendbyte 2334  
               ?_daylightsavings 0001                          ?_sunset 000C  
              __end_of_day1_init 21E6                       _comp_check 009B  
         __end_of_LCD_sendnibble 1FCC          __end_of_Interrupts_init 246C  
               sunrise@prevState 000F                          _HighISR 0008  
         __end_of_LCD_sendstring 22D0                    ??_date2String 004F  
                      _ADREFbits 000F58          _Comp1_init_falling_edge 23D0  
                        __Hparam 0000                          __Lparam 0000  
                    _Timer0_init 23F4                          ___aodiv 1408  
                        ___aomod 1590                          ___awdiv 1B10  
                      ?_poweroff 0001                        ?_vfprintf 006C  
                   __psmallconst 0E00                          __pcinit 20D0  
                        __ramtop 0E00                          __ptext0 1D20  
                        __ptext1 1E1E                          __ptext2 1B10  
                        __ptext3 1E8C                          __ptext4 1EF8  
                        __ptext5 247A                          __ptext6 2262  
                        __ptext7 1852                          __ptext8 195E  
                        __ptext9 1FCC                __end_of_increment 195E  
                        _isdigit 2334                          _ivln2_h 0E71  
                        _ivln2_l 0E15                          _seconds 0053  
                        _isspace 211C                        _LCD_E_TOG 246C  
                LCD_setline@line 0009                          atoi@neg 0011  
                        _sprintf 207E                   __pintcode_body 2226  
                        _sunrise 1EF8             end_of_initialization 2112  
                ?_LCD_sendnibble 0001                    ?_timeadjuster 0013  
                        fputc@fp 0008                  ??_LEDarray_init 0006  
                        int_func 2226                          fputs@fp 0011  
                ?_LCD_sendstring 0009                __end_of_vfpfcnvrt 1152  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE              __end_of_date2String 1E1E  
               vfpfcnvrt@convarg 0060         __end_of_tiny@sqrtf$F2355 0E15  
                     ??_poweroff 0006                       ??_vfprintf 004D  
         _Comp1_init_rising_edge 23AC                       ?_LCD_E_TOG 0001  
                   date2String@d 008B                     date2String@m 008D  
                   date2String@y 008F                        _TRISAbits 000F81  
                      _TRISBbits 000F82                        _TRISCbits 000F83  
                      _TRISDbits 000F84                        _TRISEbits 000F85  
                      _TRISFbits 000F86                        _TRISGbits 000F87  
                      _TRISHbits 000F88                   ??_timeadjuster 0017  
      ??_Comp1_init_falling_edge 0006                      _CM1CON0bits 000ED0  
                    _CM1CON1bits 000ED1                 ?_Interrupts_init 0001  
                sunset@prevState 000F                   __end_of_LowISR 00A0  
                    vfpfcnvrt@ap 0048                      vfpfcnvrt@cp 006A  
                    vfpfcnvrt@fp 0044                   __end_of___wmul 2386  
           LCD_sendnibble@number 0006                   __end_of_sunset 1EF8  
            start_initialization 20D0                      __end_of_lg2 0E31  
                    __end_of_abs 2226                      __end_of_pad 1C7E  
                    __end_of_ovt 0E25                     _LCD_sendbyte 2304  
                  ??_LCD_setline 0009                      _date2String 1DA8  
                       ??_LowISR 0002                      vfprintf@fmt 006E  
           LEDarray_disp_bin@ctr 001E             LCD_sendstring@string 0009  
                       ??___wmul 000A                      __pdataBANK1 0184  
                       ??_sunset 000E                      __pbssCOMRAM 0051  
                    ??_LCD_E_TOG 0006                    __pcstackBANK0 0060  
                  __pcstackBANK1 0100                 ___aodiv@dividend 0006  
                      _day1_init 21A6                         ?_HighISR 0001  
                      __pnvBANK0 009D                        __pnvBANK1 019C  
              ??_streetLightInit 0006                        _dtoa$2141 0033  
                   ?_Timer0_init 0001                      _day_of_week 009F  
                    _day_of_year 019E                        __pintcode 0008  
                       ?___aodiv 0006                         ?___aomod 0006  
                       ?___awdiv 0006                 ___aodiv@quotient 0018  
       LEDarray_disp_bin@led_arr 000A              __end_of_LCD_setline 2304  
           __end_of_timeadjuster 1E8C                      __pintcodelo 0018  
                      fabsf@F465 0091                      __smallconst 0E00  
                       ?_isdigit 0006                         ?_isspace 0006  
               ??_LCD_sendnibble 0006                         _ADC_init 2414  
                      _increment 1852                         _DAC_init 2446  
                     ?_day1_init 0001                 ??_LCD_sendstring 000B  
                       ?_sprintf 0072                         ?_sunrise 000C  
               LCD_sendbyte@Byte 0008                         _LCD_Init 1C7E  
               LCD_sendbyte@type 0007                   ___wmul@product 000A  
                       _LATAbits 000F79                         _LATBbits 000F7A  
                       _LATCbits 000F7B                         _LATDbits 000F7C  
                       _LATEbits 000F7D                         _LATFbits 000F7E  
                       _LATGbits 000F7F                         _LATHbits 000F80  
                       _IPR0bits 000E1F                         _PIE0bits 000E29  
                       _IPR2bits 000E21                         _PIE2bits 000E2B  
                       i1u110_20 008E                         i1u110_21 008A  
                       i1u106_20 0036                         i1u106_21 0032  
                       i1u107_20 0058                         i1u107_21 0054  
                       i1u108_20 006A                         i1u108_21 0062  
                       i1u109_28 006C                         i2u103_40 2236  
                       i2u103_41 2232                         i2u104_40 2248  
                       i2u104_41 2240                         i2u105_48 224A  
                       _PIR0bits 000E33                         _PIR2bits 000E35  
                      _month_num 00A1          ?_Comp1_init_rising_edge 0001  
                      _vfpfcnvrt 0E98                       _ADCON0bits 000F60  
              ___wmul@multiplier 0006            timeadjuster@solarnoon 0017  
                     ?_increment 0001                     _isspace$2190 000A  
                     _CM1NCHbits 000ED2                       _CM1PCHbits 000ED3  
                      copy_data0 20E4            __end_of_LEDarray_init 23AC  
                    _LCD_setline 22D0                         __Hrparam 0000  
                     vfprintf@ap 0070                         __Lrparam 0000  
                     vfprintf@fp 006C   __end_of_Comp1_init_rising_edge 23D0  
                     ?_vfpfcnvrt 0044                  ___aodiv@divisor 000E  
                ___aodiv@counter 0016                       _ANSELAbits 000E92  
                     sprintf@fmt 0074                       _T0CON0bits 000FD5  
                     _T0CON1bits 000FD6                         __ptext10 21A6  
                       __ptext11 1DA8                         __ptext20 21E6  
                       __ptext12 207E                         __ptext21 1590  
                       __ptext13 202A                         __ptext30 22D0  
                       __ptext22 1408                         __ptext14 0E98  
                       __ptext31 1C7E                         __ptext23 16F4  
                       __ptext15 1152                         __ptext32 2304  
                       __ptext24 211C                         __ptext16 1BD4  
                       __ptext33 1F64                         __ptext25 2334  
                       __ptext17 2162                         __ptext34 246C  
                       __ptext26 2360                         __ptext18 1A46  
                       __ptext35 245A                         __ptext27 229C  
                       __ptext19 2484                         __ptext36 23AC  
                       __ptext28 23F4                         __ptext37 23D0  
                       __ptext29 2386                         __ptext38 2446  
                       __ptext39 2414                      ??_day1_init 0006  
        LEDarray_disp_bin@number 0006                ??_daylightsavings 0006  
                   ?_date2String 0089                         isa$xinst 000000  
                       int$flags 0056                         _poweroff 2262  
                       _vfprintf 202A                 ___aomod@dividend 0006  
                     _INTCONbits 000FF2                      ??_increment 0020  
       ?_Comp1_init_falling_edge 0001                         isdigit@c 0006  
                _streetLightInit 247A                         intlevel1 0000  
                       intlevel2 0000                        sprintf@ap 007C  
                   _timeadjuster 1E1E                     _DAC1CON0bits 000EC6  
                   _DAC1CON1bits 000EC7                         isspace@c 0006  
                ___aomod@divisor 000E                      ??_vfpfcnvrt 004A  
                ___aomod@counter 0016                         sprintf@f 007E  
                       sprintf@s 0072                     ___aodiv@sign 0017  
                 date2String@buf 0089                     ___aomod@sign 0017  
