

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Nov 09 23:26:33 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    66   000000                     
    67                           ; Generated 06/04/2022 GMT
    68                           ; 
    69                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution. Publication is not required when
    83                           ;        this file is used in an embedded application.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC18F67K40 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101   000000                     
   102                           	psect	idataBANK0
   103   002402                     __pidataBANK0:
   104                           	callstack 0
   105                           
   106                           ;initializer for _month
   107   002402  001F               	dw	31
   108   002404  001C               	dw	28
   109   002406  001F               	dw	31
   110   002408  001E               	dw	30
   111   00240A  001F               	dw	31
   112   00240C  001E               	dw	30
   113   00240E  001F               	dw	31
   114   002410  001F               	dw	31
   115   002412  001E               	dw	30
   116   002414  001F               	dw	31
   117   002416  001E               	dw	30
   118   002418  001F               	dw	31
   119                           
   120                           ;initializer for _oct_daylight_adjust
   121   00241A  0001               	dw	1
   122                           
   123                           	psect	idataBANK1
   124   00246A                     __pidataBANK1:
   125                           	callstack 0
   126                           
   127                           ;initializer for _adjustment_of_day
   128   00246A  0001               	dw	1
   129   000000                     _T0CON0bits	set	4053
   130   000000                     _T0CON1bits	set	4054
   131   000000                     _LATHbits	set	3968
   132   000000                     _CM1CON1bits	set	3793
   133                           
   134                           	psect	nvCOMRAM
   135   000050                     __pnvCOMRAM:
   136                           	callstack 0
   137   000050                     _month_num:
   138                           	callstack 0
   139   000050                     	ds	2
   140                           
   141                           	psect	nvBANK0
   142   0000EC                     __pnvBANK0:
   143                           	callstack 0
   144   0000EC                     _year:
   145                           	callstack 0
   146   0000EC                     	ds	2
   147   0000EE                     _day_of_month:
   148                           	callstack 0
   149   0000EE                     	ds	2
   150   0000F0                     _day_of_week:
   151                           	callstack 0
   152   0000F0                     	ds	2
   153   0000F2                     _day_of_year:
   154                           	callstack 0
   155   0000F2                     	ds	2
   156   000000                     _IPR0bits	set	3615
   157   000000                     _IPR2bits	set	3617
   158   000000                     _PIE0bits	set	3625
   159   000000                     _PIE2bits	set	3627
   160   000000                     _ANSELAbits	set	3730
   161   000000                     _TRISAbits	set	3969
   162   000000                     _TRISEbits	set	3973
   163   000000                     _TRISCbits	set	3971
   164   000000                     _TRISBbits	set	3970
   165   000000                     _TRISFbits	set	3974
   166   000000                     _TRISGbits	set	3975
   167   000000                     _DAC1CON0bits	set	3782
   168   000000                     _ADREFbits	set	3928
   169   000000                     _ADPCH	set	3935
   170   000000                     _ADRESH	set	3940
   171   000000                     _ADCON0bits	set	3936
   172   000000                     _LATAbits	set	3961
   173   000000                     _LATGbits	set	3967
   174   000000                     _TRISHbits	set	3976
   175   000000                     _TMR0L	set	4051
   176   000000                     _TMR0H	set	4052
   177   000000                     _INTCONbits	set	4082
   178   000000                     _LATEbits	set	3965
   179   000000                     _LATCbits	set	3963
   180   000000                     _LATBbits	set	3962
   181   000000                     _LATFbits	set	3966
   182   000000                     _CM1CON0bits	set	3792
   183   000000                     _CM1NCHbits	set	3794
   184   000000                     _DAC1CON1bits	set	3783
   185   000000                     _CM1PCHbits	set	3795
   186   000000                     _PIR0bits	set	3635
   187   000000                     _PIR2bits	set	3637
   188                           
   189                           	psect	smallconst
   190   000E00                     __psmallconst:
   191                           	callstack 0
   192   000E00  00                 	db	0
   193   000E01  25                 	db	37
   194   000E02  64                 	db	100	;'d'
   195   000E03  3A                 	db	58	;':'
   196   000E04  25                 	db	37
   197   000E05  64                 	db	100	;'d'
   198   000E06  3A                 	db	58	;':'
   199   000E07  25                 	db	37
   200   000E08  64                 	db	100	;'d'
   201   000E09  20                 	db	32
   202   000E0A  25                 	db	37
   203   000E0B  64                 	db	100	;'d'
   204   000E0C  2D                 	db	45
   205   000E0D  25                 	db	37
   206   000E0E  64                 	db	100	;'d'
   207   000E0F  2D                 	db	45
   208   000E10  25                 	db	37
   209   000E11  64                 	db	100	;'d'
   210   000E12  20                 	db	32
   211   000E13  00                 	db	0
   212   000E14                     STR_2:
   213   000E14  25                 	db	37
   214   000E15  64                 	db	100	;'d'
   215   000E16  20                 	db	32
   216   000E17  25                 	db	37
   217   000E18  64                 	db	100	;'d'
   218   000E19  20                 	db	32
   219   000E1A  25                 	db	37
   220   000E1B  64                 	db	100	;'d'
   221   000E1C  20                 	db	32
   222   000E1D  25                 	db	37
   223   000E1E  64                 	db	100	;'d'
   224   000E1F  20                 	db	32
   225   000E20  25                 	db	37
   226   000E21  30                 	db	48	;'0'
   227   000E22  32                 	db	50	;'2'
   228   000E23  64                 	db	100	;'d'
   229   000E24  00                 	db	0
   230   000E25  00                 	db	0	; dummy byte at the end
   231   000000                     
   232                           ; #config settings
   233                           
   234                           	psect	cinit
   235   001F48                     __pcinit:
   236                           	callstack 0
   237   001F48                     start_initialization:
   238                           	callstack 0
   239   001F48                     __initialization:
   240                           	callstack 0
   241                           
   242                           ; Initialize objects allocated to BANK1 (2 bytes)
   243                           ; load TBLPTR registers with __pidataBANK1
   244   001F48  0E6A               	movlw	low __pidataBANK1
   245   001F4A  6EF6               	movwf	tblptrl,c
   246   001F4C  0E24               	movlw	high __pidataBANK1
   247   001F4E  6EF7               	movwf	tblptrh,c
   248   001F50  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   249   001F52  6EF8               	movwf	tblptru,c
   250   001F54  0009               	tblrd		*+	;fetch initializer
   251   001F56  CFF5 F16A          	movff	tablat,__pdataBANK1
   252   001F5A  0009               	tblrd		*+	;fetch initializer
   253   001F5C  CFF5 F16B          	movff	tablat,__pdataBANK1+1
   254                           
   255                           ; Initialize objects allocated to BANK0 (26 bytes)
   256                           ; load TBLPTR registers with __pidataBANK0
   257   001F60  0E02               	movlw	low __pidataBANK0
   258   001F62  6EF6               	movwf	tblptrl,c
   259   001F64  0E24               	movlw	high __pidataBANK0
   260   001F66  6EF7               	movwf	tblptrh,c
   261   001F68  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   262   001F6A  6EF8               	movwf	tblptru,c
   263   001F6C  EE00  F0D2         	lfsr	0,__pdataBANK0
   264   001F70  EE10 F01A          	lfsr	1,26
   265   001F74                     copy_data0:
   266   001F74  0009               	tblrd		*+
   267   001F76  CFF5 FFEE          	movff	tablat,postinc0
   268   001F7A  50E5               	movf	postdec1,w,c
   269   001F7C  50E1               	movf	fsr1l,w,c
   270   001F7E  E1FA               	bnz	copy_data0
   271                           
   272                           ; Clear objects allocated to BANK1 (6 bytes)
   273   001F80  0101               	movlb	1
   274   001F82  6B69               	clrf	(__pbssBANK1+5)& (0+255),b
   275   001F84  6B68               	clrf	(__pbssBANK1+4)& (0+255),b
   276   001F86  6B67               	clrf	(__pbssBANK1+3)& (0+255),b
   277   001F88  6B66               	clrf	(__pbssBANK1+2)& (0+255),b
   278   001F8A  6B65               	clrf	(__pbssBANK1+1)& (0+255),b
   279   001F8C  6B64               	clrf	__pbssBANK1& (0+255),b
   280                           
   281                           ; Clear objects allocated to BANK0 (38 bytes)
   282   001F8E  EE00  F0AC         	lfsr	0,__pbssBANK0
   283   001F92  0E26               	movlw	38
   284   001F94                     clear_0:
   285   001F94  6AEE               	clrf	postinc0,c
   286   001F96  06E8               	decf	wreg,f,c
   287   001F98  E1FD               	bnz	clear_0
   288                           
   289                           ; Clear objects allocated to COMRAM (9 bytes)
   290   001F9A  EE00  F047         	lfsr	0,__pbssCOMRAM
   291   001F9E  0E09               	movlw	9
   292   001FA0                     clear_1:
   293   001FA0  6AEE               	clrf	postinc0,c
   294   001FA2  06E8               	decf	wreg,f,c
   295   001FA4  E1FD               	bnz	clear_1
   296   001FA6                     end_of_initialization:
   297                           	callstack 0
   298   001FA6                     __end_of__initialization:
   299                           	callstack 0
   300   001FA6  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   301   001FA8  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   302   001FAA  0100               	movlb	0
   303   001FAC  EF13  F00F         	goto	_main	;jump to C main() function
   304                           
   305                           	psect	bssCOMRAM
   306   000047                     __pbssCOMRAM:
   307                           	callstack 0
   308   000047                     _width:
   309                           	callstack 0
   310   000047                     	ds	2
   311   000049                     _prec:
   312                           	callstack 0
   313   000049                     	ds	2
   314   00004B                     _hour:
   315                           	callstack 0
   316   00004B                     	ds	2
   317   00004D                     _seconds:
   318                           	callstack 0
   319   00004D                     	ds	2
   320   00004F                     _flags:
   321                           	callstack 0
   322   00004F                     	ds	1
   323                           
   324                           	psect	bssBANK0
   325   0000AC                     __pbssBANK0:
   326                           	callstack 0
   327   0000AC                     _SN:
   328                           	callstack 0
   329   0000AC                     	ds	2
   330   0000AE                     _hours_in_day:
   331                           	callstack 0
   332   0000AE                     	ds	2
   333   0000B0                     _seconds_in_hour:
   334                           	callstack 0
   335   0000B0                     	ds	2
   336   0000B2                     _dbuf:
   337                           	callstack 0
   338   0000B2                     	ds	32
   339                           
   340                           	psect	dataBANK0
   341   0000D2                     __pdataBANK0:
   342                           	callstack 0
   343   0000D2                     _month:
   344                           	callstack 0
   345   0000D2                     	ds	24
   346   0000EA                     _oct_daylight_adjust:
   347                           	callstack 0
   348   0000EA                     	ds	2
   349                           
   350                           	psect	bssBANK1
   351   000164                     __pbssBANK1:
   352                           	callstack 0
   353   000164                     _AD:
   354                           	callstack 0
   355   000164                     	ds	2
   356   000166                     _SS:
   357                           	callstack 0
   358   000166                     	ds	2
   359   000168                     _SR:
   360                           	callstack 0
   361   000168                     	ds	2
   362                           
   363                           	psect	dataBANK1
   364   00016A                     __pdataBANK1:
   365                           	callstack 0
   366   00016A                     _adjustment_of_day:
   367                           	callstack 0
   368   00016A                     	ds	2
   369                           
   370                           	psect	cstackBANK1
   371   000100                     __pcstackBANK1:
   372                           	callstack 0
   373   000100                     main@strdate:
   374                           	callstack 0
   375                           
   376                           ; 100 bytes @ 0x0
   377   000100                     	ds	100
   378                           
   379                           	psect	cstackBANK0
   380   000060                     __pcstackBANK0:
   381                           	callstack 0
   382   000060                     _dtoa$2098:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x0
   386   000060                     	ds	2
   387   000062                     dtoa@p:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x2
   391   000062                     	ds	2
   392   000064                     dtoa@w:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x4
   396   000064                     	ds	2
   397   000066                     dtoa@n:
   398                           	callstack 0
   399                           
   400                           ; 8 bytes @ 0x6
   401   000066                     	ds	8
   402   00006E                     dtoa@s:
   403                           	callstack 0
   404                           
   405                           ; 1 bytes @ 0xE
   406   00006E                     	ds	1
   407   00006F                     dtoa@i:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0xF
   411   00006F                     	ds	2
   412   000071                     vfpfcnvrt@convarg:
   413                           	callstack 0
   414                           
   415                           ; 8 bytes @ 0x11
   416   000071                     	ds	8
   417   000079                     vfpfcnvrt@done:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x19
   421   000079                     	ds	2
   422   00007B                     vfpfcnvrt@cp:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x1B
   426   00007B                     	ds	2
   427   00007D                     ?_vfprintf:
   428                           	callstack 0
   429   00007D                     vfprintf@fp:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x1D
   433   00007D                     	ds	2
   434   00007F                     vfprintf@fmt:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x1F
   438   00007F                     	ds	2
   439   000081                     vfprintf@ap:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0x21
   443   000081                     	ds	2
   444   000083                     ?_sprintf:
   445                           	callstack 0
   446   000083                     sprintf@s:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x23
   450   000083                     	ds	2
   451   000085                     sprintf@fmt:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x25
   455   000085                     	ds	14
   456   000093                     sprintf@ap:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x33
   460   000093                     	ds	2
   461   000095                     sprintf@f:
   462                           	callstack 0
   463                           
   464                           ; 11 bytes @ 0x35
   465   000095                     	ds	11
   466   0000A0                     timeadj2String@buf:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x40
   470   0000A0                     	ds	2
   471   0000A2                     timeadj2String@sunrise:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x42
   475   0000A2                     	ds	2
   476   0000A4                     timeadj2String@sunset:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x44
   480   0000A4                     	ds	2
   481   0000A6                     timeadj2String@solarnoon:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x46
   485   0000A6                     	ds	2
   486   0000A8                     timeadj2String@adjust:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x48
   490   0000A8                     	ds	2
   491   0000AA                     timeadj2String@s:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x4A
   495   0000AA                     	ds	2
   496                           
   497                           	psect	cstackCOMRAM
   498   000001                     __pcstackCOMRAM:
   499                           	callstack 0
   500   000001                     ?i2___wmul:
   501                           	callstack 0
   502   000001                     i2___wmul@multiplier:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x0
   506   000001                     	ds	2
   507   000003                     i2___wmul@multiplicand:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x2
   511   000003                     	ds	2
   512   000005                     i2___wmul@product:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x4
   516   000005                     	ds	2
   517   000007                     ??_HighISR:
   518                           
   519                           ; 1 bytes @ 0x6
   520   000007                     	ds	3
   521   00000A                     ??_LowISR:
   522                           
   523                           ; 1 bytes @ 0x9
   524   00000A                     	ds	3
   525   00000D                     ??_increment:
   526   00000D                     ?_isdigit:
   527                           	callstack 0
   528   00000D                     ?_isspace:
   529                           	callstack 0
   530   00000D                     ?___wmul:
   531                           	callstack 0
   532   00000D                     ?___awdiv:
   533                           	callstack 0
   534   00000D                     ?___aodiv:
   535                           	callstack 0
   536   00000D                     ?___aomod:
   537                           	callstack 0
   538   00000D                     LCD_sendnibble@number:
   539                           	callstack 0
   540   00000D                     LEDarray_disp_bin@number:
   541                           	callstack 0
   542   00000D                     ___wmul@multiplier:
   543                           	callstack 0
   544   00000D                     ___awdiv@dividend:
   545                           	callstack 0
   546   00000D                     isdigit@c:
   547                           	callstack 0
   548   00000D                     isspace@c:
   549                           	callstack 0
   550   00000D                     fputc@c:
   551                           	callstack 0
   552   00000D                     ___aodiv@dividend:
   553                           	callstack 0
   554   00000D                     ___aomod@dividend:
   555                           	callstack 0
   556                           
   557                           ; 8 bytes @ 0xC
   558   00000D                     	ds	1
   559   00000E                     LCD_sendbyte@type:
   560                           	callstack 0
   561                           
   562                           ; 1 bytes @ 0xD
   563   00000E                     	ds	1
   564   00000F                     ??_isdigit:
   565   00000F                     ??_isspace:
   566   00000F                     ??_LEDarray_disp_bin:
   567   00000F                     LCD_sendbyte@Byte:
   568                           	callstack 0
   569   00000F                     ___wmul@multiplicand:
   570                           	callstack 0
   571   00000F                     ___awdiv@divisor:
   572                           	callstack 0
   573   00000F                     fputc@fp:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0xE
   577   00000F                     	ds	1
   578   000010                     ??_LCD_Init:
   579   000010                     LCD_setline@line:
   580                           	callstack 0
   581   000010                     LCD_sendstring@string:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0xF
   585   000010                     	ds	1
   586   000011                     ??_fputc:
   587   000011                     ___awdiv@counter:
   588                           	callstack 0
   589   000011                     _isspace$2147:
   590                           	callstack 0
   591   000011                     ___wmul@product:
   592                           	callstack 0
   593   000011                     LEDarray_disp_bin@led_arr:
   594                           	callstack 0
   595                           
   596                           ; 18 bytes @ 0x10
   597   000011                     	ds	1
   598   000012                     ___awdiv@sign:
   599                           	callstack 0
   600                           
   601                           ; 1 bytes @ 0x11
   602   000012                     	ds	1
   603   000013                     ?_atoi:
   604                           	callstack 0
   605   000013                     ___awdiv@quotient:
   606                           	callstack 0
   607   000013                     atoi@s:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x12
   611   000013                     	ds	2
   612   000015                     ??_atoi:
   613   000015                     time_adjuster@sunrise_time:
   614                           	callstack 0
   615   000015                     ___aodiv@divisor:
   616                           	callstack 0
   617   000015                     ___aomod@divisor:
   618                           	callstack 0
   619                           
   620                           ; 8 bytes @ 0x14
   621   000015                     	ds	1
   622   000016                     fputs@s:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x15
   626   000016                     	ds	1
   627   000017                     time_adjuster@sunset_time:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x16
   631   000017                     	ds	1
   632   000018                     atoi@neg:
   633                           	callstack 0
   634   000018                     fputs@fp:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x17
   638   000018                     	ds	1
   639   000019                     time_adjuster@solarnoon:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x18
   643   000019                     	ds	1
   644   00001A                     fputs@c:
   645                           	callstack 0
   646   00001A                     atoi@n:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x19
   650   00001A                     	ds	1
   651   00001B                     time_adjuster@adjustment:
   652                           	callstack 0
   653   00001B                     fputs@i:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x1A
   657   00001B                     	ds	2
   658   00001D                     ___aodiv@counter:
   659                           	callstack 0
   660   00001D                     ___aomod@counter:
   661                           	callstack 0
   662   00001D                     pad@fp:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x1C
   666   00001D                     	ds	1
   667   00001E                     ___aodiv@sign:
   668                           	callstack 0
   669   00001E                     ___aomod@sign:
   670                           	callstack 0
   671                           
   672                           ; 1 bytes @ 0x1D
   673   00001E                     	ds	1
   674   00001F                     ?_abs:
   675                           	callstack 0
   676   00001F                     pad@buf:
   677                           	callstack 0
   678   00001F                     abs@a:
   679                           	callstack 0
   680   00001F                     ___aodiv@quotient:
   681                           	callstack 0
   682                           
   683                           ; 8 bytes @ 0x1E
   684   00001F                     	ds	2
   685   000021                     ??_abs:
   686   000021                     pad@p:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x20
   690   000021                     	ds	2
   691   000023                     ??_pad:
   692   000023                     LEDarray_disp_bin@mask:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x22
   696   000023                     	ds	1
   697   000024                     pad@i:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x23
   701   000024                     	ds	1
   702   000025                     LEDarray_disp_bin@ctr:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0x24
   706   000025                     	ds	1
   707   000026                     pad@w:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x25
   711   000026                     	ds	2
   712   000028                     dtoa@fp:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x27
   716   000028                     	ds	2
   717   00002A                     dtoa@d:
   718                           	callstack 0
   719                           
   720                           ; 8 bytes @ 0x29
   721   00002A                     	ds	8
   722   000032                     ??_dtoa:
   723                           
   724                           ; 1 bytes @ 0x31
   725   000032                     	ds	8
   726   00003A                     vfpfcnvrt@fp:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x39
   730   00003A                     	ds	2
   731   00003C                     vfpfcnvrt@fmt:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x3B
   735   00003C                     	ds	2
   736   00003E                     vfpfcnvrt@ap:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x3D
   740   00003E                     	ds	2
   741   000040                     ??_vfpfcnvrt:
   742                           
   743                           ; 1 bytes @ 0x3F
   744   000040                     	ds	3
   745   000043                     vfprintf@cfmt:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0x42
   749   000043                     	ds	2
   750   000045                     ??_timeadj2String:
   751   000045                     
   752                           ; 1 bytes @ 0x44
   753   000045                     	ds	2
   754   000047                     
   755                           ; 1 bytes @ 0x46
   756 ;;
   757 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   758 ;;
   759 ;; *************** function _main *****************
   760 ;; Defined at:
   761 ;;		line 19 in file "main.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;		None
   764 ;; Auto vars:     Size  Location     Type
   765 ;;  strdate       100    0[BANK1 ] unsigned char [100]
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      void 
   768 ;; Registers used:
   769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   776 ;;      Locals:         0       0     100       0       0       0       0       0       0       0       0       0       
      +0       0       0
   777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   778 ;;      Totals:         0       0     100       0       0       0       0       0       0       0       0       0       
      +0       0       0
   779 ;;Total ram usage:      100 bytes
   780 ;; Hardware stack levels required when called: 12
   781 ;; This function calls:
   782 ;;		_Comp1_init_falling_edge
   783 ;;		_Comp1_init_rising_edge
   784 ;;		_Interrupts_init
   785 ;;		_LCD_Init
   786 ;;		_LCD_setline
   787 ;;		_LEDarray_disp_bin
   788 ;;		_LEDarray_init
   789 ;;		_Timer0_init
   790 ;;		_day1_init
   791 ;;		_daylightsavings
   792 ;;		_increment
   793 ;;		_poweroff
   794 ;;		_streetLightInit
   795 ;;		_test_day
   796 ;;		_time_adjuster
   797 ;;		_timeadj2String
   798 ;; This function is called by:
   799 ;;		Startup code after reset
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           	psect	text0
   804   001E26                     __ptext0:
   805                           	callstack 0
   806   001E26                     _main:
   807                           	callstack 19
   808   001E26                     
   809                           ;main.c: 21:     streetLightInit();
   810   001E26  EC32  F012         	call	_streetLightInit	;wreg free
   811                           
   812                           ;main.c: 22:     LEDarray_init();
   813   001E2A  ECA7  F011         	call	_LEDarray_init	;wreg free
   814   001E2E                     
   815                           ;main.c: 23:     Timer0_init();
   816   001E2E  ECF1  F011         	call	_Timer0_init	;wreg free
   817   001E32                     
   818                           ;main.c: 24:     Comp1_init_rising_edge();
   819   001E32  ECCD  F011         	call	_Comp1_init_rising_edge	;wreg free
   820   001E36                     
   821                           ;main.c: 25:     Comp1_init_falling_edge();
   822   001E36  ECDF  F011         	call	_Comp1_init_falling_edge	;wreg free
   823   001E3A                     
   824                           ;main.c: 26:     Interrupts_init();
   825   001E3A  EC22  F012         	call	_Interrupts_init	;wreg free
   826                           
   827                           ;main.c: 27:     day1_init();
   828   001E3E  ECF6  F010         	call	_day1_init	;wreg free
   829   001E42                     
   830                           ;main.c: 28:     LCD_Init();
   831   001E42  EC72  F00E         	call	_LCD_Init	;wreg free
   832   001E46                     
   833                           ;main.c: 29:     char strdate[100];;main.c: 30:     test_day();
   834   001E46  EC0E  F012         	call	_test_day	;wreg free
   835   001E4A                     l3214:
   836                           
   837                           ;main.c: 33:         increment();
   838   001E4A  ECF1  F00B         	call	_increment	;wreg free
   839   001E4E                     
   840                           ;main.c: 34:         LEDarray_disp_bin(hour);
   841   001E4E  C04B  F00D         	movff	_hour,LEDarray_disp_bin@number
   842   001E52  C04C  F00E         	movff	_hour+1,LEDarray_disp_bin@number+1
   843   001E56  EC8C  F00C         	call	_LEDarray_disp_bin	;wreg free
   844                           
   845                           ;main.c: 35:         poweroff();
   846   001E5A  EC15  F011         	call	_poweroff	;wreg free
   847                           
   848                           ;main.c: 36:         time_adjuster(SR,SS);
   849   001E5E  C168  F015         	movff	_SR,time_adjuster@sunrise_time
   850   001E62  C169  F016         	movff	_SR+1,time_adjuster@sunrise_time+1
   851   001E66  C166  F017         	movff	_SS,time_adjuster@sunset_time
   852   001E6A  C167  F018         	movff	_SS+1,time_adjuster@sunset_time+1
   853   001E6E  EC5D  F00F         	call	_time_adjuster	;wreg free
   854                           
   855                           ;main.c: 37:         daylightsavings();
   856   001E72  ECC3  F00E         	call	_daylightsavings	;wreg free
   857                           
   858                           ;main.c: 39:         LCD_setline(1);
   859   001E76  0E01               	movlw	1
   860   001E78  EC4C  F011         	call	_LCD_setline
   861   001E7C                     
   862                           ;main.c: 41:         timeadj2String(strdate,SS,SR,adjustment_of_day,AD,seconds);
   863   001E7C  0E00               	movlw	low main@strdate
   864   001E7E  0100               	movlb	0	; () banked
   865   001E80  6FA0               	movwf	timeadj2String@buf& (0+255),b
   866   001E82  0E01               	movlw	high main@strdate
   867   001E84  6FA1               	movwf	(timeadj2String@buf+1)& (0+255),b
   868   001E86  C166  F0A2         	movff	_SS,timeadj2String@sunrise
   869   001E8A  C167  F0A3         	movff	_SS+1,timeadj2String@sunrise+1
   870   001E8E  C168  F0A4         	movff	_SR,timeadj2String@sunset
   871   001E92  C169  F0A5         	movff	_SR+1,timeadj2String@sunset+1
   872   001E96  C16A  F0A6         	movff	_adjustment_of_day,timeadj2String@solarnoon
   873   001E9A  C16B  F0A7         	movff	_adjustment_of_day+1,timeadj2String@solarnoon+1
   874   001E9E  C164  F0A8         	movff	_AD,timeadj2String@adjust
   875   001EA2  C165  F0A9         	movff	_AD+1,timeadj2String@adjust+1
   876   001EA6  C04D  F0AA         	movff	_seconds,timeadj2String@s
   877   001EAA  C04E  F0AB         	movff	_seconds+1,timeadj2String@s+1
   878   001EAE  EC0C  F010         	call	_timeadj2String	;wreg free
   879   001EB2  EF25  F00F         	goto	l3214
   880   001EB6  EF35  F000         	goto	start
   881   001EBA                     __end_of_main:
   882                           	callstack 0
   883                           
   884 ;; *************** function _timeadj2String *****************
   885 ;; Defined at:
   886 ;;		line 140 in file "LCD.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;  buf             2   64[BANK0 ] PTR unsigned char 
   889 ;;		 -> main@strdate(100), 
   890 ;;  sunrise         2   66[BANK0 ] unsigned int 
   891 ;;  sunset          2   68[BANK0 ] unsigned int 
   892 ;;  solarnoon       2   70[BANK0 ] unsigned int 
   893 ;;  adjust          2   72[BANK0 ] unsigned int 
   894 ;;  s               2   74[BANK0 ] unsigned int 
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   906 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   908 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   909 ;;      Totals:         2      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   910 ;;Total ram usage:       14 bytes
   911 ;; Hardware stack levels used: 1
   912 ;; Hardware stack levels required when called: 11
   913 ;; This function calls:
   914 ;;		_LCD_sendstring
   915 ;;		_sprintf
   916 ;; This function is called by:
   917 ;;		_main
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921                           	psect	text1
   922   002018                     __ptext1:
   923                           	callstack 0
   924   002018                     _timeadj2String:
   925                           	callstack 19
   926   002018                     
   927                           ;LCD.c: 140: void timeadj2String(char *buf,unsigned int sunrise, unsigned int sunset,uns
      +                          igned int solarnoon,unsigned int adjust,unsigned int s);LCD.c: 141: {;LCD.c: 142:     sp
      +                          rintf(buf,"%d %d %d %d %02d",sunrise,sunset,solarnoon,adjust,s);
   928   002018  C0A0  F083         	movff	timeadj2String@buf,sprintf@s
   929   00201C  C0A1  F084         	movff	timeadj2String@buf+1,sprintf@s+1
   930   002020  0E14               	movlw	low STR_2
   931   002022  0100               	movlb	0	; () banked
   932   002024  6F85               	movwf	sprintf@fmt& (0+255),b
   933   002026  0E0E               	movlw	high STR_2
   934   002028  6F86               	movwf	(sprintf@fmt+1)& (0+255),b
   935   00202A  C0A2  F087         	movff	timeadj2String@sunrise,?_sprintf+4
   936   00202E  C0A3  F088         	movff	timeadj2String@sunrise+1,?_sprintf+5
   937   002032  C0A4  F089         	movff	timeadj2String@sunset,?_sprintf+6
   938   002036  C0A5  F08A         	movff	timeadj2String@sunset+1,?_sprintf+7
   939   00203A  C0A6  F08B         	movff	timeadj2String@solarnoon,?_sprintf+8
   940   00203E  C0A7  F08C         	movff	timeadj2String@solarnoon+1,?_sprintf+9
   941   002042  C0A8  F08D         	movff	timeadj2String@adjust,?_sprintf+10
   942   002046  C0A9  F08E         	movff	timeadj2String@adjust+1,?_sprintf+11
   943   00204A  C0AA  F08F         	movff	timeadj2String@s,?_sprintf+12
   944   00204E  C0AB  F090         	movff	timeadj2String@s+1,?_sprintf+13
   945   002052  EC68  F010         	call	_sprintf	;wreg free
   946   002056                     
   947                           ;LCD.c: 143:     LCD_sendstring(buf);
   948   002056  C0A0  F010         	movff	timeadj2String@buf,LCD_sendstring@string
   949   00205A  C0A1  F011         	movff	timeadj2String@buf+1,LCD_sendstring@string+1
   950   00205E  EC32  F011         	call	_LCD_sendstring	;wreg free
   951   002062                     
   952                           ;LCD.c: 144:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   953   002062  0E52               	movlw	82
   954   002064  6E46               	movwf	(??_timeadj2String+1)^0,c
   955   002066  0E2B               	movlw	43
   956   002068  6E45               	movwf	??_timeadj2String^0,c
   957   00206A  0E00               	movlw	0
   958   00206C                     u2567:
   959   00206C  2EE8               	decfsz	wreg,f,c
   960   00206E  D7FE               	bra	u2567
   961   002070  2E45               	decfsz	??_timeadj2String^0,f,c
   962   002072  D7FC               	bra	u2567
   963   002074  2E46               	decfsz	(??_timeadj2String+1)^0,f,c
   964   002076  D7FA               	bra	u2567
   965   002078  D000               	nop2	
   966   00207A  0012               	return		;funcret
   967   00207C                     __end_of_timeadj2String:
   968                           	callstack 0
   969                           
   970 ;; *************** function _sprintf *****************
   971 ;; Defined at:
   972 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;  s               2   35[BANK0 ] PTR unsigned char 
   975 ;;		 -> main@strdate(100), 
   976 ;;  fmt             2   37[BANK0 ] PTR const unsigned char 
   977 ;;		 -> STR_2(17), STR_1(19), 
   978 ;; Auto vars:     Size  Location     Type
   979 ;;  f              11   53[BANK0 ] struct _IO_FILE
   980 ;;  ap              2   51[BANK0 ] PTR void [1]
   981 ;;		 -> ?_sprintf(2), 
   982 ;;  ret             2    0        int 
   983 ;; Return value:  Size  Location     Type
   984 ;;                  2   35[BANK0 ] int 
   985 ;; Registers used:
   986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   992 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   993 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   995 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   996 ;;Total ram usage:       29 bytes
   997 ;; Hardware stack levels used: 1
   998 ;; Hardware stack levels required when called: 10
   999 ;; This function calls:
  1000 ;;		_vfprintf
  1001 ;; This function is called by:
  1002 ;;		_timeadj2String
  1003 ;;		_time2String
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           	psect	text2
  1008   0020D0                     __ptext2:
  1009                           	callstack 0
  1010   0020D0                     _sprintf:
  1011                           	callstack 19
  1012   0020D0  0E87               	movlw	low (?_sprintf+4)
  1013   0020D2  0100               	movlb	0	; () banked
  1014   0020D4  6F93               	movwf	sprintf@ap& (0+255),b
  1015   0020D6  0E00               	movlw	high (?_sprintf+4)
  1016   0020D8  6F94               	movwf	(sprintf@ap+1)& (0+255),b
  1017   0020DA  C083  F095         	movff	sprintf@s,sprintf@f
  1018   0020DE  C084  F096         	movff	sprintf@s+1,sprintf@f+1
  1019   0020E2                     
  1020                           ; BSR set to: 0
  1021   0020E2  0E00               	movlw	0
  1022   0020E4  6F99               	movwf	(sprintf@f+4)& (0+255),b
  1023   0020E6  0E00               	movlw	0
  1024   0020E8  6F98               	movwf	(sprintf@f+3)& (0+255),b
  1025   0020EA                     
  1026                           ; BSR set to: 0
  1027   0020EA  0E00               	movlw	0
  1028   0020EC  6F9F               	movwf	(sprintf@f+10)& (0+255),b
  1029   0020EE  0E00               	movlw	0
  1030   0020F0  6F9E               	movwf	(sprintf@f+9)& (0+255),b
  1031   0020F2                     
  1032                           ; BSR set to: 0
  1033   0020F2  0E95               	movlw	low sprintf@f
  1034   0020F4  6F7D               	movwf	vfprintf@fp& (0+255),b
  1035   0020F6  0E00               	movlw	high sprintf@f
  1036   0020F8  6F7E               	movwf	(vfprintf@fp+1)& (0+255),b
  1037   0020FA  C085  F07F         	movff	sprintf@fmt,vfprintf@fmt
  1038   0020FE  C086  F080         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1039   002102  0E93               	movlw	low sprintf@ap
  1040   002104  6F81               	movwf	vfprintf@ap& (0+255),b
  1041   002106  0E00               	movlw	high sprintf@ap
  1042   002108  6F82               	movwf	(vfprintf@ap+1)& (0+255),b
  1043   00210A  EC3E  F010         	call	_vfprintf	;wreg free
  1044   00210E  0100               	movlb	0	; () banked
  1045   002110  5198               	movf	(sprintf@f+3)& (0+255),w,b
  1046   002112  2583               	addwf	sprintf@s& (0+255),w,b
  1047   002114  6ED9               	movwf	fsr2l,c
  1048   002116  5199               	movf	(sprintf@f+4)& (0+255),w,b
  1049   002118  2184               	addwfc	(sprintf@s+1)& (0+255),w,b
  1050   00211A  6EDA               	movwf	fsr2h,c
  1051   00211C  0E00               	movlw	0
  1052   00211E  6EDF               	movwf	indf2,c
  1053   002120                     
  1054                           ; BSR set to: 0
  1055   002120  0012               	return		;funcret
  1056   002122                     __end_of_sprintf:
  1057                           	callstack 0
  1058                           
  1059 ;; *************** function _vfprintf *****************
  1060 ;; Defined at:
  1061 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
  1064 ;;		 -> sprintf@f(11), 
  1065 ;;  fmt             2   31[BANK0 ] PTR const unsigned char 
  1066 ;;		 -> STR_2(17), STR_1(19), 
  1067 ;;  ap              2   33[BANK0 ] PTR PTR void 
  1068 ;;		 -> sprintf@ap(2), 
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;  cfmt            2   66[COMRAM] PTR unsigned char 
  1071 ;;		 -> STR_2(17), STR_1(19), 
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  2   29[BANK0 ] int 
  1074 ;; Registers used:
  1075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1081 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1082 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1084 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1085 ;;Total ram usage:        8 bytes
  1086 ;; Hardware stack levels used: 1
  1087 ;; Hardware stack levels required when called: 9
  1088 ;; This function calls:
  1089 ;;		_vfpfcnvrt
  1090 ;; This function is called by:
  1091 ;;		_sprintf
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           	psect	text3
  1096   00207C                     __ptext3:
  1097                           	callstack 0
  1098   00207C                     _vfprintf:
  1099                           	callstack 19
  1100   00207C                     
  1101                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1102   00207C  C07F  F043         	movff	vfprintf@fmt,vfprintf@cfmt
  1103   002080  C080  F044         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1104                           
  1105                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1106   002084  EF52  F010         	goto	l3176
  1107   002088                     l3174:
  1108                           
  1109                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1110   002088  C07D  F03A         	movff	vfprintf@fp,vfpfcnvrt@fp
  1111   00208C  C07E  F03B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1112   002090  0E43               	movlw	low vfprintf@cfmt
  1113   002092  6E3C               	movwf	vfpfcnvrt@fmt^0,c
  1114   002094  0E00               	movlw	high vfprintf@cfmt
  1115   002096  6E3D               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1116   002098  C081  F03E         	movff	vfprintf@ap,vfpfcnvrt@ap
  1117   00209C  C082  F03F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1118   0020A0  EC13  F007         	call	_vfpfcnvrt	;wreg free
  1119   0020A4                     l3176:
  1120                           
  1121                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1122   0020A4  C043  FFF6         	movff	vfprintf@cfmt,tblptrl
  1123   0020A8  C044  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1124   0020AC                     	if	0	;tblptru may be non-zero
  1125   0020AC                     	endif
  1126   0020AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1127   0020AC  0E00               	movlw	low (__mediumconst shr (0+16))
  1128   0020AE  6EF8               	movwf	tblptru,c
  1129   0020B0                     	endif
  1130   0020B0  0008               	tblrd		*
  1131   0020B2  50F5               	movf	tablat,w,c
  1132   0020B4  0900               	iorlw	0
  1133   0020B6  A4D8               	btfss	status,2,c
  1134   0020B8  EF60  F010         	goto	u2551
  1135   0020BC  EF62  F010         	goto	u2550
  1136   0020C0                     u2551:
  1137   0020C0  EF44  F010         	goto	l3174
  1138   0020C4                     u2550:
  1139   0020C4                     
  1140                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1141   0020C4  0E00               	movlw	0
  1142   0020C6  0100               	movlb	0	; () banked
  1143   0020C8  6F7E               	movwf	(?_vfprintf+1)& (0+255),b
  1144   0020CA  0E00               	movlw	0
  1145   0020CC  6F7D               	movwf	?_vfprintf& (0+255),b
  1146   0020CE                     
  1147                           ; BSR set to: 0
  1148   0020CE  0012               	return		;funcret
  1149   0020D0                     __end_of_vfprintf:
  1150                           	callstack 0
  1151                           
  1152 ;; *************** function _vfpfcnvrt *****************
  1153 ;; Defined at:
  1154 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;  fp              2   57[COMRAM] PTR struct _IO_FILE
  1157 ;;		 -> sprintf@f(11), 
  1158 ;;  fmt             2   59[COMRAM] PTR PTR unsigned char 
  1159 ;;		 -> vfprintf@cfmt(2), 
  1160 ;;  ap              2   61[COMRAM] PTR PTR void 
  1161 ;;		 -> sprintf@ap(2), 
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;  convarg         8   17[BANK0 ] struct .
  1164 ;;  cp              2   27[BANK0 ] PTR unsigned char 
  1165 ;;		 -> STR_2(17), STR_1(19), 
  1166 ;;  done            2   25[BANK0 ] int 
  1167 ;;  i               2    0        int 
  1168 ;;  c               1    0        unsigned char 
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  1    wreg      void 
  1171 ;; Registers used:
  1172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1178 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1179 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1180 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1181 ;;      Totals:         9      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1182 ;;Total ram usage:       21 bytes
  1183 ;; Hardware stack levels used: 1
  1184 ;; Hardware stack levels required when called: 8
  1185 ;; This function calls:
  1186 ;;		_atoi
  1187 ;;		_dtoa
  1188 ;;		_fputc
  1189 ;;		_isdigit
  1190 ;; This function is called by:
  1191 ;;		_vfprintf
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           	psect	text4
  1196   000E26                     __ptext4:
  1197                           	callstack 0
  1198   000E26                     _vfpfcnvrt:
  1199                           	callstack 19
  1200   000E26                     
  1201                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1202   000E26  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1203   000E2A  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1204   000E2E  CFDE FFF6          	movff	postinc2,tblptrl
  1205   000E32  CFDD FFF7          	movff	postdec2,tblptrh
  1206   000E36                     	if	0	;tblptru may be non-zero
  1207   000E36                     	endif
  1208   000E36                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1209   000E36  0E00               	movlw	low (__mediumconst shr (0+16))
  1210   000E38  6EF8               	movwf	tblptru,c
  1211   000E3A                     	endif
  1212   000E3A  0008               	tblrd		*
  1213   000E3C  50F5               	movf	tablat,w,c
  1214   000E3E  0A25               	xorlw	37
  1215   000E40  A4D8               	btfss	status,2,c
  1216   000E42  EF25  F007         	goto	u2481
  1217   000E46  EF27  F007         	goto	u2480
  1218   000E4A                     u2481:
  1219   000E4A  EF59  F008         	goto	l3158
  1220   000E4E                     u2480:
  1221   000E4E                     
  1222                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1223   000E4E  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1224   000E52  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1225   000E56  2ADE               	incf	postinc2,f,c
  1226   000E58  0E00               	movlw	0
  1227   000E5A  22DD               	addwfc	postdec2,f,c
  1228   000E5C                     
  1229                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1230   000E5C  0E00               	movlw	0
  1231   000E5E  6E48               	movwf	(_width+1)^0,c
  1232   000E60  0E00               	movlw	0
  1233   000E62  6E47               	movwf	_width^0,c
  1234   000E64  C047  F04F         	movff	_width,_flags
  1235   000E68                     
  1236                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1237   000E68  6849               	setf	_prec^0,c
  1238   000E6A  684A               	setf	(_prec+1)^0,c
  1239   000E6C                     
  1240                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  1241   000E6C  0E00               	movlw	0
  1242   000E6E  0100               	movlb	0	; () banked
  1243   000E70  6F7A               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1244   000E72  0E00               	movlw	0
  1245   000E74  6F79               	movwf	vfpfcnvrt@done& (0+255),b
  1246                           
  1247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1248   000E76  EF69  F007         	goto	l3124
  1249   000E7A                     l3114:
  1250                           
  1251                           ; BSR set to: 0
  1252                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  1253   000E7A  824F               	bsf	_flags^0,1,c
  1254   000E7C                     
  1255                           ; BSR set to: 0
  1256                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  1257   000E7C  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1258   000E80  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1259   000E84  2ADE               	incf	postinc2,f,c
  1260   000E86  0E00               	movlw	0
  1261   000E88  22DD               	addwfc	postdec2,f,c
  1262                           
  1263                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  1264   000E8A  EF69  F007         	goto	l3124
  1265   000E8E                     l3118:
  1266                           
  1267                           ; BSR set to: 0
  1268                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  1269   000E8E  0E00               	movlw	0
  1270   000E90  6F7A               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1271   000E92  0E01               	movlw	1
  1272   000E94  6F79               	movwf	vfpfcnvrt@done& (0+255),b
  1273                           
  1274                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  1275   000E96  EF69  F007         	goto	l3124
  1276   000E9A                     l3122:
  1277                           
  1278                           ; BSR set to: 0
  1279   000E9A  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1280   000E9E  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1281   000EA2  CFDE FFF6          	movff	postinc2,tblptrl
  1282   000EA6  CFDD FFF7          	movff	postdec2,tblptrh
  1283   000EAA                     	if	0	;tblptru may be non-zero
  1284   000EAA                     	endif
  1285   000EAA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1286   000EAA  0E00               	movlw	low (__mediumconst shr (0+16))
  1287   000EAC  6EF8               	movwf	tblptru,c
  1288   000EAE                     	endif
  1289   000EAE  0008               	tblrd		*
  1290   000EB0  50F5               	movf	tablat,w,c
  1291   000EB2  6E40               	movwf	??_vfpfcnvrt^0,c
  1292   000EB4  6A41               	clrf	(??_vfpfcnvrt+1)^0,c
  1293                           
  1294                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1295                           ; Switch size 1, requested type "simple"
  1296                           ; Number of cases is 1, Range of values is 0 to 0
  1297                           ; switch strategies available:
  1298                           ; Name         Instructions Cycles
  1299                           ; simple_byte            4     3 (average)
  1300                           ;	Chosen strategy is simple_byte
  1301   000EB6  5041               	movf	(??_vfpfcnvrt+1)^0,w,c
  1302   000EB8  0A00               	xorlw	0	; case 0
  1303   000EBA  B4D8               	btfsc	status,2,c
  1304   000EBC  EF62  F007         	goto	l3286
  1305   000EC0  EF47  F007         	goto	l3118
  1306   000EC4                     l3286:
  1307                           
  1308                           ; BSR set to: 0
  1309                           ; Switch size 1, requested type "simple"
  1310                           ; Number of cases is 1, Range of values is 48 to 48
  1311                           ; switch strategies available:
  1312                           ; Name         Instructions Cycles
  1313                           ; simple_byte            4     3 (average)
  1314                           ;	Chosen strategy is simple_byte
  1315   000EC4  5040               	movf	??_vfpfcnvrt^0,w,c
  1316   000EC6  0A30               	xorlw	48	; case 48
  1317   000EC8  B4D8               	btfsc	status,2,c
  1318   000ECA  EF3D  F007         	goto	l3114
  1319   000ECE  EF47  F007         	goto	l3118
  1320   000ED2                     l3124:
  1321                           
  1322                           ; BSR set to: 0
  1323                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1324   000ED2  5179               	movf	vfpfcnvrt@done& (0+255),w,b
  1325   000ED4  117A               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1326   000ED6  B4D8               	btfsc	status,2,c
  1327   000ED8  EF70  F007         	goto	u2491
  1328   000EDC  EF72  F007         	goto	u2490
  1329   000EE0                     u2491:
  1330   000EE0  EF4D  F007         	goto	l3122
  1331   000EE4                     u2490:
  1332   000EE4                     
  1333                           ; BSR set to: 0
  1334                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  1335   000EE4  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1336   000EE8  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1337   000EEC  CFDE FFF6          	movff	postinc2,tblptrl
  1338   000EF0  CFDD FFF7          	movff	postdec2,tblptrh
  1339   000EF4                     	if	0	;tblptru may be non-zero
  1340   000EF4                     	endif
  1341   000EF4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1342   000EF4  0E00               	movlw	low (__mediumconst shr (0+16))
  1343   000EF6  6EF8               	movwf	tblptru,c
  1344   000EF8                     	endif
  1345   000EF8  0008               	tblrd		*
  1346   000EFA  50F5               	movf	tablat,w,c
  1347   000EFC  0A2A               	xorlw	42
  1348   000EFE  A4D8               	btfss	status,2,c
  1349   000F00  EF84  F007         	goto	u2501
  1350   000F04  EF86  F007         	goto	u2500
  1351   000F08                     u2501:
  1352   000F08  EFAF  F007         	goto	l3134
  1353   000F0C                     u2500:
  1354   000F0C                     
  1355                           ; BSR set to: 0
  1356                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  1357   000F0C  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1358   000F10  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1359   000F14  2ADE               	incf	postinc2,f,c
  1360   000F16  0E00               	movlw	0
  1361   000F18  22DD               	addwfc	postdec2,f,c
  1362                           
  1363                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1364   000F1A  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1365   000F1E  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1366   000F22  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1367   000F26  0E02               	movlw	2
  1368   000F28  26DE               	addwf	postinc2,f,c
  1369   000F2A  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1370   000F2E  0E00               	movlw	0
  1371   000F30  22DD               	addwfc	postdec2,f,c
  1372   000F32  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1373   000F36  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1374   000F3A  CFDE F047          	movff	postinc2,_width
  1375   000F3E  CFDD F048          	movff	postdec2,_width+1
  1376   000F42                     
  1377                           ; BSR set to: 0
  1378                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  1379   000F42  BE48               	btfsc	(_width+1)^0,7,c
  1380   000F44  EFA8  F007         	goto	u2510
  1381   000F48  EFA6  F007         	goto	u2511
  1382   000F4C                     u2511:
  1383   000F4C  EFE4  F007         	goto	l3142
  1384   000F50                     u2510:
  1385   000F50                     
  1386                           ; BSR set to: 0
  1387                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  1388   000F50  804F               	bsf	_flags^0,0,c
  1389                           
  1390                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  1391   000F52  6C47               	negf	_width^0,c
  1392   000F54  1E48               	comf	(_width+1)^0,f,c
  1393   000F56  B0D8               	btfsc	status,0,c
  1394   000F58  2A48               	incf	(_width+1)^0,f,c
  1395   000F5A  EFE4  F007         	goto	l3142
  1396   000F5E                     l3134:
  1397                           
  1398                           ; BSR set to: 0
  1399                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  1400   000F5E  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1401   000F62  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1402   000F66  CFDE F013          	movff	postinc2,atoi@s
  1403   000F6A  CFDD F014          	movff	postdec2,atoi@s+1
  1404   000F6E  EC42  F00B         	call	_atoi	;wreg free
  1405   000F72  C013  F047         	movff	?_atoi,_width
  1406   000F76  C014  F048         	movff	?_atoi+1,_width+1
  1407                           
  1408                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1409   000F7A  EFC6  F007         	goto	l3140
  1410   000F7E                     l3136:
  1411                           
  1412                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  1413   000F7E  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1414   000F82  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1415   000F86  2ADE               	incf	postinc2,f,c
  1416   000F88  0E00               	movlw	0
  1417   000F8A  22DD               	addwfc	postdec2,f,c
  1418   000F8C                     l3140:
  1419   000F8C  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1420   000F90  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1421   000F94  CFDE FFF6          	movff	postinc2,tblptrl
  1422   000F98  CFDD FFF7          	movff	postdec2,tblptrh
  1423   000F9C                     	if	0	;tblptru may be non-zero
  1424   000F9C                     	endif
  1425   000F9C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1426   000F9C  0E00               	movlw	low (__mediumconst shr (0+16))
  1427   000F9E  6EF8               	movwf	tblptru,c
  1428   000FA0                     	endif
  1429   000FA0  0008               	tblrd		*
  1430   000FA2  CFF5 F040          	movff	tablat,??_vfpfcnvrt
  1431   000FA6  0ED0               	movlw	208
  1432   000FA8  2440               	addwf	??_vfpfcnvrt^0,w,c
  1433   000FAA  6E41               	movwf	(??_vfpfcnvrt+1)^0,c
  1434   000FAC  6A42               	clrf	(??_vfpfcnvrt+2)^0,c
  1435   000FAE  0EFF               	movlw	255
  1436   000FB0  2242               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  1437   000FB2  5042               	movf	(??_vfpfcnvrt+2)^0,w,c
  1438   000FB4  E109               	bnz	u2520
  1439   000FB6  0E0A               	movlw	10
  1440   000FB8  5C41               	subwf	(??_vfpfcnvrt+1)^0,w,c
  1441   000FBA  A0D8               	btfss	status,0,c
  1442   000FBC  EFE2  F007         	goto	u2521
  1443   000FC0  EFE4  F007         	goto	u2520
  1444   000FC4                     u2521:
  1445   000FC4  EFBF  F007         	goto	l3136
  1446   000FC8                     u2520:
  1447   000FC8                     l3142:
  1448                           
  1449                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1450   000FC8  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1451   000FCC  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1452   000FD0  CFDE F07B          	movff	postinc2,vfpfcnvrt@cp
  1453   000FD4  CFDD F07C          	movff	postdec2,vfpfcnvrt@cp+1
  1454   000FD8                     
  1455                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1456   000FD8  C07B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1457   000FDC  C07C  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1458   000FE0                     	if	0	;tblptru may be non-zero
  1459   000FE0                     	endif
  1460   000FE0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1461   000FE0  0E00               	movlw	low (__mediumconst shr (0+16))
  1462   000FE2  6EF8               	movwf	tblptru,c
  1463   000FE4                     	endif
  1464   000FE4  0008               	tblrd		*
  1465   000FE6  50F5               	movf	tablat,w,c
  1466   000FE8  0A64               	xorlw	100
  1467   000FEA  B4D8               	btfsc	status,2,c
  1468   000FEC  EFFA  F007         	goto	u2531
  1469   000FF0  EFFC  F007         	goto	u2530
  1470   000FF4                     u2531:
  1471   000FF4  EF0C  F008         	goto	l3148
  1472   000FF8                     u2530:
  1473   000FF8  C07B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1474   000FFC  C07C  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1475   001000                     	if	0	;tblptru may be non-zero
  1476   001000                     	endif
  1477   001000                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1478   001000  0E00               	movlw	low (__mediumconst shr (0+16))
  1479   001002  6EF8               	movwf	tblptru,c
  1480   001004                     	endif
  1481   001004  0008               	tblrd		*
  1482   001006  50F5               	movf	tablat,w,c
  1483   001008  0A69               	xorlw	105
  1484   00100A  A4D8               	btfss	status,2,c
  1485   00100C  EF0A  F008         	goto	u2541
  1486   001010  EF0C  F008         	goto	u2540
  1487   001014                     u2541:
  1488   001014  EF50  F008         	goto	l3154
  1489   001018                     u2540:
  1490   001018                     l3148:
  1491                           
  1492                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1493   001018  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1494   00101C  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1495   001020  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1496   001024  0E02               	movlw	2
  1497   001026  26DE               	addwf	postinc2,f,c
  1498   001028  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1499   00102C  0E00               	movlw	0
  1500   00102E  22DD               	addwfc	postdec2,f,c
  1501   001030  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1502   001034  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1503   001038  CFDE F071          	movff	postinc2,vfpfcnvrt@convarg
  1504   00103C  CFDD F072          	movff	postdec2,vfpfcnvrt@convarg+1
  1505   001040  0100               	movlb	0	; () banked
  1506   001042  0E00               	movlw	0
  1507   001044  BF72               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  1508   001046  0EFF               	movlw	-1
  1509   001048  6F73               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  1510   00104A  6F74               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  1511   00104C  6F75               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  1512   00104E  6F76               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  1513   001050  6F77               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  1514   001052  6F78               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  1515                           
  1516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1517   001054  0E01               	movlw	1
  1518   001056  257B               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1519   001058  6E40               	movwf	??_vfpfcnvrt^0,c
  1520   00105A  0E00               	movlw	0
  1521   00105C  217C               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1522   00105E  6E41               	movwf	(??_vfpfcnvrt+1)^0,c
  1523   001060  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1524   001064  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1525   001068  C040  FFDE         	movff	??_vfpfcnvrt,postinc2
  1526   00106C  C041  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1527   001070                     
  1528                           ; BSR set to: 0
  1529                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1530   001070  C03A  F028         	movff	vfpfcnvrt@fp,dtoa@fp
  1531   001074  C03B  F029         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1532   001078  C071  F02A         	movff	vfpfcnvrt@convarg,dtoa@d
  1533   00107C  C072  F02B         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1534   001080  C073  F02C         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1535   001084  C074  F02D         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1536   001088  C075  F02E         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1537   00108C  C076  F02F         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1538   001090  C077  F030         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1539   001094  C078  F031         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1540   001098  EC70  F008         	call	_dtoa	;wreg free
  1541   00109C  EF6F  F008         	goto	l1339
  1542   0010A0                     l3154:
  1543                           
  1544                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1545   0010A0  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1546   0010A4  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1547   0010A8  2ADE               	incf	postinc2,f,c
  1548   0010AA  0E00               	movlw	0
  1549   0010AC  22DD               	addwfc	postdec2,f,c
  1550   0010AE  EF6F  F008         	goto	l1339
  1551   0010B2                     l3158:
  1552                           
  1553                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1554   0010B2  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1555   0010B6  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1556   0010BA  CFDE FFF6          	movff	postinc2,tblptrl
  1557   0010BE  CFDD FFF7          	movff	postdec2,tblptrh
  1558   0010C2                     	if	0	;tblptru may be non-zero
  1559   0010C2                     	endif
  1560   0010C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1561   0010C2  0E00               	movlw	low (__mediumconst shr (0+16))
  1562   0010C4  6EF8               	movwf	tblptru,c
  1563   0010C6                     	endif
  1564   0010C6  0008               	tblrd		*
  1565   0010C8  50F5               	movf	tablat,w,c
  1566   0010CA  6E0D               	movwf	fputc@c^0,c
  1567   0010CC  6A0E               	clrf	(fputc@c+1)^0,c
  1568   0010CE  C03A  F00F         	movff	vfpfcnvrt@fp,fputc@fp
  1569   0010D2  C03B  F010         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1570   0010D6  EC00  F00D         	call	_fputc	;wreg free
  1571   0010DA  EF50  F008         	goto	l3154
  1572   0010DE                     l1339:
  1573   0010DE  0012               	return		;funcret
  1574   0010E0                     __end_of_vfpfcnvrt:
  1575                           	callstack 0
  1576                           
  1577 ;; *************** function _dtoa *****************
  1578 ;; Defined at:
  1579 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;  fp              2   39[COMRAM] PTR struct _IO_FILE
  1582 ;;		 -> sprintf@f(11), 
  1583 ;;  d               8   41[COMRAM] long long 
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;  n               8    6[BANK0 ] long long 
  1586 ;;  i               2   15[BANK0 ] int 
  1587 ;;  w               2    4[BANK0 ] int 
  1588 ;;  p               2    2[BANK0 ] int 
  1589 ;;  s               1   14[BANK0 ] unsigned char 
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  1    wreg      void 
  1592 ;; Registers used:
  1593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1599 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1600 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1601 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1602 ;;      Totals:        18      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1603 ;;Total ram usage:       35 bytes
  1604 ;; Hardware stack levels used: 1
  1605 ;; Hardware stack levels required when called: 7
  1606 ;; This function calls:
  1607 ;;		___aodiv
  1608 ;;		___aomod
  1609 ;;		_abs
  1610 ;;		_pad
  1611 ;; This function is called by:
  1612 ;;		_vfpfcnvrt
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           	psect	text5
  1617   0010E0                     __ptext5:
  1618                           	callstack 0
  1619   0010E0                     _dtoa:
  1620                           	callstack 19
  1621   0010E0                     
  1622                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1623   0010E0  C02A  F066         	movff	dtoa@d,dtoa@n
  1624   0010E4  C02B  F067         	movff	dtoa@d+1,dtoa@n+1
  1625   0010E8  C02C  F068         	movff	dtoa@d+2,dtoa@n+2
  1626   0010EC  C02D  F069         	movff	dtoa@d+3,dtoa@n+3
  1627   0010F0  C02E  F06A         	movff	dtoa@d+4,dtoa@n+4
  1628   0010F4  C02F  F06B         	movff	dtoa@d+5,dtoa@n+5
  1629   0010F8  C030  F06C         	movff	dtoa@d+6,dtoa@n+6
  1630   0010FC  C031  F06D         	movff	dtoa@d+7,dtoa@n+7
  1631   001100                     
  1632                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1633   001100  0100               	movlb	0	; () banked
  1634   001102  BF6D               	btfsc	(dtoa@n+7)& (0+255),7,b
  1635   001104  EF86  F008         	goto	u2351
  1636   001108  EF89  F008         	goto	u2350
  1637   00110C                     u2351:
  1638   00110C  0E01               	movlw	1
  1639   00110E  EF8A  F008         	goto	u2360
  1640   001112                     u2350:
  1641   001112  0E00               	movlw	0
  1642   001114                     u2360:
  1643   001114  6F6E               	movwf	dtoa@s& (0+255),b
  1644   001116                     
  1645                           ; BSR set to: 0
  1646                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1647   001116  516E               	movf	dtoa@s& (0+255),w,b
  1648   001118  B4D8               	btfsc	status,2,c
  1649   00111A  EF91  F008         	goto	u2371
  1650   00111E  EF93  F008         	goto	u2370
  1651   001122                     u2371:
  1652   001122  EFA3  F008         	goto	l3052
  1653   001126                     u2370:
  1654   001126                     
  1655                           ; BSR set to: 0
  1656                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1657   001126  1F6D               	comf	(dtoa@n+7)& (0+255),f,b
  1658   001128  1F6C               	comf	(dtoa@n+6)& (0+255),f,b
  1659   00112A  1F6B               	comf	(dtoa@n+5)& (0+255),f,b
  1660   00112C  1F6A               	comf	(dtoa@n+4)& (0+255),f,b
  1661   00112E  1F69               	comf	(dtoa@n+3)& (0+255),f,b
  1662   001130  1F68               	comf	(dtoa@n+2)& (0+255),f,b
  1663   001132  1F67               	comf	(dtoa@n+1)& (0+255),f,b
  1664   001134  6D66               	negf	dtoa@n& (0+255),b
  1665   001136  0E00               	movlw	0
  1666   001138  2367               	addwfc	(dtoa@n+1)& (0+255),f,b
  1667   00113A  2368               	addwfc	(dtoa@n+2)& (0+255),f,b
  1668   00113C  2369               	addwfc	(dtoa@n+3)& (0+255),f,b
  1669   00113E  236A               	addwfc	(dtoa@n+4)& (0+255),f,b
  1670   001140  236B               	addwfc	(dtoa@n+5)& (0+255),f,b
  1671   001142  236C               	addwfc	(dtoa@n+6)& (0+255),f,b
  1672   001144  236D               	addwfc	(dtoa@n+7)& (0+255),f,b
  1673   001146                     l3052:
  1674                           
  1675                           ; BSR set to: 0
  1676                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 458:     if (!(pr
      +                          ec < 0)) {
  1677   001146  BE4A               	btfsc	(_prec+1)^0,7,c
  1678   001148  EFA8  F008         	goto	u2381
  1679   00114C  EFAA  F008         	goto	u2380
  1680   001150                     u2381:
  1681   001150  EFAB  F008         	goto	l3056
  1682   001154                     u2380:
  1683   001154                     
  1684                           ; BSR set to: 0
  1685                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 459:         flag
      +                          s &= ~(1 << 1);
  1686   001154  924F               	bcf	_flags^0,1,c
  1687   001156                     l3056:
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1691   001156  BE4A               	btfsc	(_prec+1)^0,7,c
  1692   001158  EFB8  F008         	goto	u2390
  1693   00115C  504A               	movf	(_prec+1)^0,w,c
  1694   00115E  E106               	bnz	u2391
  1695   001160  0449               	decf	_prec^0,w,c
  1696   001162  B0D8               	btfsc	status,0,c
  1697   001164  EFB6  F008         	goto	u2391
  1698   001168  EFB8  F008         	goto	u2390
  1699   00116C                     u2391:
  1700   00116C  EFBE  F008         	goto	l1301
  1701   001170                     u2390:
  1702   001170                     
  1703                           ; BSR set to: 0
  1704   001170  0E00               	movlw	0
  1705   001172  6F63               	movwf	(dtoa@p+1)& (0+255),b
  1706   001174  0E01               	movlw	1
  1707   001176  6F62               	movwf	dtoa@p& (0+255),b
  1708   001178  EFC2  F008         	goto	l1303
  1709   00117C                     l1301:
  1710                           
  1711                           ; BSR set to: 0
  1712   00117C  C049  F062         	movff	_prec,dtoa@p
  1713   001180  C04A  F063         	movff	_prec+1,dtoa@p+1
  1714   001184                     l1303:
  1715                           
  1716                           ; BSR set to: 0
  1717                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1718   001184  C047  F064         	movff	_width,dtoa@w
  1719   001188  C048  F065         	movff	_width+1,dtoa@w+1
  1720   00118C                     
  1721                           ; BSR set to: 0
  1722                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1723   00118C  516E               	movf	dtoa@s& (0+255),w,b
  1724   00118E  B4D8               	btfsc	status,2,c
  1725   001190  EFCC  F008         	goto	u2401
  1726   001194  EFCE  F008         	goto	u2400
  1727   001198                     u2401:
  1728   001198  EFE5  F008         	goto	l1304
  1729   00119C                     u2400:
  1730   00119C                     
  1731                           ; BSR set to: 0
  1732                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1733   00119C  0764               	decf	dtoa@w& (0+255),f,b
  1734   00119E  A0D8               	btfss	status,0,c
  1735   0011A0  0765               	decf	(dtoa@w+1)& (0+255),f,b
  1736   0011A2                     
  1737                           ; BSR set to: 0
  1738                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1739   0011A2  516E               	movf	dtoa@s& (0+255),w,b
  1740   0011A4  A4D8               	btfss	status,2,c
  1741   0011A6  EFD7  F008         	goto	u2411
  1742   0011AA  EFD9  F008         	goto	u2410
  1743   0011AE                     u2411:
  1744   0011AE  EFDF  F008         	goto	l3068
  1745   0011B2                     u2410:
  1746   0011B2                     
  1747                           ; BSR set to: 0
  1748   0011B2  0E00               	movlw	0
  1749   0011B4  6F61               	movwf	(_dtoa$2098+1)& (0+255),b
  1750   0011B6  0E2B               	movlw	43
  1751   0011B8  6F60               	movwf	_dtoa$2098& (0+255),b
  1752   0011BA  EFE3  F008         	goto	l3070
  1753   0011BE                     l3068:
  1754                           
  1755                           ; BSR set to: 0
  1756   0011BE  0E00               	movlw	0
  1757   0011C0  6F61               	movwf	(_dtoa$2098+1)& (0+255),b
  1758   0011C2  0E2D               	movlw	45
  1759   0011C4  6F60               	movwf	_dtoa$2098& (0+255),b
  1760   0011C6                     l3070:
  1761                           
  1762                           ; BSR set to: 0
  1763   0011C6  C060  F06E         	movff	_dtoa$2098,dtoa@s
  1764   0011CA                     l1304:
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1768   0011CA  0E00               	movlw	0
  1769   0011CC  6F70               	movwf	(dtoa@i+1)& (0+255),b
  1770   0011CE  0E1F               	movlw	31
  1771   0011D0  6F6F               	movwf	dtoa@i& (0+255),b
  1772   0011D2                     
  1773                           ; BSR set to: 0
  1774                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1775   0011D2  0E00               	movlw	0
  1776   0011D4  6FD1               	movwf	(_dbuf+31)& (0+255),b
  1777                           
  1778                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1779   0011D6  EF6A  F009         	goto	l3084
  1780   0011DA                     l3074:
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1784   0011DA  076F               	decf	dtoa@i& (0+255),f,b
  1785   0011DC  A0D8               	btfss	status,0,c
  1786   0011DE  0770               	decf	(dtoa@i+1)& (0+255),f,b
  1787   0011E0                     
  1788                           ; BSR set to: 0
  1789                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1790   0011E0  0EB2               	movlw	low _dbuf
  1791   0011E2  256F               	addwf	dtoa@i& (0+255),w,b
  1792   0011E4  6ED9               	movwf	fsr2l,c
  1793   0011E6  0E00               	movlw	high _dbuf
  1794   0011E8  2170               	addwfc	(dtoa@i+1)& (0+255),w,b
  1795   0011EA  6EDA               	movwf	fsr2h,c
  1796   0011EC  C066  F00D         	movff	dtoa@n,___aomod@dividend
  1797   0011F0  C067  F00E         	movff	dtoa@n+1,___aomod@dividend+1
  1798   0011F4  C068  F00F         	movff	dtoa@n+2,___aomod@dividend+2
  1799   0011F8  C069  F010         	movff	dtoa@n+3,___aomod@dividend+3
  1800   0011FC  C06A  F011         	movff	dtoa@n+4,___aomod@dividend+4
  1801   001200  C06B  F012         	movff	dtoa@n+5,___aomod@dividend+5
  1802   001204  C06C  F013         	movff	dtoa@n+6,___aomod@dividend+6
  1803   001208  C06D  F014         	movff	dtoa@n+7,___aomod@dividend+7
  1804   00120C  0E0A               	movlw	10
  1805   00120E  6E15               	movwf	___aomod@divisor^0,c
  1806   001210  0E00               	movlw	0
  1807   001212  6E16               	movwf	(___aomod@divisor+1)^0,c
  1808   001214  0E00               	movlw	0
  1809   001216  6E17               	movwf	(___aomod@divisor+2)^0,c
  1810   001218  0E00               	movlw	0
  1811   00121A  6E18               	movwf	(___aomod@divisor+3)^0,c
  1812   00121C  0E00               	movlw	0
  1813   00121E  6E19               	movwf	(___aomod@divisor+4)^0,c
  1814   001220  0E00               	movlw	0
  1815   001222  6E1A               	movwf	(___aomod@divisor+5)^0,c
  1816   001224  0E00               	movlw	0
  1817   001226  6E1B               	movwf	(___aomod@divisor+6)^0,c
  1818   001228  0E00               	movlw	0
  1819   00122A  6E1C               	movwf	(___aomod@divisor+7)^0,c
  1820   00122C  EC90  F00A         	call	___aomod	;wreg free
  1821   001230  C00D  F032         	movff	?___aomod,??_dtoa
  1822   001234  C00E  F033         	movff	?___aomod+1,??_dtoa+1
  1823   001238  C00F  F034         	movff	?___aomod+2,??_dtoa+2
  1824   00123C  C010  F035         	movff	?___aomod+3,??_dtoa+3
  1825   001240  C011  F036         	movff	?___aomod+4,??_dtoa+4
  1826   001244  C012  F037         	movff	?___aomod+5,??_dtoa+5
  1827   001248  C013  F038         	movff	?___aomod+6,??_dtoa+6
  1828   00124C  C014  F039         	movff	?___aomod+7,??_dtoa+7
  1829   001250  C032  F01F         	movff	??_dtoa,abs@a
  1830   001254  C033  F020         	movff	??_dtoa+1,abs@a+1
  1831   001258  ECD6  F010         	call	_abs	;wreg free
  1832   00125C  501F               	movf	?_abs^0,w,c
  1833   00125E  0F30               	addlw	48
  1834   001260  6EDF               	movwf	indf2,c
  1835   001262                     
  1836                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1837   001262  0100               	movlb	0	; () banked
  1838   001264  0762               	decf	dtoa@p& (0+255),f,b
  1839   001266  A0D8               	btfss	status,0,c
  1840   001268  0763               	decf	(dtoa@p+1)& (0+255),f,b
  1841   00126A                     
  1842                           ; BSR set to: 0
  1843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1844   00126A  0764               	decf	dtoa@w& (0+255),f,b
  1845   00126C  A0D8               	btfss	status,0,c
  1846   00126E  0765               	decf	(dtoa@w+1)& (0+255),f,b
  1847   001270                     
  1848                           ; BSR set to: 0
  1849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1850   001270  C066  F00D         	movff	dtoa@n,___aodiv@dividend
  1851   001274  C067  F00E         	movff	dtoa@n+1,___aodiv@dividend+1
  1852   001278  C068  F00F         	movff	dtoa@n+2,___aodiv@dividend+2
  1853   00127C  C069  F010         	movff	dtoa@n+3,___aodiv@dividend+3
  1854   001280  C06A  F011         	movff	dtoa@n+4,___aodiv@dividend+4
  1855   001284  C06B  F012         	movff	dtoa@n+5,___aodiv@dividend+5
  1856   001288  C06C  F013         	movff	dtoa@n+6,___aodiv@dividend+6
  1857   00128C  C06D  F014         	movff	dtoa@n+7,___aodiv@dividend+7
  1858   001290  0E0A               	movlw	10
  1859   001292  6E15               	movwf	___aodiv@divisor^0,c
  1860   001294  0E00               	movlw	0
  1861   001296  6E16               	movwf	(___aodiv@divisor+1)^0,c
  1862   001298  0E00               	movlw	0
  1863   00129A  6E17               	movwf	(___aodiv@divisor+2)^0,c
  1864   00129C  0E00               	movlw	0
  1865   00129E  6E18               	movwf	(___aodiv@divisor+3)^0,c
  1866   0012A0  0E00               	movlw	0
  1867   0012A2  6E19               	movwf	(___aodiv@divisor+4)^0,c
  1868   0012A4  0E00               	movlw	0
  1869   0012A6  6E1A               	movwf	(___aodiv@divisor+5)^0,c
  1870   0012A8  0E00               	movlw	0
  1871   0012AA  6E1B               	movwf	(___aodiv@divisor+6)^0,c
  1872   0012AC  0E00               	movlw	0
  1873   0012AE  6E1C               	movwf	(___aodiv@divisor+7)^0,c
  1874   0012B0  ECCC  F009         	call	___aodiv	;wreg free
  1875   0012B4  C00D  F066         	movff	?___aodiv,dtoa@n
  1876   0012B8  C00E  F067         	movff	?___aodiv+1,dtoa@n+1
  1877   0012BC  C00F  F068         	movff	?___aodiv+2,dtoa@n+2
  1878   0012C0  C010  F069         	movff	?___aodiv+3,dtoa@n+3
  1879   0012C4  C011  F06A         	movff	?___aodiv+4,dtoa@n+4
  1880   0012C8  C012  F06B         	movff	?___aodiv+5,dtoa@n+5
  1881   0012CC  C013  F06C         	movff	?___aodiv+6,dtoa@n+6
  1882   0012D0  C014  F06D         	movff	?___aodiv+7,dtoa@n+7
  1883   0012D4                     l3084:
  1884                           
  1885                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1886   0012D4  0100               	movlb	0	; () banked
  1887   0012D6  BF70               	btfsc	(dtoa@i+1)& (0+255),7,b
  1888   0012D8  EF76  F009         	goto	u2421
  1889   0012DC  5170               	movf	(dtoa@i+1)& (0+255),w,b
  1890   0012DE  E108               	bnz	u2420
  1891   0012E0  056F               	decf	dtoa@i& (0+255),w,b
  1892   0012E2  A0D8               	btfss	status,0,c
  1893   0012E4  EF76  F009         	goto	u2421
  1894   0012E8  EF78  F009         	goto	u2420
  1895   0012EC                     u2421:
  1896   0012EC  EFA8  F009         	goto	l3094
  1897   0012F0                     u2420:
  1898   0012F0                     
  1899                           ; BSR set to: 0
  1900   0012F0  5166               	movf	dtoa@n& (0+255),w,b
  1901   0012F2  1167               	iorwf	(dtoa@n+1)& (0+255),w,b
  1902   0012F4  1168               	iorwf	(dtoa@n+2)& (0+255),w,b
  1903   0012F6  1169               	iorwf	(dtoa@n+3)& (0+255),w,b
  1904   0012F8  116A               	iorwf	(dtoa@n+4)& (0+255),w,b
  1905   0012FA  116B               	iorwf	(dtoa@n+5)& (0+255),w,b
  1906   0012FC  116C               	iorwf	(dtoa@n+6)& (0+255),w,b
  1907   0012FE  116D               	iorwf	(dtoa@n+7)& (0+255),w,b
  1908   001300  A4D8               	btfss	status,2,c
  1909   001302  EF85  F009         	goto	u2431
  1910   001306  EF87  F009         	goto	u2430
  1911   00130A                     u2431:
  1912   00130A  EFED  F008         	goto	l3074
  1913   00130E                     u2430:
  1914   00130E                     
  1915                           ; BSR set to: 0
  1916   00130E  BF63               	btfsc	(dtoa@p+1)& (0+255),7,b
  1917   001310  EF94  F009         	goto	u2440
  1918   001314  5163               	movf	(dtoa@p+1)& (0+255),w,b
  1919   001316  E106               	bnz	u2441
  1920   001318  0562               	decf	dtoa@p& (0+255),w,b
  1921   00131A  B0D8               	btfsc	status,0,c
  1922   00131C  EF92  F009         	goto	u2441
  1923   001320  EF94  F009         	goto	u2440
  1924   001324                     u2441:
  1925   001324  EFED  F008         	goto	l3074
  1926   001328                     u2440:
  1927   001328                     
  1928                           ; BSR set to: 0
  1929   001328  BF65               	btfsc	(dtoa@w+1)& (0+255),7,b
  1930   00132A  EF9F  F009         	goto	u2451
  1931   00132E  5165               	movf	(dtoa@w+1)& (0+255),w,b
  1932   001330  E108               	bnz	u2450
  1933   001332  0564               	decf	dtoa@w& (0+255),w,b
  1934   001334  A0D8               	btfss	status,0,c
  1935   001336  EF9F  F009         	goto	u2451
  1936   00133A  EFA1  F009         	goto	u2450
  1937   00133E                     u2451:
  1938   00133E  EFA8  F009         	goto	l3094
  1939   001342                     u2450:
  1940   001342                     
  1941                           ; BSR set to: 0
  1942   001342  B24F               	btfsc	_flags^0,1,c
  1943   001344  EFA6  F009         	goto	u2461
  1944   001348  EFA8  F009         	goto	u2460
  1945   00134C                     u2461:
  1946   00134C  EFED  F008         	goto	l3074
  1947   001350                     u2460:
  1948   001350                     l3094:
  1949                           
  1950                           ; BSR set to: 0
  1951                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1952   001350  516E               	movf	dtoa@s& (0+255),w,b
  1953   001352  B4D8               	btfsc	status,2,c
  1954   001354  EFAE  F009         	goto	u2471
  1955   001358  EFB0  F009         	goto	u2470
  1956   00135C                     u2471:
  1957   00135C  EFBB  F009         	goto	l3100
  1958   001360                     u2470:
  1959   001360                     
  1960                           ; BSR set to: 0
  1961                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1962   001360  076F               	decf	dtoa@i& (0+255),f,b
  1963   001362  A0D8               	btfss	status,0,c
  1964   001364  0770               	decf	(dtoa@i+1)& (0+255),f,b
  1965   001366                     
  1966                           ; BSR set to: 0
  1967                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1968   001366  0EB2               	movlw	low _dbuf
  1969   001368  256F               	addwf	dtoa@i& (0+255),w,b
  1970   00136A  6ED9               	movwf	fsr2l,c
  1971   00136C  0E00               	movlw	high _dbuf
  1972   00136E  2170               	addwfc	(dtoa@i+1)& (0+255),w,b
  1973   001370  6EDA               	movwf	fsr2h,c
  1974   001372  C06E  FFDF         	movff	dtoa@s,indf2
  1975   001376                     l3100:
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1979   001376  C028  F01D         	movff	dtoa@fp,pad@fp
  1980   00137A  C029  F01E         	movff	dtoa@fp+1,pad@fp+1
  1981   00137E  0EB2               	movlw	low _dbuf
  1982   001380  256F               	addwf	dtoa@i& (0+255),w,b
  1983   001382  6E1F               	movwf	pad@buf^0,c
  1984   001384  0E00               	movlw	high _dbuf
  1985   001386  2170               	addwfc	(dtoa@i+1)& (0+255),w,b
  1986   001388  6E20               	movwf	(pad@buf+1)^0,c
  1987   00138A  C064  F021         	movff	dtoa@w,pad@p
  1988   00138E  C065  F022         	movff	dtoa@w+1,pad@p+1
  1989   001392  EC1D  F00E         	call	_pad	;wreg free
  1990   001396  0012               	return		;funcret
  1991   001398                     __end_of_dtoa:
  1992                           	callstack 0
  1993                           
  1994 ;; *************** function _pad *****************
  1995 ;; Defined at:
  1996 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  1999 ;;		 -> sprintf@f(11), 
  2000 ;;  buf             2   30[COMRAM] PTR unsigned char 
  2001 ;;		 -> dbuf(32), 
  2002 ;;  p               2   32[COMRAM] int 
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;  w               2   37[COMRAM] int 
  2005 ;;  i               2   35[COMRAM] int 
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  1    wreg      void 
  2008 ;; Registers used:
  2009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2015 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2016 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2017 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2018 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2019 ;;Total ram usage:       11 bytes
  2020 ;; Hardware stack levels used: 1
  2021 ;; Hardware stack levels required when called: 6
  2022 ;; This function calls:
  2023 ;;		_fputc
  2024 ;;		_fputs
  2025 ;; This function is called by:
  2026 ;;		_dtoa
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           	psect	text6
  2031   001C3A                     __ptext6:
  2032                           	callstack 0
  2033   001C3A                     _pad:
  2034                           	callstack 19
  2035   001C3A                     
  2036                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  2037   001C3A  A04F               	btfss	_flags^0,0,c
  2038   001C3C  EF22  F00E         	goto	u2301
  2039   001C40  EF24  F00E         	goto	u2300
  2040   001C44                     u2301:
  2041   001C44  EF2E  F00E         	goto	l3026
  2042   001C48                     u2300:
  2043   001C48                     
  2044                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  2045   001C48  C01F  F016         	movff	pad@buf,fputs@s
  2046   001C4C  C020  F017         	movff	pad@buf+1,fputs@s+1
  2047   001C50  C01D  F018         	movff	pad@fp,fputs@fp
  2048   001C54  C01E  F019         	movff	pad@fp+1,fputs@fp+1
  2049   001C58  ECB4  F010         	call	_fputs	;wreg free
  2050   001C5C                     l3026:
  2051                           
  2052                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  2053   001C5C  BE22               	btfsc	(pad@p+1)^0,7,c
  2054   001C5E  EF33  F00E         	goto	u2311
  2055   001C62  EF35  F00E         	goto	u2310
  2056   001C66                     u2311:
  2057   001C66  EF3B  F00E         	goto	l3030
  2058   001C6A                     u2310:
  2059   001C6A  C021  F026         	movff	pad@p,pad@w
  2060   001C6E  C022  F027         	movff	pad@p+1,pad@w+1
  2061   001C72  EF3F  F00E         	goto	l1290
  2062   001C76                     l3030:
  2063   001C76  0E00               	movlw	0
  2064   001C78  6E27               	movwf	(pad@w+1)^0,c
  2065   001C7A  0E00               	movlw	0
  2066   001C7C  6E26               	movwf	pad@w^0,c
  2067   001C7E                     l1290:
  2068                           
  2069                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2070   001C7E  0E00               	movlw	0
  2071   001C80  6E25               	movwf	(pad@i+1)^0,c
  2072   001C82  0E00               	movlw	0
  2073   001C84  6E24               	movwf	pad@i^0,c
  2074                           
  2075                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2076   001C86  EF51  F00E         	goto	l3036
  2077   001C8A                     l3032:
  2078                           
  2079                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2080   001C8A  0E00               	movlw	0
  2081   001C8C  6E0E               	movwf	(fputc@c+1)^0,c
  2082   001C8E  0E20               	movlw	32
  2083   001C90  6E0D               	movwf	fputc@c^0,c
  2084   001C92  C01D  F00F         	movff	pad@fp,fputc@fp
  2085   001C96  C01E  F010         	movff	pad@fp+1,fputc@fp+1
  2086   001C9A  EC00  F00D         	call	_fputc	;wreg free
  2087   001C9E                     
  2088                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2089   001C9E  4A24               	infsnz	pad@i^0,f,c
  2090   001CA0  2A25               	incf	(pad@i+1)^0,f,c
  2091   001CA2                     l3036:
  2092                           
  2093                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2094   001CA2  5026               	movf	pad@w^0,w,c
  2095   001CA4  5C24               	subwf	pad@i^0,w,c
  2096   001CA6  5025               	movf	(pad@i+1)^0,w,c
  2097   001CA8  0A80               	xorlw	128
  2098   001CAA  6E23               	movwf	??_pad^0,c
  2099   001CAC  5027               	movf	(pad@w+1)^0,w,c
  2100   001CAE  0A80               	xorlw	128
  2101   001CB0  5823               	subwfb	??_pad^0,w,c
  2102   001CB2  A0D8               	btfss	status,0,c
  2103   001CB4  EF5E  F00E         	goto	u2321
  2104   001CB8  EF60  F00E         	goto	u2320
  2105   001CBC                     u2321:
  2106   001CBC  EF45  F00E         	goto	l3032
  2107   001CC0                     u2320:
  2108   001CC0                     
  2109                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  2110   001CC0  B04F               	btfsc	_flags^0,0,c
  2111   001CC2  EF65  F00E         	goto	u2331
  2112   001CC6  EF67  F00E         	goto	u2330
  2113   001CCA                     u2331:
  2114   001CCA  EF71  F00E         	goto	l1295
  2115   001CCE                     u2330:
  2116   001CCE                     
  2117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2118   001CCE  C01F  F016         	movff	pad@buf,fputs@s
  2119   001CD2  C020  F017         	movff	pad@buf+1,fputs@s+1
  2120   001CD6  C01D  F018         	movff	pad@fp,fputs@fp
  2121   001CDA  C01E  F019         	movff	pad@fp+1,fputs@fp+1
  2122   001CDE  ECB4  F010         	call	_fputs	;wreg free
  2123   001CE2                     l1295:
  2124   001CE2  0012               	return		;funcret
  2125   001CE4                     __end_of_pad:
  2126                           	callstack 0
  2127                           
  2128 ;; *************** function _fputs *****************
  2129 ;; Defined at:
  2130 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;  s               2   21[COMRAM] PTR const unsigned char 
  2133 ;;		 -> dbuf(32), 
  2134 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  2135 ;;		 -> sprintf@f(11), 
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;  i               2   26[COMRAM] int 
  2138 ;;  c               1   25[COMRAM] unsigned char 
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  2   21[COMRAM] int 
  2141 ;; Registers used:
  2142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2148 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2149 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2151 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2152 ;;Total ram usage:        7 bytes
  2153 ;; Hardware stack levels used: 1
  2154 ;; Hardware stack levels required when called: 5
  2155 ;; This function calls:
  2156 ;;		_fputc
  2157 ;; This function is called by:
  2158 ;;		_pad
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           	psect	text7
  2163   002168                     __ptext7:
  2164                           	callstack 0
  2165   002168                     _fputs:
  2166                           	callstack 19
  2167   002168  0E00               	movlw	0
  2168   00216A  6E1C               	movwf	(fputs@i+1)^0,c
  2169   00216C  0E00               	movlw	0
  2170   00216E  6E1B               	movwf	fputs@i^0,c
  2171   002170  EFC5  F010         	goto	l2940
  2172   002174                     l2936:
  2173   002174  C01A  F00D         	movff	fputs@c,fputc@c
  2174   002178  6A0E               	clrf	(fputc@c+1)^0,c
  2175   00217A  C018  F00F         	movff	fputs@fp,fputc@fp
  2176   00217E  C019  F010         	movff	fputs@fp+1,fputc@fp+1
  2177   002182  EC00  F00D         	call	_fputc	;wreg free
  2178   002186  4A1B               	infsnz	fputs@i^0,f,c
  2179   002188  2A1C               	incf	(fputs@i+1)^0,f,c
  2180   00218A                     l2940:
  2181   00218A  501B               	movf	fputs@i^0,w,c
  2182   00218C  2416               	addwf	fputs@s^0,w,c
  2183   00218E  6ED9               	movwf	fsr2l,c
  2184   002190  501C               	movf	(fputs@i+1)^0,w,c
  2185   002192  2017               	addwfc	(fputs@s+1)^0,w,c
  2186   002194  6EDA               	movwf	fsr2h,c
  2187   002196  50DF               	movf	indf2,w,c
  2188   002198  6E1A               	movwf	fputs@c^0,c
  2189   00219A  501A               	movf	fputs@c^0,w,c
  2190   00219C  A4D8               	btfss	status,2,c
  2191   00219E  EFD3  F010         	goto	u2161
  2192   0021A2  EFD5  F010         	goto	u2160
  2193   0021A6                     u2161:
  2194   0021A6  EFBA  F010         	goto	l2936
  2195   0021AA                     u2160:
  2196   0021AA  0012               	return		;funcret
  2197   0021AC                     __end_of_fputs:
  2198                           	callstack 0
  2199                           
  2200 ;; *************** function _fputc *****************
  2201 ;; Defined at:
  2202 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;  c               2   12[COMRAM] int 
  2205 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  2206 ;;		 -> sprintf@f(11), 
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;		None
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  2   12[COMRAM] int 
  2211 ;; Registers used:
  2212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2218 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2220 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2221 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2222 ;;Total ram usage:        9 bytes
  2223 ;; Hardware stack levels used: 1
  2224 ;; Hardware stack levels required when called: 4
  2225 ;; This function calls:
  2226 ;;		_putch
  2227 ;; This function is called by:
  2228 ;;		_pad
  2229 ;;		_vfpfcnvrt
  2230 ;;		_fputs
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           	psect	text8
  2235   001A00                     __ptext8:
  2236                           	callstack 0
  2237   001A00                     _fputc:
  2238                           	callstack 22
  2239   001A00  500F               	movf	fputc@fp^0,w,c
  2240   001A02  1010               	iorwf	(fputc@fp+1)^0,w,c
  2241   001A04  B4D8               	btfsc	status,2,c
  2242   001A06  EF07  F00D         	goto	u2121
  2243   001A0A  EF09  F00D         	goto	u2120
  2244   001A0E                     u2121:
  2245   001A0E  EF12  F00D         	goto	l2924
  2246   001A12                     u2120:
  2247   001A12  500F               	movf	fputc@fp^0,w,c
  2248   001A14  1010               	iorwf	(fputc@fp+1)^0,w,c
  2249   001A16  A4D8               	btfss	status,2,c
  2250   001A18  EF10  F00D         	goto	u2131
  2251   001A1C  EF12  F00D         	goto	u2130
  2252   001A20                     u2131:
  2253   001A20  EF17  F00D         	goto	l2926
  2254   001A24                     u2130:
  2255   001A24                     l2924:
  2256   001A24  500D               	movf	fputc@c^0,w,c
  2257   001A26  EC36  F012         	call	_putch
  2258   001A2A  EF64  F00D         	goto	l1403
  2259   001A2E                     l2926:
  2260   001A2E  EE20 F009          	lfsr	2,9
  2261   001A32  500F               	movf	fputc@fp^0,w,c
  2262   001A34  26D9               	addwf	fsr2l,f,c
  2263   001A36  5010               	movf	(fputc@fp+1)^0,w,c
  2264   001A38  22DA               	addwfc	fsr2h,f,c
  2265   001A3A  50DE               	movf	postinc2,w,c
  2266   001A3C  10DE               	iorwf	postinc2,w,c
  2267   001A3E  B4D8               	btfsc	status,2,c
  2268   001A40  EF24  F00D         	goto	u2141
  2269   001A44  EF26  F00D         	goto	u2140
  2270   001A48                     u2141:
  2271   001A48  EF41  F00D         	goto	l2930
  2272   001A4C                     u2140:
  2273   001A4C  EE20 F009          	lfsr	2,9
  2274   001A50  500F               	movf	fputc@fp^0,w,c
  2275   001A52  26D9               	addwf	fsr2l,f,c
  2276   001A54  5010               	movf	(fputc@fp+1)^0,w,c
  2277   001A56  22DA               	addwfc	fsr2h,f,c
  2278   001A58  EE10 F003          	lfsr	1,3
  2279   001A5C  500F               	movf	fputc@fp^0,w,c
  2280   001A5E  26E1               	addwf	fsr1l,f,c
  2281   001A60  5010               	movf	(fputc@fp+1)^0,w,c
  2282   001A62  22E2               	addwfc	fsr1h,f,c
  2283   001A64  50DE               	movf	postinc2,w,c
  2284   001A66  5CE6               	subwf	postinc1,w,c
  2285   001A68  50E6               	movf	postinc1,w,c
  2286   001A6A  0A80               	xorlw	128
  2287   001A6C  6E15               	movwf	(??_fputc+4)^0,c
  2288   001A6E  50DE               	movf	postinc2,w,c
  2289   001A70  0A80               	xorlw	128
  2290   001A72  5815               	subwfb	(??_fputc+4)^0,w,c
  2291   001A74  B0D8               	btfsc	status,0,c
  2292   001A76  EF3F  F00D         	goto	u2151
  2293   001A7A  EF41  F00D         	goto	u2150
  2294   001A7E                     u2151:
  2295   001A7E  EF64  F00D         	goto	l1403
  2296   001A82                     u2150:
  2297   001A82                     l2930:
  2298   001A82  EE20 F003          	lfsr	2,3
  2299   001A86  500F               	movf	fputc@fp^0,w,c
  2300   001A88  26D9               	addwf	fsr2l,f,c
  2301   001A8A  5010               	movf	(fputc@fp+1)^0,w,c
  2302   001A8C  22DA               	addwfc	fsr2h,f,c
  2303   001A8E  CFDE F011          	movff	postinc2,??_fputc
  2304   001A92  CFDD F012          	movff	postdec2,??_fputc+1
  2305   001A96  C00F  FFD9         	movff	fputc@fp,fsr2l
  2306   001A9A  C010  FFDA         	movff	fputc@fp+1,fsr2h
  2307   001A9E  CFDE F013          	movff	postinc2,??_fputc+2
  2308   001AA2  CFDD F014          	movff	postdec2,??_fputc+3
  2309   001AA6  5011               	movf	??_fputc^0,w,c
  2310   001AA8  2413               	addwf	(??_fputc+2)^0,w,c
  2311   001AAA  6ED9               	movwf	fsr2l,c
  2312   001AAC  5012               	movf	(??_fputc+1)^0,w,c
  2313   001AAE  2014               	addwfc	(??_fputc+3)^0,w,c
  2314   001AB0  6EDA               	movwf	fsr2h,c
  2315   001AB2  C00D  FFDF         	movff	fputc@c,indf2
  2316   001AB6  EE20 F003          	lfsr	2,3
  2317   001ABA  500F               	movf	fputc@fp^0,w,c
  2318   001ABC  26D9               	addwf	fsr2l,f,c
  2319   001ABE  5010               	movf	(fputc@fp+1)^0,w,c
  2320   001AC0  22DA               	addwfc	fsr2h,f,c
  2321   001AC2  2ADE               	incf	postinc2,f,c
  2322   001AC4  0E00               	movlw	0
  2323   001AC6  22DD               	addwfc	postdec2,f,c
  2324   001AC8                     l1403:
  2325   001AC8  0012               	return		;funcret
  2326   001ACA                     __end_of_fputc:
  2327                           	callstack 0
  2328                           
  2329 ;; *************** function _putch *****************
  2330 ;; Defined at:
  2331 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;  c               1    wreg     unsigned char 
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;  c               1    0[COMRAM] unsigned char 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      void 
  2338 ;; Registers used:
  2339 ;;		wreg
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2349 ;;Total ram usage:        0 bytes
  2350 ;; Hardware stack levels used: 1
  2351 ;; Hardware stack levels required when called: 3
  2352 ;; This function calls:
  2353 ;;		Nothing
  2354 ;; This function is called by:
  2355 ;;		_fputc
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text9
  2360   00246C                     __ptext9:
  2361                           	callstack 0
  2362   00246C                     _putch:
  2363                           	callstack 22
  2364   00246C  0012               	return		;funcret
  2365   00246E                     __end_of_putch:
  2366                           	callstack 0
  2367                           
  2368 ;; *************** function _abs *****************
  2369 ;; Defined at:
  2370 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;  a               2   30[COMRAM] int 
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;		None
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  2   30[COMRAM] int 
  2377 ;; Registers used:
  2378 ;;		wreg, status,2, status,0
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2384 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2386 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2387 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2388 ;;Total ram usage:        4 bytes
  2389 ;; Hardware stack levels used: 1
  2390 ;; Hardware stack levels required when called: 3
  2391 ;; This function calls:
  2392 ;;		Nothing
  2393 ;; This function is called by:
  2394 ;;		_dtoa
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           	psect	text10
  2399   0021AC                     __ptext10:
  2400                           	callstack 0
  2401   0021AC                     _abs:
  2402                           	callstack 22
  2403   0021AC  BE20               	btfsc	(abs@a+1)^0,7,c
  2404   0021AE  EFE3  F010         	goto	u2340
  2405   0021B2  5020               	movf	(abs@a+1)^0,w,c
  2406   0021B4  E106               	bnz	u2341
  2407   0021B6  041F               	decf	abs@a^0,w,c
  2408   0021B8  B0D8               	btfsc	status,0,c
  2409   0021BA  EFE1  F010         	goto	u2341
  2410   0021BE  EFE3  F010         	goto	u2340
  2411   0021C2                     u2341:
  2412   0021C2  EFF1  F010         	goto	l1349
  2413   0021C6                     u2340:
  2414   0021C6  C01F  F021         	movff	abs@a,??_abs
  2415   0021CA  C020  F022         	movff	abs@a+1,??_abs+1
  2416   0021CE  1E21               	comf	??_abs^0,f,c
  2417   0021D0  1E22               	comf	(??_abs+1)^0,f,c
  2418   0021D2  4A21               	infsnz	??_abs^0,f,c
  2419   0021D4  2A22               	incf	(??_abs+1)^0,f,c
  2420   0021D6  C021  F01F         	movff	??_abs,?_abs
  2421   0021DA  C022  F020         	movff	??_abs+1,?_abs+1
  2422   0021DE  EFF5  F010         	goto	l1352
  2423   0021E2                     l1349:
  2424   0021E2  C01F  F01F         	movff	abs@a,?_abs
  2425   0021E6  C020  F020         	movff	abs@a+1,?_abs+1
  2426   0021EA                     l1352:
  2427   0021EA  0012               	return		;funcret
  2428   0021EC                     __end_of_abs:
  2429                           	callstack 0
  2430                           
  2431 ;; *************** function ___aomod *****************
  2432 ;; Defined at:
  2433 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;  dividend        8   12[COMRAM] long long 
  2436 ;;  divisor         8   20[COMRAM] long long 
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;  sign            1   29[COMRAM] unsigned char 
  2439 ;;  counter         1   28[COMRAM] unsigned char 
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  8   12[COMRAM] long long 
  2442 ;; Registers used:
  2443 ;;		wreg, status,2, status,0
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2449 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2450 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2452 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2453 ;;Total ram usage:       18 bytes
  2454 ;; Hardware stack levels used: 1
  2455 ;; Hardware stack levels required when called: 3
  2456 ;; This function calls:
  2457 ;;		Nothing
  2458 ;; This function is called by:
  2459 ;;		_dtoa
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text11
  2464   001520                     __ptext11:
  2465                           	callstack 0
  2466   001520                     ___aomod:
  2467                           	callstack 22
  2468   001520  0E00               	movlw	0
  2469   001522  6E1E               	movwf	___aomod@sign^0,c
  2470   001524  BE14               	btfsc	(___aomod@dividend+7)^0,7,c
  2471   001526  EF99  F00A         	goto	u2240
  2472   00152A  EF97  F00A         	goto	u2241
  2473   00152E                     u2241:
  2474   00152E  EFAB  F00A         	goto	l2994
  2475   001532                     u2240:
  2476   001532  1E14               	comf	(___aomod@dividend+7)^0,f,c
  2477   001534  1E13               	comf	(___aomod@dividend+6)^0,f,c
  2478   001536  1E12               	comf	(___aomod@dividend+5)^0,f,c
  2479   001538  1E11               	comf	(___aomod@dividend+4)^0,f,c
  2480   00153A  1E10               	comf	(___aomod@dividend+3)^0,f,c
  2481   00153C  1E0F               	comf	(___aomod@dividend+2)^0,f,c
  2482   00153E  1E0E               	comf	(___aomod@dividend+1)^0,f,c
  2483   001540  6C0D               	negf	___aomod@dividend^0,c
  2484   001542  0E00               	movlw	0
  2485   001544  220E               	addwfc	(___aomod@dividend+1)^0,f,c
  2486   001546  220F               	addwfc	(___aomod@dividend+2)^0,f,c
  2487   001548  2210               	addwfc	(___aomod@dividend+3)^0,f,c
  2488   00154A  2211               	addwfc	(___aomod@dividend+4)^0,f,c
  2489   00154C  2212               	addwfc	(___aomod@dividend+5)^0,f,c
  2490   00154E  2213               	addwfc	(___aomod@dividend+6)^0,f,c
  2491   001550  2214               	addwfc	(___aomod@dividend+7)^0,f,c
  2492   001552  0E01               	movlw	1
  2493   001554  6E1E               	movwf	___aomod@sign^0,c
  2494   001556                     l2994:
  2495   001556  BE1C               	btfsc	(___aomod@divisor+7)^0,7,c
  2496   001558  EFB2  F00A         	goto	u2250
  2497   00155C  EFB0  F00A         	goto	u2251
  2498   001560                     u2251:
  2499   001560  EFC2  F00A         	goto	l2998
  2500   001564                     u2250:
  2501   001564  1E1C               	comf	(___aomod@divisor+7)^0,f,c
  2502   001566  1E1B               	comf	(___aomod@divisor+6)^0,f,c
  2503   001568  1E1A               	comf	(___aomod@divisor+5)^0,f,c
  2504   00156A  1E19               	comf	(___aomod@divisor+4)^0,f,c
  2505   00156C  1E18               	comf	(___aomod@divisor+3)^0,f,c
  2506   00156E  1E17               	comf	(___aomod@divisor+2)^0,f,c
  2507   001570  1E16               	comf	(___aomod@divisor+1)^0,f,c
  2508   001572  6C15               	negf	___aomod@divisor^0,c
  2509   001574  0E00               	movlw	0
  2510   001576  2216               	addwfc	(___aomod@divisor+1)^0,f,c
  2511   001578  2217               	addwfc	(___aomod@divisor+2)^0,f,c
  2512   00157A  2218               	addwfc	(___aomod@divisor+3)^0,f,c
  2513   00157C  2219               	addwfc	(___aomod@divisor+4)^0,f,c
  2514   00157E  221A               	addwfc	(___aomod@divisor+5)^0,f,c
  2515   001580  221B               	addwfc	(___aomod@divisor+6)^0,f,c
  2516   001582  221C               	addwfc	(___aomod@divisor+7)^0,f,c
  2517   001584                     l2998:
  2518   001584  5015               	movf	___aomod@divisor^0,w,c
  2519   001586  1016               	iorwf	(___aomod@divisor+1)^0,w,c
  2520   001588  1017               	iorwf	(___aomod@divisor+2)^0,w,c
  2521   00158A  1018               	iorwf	(___aomod@divisor+3)^0,w,c
  2522   00158C  1019               	iorwf	(___aomod@divisor+4)^0,w,c
  2523   00158E  101A               	iorwf	(___aomod@divisor+5)^0,w,c
  2524   001590  101B               	iorwf	(___aomod@divisor+6)^0,w,c
  2525   001592  101C               	iorwf	(___aomod@divisor+7)^0,w,c
  2526   001594  B4D8               	btfsc	status,2,c
  2527   001596  EFCF  F00A         	goto	u2261
  2528   00159A  EFD1  F00A         	goto	u2260
  2529   00159E                     u2261:
  2530   00159E  EF19  F00B         	goto	l3014
  2531   0015A2                     u2260:
  2532   0015A2  0E01               	movlw	1
  2533   0015A4  6E1D               	movwf	___aomod@counter^0,c
  2534   0015A6  EFDF  F00A         	goto	l3004
  2535   0015AA                     l3002:
  2536   0015AA  90D8               	bcf	status,0,c
  2537   0015AC  3615               	rlcf	___aomod@divisor^0,f,c
  2538   0015AE  3616               	rlcf	(___aomod@divisor+1)^0,f,c
  2539   0015B0  3617               	rlcf	(___aomod@divisor+2)^0,f,c
  2540   0015B2  3618               	rlcf	(___aomod@divisor+3)^0,f,c
  2541   0015B4  3619               	rlcf	(___aomod@divisor+4)^0,f,c
  2542   0015B6  361A               	rlcf	(___aomod@divisor+5)^0,f,c
  2543   0015B8  361B               	rlcf	(___aomod@divisor+6)^0,f,c
  2544   0015BA  361C               	rlcf	(___aomod@divisor+7)^0,f,c
  2545   0015BC  2A1D               	incf	___aomod@counter^0,f,c
  2546   0015BE                     l3004:
  2547   0015BE  AE1C               	btfss	(___aomod@divisor+7)^0,7,c
  2548   0015C0  EFE4  F00A         	goto	u2271
  2549   0015C4  EFE6  F00A         	goto	u2270
  2550   0015C8                     u2271:
  2551   0015C8  EFD5  F00A         	goto	l3002
  2552   0015CC                     u2270:
  2553   0015CC                     l3006:
  2554   0015CC  5015               	movf	___aomod@divisor^0,w,c
  2555   0015CE  5C0D               	subwf	___aomod@dividend^0,w,c
  2556   0015D0  5016               	movf	(___aomod@divisor+1)^0,w,c
  2557   0015D2  580E               	subwfb	(___aomod@dividend+1)^0,w,c
  2558   0015D4  5017               	movf	(___aomod@divisor+2)^0,w,c
  2559   0015D6  580F               	subwfb	(___aomod@dividend+2)^0,w,c
  2560   0015D8  5018               	movf	(___aomod@divisor+3)^0,w,c
  2561   0015DA  5810               	subwfb	(___aomod@dividend+3)^0,w,c
  2562   0015DC  5019               	movf	(___aomod@divisor+4)^0,w,c
  2563   0015DE  5811               	subwfb	(___aomod@dividend+4)^0,w,c
  2564   0015E0  501A               	movf	(___aomod@divisor+5)^0,w,c
  2565   0015E2  5812               	subwfb	(___aomod@dividend+5)^0,w,c
  2566   0015E4  501B               	movf	(___aomod@divisor+6)^0,w,c
  2567   0015E6  5813               	subwfb	(___aomod@dividend+6)^0,w,c
  2568   0015E8  501C               	movf	(___aomod@divisor+7)^0,w,c
  2569   0015EA  5814               	subwfb	(___aomod@dividend+7)^0,w,c
  2570   0015EC  A0D8               	btfss	status,0,c
  2571   0015EE  EFFB  F00A         	goto	u2281
  2572   0015F2  EFFD  F00A         	goto	u2280
  2573   0015F6                     u2281:
  2574   0015F6  EF0D  F00B         	goto	l3010
  2575   0015FA                     u2280:
  2576   0015FA  5015               	movf	___aomod@divisor^0,w,c
  2577   0015FC  5E0D               	subwf	___aomod@dividend^0,f,c
  2578   0015FE  5016               	movf	(___aomod@divisor+1)^0,w,c
  2579   001600  5A0E               	subwfb	(___aomod@dividend+1)^0,f,c
  2580   001602  5017               	movf	(___aomod@divisor+2)^0,w,c
  2581   001604  5A0F               	subwfb	(___aomod@dividend+2)^0,f,c
  2582   001606  5018               	movf	(___aomod@divisor+3)^0,w,c
  2583   001608  5A10               	subwfb	(___aomod@dividend+3)^0,f,c
  2584   00160A  5019               	movf	(___aomod@divisor+4)^0,w,c
  2585   00160C  5A11               	subwfb	(___aomod@dividend+4)^0,f,c
  2586   00160E  501A               	movf	(___aomod@divisor+5)^0,w,c
  2587   001610  5A12               	subwfb	(___aomod@dividend+5)^0,f,c
  2588   001612  501B               	movf	(___aomod@divisor+6)^0,w,c
  2589   001614  5A13               	subwfb	(___aomod@dividend+6)^0,f,c
  2590   001616  501C               	movf	(___aomod@divisor+7)^0,w,c
  2591   001618  5A14               	subwfb	(___aomod@dividend+7)^0,f,c
  2592   00161A                     l3010:
  2593   00161A  90D8               	bcf	status,0,c
  2594   00161C  321C               	rrcf	(___aomod@divisor+7)^0,f,c
  2595   00161E  321B               	rrcf	(___aomod@divisor+6)^0,f,c
  2596   001620  321A               	rrcf	(___aomod@divisor+5)^0,f,c
  2597   001622  3219               	rrcf	(___aomod@divisor+4)^0,f,c
  2598   001624  3218               	rrcf	(___aomod@divisor+3)^0,f,c
  2599   001626  3217               	rrcf	(___aomod@divisor+2)^0,f,c
  2600   001628  3216               	rrcf	(___aomod@divisor+1)^0,f,c
  2601   00162A  3215               	rrcf	___aomod@divisor^0,f,c
  2602   00162C  2E1D               	decfsz	___aomod@counter^0,f,c
  2603   00162E  EFE6  F00A         	goto	l3006
  2604   001632                     l3014:
  2605   001632  501E               	movf	___aomod@sign^0,w,c
  2606   001634  B4D8               	btfsc	status,2,c
  2607   001636  EF1F  F00B         	goto	u2291
  2608   00163A  EF21  F00B         	goto	u2290
  2609   00163E                     u2291:
  2610   00163E  EF31  F00B         	goto	l3018
  2611   001642                     u2290:
  2612   001642  1E14               	comf	(___aomod@dividend+7)^0,f,c
  2613   001644  1E13               	comf	(___aomod@dividend+6)^0,f,c
  2614   001646  1E12               	comf	(___aomod@dividend+5)^0,f,c
  2615   001648  1E11               	comf	(___aomod@dividend+4)^0,f,c
  2616   00164A  1E10               	comf	(___aomod@dividend+3)^0,f,c
  2617   00164C  1E0F               	comf	(___aomod@dividend+2)^0,f,c
  2618   00164E  1E0E               	comf	(___aomod@dividend+1)^0,f,c
  2619   001650  6C0D               	negf	___aomod@dividend^0,c
  2620   001652  0E00               	movlw	0
  2621   001654  220E               	addwfc	(___aomod@dividend+1)^0,f,c
  2622   001656  220F               	addwfc	(___aomod@dividend+2)^0,f,c
  2623   001658  2210               	addwfc	(___aomod@dividend+3)^0,f,c
  2624   00165A  2211               	addwfc	(___aomod@dividend+4)^0,f,c
  2625   00165C  2212               	addwfc	(___aomod@dividend+5)^0,f,c
  2626   00165E  2213               	addwfc	(___aomod@dividend+6)^0,f,c
  2627   001660  2214               	addwfc	(___aomod@dividend+7)^0,f,c
  2628   001662                     l3018:
  2629   001662  C00D  F00D         	movff	___aomod@dividend,?___aomod
  2630   001666  C00E  F00E         	movff	___aomod@dividend+1,?___aomod+1
  2631   00166A  C00F  F00F         	movff	___aomod@dividend+2,?___aomod+2
  2632   00166E  C010  F010         	movff	___aomod@dividend+3,?___aomod+3
  2633   001672  C011  F011         	movff	___aomod@dividend+4,?___aomod+4
  2634   001676  C012  F012         	movff	___aomod@dividend+5,?___aomod+5
  2635   00167A  C013  F013         	movff	___aomod@dividend+6,?___aomod+6
  2636   00167E  C014  F014         	movff	___aomod@dividend+7,?___aomod+7
  2637   001682  0012               	return		;funcret
  2638   001684                     __end_of___aomod:
  2639                           	callstack 0
  2640                           
  2641 ;; *************** function ___aodiv *****************
  2642 ;; Defined at:
  2643 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;  dividend        8   12[COMRAM] long long 
  2646 ;;  divisor         8   20[COMRAM] long long 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  quotient        8   30[COMRAM] long long 
  2649 ;;  sign            1   29[COMRAM] unsigned char 
  2650 ;;  counter         1   28[COMRAM] unsigned char 
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  8   12[COMRAM] long long 
  2653 ;; Registers used:
  2654 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2660 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2661 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2663 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2664 ;;Total ram usage:       26 bytes
  2665 ;; Hardware stack levels used: 1
  2666 ;; Hardware stack levels required when called: 3
  2667 ;; This function calls:
  2668 ;;		Nothing
  2669 ;; This function is called by:
  2670 ;;		_dtoa
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           	psect	text12
  2675   001398                     __ptext12:
  2676                           	callstack 0
  2677   001398                     ___aodiv:
  2678                           	callstack 22
  2679   001398  0E00               	movlw	0
  2680   00139A  6E1E               	movwf	___aodiv@sign^0,c
  2681   00139C  BE1C               	btfsc	(___aodiv@divisor+7)^0,7,c
  2682   00139E  EFD5  F009         	goto	u2170
  2683   0013A2  EFD3  F009         	goto	u2171
  2684   0013A6                     u2171:
  2685   0013A6  EFE7  F009         	goto	l2950
  2686   0013AA                     u2170:
  2687   0013AA  1E1C               	comf	(___aodiv@divisor+7)^0,f,c
  2688   0013AC  1E1B               	comf	(___aodiv@divisor+6)^0,f,c
  2689   0013AE  1E1A               	comf	(___aodiv@divisor+5)^0,f,c
  2690   0013B0  1E19               	comf	(___aodiv@divisor+4)^0,f,c
  2691   0013B2  1E18               	comf	(___aodiv@divisor+3)^0,f,c
  2692   0013B4  1E17               	comf	(___aodiv@divisor+2)^0,f,c
  2693   0013B6  1E16               	comf	(___aodiv@divisor+1)^0,f,c
  2694   0013B8  6C15               	negf	___aodiv@divisor^0,c
  2695   0013BA  0E00               	movlw	0
  2696   0013BC  2216               	addwfc	(___aodiv@divisor+1)^0,f,c
  2697   0013BE  2217               	addwfc	(___aodiv@divisor+2)^0,f,c
  2698   0013C0  2218               	addwfc	(___aodiv@divisor+3)^0,f,c
  2699   0013C2  2219               	addwfc	(___aodiv@divisor+4)^0,f,c
  2700   0013C4  221A               	addwfc	(___aodiv@divisor+5)^0,f,c
  2701   0013C6  221B               	addwfc	(___aodiv@divisor+6)^0,f,c
  2702   0013C8  221C               	addwfc	(___aodiv@divisor+7)^0,f,c
  2703   0013CA  0E01               	movlw	1
  2704   0013CC  6E1E               	movwf	___aodiv@sign^0,c
  2705   0013CE                     l2950:
  2706   0013CE  BE14               	btfsc	(___aodiv@dividend+7)^0,7,c
  2707   0013D0  EFEE  F009         	goto	u2180
  2708   0013D4  EFEC  F009         	goto	u2181
  2709   0013D8                     u2181:
  2710   0013D8  EF00  F00A         	goto	l2956
  2711   0013DC                     u2180:
  2712   0013DC  1E14               	comf	(___aodiv@dividend+7)^0,f,c
  2713   0013DE  1E13               	comf	(___aodiv@dividend+6)^0,f,c
  2714   0013E0  1E12               	comf	(___aodiv@dividend+5)^0,f,c
  2715   0013E2  1E11               	comf	(___aodiv@dividend+4)^0,f,c
  2716   0013E4  1E10               	comf	(___aodiv@dividend+3)^0,f,c
  2717   0013E6  1E0F               	comf	(___aodiv@dividend+2)^0,f,c
  2718   0013E8  1E0E               	comf	(___aodiv@dividend+1)^0,f,c
  2719   0013EA  6C0D               	negf	___aodiv@dividend^0,c
  2720   0013EC  0E00               	movlw	0
  2721   0013EE  220E               	addwfc	(___aodiv@dividend+1)^0,f,c
  2722   0013F0  220F               	addwfc	(___aodiv@dividend+2)^0,f,c
  2723   0013F2  2210               	addwfc	(___aodiv@dividend+3)^0,f,c
  2724   0013F4  2211               	addwfc	(___aodiv@dividend+4)^0,f,c
  2725   0013F6  2212               	addwfc	(___aodiv@dividend+5)^0,f,c
  2726   0013F8  2213               	addwfc	(___aodiv@dividend+6)^0,f,c
  2727   0013FA  2214               	addwfc	(___aodiv@dividend+7)^0,f,c
  2728   0013FC  0E01               	movlw	1
  2729   0013FE  1A1E               	xorwf	___aodiv@sign^0,f,c
  2730   001400                     l2956:
  2731   001400  EE20  F01F         	lfsr	2,___aodiv@quotient
  2732   001404  0E07               	movlw	7
  2733   001406                     u2191:
  2734   001406  6ADE               	clrf	postinc2,c
  2735   001408  06E8               	decf	wreg,f,c
  2736   00140A  E2FD               	bc	u2191
  2737   00140C  5015               	movf	___aodiv@divisor^0,w,c
  2738   00140E  1016               	iorwf	(___aodiv@divisor+1)^0,w,c
  2739   001410  1017               	iorwf	(___aodiv@divisor+2)^0,w,c
  2740   001412  1018               	iorwf	(___aodiv@divisor+3)^0,w,c
  2741   001414  1019               	iorwf	(___aodiv@divisor+4)^0,w,c
  2742   001416  101A               	iorwf	(___aodiv@divisor+5)^0,w,c
  2743   001418  101B               	iorwf	(___aodiv@divisor+6)^0,w,c
  2744   00141A  101C               	iorwf	(___aodiv@divisor+7)^0,w,c
  2745   00141C  B4D8               	btfsc	status,2,c
  2746   00141E  EF13  F00A         	goto	u2201
  2747   001422  EF15  F00A         	goto	u2200
  2748   001426                     u2201:
  2749   001426  EF67  F00A         	goto	l2978
  2750   00142A                     u2200:
  2751   00142A  0E01               	movlw	1
  2752   00142C  6E1D               	movwf	___aodiv@counter^0,c
  2753   00142E  EF23  F00A         	goto	l2964
  2754   001432                     l2962:
  2755   001432  90D8               	bcf	status,0,c
  2756   001434  3615               	rlcf	___aodiv@divisor^0,f,c
  2757   001436  3616               	rlcf	(___aodiv@divisor+1)^0,f,c
  2758   001438  3617               	rlcf	(___aodiv@divisor+2)^0,f,c
  2759   00143A  3618               	rlcf	(___aodiv@divisor+3)^0,f,c
  2760   00143C  3619               	rlcf	(___aodiv@divisor+4)^0,f,c
  2761   00143E  361A               	rlcf	(___aodiv@divisor+5)^0,f,c
  2762   001440  361B               	rlcf	(___aodiv@divisor+6)^0,f,c
  2763   001442  361C               	rlcf	(___aodiv@divisor+7)^0,f,c
  2764   001444  2A1D               	incf	___aodiv@counter^0,f,c
  2765   001446                     l2964:
  2766   001446  AE1C               	btfss	(___aodiv@divisor+7)^0,7,c
  2767   001448  EF28  F00A         	goto	u2211
  2768   00144C  EF2A  F00A         	goto	u2210
  2769   001450                     u2211:
  2770   001450  EF19  F00A         	goto	l2962
  2771   001454                     u2210:
  2772   001454                     l2966:
  2773   001454  90D8               	bcf	status,0,c
  2774   001456  361F               	rlcf	___aodiv@quotient^0,f,c
  2775   001458  3620               	rlcf	(___aodiv@quotient+1)^0,f,c
  2776   00145A  3621               	rlcf	(___aodiv@quotient+2)^0,f,c
  2777   00145C  3622               	rlcf	(___aodiv@quotient+3)^0,f,c
  2778   00145E  3623               	rlcf	(___aodiv@quotient+4)^0,f,c
  2779   001460  3624               	rlcf	(___aodiv@quotient+5)^0,f,c
  2780   001462  3625               	rlcf	(___aodiv@quotient+6)^0,f,c
  2781   001464  3626               	rlcf	(___aodiv@quotient+7)^0,f,c
  2782   001466  5015               	movf	___aodiv@divisor^0,w,c
  2783   001468  5C0D               	subwf	___aodiv@dividend^0,w,c
  2784   00146A  5016               	movf	(___aodiv@divisor+1)^0,w,c
  2785   00146C  580E               	subwfb	(___aodiv@dividend+1)^0,w,c
  2786   00146E  5017               	movf	(___aodiv@divisor+2)^0,w,c
  2787   001470  580F               	subwfb	(___aodiv@dividend+2)^0,w,c
  2788   001472  5018               	movf	(___aodiv@divisor+3)^0,w,c
  2789   001474  5810               	subwfb	(___aodiv@dividend+3)^0,w,c
  2790   001476  5019               	movf	(___aodiv@divisor+4)^0,w,c
  2791   001478  5811               	subwfb	(___aodiv@dividend+4)^0,w,c
  2792   00147A  501A               	movf	(___aodiv@divisor+5)^0,w,c
  2793   00147C  5812               	subwfb	(___aodiv@dividend+5)^0,w,c
  2794   00147E  501B               	movf	(___aodiv@divisor+6)^0,w,c
  2795   001480  5813               	subwfb	(___aodiv@dividend+6)^0,w,c
  2796   001482  501C               	movf	(___aodiv@divisor+7)^0,w,c
  2797   001484  5814               	subwfb	(___aodiv@dividend+7)^0,w,c
  2798   001486  A0D8               	btfss	status,0,c
  2799   001488  EF48  F00A         	goto	u2221
  2800   00148C  EF4A  F00A         	goto	u2220
  2801   001490                     u2221:
  2802   001490  EF5B  F00A         	goto	l2974
  2803   001494                     u2220:
  2804   001494  5015               	movf	___aodiv@divisor^0,w,c
  2805   001496  5E0D               	subwf	___aodiv@dividend^0,f,c
  2806   001498  5016               	movf	(___aodiv@divisor+1)^0,w,c
  2807   00149A  5A0E               	subwfb	(___aodiv@dividend+1)^0,f,c
  2808   00149C  5017               	movf	(___aodiv@divisor+2)^0,w,c
  2809   00149E  5A0F               	subwfb	(___aodiv@dividend+2)^0,f,c
  2810   0014A0  5018               	movf	(___aodiv@divisor+3)^0,w,c
  2811   0014A2  5A10               	subwfb	(___aodiv@dividend+3)^0,f,c
  2812   0014A4  5019               	movf	(___aodiv@divisor+4)^0,w,c
  2813   0014A6  5A11               	subwfb	(___aodiv@dividend+4)^0,f,c
  2814   0014A8  501A               	movf	(___aodiv@divisor+5)^0,w,c
  2815   0014AA  5A12               	subwfb	(___aodiv@dividend+5)^0,f,c
  2816   0014AC  501B               	movf	(___aodiv@divisor+6)^0,w,c
  2817   0014AE  5A13               	subwfb	(___aodiv@dividend+6)^0,f,c
  2818   0014B0  501C               	movf	(___aodiv@divisor+7)^0,w,c
  2819   0014B2  5A14               	subwfb	(___aodiv@dividend+7)^0,f,c
  2820   0014B4  801F               	bsf	___aodiv@quotient^0,0,c
  2821   0014B6                     l2974:
  2822   0014B6  90D8               	bcf	status,0,c
  2823   0014B8  321C               	rrcf	(___aodiv@divisor+7)^0,f,c
  2824   0014BA  321B               	rrcf	(___aodiv@divisor+6)^0,f,c
  2825   0014BC  321A               	rrcf	(___aodiv@divisor+5)^0,f,c
  2826   0014BE  3219               	rrcf	(___aodiv@divisor+4)^0,f,c
  2827   0014C0  3218               	rrcf	(___aodiv@divisor+3)^0,f,c
  2828   0014C2  3217               	rrcf	(___aodiv@divisor+2)^0,f,c
  2829   0014C4  3216               	rrcf	(___aodiv@divisor+1)^0,f,c
  2830   0014C6  3215               	rrcf	___aodiv@divisor^0,f,c
  2831   0014C8  2E1D               	decfsz	___aodiv@counter^0,f,c
  2832   0014CA  EF2A  F00A         	goto	l2966
  2833   0014CE                     l2978:
  2834   0014CE  501E               	movf	___aodiv@sign^0,w,c
  2835   0014D0  B4D8               	btfsc	status,2,c
  2836   0014D2  EF6D  F00A         	goto	u2231
  2837   0014D6  EF6F  F00A         	goto	u2230
  2838   0014DA                     u2231:
  2839   0014DA  EF7F  F00A         	goto	l2982
  2840   0014DE                     u2230:
  2841   0014DE  1E26               	comf	(___aodiv@quotient+7)^0,f,c
  2842   0014E0  1E25               	comf	(___aodiv@quotient+6)^0,f,c
  2843   0014E2  1E24               	comf	(___aodiv@quotient+5)^0,f,c
  2844   0014E4  1E23               	comf	(___aodiv@quotient+4)^0,f,c
  2845   0014E6  1E22               	comf	(___aodiv@quotient+3)^0,f,c
  2846   0014E8  1E21               	comf	(___aodiv@quotient+2)^0,f,c
  2847   0014EA  1E20               	comf	(___aodiv@quotient+1)^0,f,c
  2848   0014EC  6C1F               	negf	___aodiv@quotient^0,c
  2849   0014EE  0E00               	movlw	0
  2850   0014F0  2220               	addwfc	(___aodiv@quotient+1)^0,f,c
  2851   0014F2  2221               	addwfc	(___aodiv@quotient+2)^0,f,c
  2852   0014F4  2222               	addwfc	(___aodiv@quotient+3)^0,f,c
  2853   0014F6  2223               	addwfc	(___aodiv@quotient+4)^0,f,c
  2854   0014F8  2224               	addwfc	(___aodiv@quotient+5)^0,f,c
  2855   0014FA  2225               	addwfc	(___aodiv@quotient+6)^0,f,c
  2856   0014FC  2226               	addwfc	(___aodiv@quotient+7)^0,f,c
  2857   0014FE                     l2982:
  2858   0014FE  C01F  F00D         	movff	___aodiv@quotient,?___aodiv
  2859   001502  C020  F00E         	movff	___aodiv@quotient+1,?___aodiv+1
  2860   001506  C021  F00F         	movff	___aodiv@quotient+2,?___aodiv+2
  2861   00150A  C022  F010         	movff	___aodiv@quotient+3,?___aodiv+3
  2862   00150E  C023  F011         	movff	___aodiv@quotient+4,?___aodiv+4
  2863   001512  C024  F012         	movff	___aodiv@quotient+5,?___aodiv+5
  2864   001516  C025  F013         	movff	___aodiv@quotient+6,?___aodiv+6
  2865   00151A  C026  F014         	movff	___aodiv@quotient+7,?___aodiv+7
  2866   00151E  0012               	return		;funcret
  2867   001520                     __end_of___aodiv:
  2868                           	callstack 0
  2869                           
  2870 ;; *************** function _atoi *****************
  2871 ;; Defined at:
  2872 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;  s               2   18[COMRAM] PTR const unsigned char 
  2875 ;;		 -> STR_2(17), STR_1(19), 
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;  n               2   25[COMRAM] int 
  2878 ;;  neg             2   23[COMRAM] int 
  2879 ;; Return value:  Size  Location     Type
  2880 ;;                  2   18[COMRAM] int 
  2881 ;; Registers used:
  2882 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/0
  2885 ;;		On exit  : 0/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2888 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2889 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2890 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2891 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2892 ;;Total ram usage:        9 bytes
  2893 ;; Hardware stack levels used: 1
  2894 ;; Hardware stack levels required when called: 4
  2895 ;; This function calls:
  2896 ;;		___wmul
  2897 ;;		_isdigit
  2898 ;;		_isspace
  2899 ;; This function is called by:
  2900 ;;		_vfpfcnvrt
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text13
  2905   001684                     __ptext13:
  2906                           	callstack 0
  2907   001684                     _atoi:
  2908                           	callstack 22
  2909   001684  0E00               	movlw	0
  2910   001686  6E1B               	movwf	(atoi@n+1)^0,c
  2911   001688  0E00               	movlw	0
  2912   00168A  6E1A               	movwf	atoi@n^0,c
  2913   00168C  0E00               	movlw	0
  2914   00168E  6E19               	movwf	(atoi@neg+1)^0,c
  2915   001690  0E00               	movlw	0
  2916   001692  6E18               	movwf	atoi@neg^0,c
  2917   001694  EF4E  F00B         	goto	l2396
  2918   001698                     l2392:
  2919   001698  4A13               	infsnz	atoi@s^0,f,c
  2920   00169A  2A14               	incf	(atoi@s+1)^0,f,c
  2921   00169C                     l2396:
  2922   00169C  C013  FFF6         	movff	atoi@s,tblptrl
  2923   0016A0  C014  FFF7         	movff	atoi@s+1,tblptrh
  2924   0016A4                     	if	0	;tblptru may be non-zero
  2925   0016A4                     	endif
  2926   0016A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2927   0016A4  0E00               	movlw	low (__mediumconst shr (0+16))
  2928   0016A6  6EF8               	movwf	tblptru,c
  2929   0016A8                     	endif
  2930   0016A8  0008               	tblrd		*
  2931   0016AA  50F5               	movf	tablat,w,c
  2932   0016AC  0A20               	xorlw	32
  2933   0016AE  B4D8               	btfsc	status,2,c
  2934   0016B0  EF5C  F00B         	goto	u1481
  2935   0016B4  EF5E  F00B         	goto	u1480
  2936   0016B8                     u1481:
  2937   0016B8  EF4C  F00B         	goto	l2392
  2938   0016BC                     u1480:
  2939   0016BC  C013  FFF6         	movff	atoi@s,tblptrl
  2940   0016C0  C014  FFF7         	movff	atoi@s+1,tblptrh
  2941   0016C4                     	if	0	;tblptru may be non-zero
  2942   0016C4                     	endif
  2943   0016C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2944   0016C4  0E00               	movlw	low (__mediumconst shr (0+16))
  2945   0016C6  6EF8               	movwf	tblptru,c
  2946   0016C8                     	endif
  2947   0016C8  0008               	tblrd		*
  2948   0016CA  CFF5 F015          	movff	tablat,??_atoi
  2949   0016CE  0EF7               	movlw	247
  2950   0016D0  2415               	addwf	??_atoi^0,w,c
  2951   0016D2  6E16               	movwf	(??_atoi+1)^0,c
  2952   0016D4  6A17               	clrf	(??_atoi+2)^0,c
  2953   0016D6  0EFF               	movlw	255
  2954   0016D8  2217               	addwfc	(??_atoi+2)^0,f,c
  2955   0016DA  5017               	movf	(??_atoi+2)^0,w,c
  2956   0016DC  E109               	bnz	u1490
  2957   0016DE  0E05               	movlw	5
  2958   0016E0  5C16               	subwf	(??_atoi+1)^0,w,c
  2959   0016E2  A0D8               	btfss	status,0,c
  2960   0016E4  EF76  F00B         	goto	u1491
  2961   0016E8  EF78  F00B         	goto	u1490
  2962   0016EC                     u1491:
  2963   0016EC  EF4C  F00B         	goto	l2392
  2964   0016F0                     u1490:
  2965   0016F0  EF82  F00B         	goto	l2404
  2966   0016F4                     l2400:
  2967   0016F4  0E00               	movlw	0
  2968   0016F6  6E19               	movwf	(atoi@neg+1)^0,c
  2969   0016F8  0E01               	movlw	1
  2970   0016FA  6E18               	movwf	atoi@neg^0,c
  2971   0016FC                     l2402:
  2972   0016FC  4A13               	infsnz	atoi@s^0,f,c
  2973   0016FE  2A14               	incf	(atoi@s+1)^0,f,c
  2974   001700  EFBB  F00B         	goto	l2412
  2975   001704                     l2404:
  2976   001704  C013  FFF6         	movff	atoi@s,tblptrl
  2977   001708  C014  FFF7         	movff	atoi@s+1,tblptrh
  2978   00170C                     	if	0	;tblptru may be non-zero
  2979   00170C                     	endif
  2980   00170C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2981   00170C  0E00               	movlw	low (__mediumconst shr (0+16))
  2982   00170E  6EF8               	movwf	tblptru,c
  2983   001710                     	endif
  2984   001710  0008               	tblrd		*
  2985   001712  50F5               	movf	tablat,w,c
  2986   001714  6E15               	movwf	??_atoi^0,c
  2987   001716  6A16               	clrf	(??_atoi+1)^0,c
  2988                           
  2989                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2990                           ; Switch size 1, requested type "simple"
  2991                           ; Number of cases is 1, Range of values is 0 to 0
  2992                           ; switch strategies available:
  2993                           ; Name         Instructions Cycles
  2994                           ; simple_byte            4     3 (average)
  2995                           ;	Chosen strategy is simple_byte
  2996   001718  5016               	movf	(??_atoi+1)^0,w,c
  2997   00171A  0A00               	xorlw	0	; case 0
  2998   00171C  B4D8               	btfsc	status,2,c
  2999   00171E  EF93  F00B         	goto	l3288
  3000   001722  EFBB  F00B         	goto	l2412
  3001   001726                     l3288:
  3002                           
  3003                           ; Switch size 1, requested type "simple"
  3004                           ; Number of cases is 2, Range of values is 43 to 45
  3005                           ; switch strategies available:
  3006                           ; Name         Instructions Cycles
  3007                           ; simple_byte            7     4 (average)
  3008                           ;	Chosen strategy is simple_byte
  3009   001726  5015               	movf	??_atoi^0,w,c
  3010   001728  0A2B               	xorlw	43	; case 43
  3011   00172A  B4D8               	btfsc	status,2,c
  3012   00172C  EF7E  F00B         	goto	l2402
  3013   001730  0A06               	xorlw	6	; case 45
  3014   001732  B4D8               	btfsc	status,2,c
  3015   001734  EF7A  F00B         	goto	l2400
  3016   001738  EFBB  F00B         	goto	l2412
  3017   00173C                     l2406:
  3018   00173C  C01A  F00D         	movff	atoi@n,___wmul@multiplier
  3019   001740  C01B  F00E         	movff	atoi@n+1,___wmul@multiplier+1
  3020   001744  0E00               	movlw	0
  3021   001746  6E10               	movwf	(___wmul@multiplicand+1)^0,c
  3022   001748  0E0A               	movlw	10
  3023   00174A  6E0F               	movwf	___wmul@multiplicand^0,c
  3024   00174C  EC94  F011         	call	___wmul	;wreg free
  3025   001750  C013  FFF6         	movff	atoi@s,tblptrl
  3026   001754  C014  FFF7         	movff	atoi@s+1,tblptrh
  3027   001758                     	if	0	;tblptru may be non-zero
  3028   001758                     	endif
  3029   001758                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3030   001758  0E00               	movlw	low (__mediumconst shr (0+16))
  3031   00175A  6EF8               	movwf	tblptru,c
  3032   00175C                     	endif
  3033   00175C  0008               	tblrd		*
  3034   00175E  50F5               	movf	tablat,w,c
  3035   001760  5E0D               	subwf	?___wmul^0,f,c
  3036   001762  0E00               	movlw	0
  3037   001764  5A0E               	subwfb	(?___wmul+1)^0,f,c
  3038   001766  0E30               	movlw	48
  3039   001768  240D               	addwf	?___wmul^0,w,c
  3040   00176A  6E1A               	movwf	atoi@n^0,c
  3041   00176C  0E00               	movlw	0
  3042   00176E  200E               	addwfc	(?___wmul+1)^0,w,c
  3043   001770  6E1B               	movwf	(atoi@n+1)^0,c
  3044   001772  EF7E  F00B         	goto	l2402
  3045   001776                     l2412:
  3046   001776  C013  FFF6         	movff	atoi@s,tblptrl
  3047   00177A  C014  FFF7         	movff	atoi@s+1,tblptrh
  3048   00177E                     	if	0	;tblptru may be non-zero
  3049   00177E                     	endif
  3050   00177E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3051   00177E  0E00               	movlw	low (__mediumconst shr (0+16))
  3052   001780  6EF8               	movwf	tblptru,c
  3053   001782                     	endif
  3054   001782  0008               	tblrd		*
  3055   001784  CFF5 F015          	movff	tablat,??_atoi
  3056   001788  0ED0               	movlw	208
  3057   00178A  2415               	addwf	??_atoi^0,w,c
  3058   00178C  6E16               	movwf	(??_atoi+1)^0,c
  3059   00178E  6A17               	clrf	(??_atoi+2)^0,c
  3060   001790  0EFF               	movlw	255
  3061   001792  2217               	addwfc	(??_atoi+2)^0,f,c
  3062   001794  5017               	movf	(??_atoi+2)^0,w,c
  3063   001796  E109               	bnz	u1500
  3064   001798  0E0A               	movlw	10
  3065   00179A  5C16               	subwf	(??_atoi+1)^0,w,c
  3066   00179C  A0D8               	btfss	status,0,c
  3067   00179E  EFD3  F00B         	goto	u1501
  3068   0017A2  EFD5  F00B         	goto	u1500
  3069   0017A6                     u1501:
  3070   0017A6  EF9E  F00B         	goto	l2406
  3071   0017AA                     u1500:
  3072   0017AA  5018               	movf	atoi@neg^0,w,c
  3073   0017AC  1019               	iorwf	(atoi@neg+1)^0,w,c
  3074   0017AE  A4D8               	btfss	status,2,c
  3075   0017B0  EFDC  F00B         	goto	u1511
  3076   0017B4  EFDE  F00B         	goto	u1510
  3077   0017B8                     u1511:
  3078   0017B8  EFEC  F00B         	goto	l1374
  3079   0017BC                     u1510:
  3080   0017BC  C01A  F015         	movff	atoi@n,??_atoi
  3081   0017C0  C01B  F016         	movff	atoi@n+1,??_atoi+1
  3082   0017C4  1E15               	comf	??_atoi^0,f,c
  3083   0017C6  1E16               	comf	(??_atoi+1)^0,f,c
  3084   0017C8  4A15               	infsnz	??_atoi^0,f,c
  3085   0017CA  2A16               	incf	(??_atoi+1)^0,f,c
  3086   0017CC  C015  F013         	movff	??_atoi,?_atoi
  3087   0017D0  C016  F014         	movff	??_atoi+1,?_atoi+1
  3088   0017D4  EFF0  F00B         	goto	l1377
  3089   0017D8                     l1374:
  3090   0017D8  C01A  F013         	movff	atoi@n,?_atoi
  3091   0017DC  C01B  F014         	movff	atoi@n+1,?_atoi+1
  3092   0017E0                     l1377:
  3093   0017E0  0012               	return		;funcret
  3094   0017E2                     __end_of_atoi:
  3095                           	callstack 0
  3096                           
  3097 ;; *************** function _isspace *****************
  3098 ;; Defined at:
  3099 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;  c               2   12[COMRAM] int 
  3102 ;; Auto vars:     Size  Location     Type
  3103 ;;		None
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  2   12[COMRAM] int 
  3106 ;; Registers used:
  3107 ;;		wreg, status,2, status,0
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3113 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3114 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3115 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3116 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3117 ;;Total ram usage:        5 bytes
  3118 ;; Hardware stack levels used: 1
  3119 ;; Hardware stack levels required when called: 3
  3120 ;; This function calls:
  3121 ;;		Nothing
  3122 ;; This function is called by:
  3123 ;;		_atoi
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126                           
  3127                           	psect	text14
  3128   002122                     __ptext14:
  3129                           	callstack 0
  3130   002122                     _isspace:
  3131                           	callstack 22
  3132   002122  0E01               	movlw	1
  3133   002124  6E11               	movwf	_isspace$2147^0,c
  3134   002126  0E20               	movlw	32
  3135   002128  180D               	xorwf	isspace@c^0,w,c
  3136   00212A  100E               	iorwf	(isspace@c+1)^0,w,c
  3137   00212C  B4D8               	btfsc	status,2,c
  3138   00212E  EF9B  F010         	goto	u1331
  3139   002132  EF9D  F010         	goto	u1330
  3140   002136                     u1331:
  3141   002136  EFB0  F010         	goto	l2320
  3142   00213A                     u1330:
  3143   00213A  0EF7               	movlw	247
  3144   00213C  240D               	addwf	isspace@c^0,w,c
  3145   00213E  6E0F               	movwf	??_isspace^0,c
  3146   002140  0EFF               	movlw	255
  3147   002142  200E               	addwfc	(isspace@c+1)^0,w,c
  3148   002144  6E10               	movwf	(??_isspace+1)^0,c
  3149   002146  5010               	movf	(??_isspace+1)^0,w,c
  3150   002148  E109               	bnz	u1340
  3151   00214A  0E05               	movlw	5
  3152   00214C  5C0F               	subwf	??_isspace^0,w,c
  3153   00214E  A0D8               	btfss	status,0,c
  3154   002150  EFAC  F010         	goto	u1341
  3155   002154  EFAE  F010         	goto	u1340
  3156   002158                     u1341:
  3157   002158  EFB0  F010         	goto	l2320
  3158   00215C                     u1340:
  3159   00215C  0E00               	movlw	0
  3160   00215E  6E11               	movwf	_isspace$2147^0,c
  3161   002160                     l2320:
  3162   002160  C011  F00D         	movff	_isspace$2147,?_isspace
  3163   002164  6A0E               	clrf	(?_isspace+1)^0,c
  3164   002166  0012               	return		;funcret
  3165   002168                     __end_of_isspace:
  3166                           	callstack 0
  3167                           
  3168 ;; *************** function _isdigit *****************
  3169 ;; Defined at:
  3170 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;  c               2   12[COMRAM] int 
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;		None
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  2   12[COMRAM] int 
  3177 ;; Registers used:
  3178 ;;		wreg, status,2, status,0
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3184 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3186 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3187 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3188 ;;Total ram usage:        4 bytes
  3189 ;; Hardware stack levels used: 1
  3190 ;; Hardware stack levels required when called: 3
  3191 ;; This function calls:
  3192 ;;		Nothing
  3193 ;; This function is called by:
  3194 ;;		_vfpfcnvrt
  3195 ;;		_atoi
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           	psect	text15
  3200   0022FC                     __ptext15:
  3201                           	callstack 0
  3202   0022FC                     _isdigit:
  3203                           	callstack 23
  3204   0022FC  0ED0               	movlw	208
  3205   0022FE  240D               	addwf	isdigit@c^0,w,c
  3206   002300  6E0F               	movwf	??_isdigit^0,c
  3207   002302  0EFF               	movlw	255
  3208   002304  200E               	addwfc	(isdigit@c+1)^0,w,c
  3209   002306  6E10               	movwf	(??_isdigit+1)^0,c
  3210   002308  5010               	movf	(??_isdigit+1)^0,w,c
  3211   00230A  E10A               	bnz	u1310
  3212   00230C  0E0A               	movlw	10
  3213   00230E  5C0F               	subwf	??_isdigit^0,w,c
  3214   002310  A0D8               	btfss	status,0,c
  3215   002312  EF8D  F011         	goto	u1311
  3216   002316  EF90  F011         	goto	u1310
  3217   00231A                     u1311:
  3218   00231A  0E01               	movlw	1
  3219   00231C  EF91  F011         	goto	u1320
  3220   002320                     u1310:
  3221   002320  0E00               	movlw	0
  3222   002322                     u1320:
  3223   002322  6E0D               	movwf	?_isdigit^0,c
  3224   002324  6A0E               	clrf	(?_isdigit+1)^0,c
  3225   002326  0012               	return		;funcret
  3226   002328                     __end_of_isdigit:
  3227                           	callstack 0
  3228                           
  3229 ;; *************** function ___wmul *****************
  3230 ;; Defined at:
  3231 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;  multiplier      2   12[COMRAM] unsigned int 
  3234 ;;  multiplicand    2   14[COMRAM] unsigned int 
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;  product         2   16[COMRAM] unsigned int 
  3237 ;; Return value:  Size  Location     Type
  3238 ;;                  2   12[COMRAM] unsigned int 
  3239 ;; Registers used:
  3240 ;;		wreg, status,2, status,0, prodl, prodh
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3246 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3247 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3249 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3250 ;;Total ram usage:        6 bytes
  3251 ;; Hardware stack levels used: 1
  3252 ;; Hardware stack levels required when called: 3
  3253 ;; This function calls:
  3254 ;;		Nothing
  3255 ;; This function is called by:
  3256 ;;		_atoi
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           	psect	text16
  3261   002328                     __ptext16:
  3262                           	callstack 0
  3263   002328                     ___wmul:
  3264                           	callstack 22
  3265   002328  500D               	movf	___wmul@multiplier^0,w,c
  3266   00232A  020F               	mulwf	___wmul@multiplicand^0,c
  3267   00232C  CFF3 F011          	movff	prodl,___wmul@product
  3268   002330  CFF4 F012          	movff	prodh,___wmul@product+1
  3269   002334  500D               	movf	___wmul@multiplier^0,w,c
  3270   002336  0210               	mulwf	(___wmul@multiplicand+1)^0,c
  3271   002338  50F3               	movf	243,w,c
  3272   00233A  2612               	addwf	(___wmul@product+1)^0,f,c
  3273   00233C  500E               	movf	(___wmul@multiplier+1)^0,w,c
  3274   00233E  020F               	mulwf	___wmul@multiplicand^0,c
  3275   002340  50F3               	movf	243,w,c
  3276   002342  2612               	addwf	(___wmul@product+1)^0,f,c
  3277   002344  C011  F00D         	movff	___wmul@product,?___wmul
  3278   002348  C012  F00E         	movff	___wmul@product+1,?___wmul+1
  3279   00234C  0012               	return		;funcret
  3280   00234E                     __end_of___wmul:
  3281                           	callstack 0
  3282                           
  3283 ;; *************** function _LCD_sendstring *****************
  3284 ;; Defined at:
  3285 ;;		line 110 in file "LCD.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;  string          2   15[COMRAM] PTR unsigned char 
  3288 ;;		 -> main@strdate(100), 
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;		None
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  1    wreg      void 
  3293 ;; Registers used:
  3294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3300 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3303 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3304 ;;Total ram usage:        2 bytes
  3305 ;; Hardware stack levels used: 1
  3306 ;; Hardware stack levels required when called: 6
  3307 ;; This function calls:
  3308 ;;		_LCD_sendbyte
  3309 ;; This function is called by:
  3310 ;;		_timeadj2String
  3311 ;;		_time2String
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           	psect	text17
  3316   002264                     __ptext17:
  3317                           	callstack 0
  3318   002264                     _LCD_sendstring:
  3319                           	callstack 23
  3320   002264                     
  3321                           ;LCD.c: 112: {;LCD.c: 113:  while(*string != 0){
  3322   002264  EF3F  F011         	goto	l2540
  3323   002268                     l2536:
  3324                           
  3325                           ;LCD.c: 114:   LCD_sendbyte(*string++,1);
  3326   002268  0E01               	movlw	1
  3327   00226A  6E0E               	movwf	LCD_sendbyte@type^0,c
  3328   00226C  C010  FFD9         	movff	LCD_sendstring@string,fsr2l
  3329   002270  C011  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  3330   002274  50DF               	movf	indf2,w,c
  3331   002276  EC66  F011         	call	_LCD_sendbyte
  3332   00227A  4A10               	infsnz	LCD_sendstring@string^0,f,c
  3333   00227C  2A11               	incf	(LCD_sendstring@string+1)^0,f,c
  3334   00227E                     l2540:
  3335                           
  3336                           ;LCD.c: 113:  while(*string != 0){
  3337   00227E  C010  FFD9         	movff	LCD_sendstring@string,fsr2l
  3338   002282  C011  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  3339   002286  50DF               	movf	indf2,w,c
  3340   002288  A4D8               	btfss	status,2,c
  3341   00228A  EF49  F011         	goto	u1651
  3342   00228E  EF4B  F011         	goto	u1650
  3343   002292                     u1651:
  3344   002292  EF34  F011         	goto	l2536
  3345   002296                     u1650:
  3346   002296  0012               	return		;funcret
  3347   002298                     __end_of_LCD_sendstring:
  3348                           	callstack 0
  3349                           
  3350 ;; *************** function _time_adjuster *****************
  3351 ;; Defined at:
  3352 ;;		line 93 in file "Functions.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;  sunrise_time    2   20[COMRAM] int 
  3355 ;;  sunset_time     2   22[COMRAM] int 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;  adjustment      2   26[COMRAM] int 
  3358 ;;  solarnoon       2   24[COMRAM] int 
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  1    wreg      void 
  3361 ;; Registers used:
  3362 ;;		wreg, status,2, status,0, cstack
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3368 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3369 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3371 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3372 ;;Total ram usage:        8 bytes
  3373 ;; Hardware stack levels used: 1
  3374 ;; Hardware stack levels required when called: 4
  3375 ;; This function calls:
  3376 ;;		___awdiv
  3377 ;; This function is called by:
  3378 ;;		_main
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           	psect	text18
  3383   001EBA                     __ptext18:
  3384                           	callstack 0
  3385   001EBA                     _time_adjuster:
  3386                           	callstack 26
  3387   001EBA                     
  3388                           ;Functions.c: 96:     int adjustment = 0;
  3389   001EBA  0E00               	movlw	0
  3390   001EBC  6E1C               	movwf	(time_adjuster@adjustment+1)^0,c
  3391   001EBE  0E00               	movlw	0
  3392   001EC0  6E1B               	movwf	time_adjuster@adjustment^0,c
  3393   001EC2                     
  3394                           ;Functions.c: 97:     solarnoon = (sunrise_time + sunset_time) / 2;
  3395   001EC2  5017               	movf	time_adjuster@sunset_time^0,w,c
  3396   001EC4  2415               	addwf	time_adjuster@sunrise_time^0,w,c
  3397   001EC6  6E0D               	movwf	___awdiv@dividend^0,c
  3398   001EC8  5018               	movf	(time_adjuster@sunset_time+1)^0,w,c
  3399   001ECA  2016               	addwfc	(time_adjuster@sunrise_time+1)^0,w,c
  3400   001ECC  6E0E               	movwf	(___awdiv@dividend+1)^0,c
  3401   001ECE  0E00               	movlw	0
  3402   001ED0  6E10               	movwf	(___awdiv@divisor+1)^0,c
  3403   001ED2  0E02               	movlw	2
  3404   001ED4  6E0F               	movwf	___awdiv@divisor^0,c
  3405   001ED6  EC65  F00D         	call	___awdiv	;wreg free
  3406   001EDA  C00D  F019         	movff	?___awdiv,time_adjuster@solarnoon
  3407   001EDE  C00E  F01A         	movff	?___awdiv+1,time_adjuster@solarnoon+1
  3408   001EE2                     
  3409                           ;Functions.c: 98:     adjustment = (12 * 10) - solarnoon;
  3410   001EE2  5019               	movf	time_adjuster@solarnoon^0,w,c
  3411   001EE4  0878               	sublw	120
  3412   001EE6  6E1B               	movwf	time_adjuster@adjustment^0,c
  3413   001EE8  501A               	movf	(time_adjuster@solarnoon+1)^0,w,c
  3414   001EEA  A0D8               	btfss	status,0,c
  3415   001EEC  2AE8               	incf	wreg,f,c
  3416   001EEE  0800               	sublw	0
  3417   001EF0  6E1C               	movwf	(time_adjuster@adjustment+1)^0,c
  3418   001EF2                     
  3419                           ;Functions.c: 99:     if (hour == 23 && seconds == 5 && adjustment_of_day == 1)
  3420   001EF2  0E17               	movlw	23
  3421   001EF4  184B               	xorwf	_hour^0,w,c
  3422   001EF6  104C               	iorwf	(_hour+1)^0,w,c
  3423   001EF8  A4D8               	btfss	status,2,c
  3424   001EFA  EF81  F00F         	goto	u1921
  3425   001EFE  EF83  F00F         	goto	u1920
  3426   001F02                     u1921:
  3427   001F02  EF9F  F00F         	goto	l2754
  3428   001F06                     u1920:
  3429   001F06  0E05               	movlw	5
  3430   001F08  184D               	xorwf	_seconds^0,w,c
  3431   001F0A  104E               	iorwf	(_seconds+1)^0,w,c
  3432   001F0C  A4D8               	btfss	status,2,c
  3433   001F0E  EF8B  F00F         	goto	u1931
  3434   001F12  EF8D  F00F         	goto	u1930
  3435   001F16                     u1931:
  3436   001F16  EF9F  F00F         	goto	l2754
  3437   001F1A                     u1930:
  3438   001F1A  0101               	movlb	1	; () banked
  3439   001F1C  056A               	decf	_adjustment_of_day& (0+255),w,b
  3440   001F1E  116B               	iorwf	(_adjustment_of_day+1)& (0+255),w,b
  3441   001F20  A4D8               	btfss	status,2,c
  3442   001F22  EF95  F00F         	goto	u1941
  3443   001F26  EF97  F00F         	goto	u1940
  3444   001F2A                     u1941:
  3445   001F2A  EF9F  F00F         	goto	l2754
  3446   001F2E                     u1940:
  3447   001F2E                     
  3448                           ; BSR set to: 1
  3449                           ;Functions.c: 100:     {;Functions.c: 101:         seconds += adjustment;
  3450   001F2E  501B               	movf	time_adjuster@adjustment^0,w,c
  3451   001F30  264D               	addwf	_seconds^0,f,c
  3452   001F32  501C               	movf	(time_adjuster@adjustment+1)^0,w,c
  3453   001F34  224E               	addwfc	(_seconds+1)^0,f,c
  3454   001F36                     
  3455                           ; BSR set to: 1
  3456                           ;Functions.c: 102:         adjustment_of_day = 0;
  3457   001F36  0E00               	movlw	0
  3458   001F38  6F6B               	movwf	(_adjustment_of_day+1)& (0+255),b
  3459   001F3A  0E00               	movlw	0
  3460   001F3C  6F6A               	movwf	_adjustment_of_day& (0+255),b
  3461   001F3E                     l2754:
  3462                           
  3463                           ;Functions.c: 104:     AD = adjustment;
  3464   001F3E  C01B  F164         	movff	time_adjuster@adjustment,_AD
  3465   001F42  C01C  F165         	movff	time_adjuster@adjustment+1,_AD+1
  3466   001F46  0012               	return		;funcret
  3467   001F48                     __end_of_time_adjuster:
  3468                           	callstack 0
  3469                           
  3470 ;; *************** function ___awdiv *****************
  3471 ;; Defined at:
  3472 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;  dividend        2   12[COMRAM] int 
  3475 ;;  divisor         2   14[COMRAM] int 
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;  quotient        2   18[COMRAM] int 
  3478 ;;  sign            1   17[COMRAM] unsigned char 
  3479 ;;  counter         1   16[COMRAM] unsigned char 
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  2   12[COMRAM] int 
  3482 ;; Registers used:
  3483 ;;		wreg, status,2, status,0
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3489 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3490 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3492 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3493 ;;Total ram usage:        8 bytes
  3494 ;; Hardware stack levels used: 1
  3495 ;; Hardware stack levels required when called: 3
  3496 ;; This function calls:
  3497 ;;		Nothing
  3498 ;; This function is called by:
  3499 ;;		_time_adjuster
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           	psect	text19
  3504   001ACA                     __ptext19:
  3505                           	callstack 0
  3506   001ACA                     ___awdiv:
  3507                           	callstack 26
  3508   001ACA  0E00               	movlw	0
  3509   001ACC  6E12               	movwf	___awdiv@sign^0,c
  3510   001ACE  BE10               	btfsc	(___awdiv@divisor+1)^0,7,c
  3511   001AD0  EF6E  F00D         	goto	u1660
  3512   001AD4  EF6C  F00D         	goto	u1661
  3513   001AD8                     u1661:
  3514   001AD8  EF74  F00D         	goto	l2562
  3515   001ADC                     u1660:
  3516   001ADC  6C0F               	negf	___awdiv@divisor^0,c
  3517   001ADE  1E10               	comf	(___awdiv@divisor+1)^0,f,c
  3518   001AE0  B0D8               	btfsc	status,0,c
  3519   001AE2  2A10               	incf	(___awdiv@divisor+1)^0,f,c
  3520   001AE4  0E01               	movlw	1
  3521   001AE6  6E12               	movwf	___awdiv@sign^0,c
  3522   001AE8                     l2562:
  3523   001AE8  BE0E               	btfsc	(___awdiv@dividend+1)^0,7,c
  3524   001AEA  EF7B  F00D         	goto	u1670
  3525   001AEE  EF79  F00D         	goto	u1671
  3526   001AF2                     u1671:
  3527   001AF2  EF81  F00D         	goto	l2568
  3528   001AF6                     u1670:
  3529   001AF6  6C0D               	negf	___awdiv@dividend^0,c
  3530   001AF8  1E0E               	comf	(___awdiv@dividend+1)^0,f,c
  3531   001AFA  B0D8               	btfsc	status,0,c
  3532   001AFC  2A0E               	incf	(___awdiv@dividend+1)^0,f,c
  3533   001AFE  0E01               	movlw	1
  3534   001B00  1A12               	xorwf	___awdiv@sign^0,f,c
  3535   001B02                     l2568:
  3536   001B02  0E00               	movlw	0
  3537   001B04  6E14               	movwf	(___awdiv@quotient+1)^0,c
  3538   001B06  0E00               	movlw	0
  3539   001B08  6E13               	movwf	___awdiv@quotient^0,c
  3540   001B0A  500F               	movf	___awdiv@divisor^0,w,c
  3541   001B0C  1010               	iorwf	(___awdiv@divisor+1)^0,w,c
  3542   001B0E  B4D8               	btfsc	status,2,c
  3543   001B10  EF8C  F00D         	goto	u1681
  3544   001B14  EF8E  F00D         	goto	u1680
  3545   001B18                     u1681:
  3546   001B18  EFB6  F00D         	goto	l2590
  3547   001B1C                     u1680:
  3548   001B1C  0E01               	movlw	1
  3549   001B1E  6E11               	movwf	___awdiv@counter^0,c
  3550   001B20  EF96  F00D         	goto	l2576
  3551   001B24                     l2574:
  3552   001B24  90D8               	bcf	status,0,c
  3553   001B26  360F               	rlcf	___awdiv@divisor^0,f,c
  3554   001B28  3610               	rlcf	(___awdiv@divisor+1)^0,f,c
  3555   001B2A  2A11               	incf	___awdiv@counter^0,f,c
  3556   001B2C                     l2576:
  3557   001B2C  AE10               	btfss	(___awdiv@divisor+1)^0,7,c
  3558   001B2E  EF9B  F00D         	goto	u1691
  3559   001B32  EF9D  F00D         	goto	u1690
  3560   001B36                     u1691:
  3561   001B36  EF92  F00D         	goto	l2574
  3562   001B3A                     u1690:
  3563   001B3A                     l2578:
  3564   001B3A  90D8               	bcf	status,0,c
  3565   001B3C  3613               	rlcf	___awdiv@quotient^0,f,c
  3566   001B3E  3614               	rlcf	(___awdiv@quotient+1)^0,f,c
  3567   001B40  500F               	movf	___awdiv@divisor^0,w,c
  3568   001B42  5C0D               	subwf	___awdiv@dividend^0,w,c
  3569   001B44  5010               	movf	(___awdiv@divisor+1)^0,w,c
  3570   001B46  580E               	subwfb	(___awdiv@dividend+1)^0,w,c
  3571   001B48  A0D8               	btfss	status,0,c
  3572   001B4A  EFA9  F00D         	goto	u1701
  3573   001B4E  EFAB  F00D         	goto	u1700
  3574   001B52                     u1701:
  3575   001B52  EFB0  F00D         	goto	l2586
  3576   001B56                     u1700:
  3577   001B56  500F               	movf	___awdiv@divisor^0,w,c
  3578   001B58  5E0D               	subwf	___awdiv@dividend^0,f,c
  3579   001B5A  5010               	movf	(___awdiv@divisor+1)^0,w,c
  3580   001B5C  5A0E               	subwfb	(___awdiv@dividend+1)^0,f,c
  3581   001B5E  8013               	bsf	___awdiv@quotient^0,0,c
  3582   001B60                     l2586:
  3583   001B60  90D8               	bcf	status,0,c
  3584   001B62  3210               	rrcf	(___awdiv@divisor+1)^0,f,c
  3585   001B64  320F               	rrcf	___awdiv@divisor^0,f,c
  3586   001B66  2E11               	decfsz	___awdiv@counter^0,f,c
  3587   001B68  EF9D  F00D         	goto	l2578
  3588   001B6C                     l2590:
  3589   001B6C  5012               	movf	___awdiv@sign^0,w,c
  3590   001B6E  B4D8               	btfsc	status,2,c
  3591   001B70  EFBC  F00D         	goto	u1711
  3592   001B74  EFBE  F00D         	goto	u1710
  3593   001B78                     u1711:
  3594   001B78  EFC2  F00D         	goto	l2594
  3595   001B7C                     u1710:
  3596   001B7C  6C13               	negf	___awdiv@quotient^0,c
  3597   001B7E  1E14               	comf	(___awdiv@quotient+1)^0,f,c
  3598   001B80  B0D8               	btfsc	status,0,c
  3599   001B82  2A14               	incf	(___awdiv@quotient+1)^0,f,c
  3600   001B84                     l2594:
  3601   001B84  C013  F00D         	movff	___awdiv@quotient,?___awdiv
  3602   001B88  C014  F00E         	movff	___awdiv@quotient+1,?___awdiv+1
  3603   001B8C  0012               	return		;funcret
  3604   001B8E                     __end_of___awdiv:
  3605                           	callstack 0
  3606                           
  3607 ;; *************** function _test_day *****************
  3608 ;; Defined at:
  3609 ;;		line 24 in file "Functions.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;		None
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;		None
  3614 ;; Return value:  Size  Location     Type
  3615 ;;                  1    wreg      void 
  3616 ;; Registers used:
  3617 ;;		wreg, status,2
  3618 ;; Tracked objects:
  3619 ;;		On entry : 0/0
  3620 ;;		On exit  : 0/0
  3621 ;;		Unchanged: 0/0
  3622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3627 ;;Total ram usage:        0 bytes
  3628 ;; Hardware stack levels used: 1
  3629 ;; Hardware stack levels required when called: 3
  3630 ;; This function calls:
  3631 ;;		Nothing
  3632 ;; This function is called by:
  3633 ;;		_main
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           	psect	text20
  3638   00241C                     __ptext20:
  3639                           	callstack 0
  3640   00241C                     _test_day:
  3641                           	callstack 27
  3642   00241C                     
  3643                           ;Functions.c: 25:     seconds_in_hour = 10;
  3644   00241C  0E00               	movlw	0
  3645   00241E  0100               	movlb	0	; () banked
  3646   002420  6FB1               	movwf	(_seconds_in_hour+1)& (0+255),b
  3647   002422  0E0A               	movlw	10
  3648   002424  6FB0               	movwf	_seconds_in_hour& (0+255),b
  3649                           
  3650                           ;Functions.c: 26:     hours_in_day = 24;
  3651   002426  0E00               	movlw	0
  3652   002428  6FAF               	movwf	(_hours_in_day+1)& (0+255),b
  3653   00242A  0E18               	movlw	24
  3654   00242C  6FAE               	movwf	_hours_in_day& (0+255),b
  3655   00242E                     
  3656                           ; BSR set to: 0
  3657   00242E  0012               	return		;funcret
  3658   002430                     __end_of_test_day:
  3659                           	callstack 0
  3660                           
  3661 ;; *************** function _streetLightInit *****************
  3662 ;; Defined at:
  3663 ;;		line 17 in file "Functions.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;		None
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;		None
  3668 ;; Return value:  Size  Location     Type
  3669 ;;                  1    wreg      void 
  3670 ;; Registers used:
  3671 ;;		None
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3681 ;;Total ram usage:        0 bytes
  3682 ;; Hardware stack levels used: 1
  3683 ;; Hardware stack levels required when called: 3
  3684 ;; This function calls:
  3685 ;;		Nothing
  3686 ;; This function is called by:
  3687 ;;		_main
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           
  3691                           	psect	text21
  3692   002464                     __ptext21:
  3693                           	callstack 0
  3694   002464                     _streetLightInit:
  3695                           	callstack 27
  3696   002464                     
  3697                           ;Functions.c: 18:     LATHbits.LATH3 = 0;
  3698   002464  9680               	bcf	128,3,c	;volatile
  3699                           
  3700                           ;Functions.c: 19:     TRISHbits.TRISH3 = 0;
  3701   002466  9688               	bcf	136,3,c	;volatile
  3702   002468  0012               	return		;funcret
  3703   00246A                     __end_of_streetLightInit:
  3704                           	callstack 0
  3705                           
  3706 ;; *************** function _poweroff *****************
  3707 ;; Defined at:
  3708 ;;		line 76 in file "Functions.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;		None
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;		None
  3713 ;; Return value:  Size  Location     Type
  3714 ;;                  1    wreg      void 
  3715 ;; Registers used:
  3716 ;;		wreg, status,2, status,0
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3726 ;;Total ram usage:        0 bytes
  3727 ;; Hardware stack levels used: 1
  3728 ;; Hardware stack levels required when called: 3
  3729 ;; This function calls:
  3730 ;;		Nothing
  3731 ;; This function is called by:
  3732 ;;		_main
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735                           
  3736                           	psect	text22
  3737   00222A                     __ptext22:
  3738                           	callstack 0
  3739   00222A                     _poweroff:
  3740                           	callstack 27
  3741   00222A                     
  3742                           ;Functions.c: 77:     if (1 <= hour && hour < 5) LATHbits.LATH3 = 0;
  3743   00222A  BE4C               	btfsc	(_hour+1)^0,7,c
  3744   00222C  EF20  F011         	goto	u1901
  3745   002230  504C               	movf	(_hour+1)^0,w,c
  3746   002232  E108               	bnz	u1900
  3747   002234  044B               	decf	_hour^0,w,c
  3748   002236  A0D8               	btfss	status,0,c
  3749   002238  EF20  F011         	goto	u1901
  3750   00223C  EF22  F011         	goto	u1900
  3751   002240                     u1901:
  3752   002240  EF31  F011         	goto	l484
  3753   002244                     u1900:
  3754   002244  BE4C               	btfsc	(_hour+1)^0,7,c
  3755   002246  EF30  F011         	goto	u1910
  3756   00224A  504C               	movf	(_hour+1)^0,w,c
  3757   00224C  E107               	bnz	u1911
  3758   00224E  0E05               	movlw	5
  3759   002250  5C4B               	subwf	_hour^0,w,c
  3760   002252  B0D8               	btfsc	status,0,c
  3761   002254  EF2E  F011         	goto	u1911
  3762   002258  EF30  F011         	goto	u1910
  3763   00225C                     u1911:
  3764   00225C  EF31  F011         	goto	l484
  3765   002260                     u1910:
  3766   002260  9680               	bcf	128,3,c	;volatile
  3767   002262                     l484:
  3768   002262  0012               	return		;funcret
  3769   002264                     __end_of_poweroff:
  3770                           	callstack 0
  3771                           
  3772 ;; *************** function _increment *****************
  3773 ;; Defined at:
  3774 ;;		line 37 in file "Functions.c"
  3775 ;; Parameters:    Size  Location     Type
  3776 ;;		None
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;		None
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  1    wreg      void 
  3781 ;; Registers used:
  3782 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3783 ;; Tracked objects:
  3784 ;;		On entry : 0/0
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3790 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3791 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3792 ;;Total ram usage:        2 bytes
  3793 ;; Hardware stack levels used: 1
  3794 ;; Hardware stack levels required when called: 3
  3795 ;; This function calls:
  3796 ;;		Nothing
  3797 ;; This function is called by:
  3798 ;;		_main
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           	psect	text23
  3803   0017E2                     __ptext23:
  3804                           	callstack 0
  3805   0017E2                     _increment:
  3806                           	callstack 27
  3807   0017E2                     
  3808                           ;Functions.c: 39:     if (year % 4 == 0) month[1] = 29;
  3809   0017E2  0E03               	movlw	3
  3810   0017E4  0100               	movlb	0	; () banked
  3811   0017E6  15EC               	andwf	_year& (0+255),w,b
  3812   0017E8  6E0D               	movwf	??_increment^0,c
  3813   0017EA  0E00               	movlw	0
  3814   0017EC  15ED               	andwf	(_year+1)& (0+255),w,b
  3815   0017EE  6E0E               	movwf	(??_increment+1)^0,c
  3816   0017F0  500D               	movf	??_increment^0,w,c
  3817   0017F2  100E               	iorwf	(??_increment+1)^0,w,c
  3818   0017F4  A4D8               	btfss	status,2,c
  3819   0017F6  EFFF  F00B         	goto	u1831
  3820   0017FA  EF01  F00C         	goto	u1830
  3821   0017FE                     u1831:
  3822   0017FE  EF05  F00C         	goto	l2696
  3823   001802                     u1830:
  3824   001802                     
  3825                           ; BSR set to: 0
  3826   001802  0E00               	movlw	0
  3827   001804  6FD5               	movwf	(_month+3)& (0+255),b
  3828   001806  0E1D               	movlw	29
  3829   001808  6FD4               	movwf	(_month+2)& (0+255),b
  3830   00180A                     l2696:
  3831                           
  3832                           ; BSR set to: 0
  3833                           ;Functions.c: 40:     if (year % 4 != 0) month[1] = 28;
  3834   00180A  0E03               	movlw	3
  3835   00180C  15EC               	andwf	_year& (0+255),w,b
  3836   00180E  6E0D               	movwf	??_increment^0,c
  3837   001810  0E00               	movlw	0
  3838   001812  15ED               	andwf	(_year+1)& (0+255),w,b
  3839   001814  6E0E               	movwf	(??_increment+1)^0,c
  3840   001816  500D               	movf	??_increment^0,w,c
  3841   001818  100E               	iorwf	(??_increment+1)^0,w,c
  3842   00181A  B4D8               	btfsc	status,2,c
  3843   00181C  EF12  F00C         	goto	u1841
  3844   001820  EF14  F00C         	goto	u1840
  3845   001824                     u1841:
  3846   001824  EF18  F00C         	goto	l2700
  3847   001828                     u1840:
  3848   001828                     
  3849                           ; BSR set to: 0
  3850   001828  0E00               	movlw	0
  3851   00182A  6FD5               	movwf	(_month+3)& (0+255),b
  3852   00182C  0E1C               	movlw	28
  3853   00182E  6FD4               	movwf	(_month+2)& (0+255),b
  3854   001830                     l2700:
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;Functions.c: 43:     if (seconds == seconds_in_hour) {
  3858   001830  51B0               	movf	_seconds_in_hour& (0+255),w,b
  3859   001832  184D               	xorwf	_seconds^0,w,c
  3860   001834  E107               	bnz	u1851
  3861   001836  51B1               	movf	(_seconds_in_hour+1)& (0+255),w,b
  3862   001838  184E               	xorwf	(_seconds+1)^0,w,c
  3863   00183A  A4D8               	btfss	status,2,c
  3864   00183C  EF22  F00C         	goto	u1851
  3865   001840  EF24  F00C         	goto	u1850
  3866   001844                     u1851:
  3867   001844  EF2A  F00C         	goto	l2706
  3868   001848                     u1850:
  3869   001848                     
  3870                           ; BSR set to: 0
  3871                           ;Functions.c: 44:         hour++;
  3872   001848  4A4B               	infsnz	_hour^0,f,c
  3873   00184A  2A4C               	incf	(_hour+1)^0,f,c
  3874   00184C                     
  3875                           ; BSR set to: 0
  3876                           ;Functions.c: 46:         seconds = 0;
  3877   00184C  0E00               	movlw	0
  3878   00184E  6E4E               	movwf	(_seconds+1)^0,c
  3879   001850  0E00               	movlw	0
  3880   001852  6E4D               	movwf	_seconds^0,c
  3881   001854                     l2706:
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;Functions.c: 50:     if (hour == hours_in_day) {
  3885   001854  51AE               	movf	_hours_in_day& (0+255),w,b
  3886   001856  184B               	xorwf	_hour^0,w,c
  3887   001858  E107               	bnz	u1861
  3888   00185A  51AF               	movf	(_hours_in_day+1)& (0+255),w,b
  3889   00185C  184C               	xorwf	(_hour+1)^0,w,c
  3890   00185E  A4D8               	btfss	status,2,c
  3891   001860  EF34  F00C         	goto	u1861
  3892   001864  EF36  F00C         	goto	u1860
  3893   001868                     u1861:
  3894   001868  EF4A  F00C         	goto	l2716
  3895   00186C                     u1860:
  3896   00186C                     
  3897                           ; BSR set to: 0
  3898                           ;Functions.c: 51:         day_of_year++;
  3899   00186C  4BF2               	infsnz	_day_of_year& (0+255),f,b
  3900   00186E  2BF3               	incf	(_day_of_year+1)& (0+255),f,b
  3901                           
  3902                           ;Functions.c: 52:         day_of_week++;
  3903   001870  4BF0               	infsnz	_day_of_week& (0+255),f,b
  3904   001872  2BF1               	incf	(_day_of_week+1)& (0+255),f,b
  3905                           
  3906                           ;Functions.c: 53:         day_of_month++;
  3907   001874  4BEE               	infsnz	_day_of_month& (0+255),f,b
  3908   001876  2BEF               	incf	(_day_of_month+1)& (0+255),f,b
  3909   001878                     
  3910                           ; BSR set to: 0
  3911                           ;Functions.c: 54:         hour = 0;
  3912   001878  0E00               	movlw	0
  3913   00187A  6E4C               	movwf	(_hour+1)^0,c
  3914   00187C  0E00               	movlw	0
  3915   00187E  6E4B               	movwf	_hour^0,c
  3916   001880                     
  3917                           ; BSR set to: 0
  3918                           ;Functions.c: 55:         adjustment_of_day = 1;
  3919   001880  0E00               	movlw	0
  3920   001882  0101               	movlb	1	; () banked
  3921   001884  6F6B               	movwf	(_adjustment_of_day+1)& (0+255),b
  3922   001886  0E01               	movlw	1
  3923   001888  6F6A               	movwf	_adjustment_of_day& (0+255),b
  3924   00188A                     
  3925                           ; BSR set to: 1
  3926                           ;Functions.c: 56:         oct_daylight_adjust = 1;
  3927   00188A  0E00               	movlw	0
  3928   00188C  0100               	movlb	0	; () banked
  3929   00188E  6FEB               	movwf	(_oct_daylight_adjust+1)& (0+255),b
  3930   001890  0E01               	movlw	1
  3931   001892  6FEA               	movwf	_oct_daylight_adjust& (0+255),b
  3932   001894                     l2716:
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;Functions.c: 60:     if (day_of_week == 8)
  3936   001894  0E08               	movlw	8
  3937   001896  19F0               	xorwf	_day_of_week& (0+255),w,b
  3938   001898  11F1               	iorwf	(_day_of_week+1)& (0+255),w,b
  3939   00189A  A4D8               	btfss	status,2,c
  3940   00189C  EF52  F00C         	goto	u1871
  3941   0018A0  EF54  F00C         	goto	u1870
  3942   0018A4                     u1871:
  3943   0018A4  EF58  F00C         	goto	l2720
  3944   0018A8                     u1870:
  3945   0018A8                     
  3946                           ; BSR set to: 0
  3947                           ;Functions.c: 61:         day_of_week = 1;
  3948   0018A8  0E00               	movlw	0
  3949   0018AA  6FF1               	movwf	(_day_of_week+1)& (0+255),b
  3950   0018AC  0E01               	movlw	1
  3951   0018AE  6FF0               	movwf	_day_of_week& (0+255),b
  3952   0018B0                     l2720:
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;Functions.c: 64:     if (day_of_month == month[month_num - 1] + 1) {
  3956   0018B0  90D8               	bcf	status,0,c
  3957   0018B2  3450               	rlcf	_month_num^0,w,c
  3958   0018B4  6ED9               	movwf	fsr2l,c
  3959   0018B6  3451               	rlcf	(_month_num+1)^0,w,c
  3960   0018B8  6EDA               	movwf	fsr2h,c
  3961   0018BA  0ED0               	movlw	low (_month+65534)
  3962   0018BC  26D9               	addwf	fsr2l,f,c
  3963   0018BE  0E00               	movlw	high (_month+65534)
  3964   0018C0  22DA               	addwfc	fsr2h,f,c
  3965   0018C2  CFDE F00D          	movff	postinc2,??_increment
  3966   0018C6  CFDD F00E          	movff	postdec2,??_increment+1
  3967   0018CA  0E01               	movlw	1
  3968   0018CC  260D               	addwf	??_increment^0,f,c
  3969   0018CE  0E00               	movlw	0
  3970   0018D0  220E               	addwfc	(??_increment+1)^0,f,c
  3971   0018D2  51EE               	movf	_day_of_month& (0+255),w,b
  3972   0018D4  180D               	xorwf	??_increment^0,w,c
  3973   0018D6  E107               	bnz	u1881
  3974   0018D8  51EF               	movf	(_day_of_month+1)& (0+255),w,b
  3975   0018DA  180E               	xorwf	(??_increment+1)^0,w,c
  3976   0018DC  A4D8               	btfss	status,2,c
  3977   0018DE  EF73  F00C         	goto	u1881
  3978   0018E2  EF75  F00C         	goto	u1880
  3979   0018E6                     u1881:
  3980   0018E6  EF7B  F00C         	goto	l2726
  3981   0018EA                     u1880:
  3982   0018EA                     
  3983                           ; BSR set to: 0
  3984                           ;Functions.c: 65:         day_of_month = 1;
  3985   0018EA  0E00               	movlw	0
  3986   0018EC  6FEF               	movwf	(_day_of_month+1)& (0+255),b
  3987   0018EE  0E01               	movlw	1
  3988   0018F0  6FEE               	movwf	_day_of_month& (0+255),b
  3989   0018F2                     
  3990                           ; BSR set to: 0
  3991                           ;Functions.c: 66:         month_num++;
  3992   0018F2  4A50               	infsnz	_month_num^0,f,c
  3993   0018F4  2A51               	incf	(_month_num+1)^0,f,c
  3994   0018F6                     l2726:
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;Functions.c: 68:     if (month_num == 13) {
  3998   0018F6  0E0D               	movlw	13
  3999   0018F8  1850               	xorwf	_month_num^0,w,c
  4000   0018FA  1051               	iorwf	(_month_num+1)^0,w,c
  4001   0018FC  A4D8               	btfss	status,2,c
  4002   0018FE  EF83  F00C         	goto	u1891
  4003   001902  EF85  F00C         	goto	u1890
  4004   001906                     u1891:
  4005   001906  EF8B  F00C         	goto	l480
  4006   00190A                     u1890:
  4007   00190A                     
  4008                           ; BSR set to: 0
  4009                           ;Functions.c: 69:         month_num = 1;
  4010   00190A  0E00               	movlw	0
  4011   00190C  6E51               	movwf	(_month_num+1)^0,c
  4012   00190E  0E01               	movlw	1
  4013   001910  6E50               	movwf	_month_num^0,c
  4014   001912                     
  4015                           ; BSR set to: 0
  4016                           ;Functions.c: 70:         year++;
  4017   001912  4BEC               	infsnz	_year& (0+255),f,b
  4018   001914  2BED               	incf	(_year+1)& (0+255),f,b
  4019   001916                     l480:
  4020                           
  4021                           ; BSR set to: 0
  4022   001916  0012               	return		;funcret
  4023   001918                     __end_of_increment:
  4024                           	callstack 0
  4025                           
  4026 ;; *************** function _daylightsavings *****************
  4027 ;; Defined at:
  4028 ;;		line 109 in file "Functions.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;		None
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;		None
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      void 
  4035 ;; Registers used:
  4036 ;;		wreg, status,2, status,0
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4046 ;;Total ram usage:        0 bytes
  4047 ;; Hardware stack levels used: 1
  4048 ;; Hardware stack levels required when called: 3
  4049 ;; This function calls:
  4050 ;;		Nothing
  4051 ;; This function is called by:
  4052 ;;		_main
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056                           	psect	text24
  4057   001D86                     __ptext24:
  4058                           	callstack 0
  4059   001D86                     _daylightsavings:
  4060                           	callstack 27
  4061   001D86                     
  4062                           ;Functions.c: 110:     if (month_num == 3 && day_of_week == 7 && 25 <= day_of_month <= 3
      +                          1 && hour == 1)
  4063   001D86  0E03               	movlw	3
  4064   001D88  1850               	xorwf	_month_num^0,w,c
  4065   001D8A  1051               	iorwf	(_month_num+1)^0,w,c
  4066   001D8C  A4D8               	btfss	status,2,c
  4067   001D8E  EFCB  F00E         	goto	u1951
  4068   001D92  EFCD  F00E         	goto	u1950
  4069   001D96                     u1951:
  4070   001D96  EFE3  F00E         	goto	l2764
  4071   001D9A                     u1950:
  4072   001D9A  0E07               	movlw	7
  4073   001D9C  0100               	movlb	0	; () banked
  4074   001D9E  19F0               	xorwf	_day_of_week& (0+255),w,b
  4075   001DA0  11F1               	iorwf	(_day_of_week+1)& (0+255),w,b
  4076   001DA2  A4D8               	btfss	status,2,c
  4077   001DA4  EFD6  F00E         	goto	u1961
  4078   001DA8  EFD8  F00E         	goto	u1960
  4079   001DAC                     u1961:
  4080   001DAC  EFE3  F00E         	goto	l2764
  4081   001DB0                     u1960:
  4082   001DB0                     
  4083                           ; BSR set to: 0
  4084   001DB0  044B               	decf	_hour^0,w,c
  4085   001DB2  104C               	iorwf	(_hour+1)^0,w,c
  4086   001DB4  A4D8               	btfss	status,2,c
  4087   001DB6  EFDF  F00E         	goto	u1971
  4088   001DBA  EFE1  F00E         	goto	u1970
  4089   001DBE                     u1971:
  4090   001DBE  EFE3  F00E         	goto	l2764
  4091   001DC2                     u1970:
  4092   001DC2                     
  4093                           ; BSR set to: 0
  4094                           ;Functions.c: 111:         hour++;
  4095   001DC2  4A4B               	infsnz	_hour^0,f,c
  4096   001DC4  2A4C               	incf	(_hour+1)^0,f,c
  4097   001DC6                     l2764:
  4098                           
  4099                           ;Functions.c: 113:     if (month_num == 10 && day_of_week == 7 && 25 <= day_of_month <= 
      +                          31 && hour == 2 && oct_daylight_adjust == 1)
  4100   001DC6  0E0A               	movlw	10
  4101   001DC8  1850               	xorwf	_month_num^0,w,c
  4102   001DCA  1051               	iorwf	(_month_num+1)^0,w,c
  4103   001DCC  A4D8               	btfss	status,2,c
  4104   001DCE  EFEB  F00E         	goto	u1981
  4105   001DD2  EFED  F00E         	goto	u1980
  4106   001DD6                     u1981:
  4107   001DD6  EF12  F00F         	goto	l496
  4108   001DDA                     u1980:
  4109   001DDA  0E07               	movlw	7
  4110   001DDC  0100               	movlb	0	; () banked
  4111   001DDE  19F0               	xorwf	_day_of_week& (0+255),w,b
  4112   001DE0  11F1               	iorwf	(_day_of_week+1)& (0+255),w,b
  4113   001DE2  A4D8               	btfss	status,2,c
  4114   001DE4  EFF6  F00E         	goto	u1991
  4115   001DE8  EFF8  F00E         	goto	u1990
  4116   001DEC                     u1991:
  4117   001DEC  EF12  F00F         	goto	l496
  4118   001DF0                     u1990:
  4119   001DF0                     
  4120                           ; BSR set to: 0
  4121   001DF0  0E02               	movlw	2
  4122   001DF2  184B               	xorwf	_hour^0,w,c
  4123   001DF4  104C               	iorwf	(_hour+1)^0,w,c
  4124   001DF6  A4D8               	btfss	status,2,c
  4125   001DF8  EF00  F00F         	goto	u2001
  4126   001DFC  EF02  F00F         	goto	u2000
  4127   001E00                     u2001:
  4128   001E00  EF12  F00F         	goto	l496
  4129   001E04                     u2000:
  4130   001E04                     
  4131                           ; BSR set to: 0
  4132   001E04  05EA               	decf	_oct_daylight_adjust& (0+255),w,b
  4133   001E06  11EB               	iorwf	(_oct_daylight_adjust+1)& (0+255),w,b
  4134   001E08  A4D8               	btfss	status,2,c
  4135   001E0A  EF09  F00F         	goto	u2011
  4136   001E0E  EF0B  F00F         	goto	u2010
  4137   001E12                     u2011:
  4138   001E12  EF12  F00F         	goto	l496
  4139   001E16                     u2010:
  4140   001E16                     
  4141                           ; BSR set to: 0
  4142                           ;Functions.c: 114:     {;Functions.c: 115:         hour--;
  4143   001E16  064B               	decf	_hour^0,f,c
  4144   001E18  A0D8               	btfss	status,0,c
  4145   001E1A  064C               	decf	(_hour+1)^0,f,c
  4146   001E1C                     
  4147                           ; BSR set to: 0
  4148                           ;Functions.c: 116:         oct_daylight_adjust = 0;
  4149   001E1C  0E00               	movlw	0
  4150   001E1E  6FEB               	movwf	(_oct_daylight_adjust+1)& (0+255),b
  4151   001E20  0E00               	movlw	0
  4152   001E22  6FEA               	movwf	_oct_daylight_adjust& (0+255),b
  4153   001E24                     l496:
  4154   001E24  0012               	return		;funcret
  4155   001E26                     __end_of_daylightsavings:
  4156                           	callstack 0
  4157                           
  4158 ;; *************** function _day1_init *****************
  4159 ;; Defined at:
  4160 ;;		line 80 in file "Functions.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;		None
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;		None
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  1    wreg      void 
  4167 ;; Registers used:
  4168 ;;		wreg, status,2
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4178 ;;Total ram usage:        0 bytes
  4179 ;; Hardware stack levels used: 1
  4180 ;; Hardware stack levels required when called: 3
  4181 ;; This function calls:
  4182 ;;		Nothing
  4183 ;; This function is called by:
  4184 ;;		_main
  4185 ;; This function uses a non-reentrant model
  4186 ;;
  4187                           
  4188                           	psect	text25
  4189   0021EC                     __ptext25:
  4190                           	callstack 0
  4191   0021EC                     _day1_init:
  4192                           	callstack 27
  4193   0021EC                     
  4194                           ;Functions.c: 81:     seconds = 0;
  4195   0021EC  0E00               	movlw	0
  4196   0021EE  6E4E               	movwf	(_seconds+1)^0,c
  4197   0021F0  0E00               	movlw	0
  4198   0021F2  6E4D               	movwf	_seconds^0,c
  4199                           
  4200                           ;Functions.c: 82:     hour = 0;
  4201   0021F4  0E00               	movlw	0
  4202   0021F6  6E4C               	movwf	(_hour+1)^0,c
  4203   0021F8  0E00               	movlw	0
  4204   0021FA  6E4B               	movwf	_hour^0,c
  4205                           
  4206                           ;Functions.c: 83:     day_of_year = 1;
  4207   0021FC  0E00               	movlw	0
  4208   0021FE  0100               	movlb	0	; () banked
  4209   002200  6FF3               	movwf	(_day_of_year+1)& (0+255),b
  4210   002202  0E01               	movlw	1
  4211   002204  6FF2               	movwf	_day_of_year& (0+255),b
  4212                           
  4213                           ;Functions.c: 84:     day_of_month = 29;
  4214   002206  0E00               	movlw	0
  4215   002208  6FEF               	movwf	(_day_of_month+1)& (0+255),b
  4216   00220A  0E1D               	movlw	29
  4217   00220C  6FEE               	movwf	_day_of_month& (0+255),b
  4218                           
  4219                           ;Functions.c: 85:     day_of_week = 6;
  4220   00220E  0E00               	movlw	0
  4221   002210  6FF1               	movwf	(_day_of_week+1)& (0+255),b
  4222   002212  0E06               	movlw	6
  4223   002214  6FF0               	movwf	_day_of_week& (0+255),b
  4224                           
  4225                           ;Functions.c: 86:     year = 2022;
  4226   002216  0E07               	movlw	7
  4227   002218  6FED               	movwf	(_year+1)& (0+255),b
  4228   00221A  0EE6               	movlw	230
  4229   00221C  6FEC               	movwf	_year& (0+255),b
  4230                           
  4231                           ;Functions.c: 87:     month_num = 10;
  4232   00221E  0E00               	movlw	0
  4233   002220  6E51               	movwf	(_month_num+1)^0,c
  4234   002222  0E0A               	movlw	10
  4235   002224  6E50               	movwf	_month_num^0,c
  4236   002226                     
  4237                           ; BSR set to: 0
  4238                           ;Functions.c: 88:     LATHbits.LATH3 = 1;
  4239   002226  8680               	bsf	128,3,c	;volatile
  4240   002228                     
  4241                           ; BSR set to: 0
  4242   002228  0012               	return		;funcret
  4243   00222A                     __end_of_day1_init:
  4244                           	callstack 0
  4245                           
  4246 ;; *************** function _Timer0_init *****************
  4247 ;; Defined at:
  4248 ;;		line 7 in file "timers.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;		None
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;		None
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  1    wreg      void 
  4255 ;; Registers used:
  4256 ;;		wreg, status,2
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4266 ;;Total ram usage:        0 bytes
  4267 ;; Hardware stack levels used: 1
  4268 ;; Hardware stack levels required when called: 3
  4269 ;; This function calls:
  4270 ;;		Nothing
  4271 ;; This function is called by:
  4272 ;;		_main
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           	psect	text26
  4277   0023E2                     __ptext26:
  4278                           	callstack 0
  4279   0023E2                     _Timer0_init:
  4280                           	callstack 27
  4281   0023E2                     
  4282                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  4283   0023E2  50D6               	movf	214,w,c	;volatile
  4284   0023E4  0B1F               	andlw	-225
  4285   0023E6  0940               	iorlw	64
  4286   0023E8  6ED6               	movwf	214,c	;volatile
  4287   0023EA                     
  4288                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  4289   0023EA  88D6               	bsf	214,4,c	;volatile
  4290                           
  4291                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  4292   0023EC  50D6               	movf	214,w,c	;volatile
  4293   0023EE  0BF0               	andlw	-16
  4294   0023F0  0908               	iorlw	8
  4295   0023F2  6ED6               	movwf	214,c	;volatile
  4296   0023F4                     
  4297                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  4298   0023F4  88D5               	bsf	213,4,c	;volatile
  4299                           
  4300                           ;timers.c: 15:     TMR0H=0b00001011;
  4301   0023F6  0E0B               	movlw	11
  4302   0023F8  6ED4               	movwf	212,c	;volatile
  4303                           
  4304                           ;timers.c: 16:     TMR0L=0b11011011;
  4305   0023FA  0EDB               	movlw	219
  4306   0023FC  6ED3               	movwf	211,c	;volatile
  4307   0023FE                     
  4308                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  4309   0023FE  8ED5               	bsf	213,7,c	;volatile
  4310   002400  0012               	return		;funcret
  4311   002402                     __end_of_Timer0_init:
  4312                           	callstack 0
  4313                           
  4314 ;; *************** function _LEDarray_init *****************
  4315 ;; Defined at:
  4316 ;;		line 10 in file "LEDarray.c"
  4317 ;; Parameters:    Size  Location     Type
  4318 ;;		None
  4319 ;; Auto vars:     Size  Location     Type
  4320 ;;		None
  4321 ;; Return value:  Size  Location     Type
  4322 ;;                  1    wreg      void 
  4323 ;; Registers used:
  4324 ;;		None
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4334 ;;Total ram usage:        0 bytes
  4335 ;; Hardware stack levels used: 1
  4336 ;; Hardware stack levels required when called: 3
  4337 ;; This function calls:
  4338 ;;		Nothing
  4339 ;; This function is called by:
  4340 ;;		_main
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           	psect	text27
  4345   00234E                     __ptext27:
  4346                           	callstack 0
  4347   00234E                     _LEDarray_init:
  4348                           	callstack 27
  4349   00234E                     
  4350                           ;LEDarray.c: 13:     TRISGbits.TRISG0 = 0;
  4351   00234E  9087               	bcf	135,0,c	;volatile
  4352                           
  4353                           ;LEDarray.c: 14:     TRISGbits.TRISG1 = 0;
  4354   002350  9287               	bcf	135,1,c	;volatile
  4355                           
  4356                           ;LEDarray.c: 15:     TRISAbits.TRISA2 = 0;
  4357   002352  9481               	bcf	129,2,c	;volatile
  4358                           
  4359                           ;LEDarray.c: 16:     TRISFbits.TRISF6 = 0;
  4360   002354  9C86               	bcf	134,6,c	;volatile
  4361                           
  4362                           ;LEDarray.c: 17:     TRISAbits.TRISA4 = 0;
  4363   002356  9881               	bcf	129,4,c	;volatile
  4364                           
  4365                           ;LEDarray.c: 18:     TRISAbits.TRISA5 = 0;
  4366   002358  9A81               	bcf	129,5,c	;volatile
  4367                           
  4368                           ;LEDarray.c: 19:     TRISFbits.TRISF0 = 0;
  4369   00235A  9086               	bcf	134,0,c	;volatile
  4370                           
  4371                           ;LEDarray.c: 20:     TRISBbits.TRISB0 = 0;
  4372   00235C  9082               	bcf	130,0,c	;volatile
  4373                           
  4374                           ;LEDarray.c: 21:     TRISBbits.TRISB1 = 0;
  4375   00235E  9282               	bcf	130,1,c	;volatile
  4376                           
  4377                           ;LEDarray.c: 24:     LATGbits.LATG0 = 0;
  4378   002360  907F               	bcf	127,0,c	;volatile
  4379                           
  4380                           ;LEDarray.c: 25:     LATGbits.LATG1 = 0;
  4381   002362  927F               	bcf	127,1,c	;volatile
  4382                           
  4383                           ;LEDarray.c: 26:     LATAbits.LATA2 = 0;
  4384   002364  9479               	bcf	121,2,c	;volatile
  4385                           
  4386                           ;LEDarray.c: 27:     LATFbits.LATF6 = 0;
  4387   002366  9C7E               	bcf	126,6,c	;volatile
  4388                           
  4389                           ;LEDarray.c: 28:     LATAbits.LATA4 = 0;
  4390   002368  9879               	bcf	121,4,c	;volatile
  4391                           
  4392                           ;LEDarray.c: 29:     LATAbits.LATA5 = 0;
  4393   00236A  9A79               	bcf	121,5,c	;volatile
  4394                           
  4395                           ;LEDarray.c: 30:     LATFbits.LATF0 = 0;
  4396   00236C  907E               	bcf	126,0,c	;volatile
  4397                           
  4398                           ;LEDarray.c: 31:     LATBbits.LATB0 = 0;
  4399   00236E  907A               	bcf	122,0,c	;volatile
  4400                           
  4401                           ;LEDarray.c: 32:     LATBbits.LATB1 = 0;
  4402   002370  927A               	bcf	122,1,c	;volatile
  4403   002372  0012               	return		;funcret
  4404   002374                     __end_of_LEDarray_init:
  4405                           	callstack 0
  4406                           
  4407 ;; *************** function _LEDarray_disp_bin *****************
  4408 ;; Defined at:
  4409 ;;		line 38 in file "LEDarray.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;  number          2   12[COMRAM] unsigned int 
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;  ctr             2   36[COMRAM] int 
  4414 ;;  led_arr        18   16[COMRAM] int [9]
  4415 ;;  mask            2   34[COMRAM] int 
  4416 ;; Return value:  Size  Location     Type
  4417 ;;                  1    wreg      void 
  4418 ;; Registers used:
  4419 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4425 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4426 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4427 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4428 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4429 ;;Total ram usage:       26 bytes
  4430 ;; Hardware stack levels used: 1
  4431 ;; Hardware stack levels required when called: 3
  4432 ;; This function calls:
  4433 ;;		Nothing
  4434 ;; This function is called by:
  4435 ;;		_main
  4436 ;;		_LEDarray_disp_dec
  4437 ;;		_LEDarray_disp_PPM
  4438 ;;		_incrementseconds
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	text28
  4443   001918                     __ptext28:
  4444                           	callstack 0
  4445   001918                     _LEDarray_disp_bin:
  4446                           	callstack 27
  4447   001918                     
  4448                           ;LEDarray.c: 38: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 39: {;LEDarray.
      +                          c: 43:     int mask= 0b000000001;
  4449   001918  0E00               	movlw	0
  4450   00191A  6E24               	movwf	(LEDarray_disp_bin@mask+1)^0,c
  4451   00191C  0E01               	movlw	1
  4452   00191E  6E23               	movwf	LEDarray_disp_bin@mask^0,c
  4453                           
  4454                           ;LEDarray.c: 44:     int led_arr[9];;LEDarray.c: 45:     for(int ctr=0;ctr<9;ctr++){
  4455   001920  0E00               	movlw	0
  4456   001922  6E26               	movwf	(LEDarray_disp_bin@ctr+1)^0,c
  4457   001924  0E00               	movlw	0
  4458   001926  6E25               	movwf	LEDarray_disp_bin@ctr^0,c
  4459   001928                     l2606:
  4460                           
  4461                           ;LEDarray.c: 46:         if (number & mask)
  4462   001928  500D               	movf	LEDarray_disp_bin@number^0,w,c
  4463   00192A  1423               	andwf	LEDarray_disp_bin@mask^0,w,c
  4464   00192C  6E0F               	movwf	??_LEDarray_disp_bin^0,c
  4465   00192E  500E               	movf	(LEDarray_disp_bin@number+1)^0,w,c
  4466   001930  1424               	andwf	(LEDarray_disp_bin@mask+1)^0,w,c
  4467   001932  6E10               	movwf	(??_LEDarray_disp_bin+1)^0,c
  4468   001934  500F               	movf	??_LEDarray_disp_bin^0,w,c
  4469   001936  1010               	iorwf	(??_LEDarray_disp_bin+1)^0,w,c
  4470   001938  B4D8               	btfsc	status,2,c
  4471   00193A  EFA1  F00C         	goto	u1721
  4472   00193E  EFA3  F00C         	goto	u1720
  4473   001942                     u1721:
  4474   001942  EFB2  F00C         	goto	l2610
  4475   001946                     u1720:
  4476   001946                     
  4477                           ;LEDarray.c: 47:             led_arr[ctr]=1;
  4478   001946  90D8               	bcf	status,0,c
  4479   001948  3425               	rlcf	LEDarray_disp_bin@ctr^0,w,c
  4480   00194A  6ED9               	movwf	fsr2l,c
  4481   00194C  3426               	rlcf	(LEDarray_disp_bin@ctr+1)^0,w,c
  4482   00194E  6EDA               	movwf	fsr2h,c
  4483   001950  0E11               	movlw	low LEDarray_disp_bin@led_arr
  4484   001952  26D9               	addwf	fsr2l,f,c
  4485   001954  0E00               	movlw	high LEDarray_disp_bin@led_arr
  4486   001956  22DA               	addwfc	fsr2h,f,c
  4487   001958  0E01               	movlw	1
  4488   00195A  6EDE               	movwf	postinc2,c
  4489   00195C  0E00               	movlw	0
  4490   00195E  6EDD               	movwf	postdec2,c
  4491   001960  EFBF  F00C         	goto	l2612
  4492   001964                     l2610:
  4493                           
  4494                           ;LEDarray.c: 50:             led_arr[ctr]=0;
  4495   001964  90D8               	bcf	status,0,c
  4496   001966  3425               	rlcf	LEDarray_disp_bin@ctr^0,w,c
  4497   001968  6ED9               	movwf	fsr2l,c
  4498   00196A  3426               	rlcf	(LEDarray_disp_bin@ctr+1)^0,w,c
  4499   00196C  6EDA               	movwf	fsr2h,c
  4500   00196E  0E11               	movlw	low LEDarray_disp_bin@led_arr
  4501   001970  26D9               	addwf	fsr2l,f,c
  4502   001972  0E00               	movlw	high LEDarray_disp_bin@led_arr
  4503   001974  22DA               	addwfc	fsr2h,f,c
  4504   001976  0E00               	movlw	0
  4505   001978  6EDE               	movwf	postinc2,c
  4506   00197A  0E00               	movlw	0
  4507   00197C  6EDD               	movwf	postdec2,c
  4508   00197E                     l2612:
  4509                           
  4510                           ;LEDarray.c: 52:         mask<<=1;
  4511   00197E  90D8               	bcf	status,0,c
  4512   001980  3623               	rlcf	LEDarray_disp_bin@mask^0,f,c
  4513   001982  3624               	rlcf	(LEDarray_disp_bin@mask+1)^0,f,c
  4514   001984                     
  4515                           ;LEDarray.c: 53:     }
  4516   001984  4A25               	infsnz	LEDarray_disp_bin@ctr^0,f,c
  4517   001986  2A26               	incf	(LEDarray_disp_bin@ctr+1)^0,f,c
  4518   001988  BE26               	btfsc	(LEDarray_disp_bin@ctr+1)^0,7,c
  4519   00198A  EFD0  F00C         	goto	u1731
  4520   00198E  5026               	movf	(LEDarray_disp_bin@ctr+1)^0,w,c
  4521   001990  E109               	bnz	u1730
  4522   001992  0E09               	movlw	9
  4523   001994  5C25               	subwf	LEDarray_disp_bin@ctr^0,w,c
  4524   001996  A0D8               	btfss	status,0,c
  4525   001998  EFD0  F00C         	goto	u1731
  4526   00199C  EFD2  F00C         	goto	u1730
  4527   0019A0                     u1731:
  4528   0019A0  EF94  F00C         	goto	l2606
  4529   0019A4                     u1730:
  4530   0019A4                     
  4531                           ;LEDarray.c: 55:     LATGbits.LATG0 = led_arr[0];
  4532   0019A4  B011               	btfsc	LEDarray_disp_bin@led_arr^0,0,c
  4533   0019A6  D002               	bra	u1745
  4534   0019A8  907F               	bcf	127,0,c	;volatile
  4535   0019AA  D001               	bra	u1746
  4536   0019AC                     u1745:
  4537   0019AC  807F               	bsf	127,0,c	;volatile
  4538   0019AE                     u1746:
  4539                           
  4540                           ;LEDarray.c: 56:     LATGbits.LATG1 = led_arr[1];
  4541   0019AE  B013               	btfsc	(LEDarray_disp_bin@led_arr+2)^0,0,c
  4542   0019B0  D002               	bra	u1755
  4543   0019B2  927F               	bcf	127,1,c	;volatile
  4544   0019B4  D001               	bra	u1756
  4545   0019B6                     u1755:
  4546   0019B6  827F               	bsf	127,1,c	;volatile
  4547   0019B8                     u1756:
  4548                           
  4549                           ;LEDarray.c: 57:     LATAbits.LATA2 = led_arr[2];
  4550   0019B8  B015               	btfsc	(LEDarray_disp_bin@led_arr+4)^0,0,c
  4551   0019BA  D002               	bra	u1765
  4552   0019BC  9479               	bcf	121,2,c	;volatile
  4553   0019BE  D001               	bra	u1766
  4554   0019C0                     u1765:
  4555   0019C0  8479               	bsf	121,2,c	;volatile
  4556   0019C2                     u1766:
  4557                           
  4558                           ;LEDarray.c: 58:     LATFbits.LATF6 = led_arr[3];
  4559   0019C2  B017               	btfsc	(LEDarray_disp_bin@led_arr+6)^0,0,c
  4560   0019C4  D002               	bra	u1775
  4561   0019C6  9C7E               	bcf	126,6,c	;volatile
  4562   0019C8  D001               	bra	u1776
  4563   0019CA                     u1775:
  4564   0019CA  8C7E               	bsf	126,6,c	;volatile
  4565   0019CC                     u1776:
  4566                           
  4567                           ;LEDarray.c: 59:     LATAbits.LATA4 = led_arr[4];
  4568   0019CC  B019               	btfsc	(LEDarray_disp_bin@led_arr+8)^0,0,c
  4569   0019CE  D002               	bra	u1785
  4570   0019D0  9879               	bcf	121,4,c	;volatile
  4571   0019D2  D001               	bra	u1786
  4572   0019D4                     u1785:
  4573   0019D4  8879               	bsf	121,4,c	;volatile
  4574   0019D6                     u1786:
  4575                           
  4576                           ;LEDarray.c: 60:     LATAbits.LATA5 = led_arr[5];
  4577   0019D6  B01B               	btfsc	(LEDarray_disp_bin@led_arr+10)^0,0,c
  4578   0019D8  D002               	bra	u1795
  4579   0019DA  9A79               	bcf	121,5,c	;volatile
  4580   0019DC  D001               	bra	u1796
  4581   0019DE                     u1795:
  4582   0019DE  8A79               	bsf	121,5,c	;volatile
  4583   0019E0                     u1796:
  4584                           
  4585                           ;LEDarray.c: 61:     LATFbits.LATF0 = led_arr[6];
  4586   0019E0  B01D               	btfsc	(LEDarray_disp_bin@led_arr+12)^0,0,c
  4587   0019E2  D002               	bra	u1805
  4588   0019E4  907E               	bcf	126,0,c	;volatile
  4589   0019E6  D001               	bra	u1806
  4590   0019E8                     u1805:
  4591   0019E8  807E               	bsf	126,0,c	;volatile
  4592   0019EA                     u1806:
  4593                           
  4594                           ;LEDarray.c: 62:     LATBbits.LATB0 = led_arr[7];
  4595   0019EA  B01F               	btfsc	(LEDarray_disp_bin@led_arr+14)^0,0,c
  4596   0019EC  D002               	bra	u1815
  4597   0019EE  907A               	bcf	122,0,c	;volatile
  4598   0019F0  D001               	bra	u1816
  4599   0019F2                     u1815:
  4600   0019F2  807A               	bsf	122,0,c	;volatile
  4601   0019F4                     u1816:
  4602                           
  4603                           ;LEDarray.c: 63:     LATBbits.LATB1 = led_arr[8];
  4604   0019F4  B021               	btfsc	(LEDarray_disp_bin@led_arr+16)^0,0,c
  4605   0019F6  D002               	bra	u1825
  4606   0019F8  927A               	bcf	122,1,c	;volatile
  4607   0019FA  D001               	bra	u1826
  4608   0019FC                     u1825:
  4609   0019FC  827A               	bsf	122,1,c	;volatile
  4610   0019FE                     u1826:
  4611   0019FE  0012               	return		;funcret
  4612   001A00                     __end_of_LEDarray_disp_bin:
  4613                           	callstack 0
  4614                           
  4615 ;; *************** function _LCD_setline *****************
  4616 ;; Defined at:
  4617 ;;		line 96 in file "LCD.c"
  4618 ;; Parameters:    Size  Location     Type
  4619 ;;  line            1    wreg     unsigned char 
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;  line            1   15[COMRAM] unsigned char 
  4622 ;; Return value:  Size  Location     Type
  4623 ;;                  1    wreg      void 
  4624 ;; Registers used:
  4625 ;;		wreg, status,2, status,0, cstack
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4632 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4634 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4635 ;;Total ram usage:        1 bytes
  4636 ;; Hardware stack levels used: 1
  4637 ;; Hardware stack levels required when called: 6
  4638 ;; This function calls:
  4639 ;;		_LCD_sendbyte
  4640 ;; This function is called by:
  4641 ;;		_main
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           	psect	text29
  4646   002298                     __ptext29:
  4647                           	callstack 0
  4648   002298                     _LCD_setline:
  4649                           	callstack 24
  4650                           
  4651                           ;incstack = 0
  4652                           ;LCD_setline@line stored from wreg
  4653   002298  6E10               	movwf	LCD_setline@line^0,c
  4654   00229A                     
  4655                           ;LCD.c: 97:     if(line&0b01)
  4656   00229A  A010               	btfss	LCD_setline@line^0,0,c
  4657   00229C  EF52  F011         	goto	u2021
  4658   0022A0  EF54  F011         	goto	u2020
  4659   0022A4                     u2021:
  4660   0022A4  EF59  F011         	goto	l2780
  4661   0022A8                     u2020:
  4662   0022A8                     
  4663                           ;LCD.c: 98:     {;LCD.c: 99:         LCD_sendbyte(0x80,0);
  4664   0022A8  0E00               	movlw	0
  4665   0022AA  6E0E               	movwf	LCD_sendbyte@type^0,c
  4666   0022AC  0E80               	movlw	128
  4667   0022AE  EC66  F011         	call	_LCD_sendbyte
  4668   0022B2                     l2780:
  4669                           
  4670                           ;LCD.c: 101:     if(line&0b10)
  4671   0022B2  A210               	btfss	LCD_setline@line^0,1,c
  4672   0022B4  EF5E  F011         	goto	u2031
  4673   0022B8  EF60  F011         	goto	u2030
  4674   0022BC                     u2031:
  4675   0022BC  EF65  F011         	goto	l567
  4676   0022C0                     u2030:
  4677   0022C0                     
  4678                           ;LCD.c: 102:     {;LCD.c: 103:         LCD_sendbyte(0xC0,0);
  4679   0022C0  0E00               	movlw	0
  4680   0022C2  6E0E               	movwf	LCD_sendbyte@type^0,c
  4681   0022C4  0EC0               	movlw	192
  4682   0022C6  EC66  F011         	call	_LCD_sendbyte
  4683   0022CA                     l567:
  4684   0022CA  0012               	return		;funcret
  4685   0022CC                     __end_of_LCD_setline:
  4686                           	callstack 0
  4687                           
  4688 ;; *************** function _LCD_Init *****************
  4689 ;; Defined at:
  4690 ;;		line 54 in file "LCD.c"
  4691 ;; Parameters:    Size  Location     Type
  4692 ;;		None
  4693 ;; Auto vars:     Size  Location     Type
  4694 ;;		None
  4695 ;; Return value:  Size  Location     Type
  4696 ;;                  1    wreg      void 
  4697 ;; Registers used:
  4698 ;;		wreg, status,2, status,0, cstack
  4699 ;; Tracked objects:
  4700 ;;		On entry : 0/0
  4701 ;;		On exit  : 0/0
  4702 ;;		Unchanged: 0/0
  4703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4706 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4707 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4708 ;;Total ram usage:        2 bytes
  4709 ;; Hardware stack levels used: 1
  4710 ;; Hardware stack levels required when called: 6
  4711 ;; This function calls:
  4712 ;;		_LCD_sendbyte
  4713 ;;		_LCD_sendnibble
  4714 ;; This function is called by:
  4715 ;;		_main
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           	psect	text30
  4720   001CE4                     __ptext30:
  4721                           	callstack 0
  4722   001CE4                     _LCD_Init:
  4723                           	callstack 24
  4724   001CE4                     
  4725                           ;LCD.c: 58:     TRISCbits.TRISC2 = 0;
  4726   001CE4  9483               	bcf	131,2,c	;volatile
  4727                           
  4728                           ;LCD.c: 59:     TRISCbits.TRISC6 = 0;
  4729   001CE6  9C83               	bcf	131,6,c	;volatile
  4730                           
  4731                           ;LCD.c: 61:     TRISBbits.TRISB3 = 0;
  4732   001CE8  9682               	bcf	130,3,c	;volatile
  4733                           
  4734                           ;LCD.c: 62:     TRISBbits.TRISB2 = 0;
  4735   001CEA  9482               	bcf	130,2,c	;volatile
  4736                           
  4737                           ;LCD.c: 63:     TRISEbits.TRISE1 = 0;
  4738   001CEC  9285               	bcf	133,1,c	;volatile
  4739                           
  4740                           ;LCD.c: 64:     TRISEbits.TRISE3 = 0;
  4741   001CEE  9685               	bcf	133,3,c	;volatile
  4742                           
  4743                           ;LCD.c: 66:     LATBbits.LATB3 = 0;
  4744   001CF0  967A               	bcf	122,3,c	;volatile
  4745                           
  4746                           ;LCD.c: 67:     LATBbits.LATB2 = 0;
  4747   001CF2  947A               	bcf	122,2,c	;volatile
  4748                           
  4749                           ;LCD.c: 68:     LATEbits.LATE1 = 0;
  4750   001CF4  927D               	bcf	125,1,c	;volatile
  4751                           
  4752                           ;LCD.c: 69:     LATEbits.LATE3 = 0;
  4753   001CF6  967D               	bcf	125,3,c	;volatile
  4754                           
  4755                           ;LCD.c: 71:     LATCbits.LATC2 = 0;
  4756   001CF8  947B               	bcf	123,2,c	;volatile
  4757                           
  4758                           ;LCD.c: 72:     LATCbits.LATC6 = 0;
  4759   001CFA  9C7B               	bcf	123,6,c	;volatile
  4760   001CFC                     
  4761                           ;LCD.c: 73:     _delay((unsigned long)((40)*(64000000/4000.0)));
  4762   001CFC  0E04               	movlw	4
  4763   001CFE  6E11               	movwf	(??_LCD_Init+1)^0,c
  4764   001D00  0E40               	movlw	64
  4765   001D02  6E10               	movwf	??_LCD_Init^0,c
  4766   001D04  0E26               	movlw	38
  4767   001D06                     u2577:
  4768   001D06  2EE8               	decfsz	wreg,f,c
  4769   001D08  D7FE               	bra	u2577
  4770   001D0A  2E10               	decfsz	??_LCD_Init^0,f,c
  4771   001D0C  D7FC               	bra	u2577
  4772   001D0E  2E11               	decfsz	(??_LCD_Init+1)^0,f,c
  4773   001D10  D7FA               	bra	u2577
  4774   001D12  D000               	nop2	
  4775   001D14                     
  4776                           ;LCD.c: 78:     LCD_sendnibble(0b0011);
  4777   001D14  0E03               	movlw	3
  4778   001D16  ECD8  F00F         	call	_LCD_sendnibble
  4779   001D1A                     
  4780                           ;LCD.c: 79:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  4781   001D1A  0ED5               	movlw	213
  4782   001D1C                     u2587:
  4783   001D1C  2EE8               	decfsz	wreg,f,c
  4784   001D1E  D7FE               	bra	u2587
  4785   001D20  F000               	nop	
  4786   001D22                     
  4787                           ;LCD.c: 80:     LCD_sendbyte(0b00101100,0);
  4788   001D22  0E00               	movlw	0
  4789   001D24  6E0E               	movwf	LCD_sendbyte@type^0,c
  4790   001D26  0E2C               	movlw	44
  4791   001D28  EC66  F011         	call	_LCD_sendbyte
  4792   001D2C                     
  4793                           ;LCD.c: 81:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  4794   001D2C  0ED5               	movlw	213
  4795   001D2E                     u2597:
  4796   001D2E  2EE8               	decfsz	wreg,f,c
  4797   001D30  D7FE               	bra	u2597
  4798   001D32  F000               	nop	
  4799   001D34                     
  4800                           ;LCD.c: 82:     LCD_sendbyte(0b00101100,0);
  4801   001D34  0E00               	movlw	0
  4802   001D36  6E0E               	movwf	LCD_sendbyte@type^0,c
  4803   001D38  0E2C               	movlw	44
  4804   001D3A  EC66  F011         	call	_LCD_sendbyte
  4805   001D3E                     
  4806                           ;LCD.c: 83:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  4807   001D3E  0ED5               	movlw	213
  4808   001D40                     u2607:
  4809   001D40  2EE8               	decfsz	wreg,f,c
  4810   001D42  D7FE               	bra	u2607
  4811   001D44  F000               	nop	
  4812   001D46                     
  4813                           ;LCD.c: 84:     LCD_sendbyte(0b00001100,0);
  4814   001D46  0E00               	movlw	0
  4815   001D48  6E0E               	movwf	LCD_sendbyte@type^0,c
  4816   001D4A  0E0C               	movlw	12
  4817   001D4C  EC66  F011         	call	_LCD_sendbyte
  4818   001D50                     
  4819                           ;LCD.c: 85:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  4820   001D50  0ED5               	movlw	213
  4821   001D52                     u2617:
  4822   001D52  2EE8               	decfsz	wreg,f,c
  4823   001D54  D7FE               	bra	u2617
  4824   001D56  F000               	nop	
  4825   001D58                     
  4826                           ;LCD.c: 86:     LCD_sendbyte(0b00000001,0);
  4827   001D58  0E00               	movlw	0
  4828   001D5A  6E0E               	movwf	LCD_sendbyte@type^0,c
  4829   001D5C  0E01               	movlw	1
  4830   001D5E  EC66  F011         	call	_LCD_sendbyte
  4831   001D62                     
  4832                           ;LCD.c: 87:     _delay((unsigned long)((1.53)*(64000000/4000.0)));
  4833   001D62  0E20               	movlw	32
  4834   001D64  6E10               	movwf	??_LCD_Init^0,c
  4835   001D66  0ECA               	movlw	202
  4836   001D68                     u2627:
  4837   001D68  2EE8               	decfsz	wreg,f,c
  4838   001D6A  D7FE               	bra	u2627
  4839   001D6C  2E10               	decfsz	??_LCD_Init^0,f,c
  4840   001D6E  D7FC               	bra	u2627
  4841   001D70                     
  4842                           ;LCD.c: 88:     LCD_sendbyte(0b00000111,0);
  4843   001D70  0E00               	movlw	0
  4844   001D72  6E0E               	movwf	LCD_sendbyte@type^0,c
  4845   001D74  0E07               	movlw	7
  4846   001D76  EC66  F011         	call	_LCD_sendbyte
  4847   001D7A                     
  4848                           ;LCD.c: 89:     LCD_sendbyte(0b00001100,0);
  4849   001D7A  0E00               	movlw	0
  4850   001D7C  6E0E               	movwf	LCD_sendbyte@type^0,c
  4851   001D7E  0E0C               	movlw	12
  4852   001D80  EC66  F011         	call	_LCD_sendbyte
  4853   001D84  0012               	return		;funcret
  4854   001D86                     __end_of_LCD_Init:
  4855                           	callstack 0
  4856                           
  4857 ;; *************** function _LCD_sendbyte *****************
  4858 ;; Defined at:
  4859 ;;		line 37 in file "LCD.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;  Byte            1    wreg     unsigned char 
  4862 ;;  type            1   13[COMRAM] unsigned char 
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;  Byte            1   14[COMRAM] unsigned char 
  4865 ;; Return value:  Size  Location     Type
  4866 ;;                  1    wreg      void 
  4867 ;; Registers used:
  4868 ;;		wreg, status,2, status,0, cstack
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4874 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4875 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4877 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4878 ;;Total ram usage:        2 bytes
  4879 ;; Hardware stack levels used: 1
  4880 ;; Hardware stack levels required when called: 5
  4881 ;; This function calls:
  4882 ;;		_LCD_sendnibble
  4883 ;; This function is called by:
  4884 ;;		_LCD_Init
  4885 ;;		_LCD_setline
  4886 ;;		_LCD_sendstring
  4887 ;;		_LCD_scroll
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           
  4891                           	psect	text31
  4892   0022CC                     __ptext31:
  4893                           	callstack 0
  4894   0022CC                     _LCD_sendbyte:
  4895                           	callstack 23
  4896                           
  4897                           ;incstack = 0
  4898                           ;LCD_sendbyte@Byte stored from wreg
  4899   0022CC  6E0F               	movwf	LCD_sendbyte@Byte^0,c
  4900   0022CE                     
  4901                           ;LCD.c: 38:     if(type&0b1)
  4902   0022CE  A00E               	btfss	LCD_sendbyte@type^0,0,c
  4903   0022D0  EF6C  F011         	goto	u1631
  4904   0022D4  EF6E  F011         	goto	u1630
  4905   0022D8                     u1631:
  4906   0022D8  EF71  F011         	goto	l557
  4907   0022DC                     u1630:
  4908   0022DC                     
  4909                           ;LCD.c: 39:     {;LCD.c: 40:         LATCbits.LATC6 = 1;
  4910   0022DC  8C7B               	bsf	123,6,c	;volatile
  4911                           
  4912                           ;LCD.c: 41:     }
  4913   0022DE  EF72  F011         	goto	l2512
  4914   0022E2                     l557:
  4915                           
  4916                           ;LCD.c: 43:     {;LCD.c: 44:         (LATCbits.LATC6 = 0);
  4917   0022E2  9C7B               	bcf	123,6,c	;volatile
  4918   0022E4                     l2512:
  4919                           
  4920                           ;LCD.c: 46:     LCD_sendnibble(Byte>>4);
  4921   0022E4  380F               	swapf	LCD_sendbyte@Byte^0,w,c
  4922   0022E6  0B0F               	andlw	15
  4923   0022E8  ECD8  F00F         	call	_LCD_sendnibble
  4924   0022EC                     
  4925                           ;LCD.c: 47:     LCD_sendnibble(Byte);
  4926   0022EC  500F               	movf	LCD_sendbyte@Byte^0,w,c
  4927   0022EE  ECD8  F00F         	call	_LCD_sendnibble
  4928   0022F2                     
  4929                           ;LCD.c: 48:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  4930   0022F2  0EA0               	movlw	160
  4931   0022F4                     u2637:
  4932   0022F4  D000               	nop2	
  4933   0022F6  2EE8               	decfsz	wreg,f,c
  4934   0022F8  D7FD               	bra	u2637
  4935   0022FA  0012               	return		;funcret
  4936   0022FC                     __end_of_LCD_sendbyte:
  4937                           	callstack 0
  4938                           
  4939 ;; *************** function _LCD_sendnibble *****************
  4940 ;; Defined at:
  4941 ;;		line 18 in file "LCD.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;  number          1    wreg     unsigned char 
  4944 ;; Auto vars:     Size  Location     Type
  4945 ;;  number          1   12[COMRAM] unsigned char 
  4946 ;; Return value:  Size  Location     Type
  4947 ;;                  1    wreg      void 
  4948 ;; Registers used:
  4949 ;;		wreg, cstack
  4950 ;; Tracked objects:
  4951 ;;		On entry : 0/0
  4952 ;;		On exit  : 0/0
  4953 ;;		Unchanged: 0/0
  4954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4956 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4958 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4959 ;;Total ram usage:        1 bytes
  4960 ;; Hardware stack levels used: 1
  4961 ;; Hardware stack levels required when called: 4
  4962 ;; This function calls:
  4963 ;;		_LCD_E_TOG
  4964 ;; This function is called by:
  4965 ;;		_LCD_sendbyte
  4966 ;;		_LCD_Init
  4967 ;; This function uses a non-reentrant model
  4968 ;;
  4969                           
  4970                           	psect	text32
  4971   001FB0                     __ptext32:
  4972                           	callstack 0
  4973   001FB0                     _LCD_sendnibble:
  4974                           	callstack 23
  4975                           
  4976                           ;incstack = 0
  4977                           ;LCD_sendnibble@number stored from wreg
  4978   001FB0  6E0D               	movwf	LCD_sendnibble@number^0,c
  4979   001FB2                     
  4980                           ;LCD.c: 21:     if(number&0b0001) LATBbits.LATB3=1;
  4981   001FB2  A00D               	btfss	LCD_sendnibble@number^0,0,c
  4982   001FB4  EFDE  F00F         	goto	u1521
  4983   001FB8  EFE0  F00F         	goto	u1520
  4984   001FBC                     u1521:
  4985   001FBC  EFE3  F00F         	goto	l546
  4986   001FC0                     u1520:
  4987   001FC0  867A               	bsf	122,3,c	;volatile
  4988   001FC2  EFE4  F00F         	goto	l2426
  4989   001FC6                     l546:
  4990   001FC6  967A               	bcf	122,3,c	;volatile
  4991   001FC8                     l2426:
  4992                           
  4993                           ;LCD.c: 23:     if(number&0b0010) LATBbits.LATB2=1;
  4994   001FC8  A20D               	btfss	LCD_sendnibble@number^0,1,c
  4995   001FCA  EFE9  F00F         	goto	u1531
  4996   001FCE  EFEB  F00F         	goto	u1530
  4997   001FD2                     u1531:
  4998   001FD2  EFEE  F00F         	goto	l548
  4999   001FD6                     u1530:
  5000   001FD6  847A               	bsf	122,2,c	;volatile
  5001   001FD8  EFEF  F00F         	goto	l2430
  5002   001FDC                     l548:
  5003   001FDC  947A               	bcf	122,2,c	;volatile
  5004   001FDE                     l2430:
  5005                           
  5006                           ;LCD.c: 25:     if(number&0b0100) LATEbits.LATE3=1;
  5007   001FDE  A40D               	btfss	LCD_sendnibble@number^0,2,c
  5008   001FE0  EFF4  F00F         	goto	u1541
  5009   001FE4  EFF6  F00F         	goto	u1540
  5010   001FE8                     u1541:
  5011   001FE8  EFF9  F00F         	goto	l550
  5012   001FEC                     u1540:
  5013   001FEC  867D               	bsf	125,3,c	;volatile
  5014   001FEE  EFFA  F00F         	goto	l2434
  5015   001FF2                     l550:
  5016   001FF2  967D               	bcf	125,3,c	;volatile
  5017   001FF4                     l2434:
  5018                           
  5019                           ;LCD.c: 27:     if(number&0b1000) LATEbits.LATE1=1;
  5020   001FF4  A60D               	btfss	LCD_sendnibble@number^0,3,c
  5021   001FF6  EFFF  F00F         	goto	u1551
  5022   001FFA  EF01  F010         	goto	u1550
  5023   001FFE                     u1551:
  5024   001FFE  EF04  F010         	goto	l552
  5025   002002                     u1550:
  5026   002002  827D               	bsf	125,1,c	;volatile
  5027   002004  EF05  F010         	goto	l2438
  5028   002008                     l552:
  5029   002008  927D               	bcf	125,1,c	;volatile
  5030   00200A                     l2438:
  5031                           
  5032                           ;LCD.c: 29:     LCD_E_TOG();
  5033   00200A  EC2B  F012         	call	_LCD_E_TOG	;wreg free
  5034   00200E                     
  5035                           ;LCD.c: 30:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  5036   00200E  0E1A               	movlw	26
  5037   002010                     u2647:
  5038   002010  2EE8               	decfsz	wreg,f,c
  5039   002012  D7FE               	bra	u2647
  5040   002014  D000               	nop2	
  5041   002016  0012               	return		;funcret
  5042   002018                     __end_of_LCD_sendnibble:
  5043                           	callstack 0
  5044                           
  5045 ;; *************** function _LCD_E_TOG *****************
  5046 ;; Defined at:
  5047 ;;		line 9 in file "LCD.c"
  5048 ;; Parameters:    Size  Location     Type
  5049 ;;		None
  5050 ;; Auto vars:     Size  Location     Type
  5051 ;;		None
  5052 ;; Return value:  Size  Location     Type
  5053 ;;                  1    wreg      void 
  5054 ;; Registers used:
  5055 ;;		wreg
  5056 ;; Tracked objects:
  5057 ;;		On entry : 0/0
  5058 ;;		On exit  : 0/0
  5059 ;;		Unchanged: 0/0
  5060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5065 ;;Total ram usage:        0 bytes
  5066 ;; Hardware stack levels used: 1
  5067 ;; Hardware stack levels required when called: 3
  5068 ;; This function calls:
  5069 ;;		Nothing
  5070 ;; This function is called by:
  5071 ;;		_LCD_sendnibble
  5072 ;; This function uses a non-reentrant model
  5073 ;;
  5074                           
  5075                           	psect	text33
  5076   002456                     __ptext33:
  5077                           	callstack 0
  5078   002456                     _LCD_E_TOG:
  5079                           	callstack 23
  5080   002456                     
  5081                           ;LCD.c: 10:     LATCbits.LATC2=1;
  5082   002456  847B               	bsf	123,2,c	;volatile
  5083   002458                     
  5084                           ;LCD.c: 11:     _delay((unsigned long)((2)*(64000000/4000000.0)));
  5085   002458  0E0A               	movlw	10
  5086   00245A                     u2657:
  5087   00245A  2EE8               	decfsz	wreg,f,c
  5088   00245C  D7FE               	bra	u2657
  5089   00245E  D000               	nop2	
  5090   002460                     
  5091                           ;LCD.c: 12:     LATCbits.LATC2=0;
  5092   002460  947B               	bcf	123,2,c	;volatile
  5093   002462  0012               	return		;funcret
  5094   002464                     __end_of_LCD_E_TOG:
  5095                           	callstack 0
  5096                           
  5097 ;; *************** function _Interrupts_init *****************
  5098 ;; Defined at:
  5099 ;;		line 10 in file "interrupts.c"
  5100 ;; Parameters:    Size  Location     Type
  5101 ;;		None
  5102 ;; Auto vars:     Size  Location     Type
  5103 ;;		None
  5104 ;; Return value:  Size  Location     Type
  5105 ;;                  1    wreg      void 
  5106 ;; Registers used:
  5107 ;;		None
  5108 ;; Tracked objects:
  5109 ;;		On entry : 0/0
  5110 ;;		On exit  : 0/0
  5111 ;;		Unchanged: 0/0
  5112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5117 ;;Total ram usage:        0 bytes
  5118 ;; Hardware stack levels used: 1
  5119 ;; Hardware stack levels required when called: 3
  5120 ;; This function calls:
  5121 ;;		Nothing
  5122 ;; This function is called by:
  5123 ;;		_main
  5124 ;; This function uses a non-reentrant model
  5125 ;;
  5126                           
  5127                           	psect	text34
  5128   002444                     __ptext34:
  5129                           	callstack 0
  5130   002444                     _Interrupts_init:
  5131                           	callstack 27
  5132   002444                     
  5133                           ;interrupts.c: 14:     PIE2bits.C1IE=1;
  5134   002444  010E               	movlb	14	; () banked
  5135   002446  812B               	bsf	43,0,b	;volatile
  5136                           
  5137                           ;interrupts.c: 15:     PIE0bits.TMR0IE=1;
  5138   002448  8B29               	bsf	41,5,b	;volatile
  5139                           
  5140                           ;interrupts.c: 16:     IPR2bits.C1IP = 1;
  5141   00244A  8121               	bsf	33,0,b	;volatile
  5142                           
  5143                           ;interrupts.c: 17:     IPR0bits.TMR0IP = 0;
  5144   00244C  9B1F               	bcf	31,5,b	;volatile
  5145                           
  5146                           ;interrupts.c: 18:     INTCONbits.IPEN=1;
  5147   00244E  8AF2               	bsf	242,5,c	;volatile
  5148                           
  5149                           ;interrupts.c: 19:     INTCONbits.PEIE=1;
  5150   002450  8CF2               	bsf	242,6,c	;volatile
  5151                           
  5152                           ;interrupts.c: 20:     INTCONbits.GIE=1;
  5153   002452  8EF2               	bsf	242,7,c	;volatile
  5154   002454                     
  5155                           ; BSR set to: 14
  5156   002454  0012               	return		;funcret
  5157   002456                     __end_of_Interrupts_init:
  5158                           	callstack 0
  5159                           
  5160 ;; *************** function _Comp1_init_rising_edge *****************
  5161 ;; Defined at:
  5162 ;;		line 24 in file "comparator.c"
  5163 ;; Parameters:    Size  Location     Type
  5164 ;;		None
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;		None
  5167 ;; Return value:  Size  Location     Type
  5168 ;;                  1    wreg      void 
  5169 ;; Registers used:
  5170 ;;		wreg, status,2, cstack
  5171 ;; Tracked objects:
  5172 ;;		On entry : 0/0
  5173 ;;		On exit  : 0/0
  5174 ;;		Unchanged: 0/0
  5175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5180 ;;Total ram usage:        0 bytes
  5181 ;; Hardware stack levels used: 1
  5182 ;; Hardware stack levels required when called: 4
  5183 ;; This function calls:
  5184 ;;		_DAC_init
  5185 ;; This function is called by:
  5186 ;;		_main
  5187 ;; This function uses a non-reentrant model
  5188 ;;
  5189                           
  5190                           	psect	text35
  5191   00239A                     __ptext35:
  5192                           	callstack 0
  5193   00239A                     _Comp1_init_rising_edge:
  5194                           	callstack 26
  5195   00239A                     
  5196                           ;comparator.c: 26:     TRISFbits.TRISF7=1;
  5197   00239A  8E86               	bsf	134,7,c	;volatile
  5198   00239C                     
  5199                           ;comparator.c: 27:     CM1NCHbits.NCH=0b011;
  5200   00239C  010E               	movlb	14	; () banked
  5201   00239E  51D2               	movf	210,w,b	;volatile
  5202   0023A0  0BF8               	andlw	-8
  5203   0023A2  0903               	iorlw	3
  5204   0023A4  6FD2               	movwf	210,b	;volatile
  5205                           
  5206                           ;comparator.c: 28:     CM1PCHbits.PCH=0b101;
  5207   0023A6  51D3               	movf	211,w,b	;volatile
  5208   0023A8  0BF8               	andlw	-8
  5209   0023AA  0905               	iorlw	5
  5210   0023AC  6FD3               	movwf	211,b	;volatile
  5211   0023AE                     
  5212                           ; BSR set to: 14
  5213                           ;comparator.c: 29:     CM1CON0bits.HYS=1;
  5214   0023AE  83D0               	bsf	208,1,b	;volatile
  5215   0023B0                     
  5216                           ; BSR set to: 14
  5217                           ;comparator.c: 30:     CM1CON0bits.POL=1;
  5218   0023B0  89D0               	bsf	208,4,b	;volatile
  5219   0023B2                     
  5220                           ; BSR set to: 14
  5221                           ;comparator.c: 31:     CM1CON1bits.INTP=1;
  5222   0023B2  83D1               	bsf	209,1,b	;volatile
  5223   0023B4                     
  5224                           ; BSR set to: 14
  5225                           ;comparator.c: 32:     DAC_init();
  5226   0023B4  EC18  F012         	call	_DAC_init	;wreg free
  5227   0023B8                     
  5228                           ;comparator.c: 33:     CM1CON0bits.EN=1;
  5229   0023B8  010E               	movlb	14	; () banked
  5230   0023BA  8FD0               	bsf	208,7,b	;volatile
  5231   0023BC                     
  5232                           ; BSR set to: 14
  5233   0023BC  0012               	return		;funcret
  5234   0023BE                     __end_of_Comp1_init_rising_edge:
  5235                           	callstack 0
  5236                           
  5237 ;; *************** function _Comp1_init_falling_edge *****************
  5238 ;; Defined at:
  5239 ;;		line 37 in file "comparator.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;		None
  5242 ;; Auto vars:     Size  Location     Type
  5243 ;;		None
  5244 ;; Return value:  Size  Location     Type
  5245 ;;                  1    wreg      void 
  5246 ;; Registers used:
  5247 ;;		wreg, status,2, cstack
  5248 ;; Tracked objects:
  5249 ;;		On entry : 0/0
  5250 ;;		On exit  : 0/0
  5251 ;;		Unchanged: 0/0
  5252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5257 ;;Total ram usage:        0 bytes
  5258 ;; Hardware stack levels used: 1
  5259 ;; Hardware stack levels required when called: 4
  5260 ;; This function calls:
  5261 ;;		_DAC_init
  5262 ;; This function is called by:
  5263 ;;		_main
  5264 ;; This function uses a non-reentrant model
  5265 ;;
  5266                           
  5267                           	psect	text36
  5268   0023BE                     __ptext36:
  5269                           	callstack 0
  5270   0023BE                     _Comp1_init_falling_edge:
  5271                           	callstack 26
  5272   0023BE                     
  5273                           ;comparator.c: 39:     TRISFbits.TRISF7=1;
  5274   0023BE  8E86               	bsf	134,7,c	;volatile
  5275   0023C0                     
  5276                           ;comparator.c: 40:     CM1NCHbits.NCH=0b011;
  5277   0023C0  010E               	movlb	14	; () banked
  5278   0023C2  51D2               	movf	210,w,b	;volatile
  5279   0023C4  0BF8               	andlw	-8
  5280   0023C6  0903               	iorlw	3
  5281   0023C8  6FD2               	movwf	210,b	;volatile
  5282                           
  5283                           ;comparator.c: 41:     CM1PCHbits.PCH=0b101;
  5284   0023CA  51D3               	movf	211,w,b	;volatile
  5285   0023CC  0BF8               	andlw	-8
  5286   0023CE  0905               	iorlw	5
  5287   0023D0  6FD3               	movwf	211,b	;volatile
  5288   0023D2                     
  5289                           ; BSR set to: 14
  5290                           ;comparator.c: 42:     CM1CON0bits.HYS=1;
  5291   0023D2  83D0               	bsf	208,1,b	;volatile
  5292   0023D4                     
  5293                           ; BSR set to: 14
  5294                           ;comparator.c: 43:     CM1CON0bits.POL=1;
  5295   0023D4  89D0               	bsf	208,4,b	;volatile
  5296   0023D6                     
  5297                           ; BSR set to: 14
  5298                           ;comparator.c: 44:     CM1CON1bits.INTN=1;
  5299   0023D6  81D1               	bsf	209,0,b	;volatile
  5300   0023D8                     
  5301                           ; BSR set to: 14
  5302                           ;comparator.c: 45:     DAC_init();
  5303   0023D8  EC18  F012         	call	_DAC_init	;wreg free
  5304   0023DC                     
  5305                           ;comparator.c: 46:     CM1CON0bits.EN=1;
  5306   0023DC  010E               	movlb	14	; () banked
  5307   0023DE  8FD0               	bsf	208,7,b	;volatile
  5308   0023E0                     
  5309                           ; BSR set to: 14
  5310   0023E0  0012               	return		;funcret
  5311   0023E2                     __end_of_Comp1_init_falling_edge:
  5312                           	callstack 0
  5313                           
  5314 ;; *************** function _DAC_init *****************
  5315 ;; Defined at:
  5316 ;;		line 7 in file "comparator.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;		None
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;		None
  5321 ;; Return value:  Size  Location     Type
  5322 ;;                  1    wreg      void 
  5323 ;; Registers used:
  5324 ;;		wreg, status,2
  5325 ;; Tracked objects:
  5326 ;;		On entry : 0/0
  5327 ;;		On exit  : 0/0
  5328 ;;		Unchanged: 0/0
  5329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5334 ;;Total ram usage:        0 bytes
  5335 ;; Hardware stack levels used: 1
  5336 ;; Hardware stack levels required when called: 3
  5337 ;; This function calls:
  5338 ;;		Nothing
  5339 ;; This function is called by:
  5340 ;;		_Comp1_init_rising_edge
  5341 ;;		_Comp1_init_falling_edge
  5342 ;; This function uses a non-reentrant model
  5343 ;;
  5344                           
  5345                           	psect	text37
  5346   002430                     __ptext37:
  5347                           	callstack 0
  5348   002430                     _DAC_init:
  5349                           	callstack 26
  5350   002430                     
  5351                           ;comparator.c: 9:     DAC1CON0bits.PSS=0b00;
  5352   002430  0EF3               	movlw	-13
  5353   002432  010E               	movlb	14	; () banked
  5354   002434  17C6               	andwf	198,f,b	;volatile
  5355   002436                     
  5356                           ; BSR set to: 14
  5357                           ;comparator.c: 10:     DAC1CON0bits.NSS=0b0;
  5358   002436  91C6               	bcf	198,0,b	;volatile
  5359                           
  5360                           ;comparator.c: 14:     DAC1CON1bits.DAC1R=20;
  5361   002438  51C7               	movf	199,w,b	;volatile
  5362   00243A  0BE0               	andlw	-32
  5363   00243C  0914               	iorlw	20
  5364   00243E  6FC7               	movwf	199,b	;volatile
  5365   002440                     
  5366                           ; BSR set to: 14
  5367                           ;comparator.c: 15:     DAC1CON0bits.DAC1EN=1;
  5368   002440  8FC6               	bsf	198,7,b	;volatile
  5369   002442                     
  5370                           ; BSR set to: 14
  5371   002442  0012               	return		;funcret
  5372   002444                     __end_of_DAC_init:
  5373                           	callstack 0
  5374                           
  5375 ;; *************** function _LowISR *****************
  5376 ;; Defined at:
  5377 ;;		line 45 in file "interrupts.c"
  5378 ;; Parameters:    Size  Location     Type
  5379 ;;		None
  5380 ;; Auto vars:     Size  Location     Type
  5381 ;;		None
  5382 ;; Return value:  Size  Location     Type
  5383 ;;                  1    wreg      void 
  5384 ;; Registers used:
  5385 ;;		wreg, status,2, status,0
  5386 ;; Tracked objects:
  5387 ;;		On entry : 0/0
  5388 ;;		On exit  : 0/0
  5389 ;;		Unchanged: 0/0
  5390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5393 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5394 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5395 ;;Total ram usage:        3 bytes
  5396 ;; Hardware stack levels used: 1
  5397 ;; Hardware stack levels required when called: 2
  5398 ;; This function calls:
  5399 ;;		Nothing
  5400 ;; This function is called by:
  5401 ;;		Interrupt level 1
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           
  5405                           	psect	intcodelo
  5406   000018                     __pintcodelo:
  5407                           	callstack 0
  5408   000018                     _LowISR:
  5409                           	callstack 19
  5410                           
  5411                           ; BSR set to: 14
  5412                           ;incstack = 0
  5413   000018  8052               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  5414   00001A  CFD8 F00A          	movff	status,??_LowISR
  5415   00001E  CFE8 F00B          	movff	wreg,??_LowISR+1
  5416   000022  CFE0 F00C          	movff	bsr,??_LowISR+2
  5417   000026                     
  5418                           ;interrupts.c: 47:     if(PIR0bits.TMR0IF){
  5419   000026  010E               	movlb	14	; () banked
  5420   000028  AB33               	btfss	51,5,b	;volatile
  5421   00002A  EF19  F000         	goto	i1u106_21
  5422   00002E  EF1B  F000         	goto	i1u106_20
  5423   000032                     i1u106_21:
  5424   000032  EF22  F000         	goto	i1l2100
  5425   000036                     i1u106_20:
  5426   000036                     
  5427                           ; BSR set to: 14
  5428                           ;interrupts.c: 48:         seconds++;
  5429   000036  4A4D               	infsnz	_seconds^0,f,c
  5430   000038  2A4E               	incf	(_seconds+1)^0,f,c
  5431   00003A                     
  5432                           ; BSR set to: 14
  5433                           ;interrupts.c: 49:         TMR0H=00001011;
  5434   00003A  0E09               	movlw	9
  5435   00003C  6ED4               	movwf	212,c	;volatile
  5436   00003E                     
  5437                           ; BSR set to: 14
  5438                           ;interrupts.c: 50:         TMR0L=11011011;
  5439   00003E  0EC3               	movlw	195
  5440   000040  6ED3               	movwf	211,c	;volatile
  5441   000042                     
  5442                           ; BSR set to: 14
  5443                           ;interrupts.c: 51:         PIR0bits.TMR0IF = 0;
  5444   000042  9B33               	bcf	51,5,b	;volatile
  5445   000044                     i1l2100:
  5446                           
  5447                           ; BSR set to: 14
  5448                           ;interrupts.c: 54:     if (hour==5)
  5449   000044  0E05               	movlw	5
  5450   000046  184B               	xorwf	_hour^0,w,c
  5451   000048  104C               	iorwf	(_hour+1)^0,w,c
  5452   00004A  A4D8               	btfss	status,2,c
  5453   00004C  EF2A  F000         	goto	i1u107_21
  5454   000050  EF2C  F000         	goto	i1u107_20
  5455   000054                     i1u107_21:
  5456   000054  EF2D  F000         	goto	i1l257
  5457   000058                     i1u107_20:
  5458   000058                     
  5459                           ; BSR set to: 14
  5460                           ;interrupts.c: 55:     {;interrupts.c: 56:         LATHbits.LATH3 = 1;
  5461   000058  8680               	bsf	128,3,c	;volatile
  5462   00005A                     i1l257:
  5463                           
  5464                           ; BSR set to: 14
  5465   00005A  C00C  FFE0         	movff	??_LowISR+2,bsr
  5466   00005E  C00B  FFE8         	movff	??_LowISR+1,wreg
  5467   000062  C00A  FFD8         	movff	??_LowISR,status
  5468   000066  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5469   000068  0010               	retfie	
  5470   00006A                     __end_of_LowISR:
  5471                           	callstack 0
  5472                           
  5473 ;; *************** function _HighISR *****************
  5474 ;; Defined at:
  5475 ;;		line 28 in file "interrupts.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;		None
  5478 ;; Auto vars:     Size  Location     Type
  5479 ;;		None
  5480 ;; Return value:  Size  Location     Type
  5481 ;;                  1    wreg      void 
  5482 ;; Registers used:
  5483 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5491 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5492 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5493 ;;Total ram usage:        3 bytes
  5494 ;; Hardware stack levels used: 1
  5495 ;; Hardware stack levels required when called: 1
  5496 ;; This function calls:
  5497 ;;		i2___wmul
  5498 ;; This function is called by:
  5499 ;;		Interrupt level 2
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503                           	psect	intcode
  5504   000008                     __pintcode:
  5505                           	callstack 0
  5506   000008                     _HighISR:
  5507                           	callstack 19
  5508                           
  5509                           ; BSR set to: 14
  5510                           ;incstack = 0
  5511   000008  8252               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5512   00000A  EFC7  F00D         	goto	int_func
  5513                           
  5514                           	psect	intcode_body
  5515   001B8E                     __pintcode_body:
  5516                           	callstack 19
  5517   001B8E                     int_func:
  5518                           	callstack 19
  5519   001B8E  CFF3 F008          	movff	prodl,??_HighISR+1
  5520   001B92  CFF4 F009          	movff	prodh,??_HighISR+2
  5521   001B96                     
  5522                           ;interrupts.c: 30:         if(PIR2bits.C1IF){
  5523   001B96  010E               	movlb	14	; () banked
  5524   001B98  A135               	btfss	53,0,b	;volatile
  5525   001B9A  EFD1  F00D         	goto	i2u207_41
  5526   001B9E  EFD3  F00D         	goto	i2u207_40
  5527   001BA2                     i2u207_41:
  5528   001BA2  EF17  F00E         	goto	i2l250
  5529   001BA6                     i2u207_40:
  5530   001BA6                     
  5531                           ; BSR set to: 14
  5532                           ;interrupts.c: 31:         LATHbits.LATH3 = !LATHbits.LATH3;
  5533   001BA6  A680               	btfss	128,3,c	;volatile
  5534   001BA8  EFD8  F00D         	goto	i2u208_41
  5535   001BAC  EFDC  F00D         	goto	i2u208_40
  5536   001BB0                     i2u208_41:
  5537   001BB0  6A07               	clrf	??_HighISR^0,c
  5538   001BB2  2A07               	incf	??_HighISR^0,f,c
  5539   001BB4  EFDD  F00D         	goto	i2u209_48
  5540   001BB8                     i2u208_40:
  5541   001BB8  6A07               	clrf	??_HighISR^0,c
  5542   001BBA                     i2u209_48:
  5543   001BBA  4607               	rlncf	??_HighISR^0,f,c
  5544   001BBC  4607               	rlncf	??_HighISR^0,f,c
  5545   001BBE  4607               	rlncf	??_HighISR^0,f,c
  5546   001BC0  5080               	movf	128,w,c	;volatile
  5547   001BC2  1807               	xorwf	??_HighISR^0,w,c
  5548   001BC4  0BF7               	andlw	-9
  5549   001BC6  1807               	xorwf	??_HighISR^0,w,c
  5550   001BC8  6E80               	movwf	128,c	;volatile
  5551   001BCA                     
  5552                           ;interrupts.c: 32:         if (LATHbits.LATH3==0)
  5553   001BCA  B680               	btfsc	128,3,c	;volatile
  5554   001BCC  EFEA  F00D         	goto	i2u210_41
  5555   001BD0  EFEC  F00D         	goto	i2u210_40
  5556   001BD4                     i2u210_41:
  5557   001BD4  EFFD  F00D         	goto	i2l2832
  5558   001BD8                     i2u210_40:
  5559   001BD8                     
  5560                           ;interrupts.c: 33:         {;interrupts.c: 34:             SR = seconds + (hour*10);
  5561   001BD8  C04B  F001         	movff	_hour,i2___wmul@multiplier
  5562   001BDC  C04C  F002         	movff	_hour+1,i2___wmul@multiplier+1
  5563   001BE0  0E00               	movlw	0
  5564   001BE2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5565   001BE4  0E0A               	movlw	10
  5566   001BE6  6E03               	movwf	i2___wmul@multiplicand^0,c
  5567   001BE8  ECBA  F011         	call	i2___wmul	;wreg free
  5568   001BEC  504D               	movf	_seconds^0,w,c
  5569   001BEE  2401               	addwf	?i2___wmul^0,w,c
  5570   001BF0  0101               	movlb	1	; () banked
  5571   001BF2  6F68               	movwf	_SR& (0+255),b
  5572   001BF4  504E               	movf	(_seconds+1)^0,w,c
  5573   001BF6  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5574   001BF8  6F69               	movwf	(_SR+1)& (0+255),b
  5575   001BFA                     i2l2832:
  5576                           
  5577                           ;interrupts.c: 36:         if (LATHbits.LATH3 == 1)
  5578   001BFA  A680               	btfss	128,3,c	;volatile
  5579   001BFC  EF02  F00E         	goto	i2u211_41
  5580   001C00  EF04  F00E         	goto	i2u211_40
  5581   001C04                     i2u211_41:
  5582   001C04  EF15  F00E         	goto	i2l2836
  5583   001C08                     i2u211_40:
  5584   001C08                     
  5585                           ;interrupts.c: 37:         {;interrupts.c: 38:             SS = seconds + (hour*10);
  5586   001C08  C04B  F001         	movff	_hour,i2___wmul@multiplier
  5587   001C0C  C04C  F002         	movff	_hour+1,i2___wmul@multiplier+1
  5588   001C10  0E00               	movlw	0
  5589   001C12  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5590   001C14  0E0A               	movlw	10
  5591   001C16  6E03               	movwf	i2___wmul@multiplicand^0,c
  5592   001C18  ECBA  F011         	call	i2___wmul	;wreg free
  5593   001C1C  504D               	movf	_seconds^0,w,c
  5594   001C1E  2401               	addwf	?i2___wmul^0,w,c
  5595   001C20  0101               	movlb	1	; () banked
  5596   001C22  6F66               	movwf	_SS& (0+255),b
  5597   001C24  504E               	movf	(_seconds+1)^0,w,c
  5598   001C26  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5599   001C28  6F67               	movwf	(_SS+1)& (0+255),b
  5600   001C2A                     i2l2836:
  5601                           
  5602                           ;interrupts.c: 40:         PIR2bits.C1IF=0;
  5603   001C2A  010E               	movlb	14	; () banked
  5604   001C2C  9135               	bcf	53,0,b	;volatile
  5605   001C2E                     i2l250:
  5606                           
  5607                           ; BSR set to: 14
  5608   001C2E  C009  FFF4         	movff	??_HighISR+2,prodh
  5609   001C32  C008  FFF3         	movff	??_HighISR+1,prodl
  5610   001C36  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5611   001C38  0011               	retfie		f
  5612   001C3A                     __end_of_HighISR:
  5613                           	callstack 0
  5614                           
  5615 ;; *************** function i2___wmul *****************
  5616 ;; Defined at:
  5617 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;  multiplier      2    0[COMRAM] unsigned int 
  5620 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;  product         2    4[COMRAM] unsigned int 
  5623 ;; Return value:  Size  Location     Type
  5624 ;;                  2    0[COMRAM] unsigned int 
  5625 ;; Registers used:
  5626 ;;		wreg, status,2, status,0, prodl, prodh
  5627 ;; Tracked objects:
  5628 ;;		On entry : 0/0
  5629 ;;		On exit  : 0/0
  5630 ;;		Unchanged: 0/0
  5631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5632 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5633 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5635 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5636 ;;Total ram usage:        6 bytes
  5637 ;; Hardware stack levels used: 1
  5638 ;; This function calls:
  5639 ;;		Nothing
  5640 ;; This function is called by:
  5641 ;;		_HighISR
  5642 ;; This function uses a non-reentrant model
  5643 ;;
  5644                           
  5645                           	psect	text40
  5646   002374                     __ptext40:
  5647                           	callstack 0
  5648   002374                     i2___wmul:
  5649                           	callstack 19
  5650   002374  5001               	movf	i2___wmul@multiplier^0,w,c
  5651   002376  0203               	mulwf	i2___wmul@multiplicand^0,c
  5652   002378  CFF3 F005          	movff	prodl,i2___wmul@product
  5653   00237C  CFF4 F006          	movff	prodh,i2___wmul@product+1
  5654   002380  5001               	movf	i2___wmul@multiplier^0,w,c
  5655   002382  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  5656   002384  50F3               	movf	243,w,c
  5657   002386  2606               	addwf	(i2___wmul@product+1)^0,f,c
  5658   002388  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  5659   00238A  0203               	mulwf	i2___wmul@multiplicand^0,c
  5660   00238C  50F3               	movf	243,w,c
  5661   00238E  2606               	addwf	(i2___wmul@product+1)^0,f,c
  5662   002390  C005  F001         	movff	i2___wmul@product,?i2___wmul
  5663   002394  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  5664   002398  0012               	return		;funcret
  5665   00239A                     __end_ofi2___wmul:
  5666                           	callstack 0
  5667                           
  5668                           	psect	rparam
  5669   000000                     
  5670                           	psect	temp
  5671   000052                     btemp:
  5672                           	callstack 0
  5673   000052                     	ds	1
  5674   000000                     int$flags	set	btemp
  5675   000000                     wtemp8	set	btemp+1
  5676   000000                     ttemp5	set	btemp+1
  5677   000000                     ttemp6	set	btemp+4
  5678   000000                     ttemp7	set	btemp+8
  5679                           
  5680                           	psect	idloc
  5681                           
  5682                           ;Config register IDLOC0 @ 0x200000
  5683                           ;	unspecified, using default values
  5684   200000                     	org	2097152
  5685   200000  0FFF               	dw	4095
  5686                           
  5687                           ;Config register IDLOC1 @ 0x200002
  5688                           ;	unspecified, using default values
  5689   200002                     	org	2097154
  5690   200002  0FFF               	dw	4095
  5691                           
  5692                           ;Config register IDLOC2 @ 0x200004
  5693                           ;	unspecified, using default values
  5694   200004                     	org	2097156
  5695   200004  0FFF               	dw	4095
  5696                           
  5697                           ;Config register IDLOC3 @ 0x200006
  5698                           ;	unspecified, using default values
  5699   200006                     	org	2097158
  5700   200006  0FFF               	dw	4095
  5701                           
  5702                           ;Config register IDLOC4 @ 0x200008
  5703                           ;	unspecified, using default values
  5704   200008                     	org	2097160
  5705   200008  0FFF               	dw	4095
  5706                           
  5707                           ;Config register IDLOC5 @ 0x20000A
  5708                           ;	unspecified, using default values
  5709   20000A                     	org	2097162
  5710   20000A  0FFF               	dw	4095
  5711                           
  5712                           ;Config register IDLOC6 @ 0x20000C
  5713                           ;	unspecified, using default values
  5714   20000C                     	org	2097164
  5715   20000C  0FFF               	dw	4095
  5716                           
  5717                           ;Config register IDLOC7 @ 0x20000E
  5718                           ;	unspecified, using default values
  5719   20000E                     	org	2097166
  5720   20000E  0FFF               	dw	4095
  5721                           
  5722                           	psect	config
  5723                           
  5724                           ;Config register CONFIG1L @ 0x300000
  5725                           ;	External Oscillator mode Selection bits
  5726                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5727                           ;	Power-up default value for COSC bits
  5728                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5729   300000                     	org	3145728
  5730   300000  AA                 	db	170
  5731                           
  5732                           ;Config register CONFIG1H @ 0x300001
  5733                           ;	unspecified, using default values
  5734                           ;	Clock Out Enable bit
  5735                           ;	CLKOUTEN = 0x1, unprogrammed default
  5736                           ;	Clock Switch Enable bit
  5737                           ;	CSWEN = 0x1, unprogrammed default
  5738                           ;	Fail-Safe Clock Monitor Enable bit
  5739                           ;	FCMEN = 0x1, unprogrammed default
  5740   300001                     	org	3145729
  5741   300001  FF                 	db	255
  5742                           
  5743                           ;Config register CONFIG2L @ 0x300002
  5744                           ;	unspecified, using default values
  5745                           ;	Master Clear Enable bit
  5746                           ;	MCLRE = 0x1, unprogrammed default
  5747                           ;	Power-up Timer Enable bit
  5748                           ;	PWRTE = 0x1, unprogrammed default
  5749                           ;	Low-power BOR enable bit
  5750                           ;	LPBOREN = 0x1, unprogrammed default
  5751                           ;	Brown-out Reset Enable bits
  5752                           ;	BOREN = 0x3, unprogrammed default
  5753   300002                     	org	3145730
  5754   300002  FF                 	db	255
  5755                           
  5756                           ;Config register CONFIG2H @ 0x300003
  5757                           ;	unspecified, using default values
  5758                           ;	Brown Out Reset Voltage selection bits
  5759                           ;	BORV = 0x3, unprogrammed default
  5760                           ;	ZCD Disable bit
  5761                           ;	ZCD = 0x1, unprogrammed default
  5762                           ;	PPSLOCK bit One-Way Set Enable bit
  5763                           ;	PPS1WAY = 0x1, unprogrammed default
  5764                           ;	Stack Full/Underflow Reset Enable bit
  5765                           ;	STVREN = 0x1, unprogrammed default
  5766                           ;	Debugger Enable bit
  5767                           ;	DEBUG = 0x1, unprogrammed default
  5768                           ;	Extended Instruction Set Enable bit
  5769                           ;	XINST = 0x1, unprogrammed default
  5770   300003                     	org	3145731
  5771   300003  FF                 	db	255
  5772                           
  5773                           ;Config register CONFIG3L @ 0x300004
  5774                           ;	WDT Period Select bits
  5775                           ;	WDTCPS = 0x1F, unprogrammed default
  5776                           ;	WDT operating mode
  5777                           ;	WDTE = OFF, WDT Disabled
  5778   300004                     	org	3145732
  5779   300004  9F                 	db	159
  5780                           
  5781                           ;Config register CONFIG3H @ 0x300005
  5782                           ;	unspecified, using default values
  5783                           ;	WDT Window Select bits
  5784                           ;	WDTCWS = 0x7, unprogrammed default
  5785                           ;	WDT input clock selector
  5786                           ;	WDTCCS = 0x7, unprogrammed default
  5787   300005                     	org	3145733
  5788   300005  FF                 	db	255
  5789                           
  5790                           ;Config register CONFIG4L @ 0x300006
  5791                           ;	unspecified, using default values
  5792                           ;	Write Protection Block 0
  5793                           ;	WRT0 = 0x1, unprogrammed default
  5794                           ;	Write Protection Block 1
  5795                           ;	WRT1 = 0x1, unprogrammed default
  5796                           ;	Write Protection Block 2
  5797                           ;	WRT2 = 0x1, unprogrammed default
  5798                           ;	Write Protection Block 3
  5799                           ;	WRT3 = 0x1, unprogrammed default
  5800                           ;	Write Protection Block 3
  5801                           ;	WRT4 = 0x1, unprogrammed default
  5802                           ;	Write Protection Block 3
  5803                           ;	WRT5 = 0x1, unprogrammed default
  5804                           ;	Write Protection Block 3
  5805                           ;	WRT6 = 0x1, unprogrammed default
  5806                           ;	Write Protection Block 3
  5807                           ;	WRT7 = 0x1, unprogrammed default
  5808   300006                     	org	3145734
  5809   300006  FF                 	db	255
  5810                           
  5811                           ;Config register CONFIG4H @ 0x300007
  5812                           ;	unspecified, using default values
  5813                           ;	Configuration Register Write Protection bit
  5814                           ;	WRTC = 0x1, unprogrammed default
  5815                           ;	Boot Block Write Protection bit
  5816                           ;	WRTB = 0x1, unprogrammed default
  5817                           ;	Data EEPROM Write Protection bit
  5818                           ;	WRTD = 0x1, unprogrammed default
  5819                           ;	Scanner Enable bit
  5820                           ;	SCANE = 0x1, unprogrammed default
  5821                           ;	Low Voltage Programming Enable bit
  5822                           ;	LVP = 0x1, unprogrammed default
  5823   300007                     	org	3145735
  5824   300007  FF                 	db	255
  5825                           
  5826                           ;Config register CONFIG5L @ 0x300008
  5827                           ;	unspecified, using default values
  5828                           ;	UserNVM Program Memory Code Protection bit
  5829                           ;	CP = 0x1, unprogrammed default
  5830                           ;	DataNVM Memory Code Protection bit
  5831                           ;	CPD = 0x1, unprogrammed default
  5832   300008                     	org	3145736
  5833   300008  FF                 	db	255
  5834                           
  5835                           ;Config register CONFIG5H @ 0x300009
  5836                           ;	unspecified, using default values
  5837   300009                     	org	3145737
  5838   300009  FF                 	db	255
  5839                           
  5840                           ;Config register CONFIG6L @ 0x30000A
  5841                           ;	unspecified, using default values
  5842                           ;	Table Read Protection Block 0
  5843                           ;	EBTR0 = 0x1, unprogrammed default
  5844                           ;	Table Read Protection Block 1
  5845                           ;	EBTR1 = 0x1, unprogrammed default
  5846                           ;	Table Read Protection Block 2
  5847                           ;	EBTR2 = 0x1, unprogrammed default
  5848                           ;	Table Read Protection Block 3
  5849                           ;	EBTR3 = 0x1, unprogrammed default
  5850                           ;	Table Read Protection Block 4
  5851                           ;	EBTR4 = 0x1, unprogrammed default
  5852                           ;	Table Read Protection Block 5
  5853                           ;	EBTR5 = 0x1, unprogrammed default
  5854                           ;	Table Read Protection Block 6
  5855                           ;	EBTR6 = 0x1, unprogrammed default
  5856                           ;	Table Read Protection Block 7
  5857                           ;	EBTR7 = 0x1, unprogrammed default
  5858   30000A                     	org	3145738
  5859   30000A  FF                 	db	255
  5860                           
  5861                           ;Config register CONFIG6H @ 0x30000B
  5862                           ;	unspecified, using default values
  5863                           ;	Boot Block Table Read Protection bit
  5864                           ;	EBTRB = 0x1, unprogrammed default
  5865   30000B                     	org	3145739
  5866   30000B  FF                 	db	255
  5867                           tosu	equ	0xFFF
  5868                           tosh	equ	0xFFE
  5869                           tosl	equ	0xFFD
  5870                           stkptr	equ	0xFFC
  5871                           pclatu	equ	0xFFB
  5872                           pclath	equ	0xFFA
  5873                           pcl	equ	0xFF9
  5874                           tblptru	equ	0xFF8
  5875                           tblptrh	equ	0xFF7
  5876                           tblptrl	equ	0xFF6
  5877                           tablat	equ	0xFF5
  5878                           prodh	equ	0xFF4
  5879                           prodl	equ	0xFF3
  5880                           indf0	equ	0xFEF
  5881                           postinc0	equ	0xFEE
  5882                           postdec0	equ	0xFED
  5883                           preinc0	equ	0xFEC
  5884                           plusw0	equ	0xFEB
  5885                           fsr0h	equ	0xFEA
  5886                           fsr0l	equ	0xFE9
  5887                           wreg	equ	0xFE8
  5888                           indf1	equ	0xFE7
  5889                           postinc1	equ	0xFE6
  5890                           postdec1	equ	0xFE5
  5891                           preinc1	equ	0xFE4
  5892                           plusw1	equ	0xFE3
  5893                           fsr1h	equ	0xFE2
  5894                           fsr1l	equ	0xFE1
  5895                           bsr	equ	0xFE0
  5896                           indf2	equ	0xFDF
  5897                           postinc2	equ	0xFDE
  5898                           postdec2	equ	0xFDD
  5899                           preinc2	equ	0xFDC
  5900                           plusw2	equ	0xFDB
  5901                           fsr2h	equ	0xFDA
  5902                           fsr2l	equ	0xFD9
  5903                           status	equ	0xFD8

Data Sizes:
    Strings     36
    Constant    0
    Data        28
    BSS         53
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     70      81
    BANK0           160     76     148
    BANK1           256    100     108
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_2(CODE[17]), STR_1(CODE[19]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_2(CODE[17]), STR_1(CODE[19]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_2(CODE[17]), STR_1(CODE[19]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 19
		 -> STR_2(CODE[17]), STR_1(CODE[19]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2060$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_2(CODE[17]), STR_1(CODE[19]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@strdate(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2007$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2007$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    timeadj2String@buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@strdate(BANK1[100]), 

    LCD_sendstring@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@strdate(BANK1[100]), 


Critical Paths under _main in COMRAM

    _main->_timeadj2String
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _LCD_sendstring->_LCD_sendbyte
    _time_adjuster->___awdiv
    _LCD_setline->_LCD_sendbyte
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    _HighISR->i2___wmul

Critical Paths under _main in BANK0

    _main->_timeadj2String
    _timeadj2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               100   100      0   14930
                                              0 BANK1    100   100      0
            _Comp1_init_falling_edge
             _Comp1_init_rising_edge
                    _Interrupts_init
                           _LCD_Init
                        _LCD_setline
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
                          _day1_init
                    _daylightsavings
                          _increment
                           _poweroff
                    _streetLightInit
                           _test_day
                      _time_adjuster
                     _timeadj2String
 ---------------------------------------------------------------------------------
 (1) _timeadj2String                                      14     2     12   11509
                                             68 COMRAM     2     2      0
                                             64 BANK0     12     0     12
                     _LCD_sendstring
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             31    15     16    9641
                                             35 BANK0     29    13     16
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    8969
                                             66 COMRAM     2     2      0
                                             29 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           24    18      6    8475
                                             57 COMRAM     9     3      6
                                             17 BANK0     12    12      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    5075
                                             39 COMRAM    18     8     10
                                              0 BANK0     17    17      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2775
                                             28 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1357
                                             21 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     857
                                             12 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             30 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             12 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                             12 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                 9     7      2    1280
                                             18 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              5     3      2     207
                                             12 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              4     2      2     237
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     511
                                             12 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _LCD_sendstring                                       2     0      2    1111
                                             15 COMRAM     2     0      2
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _time_adjuster                                        8     4      4     718
                                             20 COMRAM     8     4      4
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                             12 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _test_day                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _streetLightInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _poweroff                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _increment                                            2     2      0       0
                                             12 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _daylightsavings                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _day1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                   26    24      2     694
                                             12 COMRAM    26    24      2
 ---------------------------------------------------------------------------------
 (1) _LCD_setline                                          1     1      0     958
                                             15 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    1002
                                             15 COMRAM     2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendbyte                                         2     1      1     914
                                             13 COMRAM     2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (4) _LCD_sendnibble                                       1     1      0      88
                                             12 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (5) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init_rising_edge                               0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (1) _Comp1_init_falling_edge                              0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _LowISR                                              3     3      0       0
                                              9 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _HighISR                                             3     3      0     263
                                              6 COMRAM     3     3      0
                           i2___wmul
 ---------------------------------------------------------------------------------
 (12) i2___wmul                                            6     2      4     263
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Comp1_init_falling_edge
     _DAC_init
   _Comp1_init_rising_edge
     _DAC_init
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_setline
     _LCD_sendbyte
   _LEDarray_disp_bin
   _LEDarray_init
   _Timer0_init
   _day1_init
   _daylightsavings
   _increment
   _poweroff
   _streetLightInit
   _test_day
   _time_adjuster
     ___awdiv
   _timeadj2String
     _LCD_sendstring
       _LCD_sendbyte
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _isdigit

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     64      6C       7       42.2%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4C      94       5       92.5%
BITBIGSFRlhlhh      84      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     46      51       1       86.2%
BITBIGSFRllhh       5C      0       0      43        0.0%
BITBIGSFRhhll       4A      0       0      34        0.0%
BITBIGSFRlhll       33      0       0      42        0.0%
BITBIGSFRllllll     30      0       0      49        0.0%
BITBIGSFRhhlhh      1B      0       0      33        0.0%
BITBIGSFRlhhhhl     14      0       0      37        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRlhlhll      8      0       0      41        0.0%
BITBIGSFRllllh       7      0       0      47        0.0%
BITBIGSFRllhll       7      0       0      45        0.0%
BITBIGSFRlhhl        6      0       0      39        0.0%
BITBIGSFRlhhhl       3      0       0      38        0.0%
BITBIGSFRllhlh       1      0       0      44        0.0%
BITBIGSFRlllllh      1      0       0      48        0.0%
BITBIGSFRlllh        1      0       0      46        0.0%
BITBIGSFRlhhhhl      1      0       0      36        0.0%
BITBIGSFRhl          1      0       0      35        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     151      50        0.0%
DATA                 0      0     151       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Nov 09 23:26:33 2022

                             _AD 0164                               l96 2372  
                             _SN 00AC                               _SR 0168  
                             _SS 0166                     ___awdiv@sign 0012  
                             bsr 000FE0              ___wmul@multiplicand 000F  
              ??_Interrupts_init 000D                              l100 19A4  
                            l103 19FE                              l160 23BC  
                            l242 2454                              l163 23E0  
                            l157 2442                              l550 1FF2  
                            l543 2462                              l552 2008  
                            l392 2400                              l480 1916  
                            l464 2468                              l712 1682  
                            l554 2016                              l546 1FC6  
                            l562 1D84                              l467 242E  
                            l491 1F46                              l548 1FDC  
                            l484 2262                              l557 22E2  
                            l573 2296                              l582 207A  
                            l559 22FA                              l567 22CA  
                            l487 2228                              l496 1E24  
                            l816 1B8C                              l585 234C  
                            l699 151E  __end_of_Comp1_init_falling_edge 23E2  
        __end_of_streetLightInit 246A                              _abs 21AC  
                            _pad 1C3A                              wreg 000FE8  
                           ?_abs 001F                             l1301 117C  
                           l1303 1184                             l2200 2328  
                           l3000 15A2                             l1304 11CA  
                           l2202 2344                             l3010 161A  
                           l3002 15AA                             l1403 1AC8  
                           l1411 21AA                             l3012 162C  
                           l3004 15BE                             l3100 1376  
                           l1317 1396                             l3006 15CC  
                           l3014 1632                             l1414 246C  
                           l3030 1C76                             l3022 1C3A  
                           l3110 0E68                             l1263 2120  
                           l2320 2160                             l2312 2122  
                           l2400 16F4                             l3016 1642  
                           l3008 15FA                             l1352 21EA  
                           l3040 21AC                             l3032 1C8A  
                           l3024 1C48                             l3112 0E6C  
                           l3104 0E26                             l3200 1E26  
                           l1345 20CE                             l2314 2126  
                           l2402 16FC                             l3018 1662  
                           l3042 21C6                             l3034 1C9E  
                           l1290 1C7E                             l3026 1C5C  
                           l3050 1126                             l3130 0F42  
                           l3122 0E9A                             l3114 0E7A  
                           l3106 0E4E                             l3210 1E42  
                           l3202 1E2E                             l1339 10DE  
                           l2324 2456                             l1380 2326  
                           l2308 22FC                             l2316 213A  
                           l2412 1776                             l2404 1704  
                           l3036 1CA2                             l3028 1C6A  
                           l3060 118C                             l3052 1146  
                           l3044 10E0                             l3140 0F8C  
                           l3132 0F50                             l3116 0E7C  
                           l3124 0ED2                             l3108 0E5C  
                           l3212 1E46                             l3204 1E32  
                           l1349 21E2                             l1293 1CC0  
                           l2326 2458                             l2430 1FDE  
                           l2422 1FB2                             l2510 22DC  
                           l2318 215C                             l1374 17D8  
                           l2414 17AA                             l2406 173C  
                           l3038 1CCE                             l3070 11C6  
                           l3062 119C                             l3054 1154  
                           l3046 1100                             l3150 1070  
                           l3142 0FC8                             l3134 0F5E  
                           l3126 0EE4                             l3118 0E8E  
                           l3214 1E4A                             l3206 1E36  
                           l1295 1CE2                             l2328 2460  
                           l2440 200E                             l2432 1FEC  
                           l2424 1FC0                             l2512 22E4  
                           l2600 1918                             l2416 17BC  
                           l3080 126A                             l3072 11D2  
                           l3064 11A2                             l3056 1156  
                           l3048 1116                             l3144 0FD8  
                           l3136 0F7E                             l3128 0F0C  
                           l3216 1E4E                             l3208 1E3A  
                           l1377 17E0                             l2530 2436  
                           l2434 1FF4                             l2426 1FC8  
                           l2514 22EC                             l2610 1964  
                           l3090 1328                             l3082 1270  
                           l3074 11DA                             l3066 11B2  
                           l3058 1170                             l3154 10A0  
                           l3146 0FF8                             l3218 1E7C  
                           l2532 2440                             l2620 239C  
                           l2436 2002                             l2428 1FD6  
                           l2516 22F2                             l2508 22CE  
                           l2612 197E                             l2700 1830  
                           l2540 227E                             l1388 2166  
                           l3092 1342                             l3076 11E0  
                           l3084 12D4                             l3068 11BE  
                           l3148 1018                             l3172 207C  
                           l2630 23B8                             l2622 23AE  
                           l2438 200A                             l2614 1984  
                           l2606 1928                             l2710 1878  
                           l2702 1848                             l2534 2264  
                           l2390 1684                             l3086 12F0  
                           l3094 1350                             l3078 1262  
                           l3158 10B2                             l3174 2088  
                           l3190 210E                             l3182 20D0  
                           l2528 2430                             l2640 23D6  
                           l2632 23BE                             l2624 23B0  
                           l2616 1988                             l2608 1946  
                           l2720 18B0                             l2712 1880  
                           l2704 184C                             l2560 1AE4  
                           l2536 2268                             l2392 1698  
                           l3096 1360                             l3088 130E  
                           l3176 20A4                             l3184 20E2  
                           l2642 23D8                             l2634 23C0  
                           l2626 23B2                             l2618 239A  
                           l2650 23E2                             l2730 1912  
                           l2722 18EA                             l2714 188A  
                           l2706 1854                             l2570 1B0A  
                           l2562 1AE8                             l2554 1ACA  
                           l2538 227A                             l3098 1366  
                           l3178 20C4                             l3186 20EA  
                           l3194 2018                             l2644 23DC  
                           l2636 23D2                             l2628 23B4  
                           l2652 23EA                             l2660 2226  
                           l2724 18F2                             l2708 186C  
                           l2716 1894                             l2732 222A  
                           l2580 1B40                             l2572 1B1C  
                           l2564 1AF6                             l2556 1ACE  
                           l2740 1EC2                             l2396 169C  
                           l3188 20F2                             l3196 2056  
                           l2638 23D4                             l2646 2444  
                           l2670 1D22                             l2662 1CE4  
                           l2654 23F4                             l2726 18F6  
                           l2718 18A8                             l2734 2244  
                           l2582 1B56                             l2574 1B24  
                           l2590 1B6C                             l2566 1AFE  
                           l2558 1ADC                             l2750 1F2E  
                           l2742 1EE2                             l2398 16BC  
                           l3286 0EC4                             l3198 2062  
                           l2680 1D50                             l2672 1D2C  
                           l2664 1CFC                             l2656 23FE  
                           l2760 1DB0                             l2728 190A  
                           l2736 2260                             l2648 2464  
                           l2592 1B7C                             l2584 1B5E  
                           l2576 1B2C                             l2568 1B02  
                           l2752 1F36                             l2744 1EF2  
                           l3288 1726                             l2920 1A00  
                           l2682 1D58                             l2674 1D34  
                           l2666 1D14                             l2658 21EC  
                           l2770 1E04                             l2762 1DC2  
                           l2690 241C                             l2594 1B84  
                           l2586 1B60                             l2578 1B3A  
                           l2746 1F06                             l2754 1F3E  
                           l2738 1EBA                             l2930 1A82  
                           l2922 1A12                             l2684 1D62  
                           l2676 1D3E                             l2668 1D1A  
                           l2780 22B2                             l2772 1E16  
                           l2764 1DC6                             l2756 1D86  
                           l2692 17E2                             l2588 1B66  
                           l2748 1F1A                             l2924 1A24  
                           l2940 218A                             l2686 1D70  
                           l2678 1D46                             l2782 22C0  
                           l2598 234E                             l2774 1E1C  
                           l2766 1DDA                             l2758 1D9A  
                           l2694 1802                             l2950 13CE  
                           l2942 1398                             l2926 1A2E  
                           l2934 2168                             ?_pad 001D  
                           l2688 1D7A                             l2776 229A  
                           l2768 1DF0                             l2696 180A  
                           l2960 142A                             l2952 13DC  
                           l2944 139C                             l2928 1A4C  
                           l2936 2174                             l2778 22A8  
                           l2698 1828                             l2970 1494  
                           l2962 1432                             l2954 13FC  
                           l2946 13AA                             l2938 2186  
                           l2980 14DE                             l2972 14B4  
                           l2964 1446                             l2956 1400  
                           l2948 13CA                             l2982 14FE  
                           l2974 14B6                             l2966 1454  
                           l2958 140C                             l2990 1532  
                           l2976 14C8                             l2968 1466  
                           l2992 1552                             l2978 14CE  
                           l2994 1556                             l2986 1520  
                           l2996 1564                             l2988 1524  
                           l2998 1584                             STR_1 0E01  
                           STR_2 0E14                             u2000 1E04  
                           u2001 1E00                             u2010 1E16  
                           u2011 1E12                             u2020 22A8  
                           u2021 22A4                             u2030 22C0  
                           u1310 2320                             u2031 22BC  
                           u1311 231A                             u1320 2322  
                           u2200 142A                             u2120 1A12  
                           u2201 1426                             u2121 1A0E  
                           u1330 213A                             u2210 1454  
                           u2130 1A24                             u1331 2136  
                           u2211 1450                             u2131 1A20  
                           u1340 215C                             u1500 17AA  
                           u2220 1494                             u2140 1A4C  
                           u2300 1C48                             u1341 2158  
                           u1501 17A6                             u2221 1490  
                           u2141 1A48                             u2301 1C44  
                           u1510 17BC                             u2230 14DE  
                           u2150 1A82                             u2310 1C6A  
                           u1511 17B8                             u2231 14DA  
                           u2151 1A7E                             u2311 1C66  
                           u1520 1FC0                             u2240 1532  
                           u2160 21AA                             u2320 1CC0  
                           u2400 119C                             u1521 1FBC  
                           u2241 152E                             u2161 21A6  
                           u2321 1CBC                             u2401 1198  
                           u1530 1FD6                             u2170 13AA  
                           u2250 1564                             u2330 1CCE  
                           u2410 11B2                             u1531 1FD2  
                           u2171 13A6                             u2251 1560  
                           u2331 1CCA                             u2411 11AE  
                           u1540 1FEC                             u1700 1B56  
                           u2180 13DC                             u2260 15A2  
                           u2340 21C6                             u2420 12F0  
                           u2500 0F0C                             u1541 1FE8  
                           u1701 1B52                             u2181 13D8  
                           u2261 159E                             u2341 21C2  
                           u2421 12EC                             u2501 0F08  
                           u1550 2002                             u1630 22DC  
                           u1710 1B7C                             u2270 15CC  
                           u2430 130E                             u2350 1112  
                           u2510 0F50                             u1551 1FFE  
                           u1631 22D8                             u1711 1B78  
                           u2191 1406                             u2271 15C8  
                           u2431 130A                             u2351 110C  
                           u2511 0F4C                             u1720 1946  
                           u1480 16BC                             u2280 15FA  
                           u2440 1328                             u2360 1114  
                           u2520 0FC8                             u1721 1942  
                           u1481 16B8                             u2281 15F6  
                           u2441 1324                             u2521 0FC4  
                           u1730 19A4                             u1650 2296  
                           u1490 16F0                             u2290 1642  
                           u2450 1342                             u2370 1126  
                           u2530 0FF8                             u1731 19A0  
                           u1651 2292                             u1491 16EC  
                           u2291 163E                             u2451 133E  
                           u2371 1122                             u2531 0FF4  
                           u1900 2244                             u1660 1ADC  
                           u2460 1350                             u2380 1154  
                           u2540 1018                             u1805 19E8  
                           u1901 2240                             u1661 1AD8  
                           u2461 134C                             u2381 1150  
                           u2541 1014                             u1806 19EA  
                           u1830 1802                             u1910 2260  
                           u1670 1AF6                             u2470 1360  
                           u2390 1170                             u2550 20C4  
                           u2607 1D40                             u1815 19F2  
                           u1831 17FE                             u1911 225C  
                           u1671 1AF2                             u2471 135C  
                           u2391 116C                             u2551 20C0  
                           u1816 19F4                             u1840 1828  
                           u1680 1B1C                             u1920 1F06  
                           u2480 0E4E                             u2617 1D52  
                           u1825 19FC                             u1745 19AC  
                           u1841 1824                             u1681 1B18  
                           u1921 1F02                             u2481 0E4A  
                           u1826 19FE                             u1746 19AE  
                           u1850 1848                             u1690 1B3A  
                           u1930 1F1A                             u2490 0EE4  
                           u2627 1D68                             u1755 19B6  
                           u1851 1844                             u1691 1B36  
                           u1931 1F16                             u2491 0EE0  
                           u1756 19B8                             u1860 186C  
                           u1940 1F2E                             u2637 22F4  
                           u1765 19C0                             u1861 1868  
                           u1941 1F2A                             u1766 19C2  
                           u1950 1D9A                             u1870 18A8  
                           u2647 2010                             u1775 19CA  
                           u1951 1D96                             u1871 18A4  
                           u2567 206C                             u1776 19CC  
                           u1960 1DB0                             u1880 18EA  
                           u2657 245A                             u2577 1D06  
                           u1785 19D4                             u1961 1DAC  
                           u1881 18E6                             u1786 19D6  
                           u1970 1DC2                             u1890 190A  
                           u2587 1D1C                             u1795 19DE  
                           u1971 1DBE                             u1891 1906  
                           u1796 19E0                             u1980 1DDA  
                           u2597 1D2E                             u1981 1DD6  
                           u1990 1DF0                             u1991 1DEC  
                           abs@a 001F                             _dbuf 00B2  
                           _atoi 1684                             _main 1E26  
                           _dtoa 10E0                             _hour 004B  
                           _prec 0049                             _year 00EC  
                           pad@i 0024                             pad@p 0021  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           indf2 000FDF                             fsr1l 000FE1  
                           pad@w 0026                             fsr2l 000FD9  
                           btemp 0052                     ?_LCD_setline 0001  
                           prodh 000FF4                             prodl 000FF3  
                           start 006A                      main@strdate 0100  
               __end_of_DAC_init 2444                  __end_of_HighISR 1C3A  
                   ___param_bank 000000                            ??_abs 0021  
                          ??_pad 0023                 __end_of_LCD_Init 1D86  
                __end_of___aodiv 1520                            ?_atoi 0013  
                          ?_main 0001                            ?_dtoa 0028  
                __end_of___aomod 1684                            _ADPCH 000F5F  
                __end_of___awdiv 1B8E                  ___awdiv@divisor 000F  
                          i1l257 005A                            i2l250 1C2E  
                          i2l585 2398                  ___awdiv@counter 0011  
                   vfpfcnvrt@fmt 003C                            _TMR0H 000FD4  
                          _TMR0L 000FD3                  _daylightsavings 1D86  
                          _flags 004F                            _fputc 1A00  
                          _fputs 2168                  __end_of_isdigit 2328  
                          _month 00D2                            atoi@n 001A  
                          pad@fp 001D                            atoi@s 0013  
                          _width 0047                            _putch 246C  
                          dtoa@d 002A                            dtoa@i 006F  
                          dtoa@n 0066                            dtoa@p 0062  
                          dtoa@s 006E                            dtoa@w 0064  
                __end_of_isspace 2168                    ?_LCD_sendbyte 000E  
                          tablat 000FF5                 __end_ofi2___wmul 239A  
                          ttemp5 0053                            ttemp6 0056  
                          ttemp7 005A                            status 000FD8  
                          wtemp8 0053                  __end_of_sprintf 2122  
                __initialization 1F48                     __end_of_atoi 17E2  
                   __end_of_main 1EBA                     __end_of_dtoa 1398  
              __end_of_LCD_E_TOG 2464                           ??_atoi 0015  
                         ??_main 0047                           ??_dtoa 0032  
                  __activetblptr 000003                 ?_streetLightInit 0001  
                         ?_fputc 000D                           ?_fputs 0016  
                         _ADRESH 000F64                   ??_LCD_sendbyte 000F  
               ___awdiv@dividend 000D                           ?_putch 0001  
                         i1l2100 0044                           i1l2102 0058  
                         i1l2090 0026                           i1l2092 0036  
                         i1l2094 003A                           i1l2096 003E  
                         i1l2098 0042                           i2l2830 1BD8  
                         i2l2832 1BFA                           i2l2824 1B96  
                         i2l2834 1C08                           i2l2826 1BA6  
                         i2l2836 1C2A                           i2l2828 1BCA  
                         i2l2790 2374                           i2l2792 2390  
                  vfpfcnvrt@done 0079                        ??_HighISR 0007  
              _LEDarray_disp_bin 1918                           _LowISR 0018  
             ?_LEDarray_disp_bin 000D                    ??_Timer0_init 000D  
                   vfprintf@cfmt 0043                        ??___aodiv 001D  
                      ??___aomod 001D                           ___wmul 2328  
                      ??___awdiv 0011            LEDarray_disp_bin@mask 0023  
        __end_of_daylightsavings 1E26              ??_LEDarray_disp_bin 000F  
                         clear_0 1F94                           clear_1 1FA0  
               ___awdiv@quotient 0013                           isa$std 000001  
                         pad@buf 001F                           dtoa@fp 0028  
                         fputc@c 000D                           fputs@c 001A  
                         fputs@i 001B                           fputs@s 0016  
                      ??_isdigit 000F                     __mediumconst 0000  
                      ??_isspace 000F                 __end_of_test_day 2430  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                 __end_of_poweroff 2264  
                         putch@c 0001                        ?_DAC_init 0001  
               __end_of_vfprintf 20D0                        ??_sprintf 0045  
      __end_of_LEDarray_disp_bin 1A00                       __accesstop 0060  
        __end_of__initialization 1FA6                        ?_LCD_Init 0001  
       ??_Comp1_init_rising_edge 000D                    ___rparam_used 000001  
                  _LEDarray_init 234E                  _Interrupts_init 2444  
                 __pcstackCOMRAM 0001          timeadj2String@solarnoon 00A6  
                   __pidataBANK0 2402                     __pidataBANK1 246A  
                  __end_of_fputc 1ACA                    __end_of_fputs 21AC  
                  __end_of_putch 246E        time_adjuster@sunrise_time 0015  
            __end_of_Timer0_init 2402                        ?i2___wmul 0001  
                     ??_DAC_init 000D                          ??_fputc 0011  
                        ??_fputs 001A                          ??_putch 000D  
                     __pbssBANK0 00AC                       __pbssBANK1 0164  
         time_adjuster@solarnoon 0019                       ??_LCD_Init 0010  
                 _LCD_sendnibble 1FB0                       __pnvCOMRAM 0050  
                 ?_LEDarray_init 0001                   _LCD_sendstring 2264  
                        ?_LowISR 0001            __end_of_time_adjuster 1F48  
                   _day_of_month 00EE                          ?___wmul 000D  
           __end_of_LCD_sendbyte 22FC         time_adjuster@sunset_time 0017  
               ?_daylightsavings 0001                       ??i2___wmul 0005  
              __end_of_day1_init 222A                  _seconds_in_hour 00B0  
                timeadj2String@s 00AA           __end_of_LCD_sendnibble 2018  
        __end_of_Interrupts_init 2456                          _HighISR 0008  
         __end_of_LCD_sendstring 2298                        _ADREFbits 000F58  
        _Comp1_init_falling_edge 23BE                          __Hparam 0000  
                        __Lparam 0000                      _Timer0_init 23E2  
                      ?_test_day 0001                          ___aodiv 1398  
                        ___aomod 1520                          ___awdiv 1ACA  
                      ?_poweroff 0001                        ?_vfprintf 007D  
                   __psmallconst 0E00                          __pcinit 1F48  
                        __ramtop 0E00                          __ptext0 1E26  
                        __ptext1 2018                          __ptext2 20D0  
                        __ptext3 207C                          __ptext4 0E26  
                        __ptext5 10E0                          __ptext6 1C3A  
                        __ptext7 2168                          __ptext8 1A00  
                        __ptext9 246C                __end_of_increment 1918  
                        _isdigit 22FC                          _seconds 004D  
                        _isspace 2122                        _LCD_E_TOG 2456  
                LCD_setline@line 0010                          atoi@neg 0018  
                        _sprintf 20D0                   __pintcode_body 1B8E  
           end_of_initialization 1FA6                  ?_LCD_sendnibble 0001  
        time_adjuster@adjustment 001B                          fputc@fp 000F  
                ??_LEDarray_init 000D                          int_func 1B8E  
                        fputs@fp 0018              i2___wmul@multiplier 0001  
                ?_LCD_sendstring 0010                __end_of_vfpfcnvrt 10E0  
                     ??_test_day 000D                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
               vfpfcnvrt@convarg 0071                       ??_poweroff 000D  
                     ??_vfprintf 0043                timeadj2String@buf 00A0  
         _Comp1_init_rising_edge 239A                       ?_LCD_E_TOG 0001  
                      _TRISAbits 000F81                        _TRISBbits 000F82  
                      _TRISCbits 000F83                        _TRISEbits 000F85  
                      _TRISFbits 000F86                        _TRISGbits 000F87  
                      _TRISHbits 000F88        ??_Comp1_init_falling_edge 000D  
                    _CM1CON0bits 000ED0                      _CM1CON1bits 000ED1  
               ?_Interrupts_init 0001                   __end_of_LowISR 006A  
                    vfpfcnvrt@ap 003E                      vfpfcnvrt@cp 007B  
                    vfpfcnvrt@fp 003A                   __end_of___wmul 234E  
           LCD_sendnibble@number 000D                 i2___wmul@product 0005  
            start_initialization 1F48                      __end_of_abs 21EC  
                    __end_of_pad 1CE4                   _timeadj2String 2018  
                   _LCD_sendbyte 22CC                    ??_LCD_setline 0010  
                       ??_LowISR 000A                      vfprintf@fmt 007F  
           LEDarray_disp_bin@ctr 0025             LCD_sendstring@string 0010  
                       ??___wmul 0011                      __pdataBANK0 00D2  
                    __pdataBANK1 016A              _oct_daylight_adjust 00EA  
                    __pbssCOMRAM 0047                      ??_LCD_E_TOG 000D  
         __end_of_timeadj2String 207C                    __pcstackBANK0 0060  
                  __pcstackBANK1 0100                 ___aodiv@dividend 000D  
                      _day1_init 21EC                         ?_HighISR 0001  
                      __pnvBANK0 00EC                ??_streetLightInit 000D  
                      _dtoa$2098 0060                     ?_Timer0_init 0001  
                    _day_of_week 00F0                      _day_of_year 00F2  
                      __pintcode 0008                         ?___aodiv 000D  
                       ?___aomod 000D                         ?___awdiv 000D  
               ___aodiv@quotient 001F         LEDarray_disp_bin@led_arr 0011  
            __end_of_LCD_setline 22CC                      __pintcodelo 0018  
                    __smallconst 0E00                         ?_isdigit 000D  
                       ?_isspace 000D                 ??_LCD_sendnibble 000D  
                ?_timeadj2String 00A0                        _increment 17E2  
                       _DAC_init 2430                       ?_day1_init 0001  
               ??_LCD_sendstring 0012                         ?_sprintf 0083  
               LCD_sendbyte@Byte 000F                         _LCD_Init 1CE4  
               LCD_sendbyte@type 000E                   ___wmul@product 0011  
                       _LATAbits 000F79                         _LATBbits 000F7A  
                       _LATCbits 000F7B                         _LATEbits 000F7D  
                       _LATFbits 000F7E                         _LATGbits 000F7F  
                       _LATHbits 000F80                         _IPR0bits 000E1F  
                       _PIE0bits 000E29                         _IPR2bits 000E21  
                       _PIE2bits 000E2B                         i1u106_20 0036  
                       i1u106_21 0032                         i1u107_20 0058  
                       i1u107_21 0054                         i2u210_40 1BD8  
                       i2u210_41 1BD4                         i2u211_40 1C08  
                       i2u211_41 1C04                         i2u207_40 1BA6  
                       i2u207_41 1BA2                         i2u208_40 1BB8  
                       i2u208_41 1BB0                         i2u209_48 1BBA  
                       _PIR0bits 000E33                         _PIR2bits 000E35  
                      _month_num 0050          ?_Comp1_init_rising_edge 0001  
                      _vfpfcnvrt 0E26                       _ADCON0bits 000F60  
              ___wmul@multiplier 000D                         i2___wmul 2374  
                   _hours_in_day 00AE                       ?_increment 0001  
                   _isspace$2147 0011                       _CM1NCHbits 000ED2  
                     _CM1PCHbits 000ED3                        copy_data0 1F74  
          __end_of_LEDarray_init 2374                      _LCD_setline 2298  
                       __Hrparam 0000                       vfprintf@ap 0081  
                       __Lrparam 0000                       vfprintf@fp 007D  
                  _time_adjuster 1EBA   __end_of_Comp1_init_rising_edge 23BE  
          i2___wmul@multiplicand 0003                       ?_vfpfcnvrt 003A  
                ___aodiv@divisor 0015                  ___aodiv@counter 001D  
                     _ANSELAbits 000E92            timeadj2String@sunrise 00A2  
                     sprintf@fmt 0085                       _T0CON0bits 000FD5  
                     _T0CON1bits 000FD6                         __ptext10 21AC  
                       __ptext11 1520                         __ptext20 241C  
                       __ptext12 1398                         __ptext21 2464  
                       __ptext13 1684                         __ptext30 1CE4  
                       __ptext22 222A                         __ptext14 2122  
                       __ptext31 22CC                         __ptext23 17E2  
                       __ptext15 22FC                         __ptext40 2374  
                       __ptext32 1FB0                         __ptext24 1D86  
                       __ptext16 2328                         __ptext33 2456  
                       __ptext25 21EC                         __ptext17 2264  
                       __ptext34 2444                         __ptext26 23E2  
                       __ptext18 1EBA                         __ptext35 239A  
                       __ptext27 234E                         __ptext19 1ACA  
                       __ptext36 23BE                         __ptext28 1918  
                       __ptext37 2430                         __ptext29 2298  
                    ??_day1_init 000D          LEDarray_disp_bin@number 000D  
              ??_daylightsavings 000D                   ?_time_adjuster 0015  
                       isa$xinst 000000                         _test_day 241C  
                       int$flags 0052                         _poweroff 222A  
                       _vfprintf 207C                 ___aomod@dividend 000D  
                     _INTCONbits 000FF2             timeadj2String@adjust 00A8  
                    ??_increment 000D         ?_Comp1_init_falling_edge 0001  
                       isdigit@c 000D                  _streetLightInit 2464  
           timeadj2String@sunset 00A4                         intlevel1 0000  
                       intlevel2 0000                        sprintf@ap 0093  
                   _DAC1CON0bits 000EC6                     _DAC1CON1bits 000EC7  
                       isspace@c 000D                  ___aomod@divisor 0015  
                    ??_vfpfcnvrt 0040                  ___aomod@counter 001D  
               ??_timeadj2String 0045                         sprintf@f 0095  
                       sprintf@s 0083                     ___aodiv@sign 001E  
              _adjustment_of_day 016A                  ??_time_adjuster 0019  
                   ___aomod@sign 001E  
