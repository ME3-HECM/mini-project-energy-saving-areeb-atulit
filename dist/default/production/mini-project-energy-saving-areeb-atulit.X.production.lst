

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Nov 08 03:06:38 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64   000000                     
    65                           ; Generated 06/04/2022 GMT
    66                           ; 
    67                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F67K40 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99   000000                     
   100                           	psect	idataBANK1
   101   002114                     __pidataBANK1:
   102                           	callstack 0
   103                           
   104                           ;initializer for _month
   105   002114  001F               	dw	31
   106   002116  001C               	dw	28
   107   002118  001F               	dw	31
   108   00211A  001E               	dw	30
   109   00211C  001F               	dw	31
   110   00211E  001E               	dw	30
   111   002120  001F               	dw	31
   112   002122  001F               	dw	31
   113   002124  001E               	dw	30
   114   002126  001F               	dw	31
   115   002128  001E               	dw	30
   116   00212A  001F               	dw	31
   117                           
   118                           	psect	smallconst
   119   000E00                     __psmallconst:
   120                           	callstack 0
   121   000E00  00                 	db	0
   122   000E01  0000               	dw	0
   123   000E03  0000               	dw	0
   124   000E05  CFDC               	dw	53212
   125   000E07  35D1               	dw	13777
   126   000E09                     __end_of_dp_l:
   127                           	callstack 0
   128   000E09  0000               	dw	0
   129   000E0B  0000               	dw	0
   130   000E0D  C000               	dw	49152
   131   000E0F  3F15               	dw	16149
   132   000E11                     __end_of_dp_h:
   133                           	callstack 0
   134   000E11  4260               	dw	16992
   135   000E13  0DA2               	dw	3490
   136   000E15                     __end_of_tiny@sqrtf$F2315:
   137                           	callstack 0
   138   000E15  A570               	dw	42352
   139   000E17  36EC               	dw	14060
   140   000E19                     __end_of_ivln2_l:
   141                           	callstack 0
   142   000E19  AA3B               	dw	43579
   143   000E1B  3FB8               	dw	16312
   144   000E1D                     __end_of_ivln2:
   145                           	callstack 0
   146   000E1D  384F               	dw	14415
   147   000E1F  3F76               	dw	16246
   148   000E21                     __end_of_cp:
   149                           	callstack 0
   150   000E21  AA3C               	dw	43580
   151   000E23  3338               	dw	13112
   152   000E25                     __end_of_ovt:
   153                           	callstack 0
   154   000E25  BE8C               	dw	48780
   155   000E27  35BF               	dw	13759
   156   000E29                     __end_of_lg2_l:
   157                           	callstack 0
   158   000E29  7200               	dw	29184
   159   000E2B  3F31               	dw	16177
   160   000E2D                     __end_of_lg2_h:
   161                           	callstack 0
   162   000E2D  7218               	dw	29208
   163   000E2F  3F31               	dw	16177
   164   000E31                     __end_of_lg2:
   165                           	callstack 0
   166   000E31  BB4C               	dw	47948
   167   000E33  3331               	dw	13105
   168   000E35                     __end_of_P5:
   169                           	callstack 0
   170   000E35  EA0E               	dw	59918
   171   000E37  B5DD               	dw	46557
   172   000E39                     __end_of_P4:
   173                           	callstack 0
   174   000E39  B355               	dw	45909
   175   000E3B  388A               	dw	14474
   176   000E3D                     __end_of_P3:
   177                           	callstack 0
   178   000E3D  0B61               	dw	2913
   179   000E3F  BB36               	dw	47926
   180   000E41                     __end_of_P2:
   181                           	callstack 0
   182   000E41  AAAB               	dw	43691
   183   000E43  3E2A               	dw	15914
   184   000E45                     __end_of_P1:
   185                           	callstack 0
   186   000E45  F142               	dw	61762
   187   000E47  3E53               	dw	15955
   188   000E49                     __end_of_L6:
   189                           	callstack 0
   190   000E49  3255               	dw	12885
   191   000E4B  3E6C               	dw	15980
   192   000E4D                     __end_of_L5:
   193                           	callstack 0
   194   000E4D  A305               	dw	41733
   195   000E4F  3E8B               	dw	16011
   196   000E51                     __end_of_L4:
   197                           	callstack 0
   198   000E51  AAAB               	dw	43691
   199   000E53  3EAA               	dw	16042
   200   000E55                     __end_of_L3:
   201                           	callstack 0
   202   000E55  6DB7               	dw	28087
   203   000E57  3EDB               	dw	16091
   204   000E59                     __end_of_L2:
   205                           	callstack 0
   206   000E59  999A               	dw	39322
   207   000E5B  3F19               	dw	16153
   208   000E5D                     __end_of_L1:
   209                           	callstack 0
   210   000E5D  4260               	dw	16992
   211   000E5F  0DA2               	dw	3490
   212   000E61                     __end_of_tiny:
   213                           	callstack 0
   214   000E61  F2CA               	dw	62154
   215   000E63  7149               	dw	29001
   216   000E65                     __end_of_huge:
   217                           	callstack 0
   218   000E65  0000               	dw	0
   219   000E67  4B80               	dw	19328
   220   000E69                     __end_of_two24:
   221                           	callstack 0
   222   000E69  0000               	dw	0
   223   000E6B  3F80               	dw	16256
   224   000E6D  0000               	dw	0
   225   000E6F  3FC0               	dw	16320
   226   000E71                     __end_of_bp:
   227                           	callstack 0
   228   000E71  AA00               	dw	43520
   229   000E73  3FB8               	dw	16312
   230   000E75                     __end_of_ivln2_h:
   231                           	callstack 0
   232   000E75  23C6               	dw	9158
   233   000E77  B8F6               	dw	47350
   234   000E79                     __end_of_cp_l:
   235                           	callstack 0
   236   000E79  4000               	dw	16384
   237   000E7B  3F76               	dw	16246
   238   000E7D                     __end_of_cp_h:
   239                           	callstack 0
   240   000000                     _TRISEbits	set	3973
   241   000000                     _TRISCbits	set	3971
   242   000000                     _LATEbits	set	3965
   243   000000                     _LATCbits	set	3963
   244   000000                     _TRISDbits	set	3972
   245   000000                     _T0CON0bits	set	4053
   246   000000                     _T0CON1bits	set	4054
   247   000000                     _LATDbits	set	3964
   248   000000                     _LATHbits	set	3968
   249   000000                     _CM1CON1bits	set	3793
   250   000000                     _LATBbits	set	3962
   251   000000                     _LATFbits	set	3966
   252   000000                     _TRISBbits	set	3970
   253   000000                     _TRISFbits	set	3974
   254   000000                     _TRISGbits	set	3975
   255   000E7D                     STR_1:
   256                           
   257                           ; BSR set to: 14
   258   000E7D  25                 	db	37
   259   000E7E  64                 	db	100	;'d'
   260   000E7F  3A                 	db	58	;':'
   261   000E80  25                 	db	37
   262   000E81  64                 	db	100	;'d'
   263   000E82  3A                 	db	58	;':'
   264   000E83  25                 	db	37
   265   000E84  64                 	db	100	;'d'
   266   000E85  20                 	db	32
   267   000E86  25                 	db	37
   268   000E87  64                 	db	100	;'d'
   269   000E88  2D                 	db	45
   270   000E89  25                 	db	37
   271   000E8A  64                 	db	100	;'d'
   272   000E8B  2D                 	db	45
   273   000E8C  25                 	db	37
   274   000E8D  64                 	db	100	;'d'
   275   000E8E  00                 	db	0
   276   000E8F  00                 	db	0	; dummy byte at the end
   277   000000                     
   278                           	psect	nvCOMRAM
   279   000053                     __pnvCOMRAM:
   280                           	callstack 0
   281   000053                     _day_of_week:
   282                           	callstack 0
   283   000053                     	ds	2
   284                           
   285                           	psect	nvBANK0
   286   0000A3                     __pnvBANK0:
   287                           	callstack 0
   288   0000A3                     _month_num:
   289                           	callstack 0
   290   0000A3                     	ds	2
   291                           
   292                           	psect	nvBANK1
   293   0001A0                     __pnvBANK1:
   294                           	callstack 0
   295   0001A0                     _year:
   296                           	callstack 0
   297   0001A0                     	ds	2
   298   0001A2                     _day_of_month:
   299                           	callstack 0
   300   0001A2                     	ds	2
   301   0001A4                     _day_of_year:
   302                           	callstack 0
   303   0001A4                     	ds	2
   304   000000                     _IPR0bits	set	3615
   305   000000                     _IPR2bits	set	3617
   306   000000                     _PIE0bits	set	3625
   307   000000                     _PIE2bits	set	3627
   308   000000                     _ANSELAbits	set	3730
   309   000000                     _TRISAbits	set	3969
   310   000000                     _DAC1CON0bits	set	3782
   311   000000                     _ADREFbits	set	3928
   312   000000                     _ADPCH	set	3935
   313   000000                     _ADRESH	set	3940
   314   000000                     _ADCON0bits	set	3936
   315   000000                     _LATAbits	set	3961
   316   000000                     _LATGbits	set	3967
   317   000000                     _TRISHbits	set	3976
   318   000000                     _TMR0L	set	4051
   319   000000                     _TMR0H	set	4052
   320   000000                     _INTCONbits	set	4082
   321   000000                     _CM1CON0bits	set	3792
   322   000000                     _CM1NCHbits	set	3794
   323   000000                     _DAC1CON1bits	set	3783
   324   000000                     _CM1PCHbits	set	3795
   325   000000                     _PIR0bits	set	3635
   326   000000                     _PIR2bits	set	3637
   327                           
   328                           ; #config settings
   329                           
   330                           	psect	cinit
   331   001DD0                     __pcinit:
   332                           	callstack 0
   333   001DD0                     start_initialization:
   334                           	callstack 0
   335   001DD0                     __initialization:
   336                           	callstack 0
   337                           
   338                           ; Initialize objects allocated to BANK1 (24 bytes)
   339                           ; load TBLPTR registers with __pidataBANK1
   340   001DD0  0E14               	movlw	low __pidataBANK1
   341   001DD2  6EF6               	movwf	tblptrl,c
   342   001DD4  0E21               	movlw	high __pidataBANK1
   343   001DD6  6EF7               	movwf	tblptrh,c
   344   001DD8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   345   001DDA  6EF8               	movwf	tblptru,c
   346   001DDC  EE01  F088         	lfsr	0,__pdataBANK1
   347   001DE0  EE10 F018          	lfsr	1,24
   348   001DE4                     copy_data0:
   349   001DE4  0009               	tblrd		*+
   350   001DE6  CFF5 FFEE          	movff	tablat,postinc0
   351   001DEA  50E5               	movf	postdec1,w,c
   352   001DEC  50E1               	movf	fsr1l,w,c
   353   001DEE  E1FA               	bnz	copy_data0
   354                           
   355                           ; Clear objects allocated to BANK1 (36 bytes)
   356   001DF0  EE01  F064         	lfsr	0,__pbssBANK1
   357   001DF4  0E24               	movlw	36
   358   001DF6                     clear_0:
   359   001DF6  6AEE               	clrf	postinc0,c
   360   001DF8  06E8               	decf	wreg,f,c
   361   001DFA  E1FD               	bnz	clear_0
   362                           
   363                           ; Clear objects allocated to BANK0 (10 bytes)
   364   001DFC  EE00  F099         	lfsr	0,__pbssBANK0
   365   001E00  0E0A               	movlw	10
   366   001E02                     clear_1:
   367   001E02  6AEE               	clrf	postinc0,c
   368   001E04  06E8               	decf	wreg,f,c
   369   001E06  E1FD               	bnz	clear_1
   370                           
   371                           ; Clear objects allocated to COMRAM (3 bytes)
   372   001E08  6A52               	clrf	(__pbssCOMRAM+2)& (0+255),c
   373   001E0A  6A51               	clrf	(__pbssCOMRAM+1)& (0+255),c
   374   001E0C  6A50               	clrf	__pbssCOMRAM& (0+255),c
   375   001E0E                     end_of_initialization:
   376                           	callstack 0
   377   001E0E                     __end_of__initialization:
   378                           	callstack 0
   379   001E0E  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   380   001E10  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   381   001E12  0E00               	movlw	low (__Lsmallconst shr (0+16))
   382   001E14  6EF8               	movwf	tblptru,c
   383   001E16  0E0E               	movlw	high __Lsmallconst
   384   001E18  6EF7               	movwf	tblptrh,c
   385   001E1A  0100               	movlb	0
   386   001E1C  EFB3  F00C         	goto	_main	;jump to C main() function
   387                           
   388                           	psect	bssCOMRAM
   389   000050                     __pbssCOMRAM:
   390                           	callstack 0
   391   000050                     _prec:
   392                           	callstack 0
   393   000050                     	ds	2
   394   000052                     _flags:
   395                           	callstack 0
   396   000052                     	ds	1
   397                           
   398                           	psect	bssBANK0
   399   000099                     __pbssBANK0:
   400                           	callstack 0
   401   000099                     _errno:
   402                           	callstack 0
   403   000099                     	ds	2
   404   00009B                     _width:
   405                           	callstack 0
   406   00009B                     	ds	2
   407   00009D                     _comp_check:
   408                           	callstack 0
   409   00009D                     	ds	2
   410   00009F                     _hour:
   411                           	callstack 0
   412   00009F                     	ds	2
   413   0000A1                     _seconds:
   414                           	callstack 0
   415   0000A1                     	ds	2
   416                           
   417                           	psect	bssBANK1
   418   000164                     __pbssBANK1:
   419                           	callstack 0
   420   000164                     fabsf@F465:
   421                           	callstack 0
   422   000164                     	ds	4
   423   000168                     _dbuf:
   424                           	callstack 0
   425   000168                     	ds	32
   426                           
   427                           	psect	dataBANK1
   428   000188                     __pdataBANK1:
   429                           	callstack 0
   430   000188                     _month:
   431                           	callstack 0
   432   000188                     	ds	24
   433                           
   434                           	psect	cstackBANK1
   435   000100                     __pcstackBANK1:
   436                           	callstack 0
   437   000100                     main@strdate:
   438                           	callstack 0
   439                           
   440                           ; 100 bytes @ 0x0
   441   000100                     	ds	100
   442                           
   443                           	psect	cstackBANK0
   444   000060                     __pcstackBANK0:
   445                           	callstack 0
   446   000060                     vfpfcnvrt@convarg:
   447                           	callstack 0
   448                           
   449                           ; 8 bytes @ 0x0
   450   000060                     	ds	8
   451   000068                     vfpfcnvrt@cp:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x8
   455   000068                     	ds	2
   456   00006A                     ?_vfprintf:
   457                           	callstack 0
   458   00006A                     vfprintf@fp:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0xA
   462   00006A                     	ds	2
   463   00006C                     vfprintf@fmt:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0xC
   467   00006C                     	ds	2
   468   00006E                     vfprintf@ap:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0xE
   472   00006E                     	ds	2
   473   000070                     ?_sprintf:
   474                           	callstack 0
   475   000070                     sprintf@s:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x10
   479   000070                     	ds	2
   480   000072                     sprintf@fmt:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x12
   484   000072                     	ds	14
   485   000080                     sprintf@ap:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x20
   489   000080                     	ds	2
   490   000082                     sprintf@f:
   491                           	callstack 0
   492                           
   493                           ; 11 bytes @ 0x22
   494   000082                     	ds	11
   495   00008D                     time2String@buf:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x2D
   499   00008D                     	ds	2
   500   00008F                     time2String@h:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x2F
   504   00008F                     	ds	2
   505   000091                     time2String@s:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x31
   509   000091                     	ds	2
   510   000093                     time2String@d:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x33
   514   000093                     	ds	2
   515   000095                     time2String@m:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x35
   519   000095                     	ds	2
   520   000097                     time2String@y:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x37
   524   000097                     	ds	2
   525                           
   526                           	psect	cstackCOMRAM
   527   000001                     __pcstackCOMRAM:
   528                           	callstack 0
   529   000001                     ??_HighISR:
   530   000001                     
   531                           ; 1 bytes @ 0x0
   532   000001                     	ds	1
   533   000002                     ??_LowISR:
   534                           
   535                           ; 1 bytes @ 0x1
   536   000002                     	ds	4
   537   000006                     ?___wmul:
   538                           	callstack 0
   539   000006                     ?___awdiv:
   540                           	callstack 0
   541   000006                     ?___lwdiv:
   542                           	callstack 0
   543   000006                     ?___aodiv:
   544                           	callstack 0
   545   000006                     ?___aomod:
   546                           	callstack 0
   547   000006                     LCD_sendnibble@number:
   548                           	callstack 0
   549   000006                     LEDarray_disp_bin@number:
   550                           	callstack 0
   551   000006                     ___wmul@multiplier:
   552                           	callstack 0
   553   000006                     ___awdiv@dividend:
   554                           	callstack 0
   555   000006                     ___lwdiv@dividend:
   556                           	callstack 0
   557   000006                     fputc@c:
   558                           	callstack 0
   559   000006                     ___aodiv@dividend:
   560                           	callstack 0
   561   000006                     ___aomod@dividend:
   562                           	callstack 0
   563                           
   564                           ; 8 bytes @ 0x5
   565   000006                     	ds	1
   566   000007                     LCD_sendbyte@type:
   567                           	callstack 0
   568                           
   569                           ; 1 bytes @ 0x6
   570   000007                     	ds	1
   571   000008                     ??_LEDarray_disp_bin:
   572   000008                     LCD_sendbyte@Byte:
   573                           	callstack 0
   574   000008                     ___wmul@multiplicand:
   575                           	callstack 0
   576   000008                     ___awdiv@divisor:
   577                           	callstack 0
   578   000008                     ___lwdiv@divisor:
   579                           	callstack 0
   580   000008                     fputc@fp:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0x7
   584   000008                     	ds	1
   585   000009                     ??_LCD_Init:
   586   000009                     LCD_setline@line:
   587                           	callstack 0
   588   000009                     LCD_sendstring@string:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x8
   592   000009                     	ds	1
   593   00000A                     ??_fputc:
   594   00000A                     ___awdiv@counter:
   595                           	callstack 0
   596   00000A                     ___lwdiv@counter:
   597                           	callstack 0
   598   00000A                     ___wmul@product:
   599                           	callstack 0
   600   00000A                     LEDarray_disp_bin@led_arr:
   601                           	callstack 0
   602                           
   603                           ; 18 bytes @ 0x9
   604   00000A                     	ds	1
   605   00000B                     ___awdiv@sign:
   606                           	callstack 0
   607   00000B                     ___lwdiv@quotient:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0xA
   611   00000B                     	ds	1
   612   00000C                     ?_sunrise:
   613                           	callstack 0
   614   00000C                     ?_sunset:
   615                           	callstack 0
   616   00000C                     ___awdiv@quotient:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0xB
   620   00000C                     	ds	2
   621   00000E                     ??_sunrise:
   622   00000E                     ??_sunset:
   623   00000E                     ___aodiv@divisor:
   624                           	callstack 0
   625   00000E                     ___aomod@divisor:
   626                           	callstack 0
   627                           
   628                           ; 8 bytes @ 0xD
   629   00000E                     	ds	1
   630   00000F                     sunrise@prevState:
   631                           	callstack 0
   632   00000F                     sunset@prevState:
   633                           	callstack 0
   634   00000F                     fputs@s:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0xE
   638   00000F                     	ds	2
   639   000011                     sunrise@sunrise_time:
   640                           	callstack 0
   641   000011                     sunset@sunset_time:
   642                           	callstack 0
   643   000011                     fputs@fp:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x10
   647   000011                     	ds	2
   648   000013                     fputs@c:
   649                           	callstack 0
   650   000013                     timeadjuster@sunrise_time:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x12
   654   000013                     	ds	1
   655   000014                     fputs@i:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x13
   659   000014                     	ds	1
   660   000015                     timeadjuster@sunset_time:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x14
   664   000015                     	ds	1
   665   000016                     ___aodiv@counter:
   666                           	callstack 0
   667   000016                     ___aomod@counter:
   668                           	callstack 0
   669   000016                     pad@fp:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x15
   673   000016                     	ds	1
   674   000017                     ___aodiv@sign:
   675                           	callstack 0
   676   000017                     ___aomod@sign:
   677                           	callstack 0
   678   000017                     timeadjuster@solarnoon:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x16
   682   000017                     	ds	1
   683   000018                     ?_abs:
   684                           	callstack 0
   685   000018                     pad@buf:
   686                           	callstack 0
   687   000018                     abs@a:
   688                           	callstack 0
   689   000018                     ___aodiv@quotient:
   690                           	callstack 0
   691                           
   692                           ; 8 bytes @ 0x17
   693   000018                     	ds	1
   694   000019                     timeadjuster@adjustment:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x18
   698   000019                     	ds	1
   699   00001A                     ??_abs:
   700   00001A                     pad@p:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x19
   704   00001A                     	ds	2
   705   00001C                     ??_pad:
   706   00001C                     LEDarray_disp_bin@mask:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x1B
   710   00001C                     	ds	1
   711   00001D                     pad@i:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x1C
   715   00001D                     	ds	1
   716   00001E                     LEDarray_disp_bin@ctr:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x1D
   720   00001E                     	ds	1
   721   00001F                     pad@w:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x1E
   725   00001F                     	ds	1
   726   000020                     ??_increment:
   727                           
   728                           ; 1 bytes @ 0x1F
   729   000020                     	ds	1
   730   000021                     dtoa@fp:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x20
   734   000021                     	ds	2
   735   000023                     dtoa@d:
   736                           	callstack 0
   737                           
   738                           ; 8 bytes @ 0x22
   739   000023                     	ds	8
   740   00002B                     ??_dtoa:
   741                           
   742                           ; 1 bytes @ 0x2A
   743   00002B                     	ds	8
   744   000033                     _dtoa$2130:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x32
   748   000033                     	ds	2
   749   000035                     dtoa@p:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x34
   753   000035                     	ds	2
   754   000037                     dtoa@w:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x36
   758   000037                     	ds	2
   759   000039                     dtoa@n:
   760                           	callstack 0
   761                           
   762                           ; 8 bytes @ 0x38
   763   000039                     	ds	8
   764   000041                     dtoa@s:
   765                           	callstack 0
   766                           
   767                           ; 1 bytes @ 0x40
   768   000041                     	ds	1
   769   000042                     dtoa@i:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x41
   773   000042                     	ds	2
   774   000044                     vfpfcnvrt@fp:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x43
   778   000044                     	ds	2
   779   000046                     vfpfcnvrt@fmt:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x45
   783   000046                     	ds	2
   784   000048                     vfpfcnvrt@ap:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x47
   788   000048                     	ds	2
   789   00004A                     ??_vfpfcnvrt:
   790                           
   791                           ; 1 bytes @ 0x49
   792   00004A                     	ds	2
   793   00004C                     vfprintf@cfmt:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x4B
   797   00004C                     	ds	2
   798   00004E                     ??_time2String:
   799   00004E                     
   800                           ; 1 bytes @ 0x4D
   801   00004E                     	ds	2
   802   000050                     
   803                           ; 1 bytes @ 0x4F
   804 ;;
   805 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   806 ;;
   807 ;; *************** function _main *****************
   808 ;; Defined at:
   809 ;;		line 19 in file "main.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;  strdate       100    0[BANK1 ] unsigned char [100]
   814 ;;  strtime       100    0        unsigned char [100]
   815 ;; Return value:  Size  Location     Type
   816 ;;                  1    wreg      void 
   817 ;; Registers used:
   818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   825 ;;      Locals:         0       0     100       0       0       0       0       0       0       0       0       0       
      +0       0       0
   826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   827 ;;      Totals:         0       0     100       0       0       0       0       0       0       0       0       0       
      +0       0       0
   828 ;;Total ram usage:      100 bytes
   829 ;; Hardware stack levels required when called: 11
   830 ;; This function calls:
   831 ;;		_ADC_init
   832 ;;		_Comp1_init_falling_edge
   833 ;;		_Comp1_init_rising_edge
   834 ;;		_Interrupts_init
   835 ;;		_LCD_Init
   836 ;;		_LCD_setline
   837 ;;		_LEDarray_init
   838 ;;		_Timer0_init
   839 ;;		_day1_init
   840 ;;		_daylightsavings
   841 ;;		_increment
   842 ;;		_poweroff
   843 ;;		_streetLightInit
   844 ;;		_sunrise
   845 ;;		_sunset
   846 ;;		_time2String
   847 ;;		_timeadjuster
   848 ;; This function is called by:
   849 ;;		Startup code after reset
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text0
   854   001966                     __ptext0:
   855                           	callstack 0
   856   001966                     _main:
   857                           	callstack 20
   858   001966                     
   859                           ;main.c: 21:     streetLightInit();
   860   001966  ECB0  F010         	call	_streetLightInit	;wreg free
   861                           
   862                           ;main.c: 22:     LEDarray_init();
   863   00196A  EC36  F010         	call	_LEDarray_init	;wreg free
   864   00196E                     
   865                           ;main.c: 23:     Timer0_init();
   866   00196E  EC6D  F010         	call	_Timer0_init	;wreg free
   867   001972                     
   868                           ;main.c: 24:     Comp1_init_rising_edge();
   869   001972  EC49  F010         	call	_Comp1_init_rising_edge	;wreg free
   870   001976                     
   871                           ;main.c: 25:     Comp1_init_falling_edge();
   872   001976  EC5B  F010         	call	_Comp1_init_falling_edge	;wreg free
   873   00197A                     
   874                           ;main.c: 26:     Interrupts_init();
   875   00197A  ECA0  F010         	call	_Interrupts_init	;wreg free
   876                           
   877                           ;main.c: 27:     ADC_init();
   878   00197E  EC7D  F010         	call	_ADC_init	;wreg free
   879                           
   880                           ;main.c: 28:     day1_init();
   881   001982  EC5A  F00F         	call	_day1_init	;wreg free
   882   001986                     
   883                           ;main.c: 29:     LCD_Init();
   884   001986  EC62  F00C         	call	_LCD_Init	;wreg free
   885   00198A                     l3371:
   886                           
   887                           ;main.c: 33:                 LCD_setline(1);
   888   00198A  0E01               	movlw	1
   889   00198C  ECF1  F00F         	call	_LCD_setline
   890   001990                     
   891                           ;main.c: 34:         time2String(strdate, hour,seconds,day_of_month, month_num,year);
   892   001990  0E00               	movlw	low main@strdate
   893   001992  0100               	movlb	0	; () banked
   894   001994  6F8D               	movwf	time2String@buf& (0+255),b
   895   001996  0E01               	movlw	high main@strdate
   896   001998  6F8E               	movwf	(time2String@buf+1)& (0+255),b
   897   00199A  C09F  F08F         	movff	_hour,time2String@h
   898   00199E  C0A0  F090         	movff	_hour+1,time2String@h+1
   899   0019A2  C0A1  F091         	movff	_seconds,time2String@s
   900   0019A6  C0A2  F092         	movff	_seconds+1,time2String@s+1
   901   0019AA  C1A2  F093         	movff	_day_of_month,time2String@d
   902   0019AE  C1A3  F094         	movff	_day_of_month+1,time2String@d+1
   903   0019B2  C0A3  F095         	movff	_month_num,time2String@m
   904   0019B6  C0A4  F096         	movff	_month_num+1,time2String@m+1
   905   0019BA  C1A0  F097         	movff	_year,time2String@y
   906   0019BE  C1A1  F098         	movff	_year+1,time2String@y+1
   907   0019C2  ECFF  F00C         	call	_time2String	;wreg free
   908   0019C6                     
   909                           ;main.c: 35:         increment();
   910   0019C6  ECA3  F00A         	call	_increment	;wreg free
   911   0019CA                     
   912                           ;main.c: 36:         poweroff();
   913   0019CA  EC9B  F00F         	call	_poweroff	;wreg free
   914   0019CE                     
   915                           ;main.c: 37:         sunrise();
   916   0019CE  EC25  F00E         	call	_sunrise	;wreg free
   917   0019D2                     
   918                           ;main.c: 38:         sunset();
   919   0019D2  ECEE  F00D         	call	_sunset	;wreg free
   920   0019D6                     
   921                           ;main.c: 39:         timeadjuster(sunrise(),sunset());
   922   0019D6  EC25  F00E         	call	_sunrise	;wreg free
   923   0019DA  C00C  F013         	movff	?_sunrise,timeadjuster@sunrise_time
   924   0019DE  C00D  F014         	movff	?_sunrise+1,timeadjuster@sunrise_time+1
   925   0019E2  ECEE  F00D         	call	_sunset	;wreg free
   926   0019E6  C00C  F015         	movff	?_sunset,timeadjuster@sunset_time
   927   0019EA  C00D  F016         	movff	?_sunset+1,timeadjuster@sunset_time+1
   928   0019EE  ECB6  F00D         	call	_timeadjuster	;wreg free
   929   0019F2                     
   930                           ;main.c: 40:         daylightsavings();
   931   0019F2  EC90  F00E         	call	_daylightsavings	;wreg free
   932   0019F6  EFC5  F00C         	goto	l3371
   933   0019FA  EF54  F000         	goto	start
   934   0019FE                     __end_of_main:
   935                           	callstack 0
   936                           
   937 ;; *************** function _timeadjuster *****************
   938 ;; Defined at:
   939 ;;		line 110 in file "Functions.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;  sunrise_time    2   18[COMRAM] int 
   942 ;;  sunset_time     2   20[COMRAM] int 
   943 ;; Auto vars:     Size  Location     Type
   944 ;;  adjustment      2   24[COMRAM] int 
   945 ;;  solarnoon       2   22[COMRAM] int 
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      void 
   948 ;; Registers used:
   949 ;;		wreg, status,2, status,0, cstack
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   955 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   956 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   958 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   959 ;;Total ram usage:        8 bytes
   960 ;; Hardware stack levels used: 1
   961 ;; Hardware stack levels required when called: 3
   962 ;; This function calls:
   963 ;;		___awdiv
   964 ;; This function is called by:
   965 ;;		_main
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           	psect	text1
   970   001B6C                     __ptext1:
   971                           	callstack 0
   972   001B6C                     _timeadjuster:
   973                           	callstack 27
   974   001B6C                     
   975                           ;Functions.c: 113:     int adjustment = 0;
   976   001B6C  0E00               	movlw	0
   977   001B6E  6E1A               	movwf	(timeadjuster@adjustment+1)^0,c
   978   001B70  0E00               	movlw	0
   979   001B72  6E19               	movwf	timeadjuster@adjustment^0,c
   980   001B74                     
   981                           ;Functions.c: 114:     solarnoon = (sunrise_time+sunset_time)/2;
   982   001B74  5015               	movf	timeadjuster@sunset_time^0,w,c
   983   001B76  2413               	addwf	timeadjuster@sunrise_time^0,w,c
   984   001B78  6E06               	movwf	___awdiv@dividend^0,c
   985   001B7A  5016               	movf	(timeadjuster@sunset_time+1)^0,w,c
   986   001B7C  2014               	addwfc	(timeadjuster@sunrise_time+1)^0,w,c
   987   001B7E  6E07               	movwf	(___awdiv@dividend+1)^0,c
   988   001B80  0E00               	movlw	0
   989   001B82  6E09               	movwf	(___awdiv@divisor+1)^0,c
   990   001B84  0E02               	movlw	2
   991   001B86  6E08               	movwf	___awdiv@divisor^0,c
   992   001B88  EC00  F00C         	call	___awdiv	;wreg free
   993   001B8C  C006  F017         	movff	?___awdiv,timeadjuster@solarnoon
   994   001B90  C007  F018         	movff	?___awdiv+1,timeadjuster@solarnoon+1
   995   001B94                     
   996                           ;Functions.c: 115:     adjustment = (12*3600)-solarnoon;
   997   001B94  5017               	movf	timeadjuster@solarnoon^0,w,c
   998   001B96  08C0               	sublw	192
   999   001B98  6E19               	movwf	timeadjuster@adjustment^0,c
  1000   001B9A  5018               	movf	(timeadjuster@solarnoon+1)^0,w,c
  1001   001B9C  A0D8               	btfss	status,0,c
  1002   001B9E  2AE8               	incf	wreg,f,c
  1003   001BA0  08A8               	sublw	168
  1004   001BA2  6E1A               	movwf	(timeadjuster@adjustment+1)^0,c
  1005   001BA4                     
  1006                           ;Functions.c: 116:     if (hour==11 && seconds==1800)
  1007   001BA4  0E0B               	movlw	11
  1008   001BA6  0100               	movlb	0	; () banked
  1009   001BA8  199F               	xorwf	_hour& (0+255),w,b
  1010   001BAA  11A0               	iorwf	(_hour+1)& (0+255),w,b
  1011   001BAC  A4D8               	btfss	status,2,c
  1012   001BAE  EFDB  F00D         	goto	u2661
  1013   001BB2  EFDD  F00D         	goto	u2660
  1014   001BB6                     u2661:
  1015   001BB6  EFED  F00D         	goto	l389
  1016   001BBA                     u2660:
  1017   001BBA                     
  1018                           ; BSR set to: 0
  1019   001BBA  0E08               	movlw	8
  1020   001BBC  19A1               	xorwf	_seconds& (0+255),w,b
  1021   001BBE  E107               	bnz	u2671
  1022   001BC0  0E07               	movlw	7
  1023   001BC2  19A2               	xorwf	(_seconds+1)& (0+255),w,b
  1024   001BC4  A4D8               	btfss	status,2,c
  1025   001BC6  EFE7  F00D         	goto	u2671
  1026   001BCA  EFE9  F00D         	goto	u2670
  1027   001BCE                     u2671:
  1028   001BCE  EFED  F00D         	goto	l389
  1029   001BD2                     u2670:
  1030   001BD2                     
  1031                           ; BSR set to: 0
  1032                           ;Functions.c: 117:     {;Functions.c: 118:         seconds+=adjustment;
  1033   001BD2  5019               	movf	timeadjuster@adjustment^0,w,c
  1034   001BD4  27A1               	addwf	_seconds& (0+255),f,b
  1035   001BD6  501A               	movf	(timeadjuster@adjustment+1)^0,w,c
  1036   001BD8  23A2               	addwfc	(_seconds+1)& (0+255),f,b
  1037   001BDA                     l389:
  1038                           
  1039                           ; BSR set to: 0
  1040   001BDA  0012               	return		;funcret
  1041   001BDC                     __end_of_timeadjuster:
  1042                           	callstack 0
  1043                           
  1044 ;; *************** function ___awdiv *****************
  1045 ;; Defined at:
  1046 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;  dividend        2    5[COMRAM] int 
  1049 ;;  divisor         2    7[COMRAM] int 
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;  quotient        2   11[COMRAM] int 
  1052 ;;  sign            1   10[COMRAM] unsigned char 
  1053 ;;  counter         1    9[COMRAM] unsigned char 
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  2    5[COMRAM] int 
  1056 ;; Registers used:
  1057 ;;		wreg, status,2, status,0
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1063 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1064 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1066 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1067 ;;Total ram usage:        8 bytes
  1068 ;; Hardware stack levels used: 1
  1069 ;; Hardware stack levels required when called: 2
  1070 ;; This function calls:
  1071 ;;		Nothing
  1072 ;; This function is called by:
  1073 ;;		_timeadjuster
  1074 ;;		_ADC_lightMeter
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           	psect	text2
  1079   001800                     __ptext2:
  1080                           	callstack 0
  1081   001800                     ___awdiv:
  1082                           	callstack 27
  1083   001800  0E00               	movlw	0
  1084   001802  6E0B               	movwf	___awdiv@sign^0,c
  1085   001804  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
  1086   001806  EF09  F00C         	goto	u2410
  1087   00180A  EF07  F00C         	goto	u2411
  1088   00180E                     u2411:
  1089   00180E  EF0F  F00C         	goto	l3069
  1090   001812                     u2410:
  1091   001812  6C08               	negf	___awdiv@divisor^0,c
  1092   001814  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  1093   001816  B0D8               	btfsc	status,0,c
  1094   001818  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  1095   00181A  0E01               	movlw	1
  1096   00181C  6E0B               	movwf	___awdiv@sign^0,c
  1097   00181E                     l3069:
  1098   00181E  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
  1099   001820  EF16  F00C         	goto	u2420
  1100   001824  EF14  F00C         	goto	u2421
  1101   001828                     u2421:
  1102   001828  EF1C  F00C         	goto	l3075
  1103   00182C                     u2420:
  1104   00182C  6C06               	negf	___awdiv@dividend^0,c
  1105   00182E  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  1106   001830  B0D8               	btfsc	status,0,c
  1107   001832  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  1108   001834  0E01               	movlw	1
  1109   001836  1A0B               	xorwf	___awdiv@sign^0,f,c
  1110   001838                     l3075:
  1111   001838  0E00               	movlw	0
  1112   00183A  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  1113   00183C  0E00               	movlw	0
  1114   00183E  6E0C               	movwf	___awdiv@quotient^0,c
  1115   001840  5008               	movf	___awdiv@divisor^0,w,c
  1116   001842  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  1117   001844  B4D8               	btfsc	status,2,c
  1118   001846  EF27  F00C         	goto	u2431
  1119   00184A  EF29  F00C         	goto	u2430
  1120   00184E                     u2431:
  1121   00184E  EF51  F00C         	goto	l3097
  1122   001852                     u2430:
  1123   001852  0E01               	movlw	1
  1124   001854  6E0A               	movwf	___awdiv@counter^0,c
  1125   001856  EF31  F00C         	goto	l3083
  1126   00185A                     l3081:
  1127   00185A  90D8               	bcf	status,0,c
  1128   00185C  3608               	rlcf	___awdiv@divisor^0,f,c
  1129   00185E  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  1130   001860  2A0A               	incf	___awdiv@counter^0,f,c
  1131   001862                     l3083:
  1132   001862  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  1133   001864  EF36  F00C         	goto	u2441
  1134   001868  EF38  F00C         	goto	u2440
  1135   00186C                     u2441:
  1136   00186C  EF2D  F00C         	goto	l3081
  1137   001870                     u2440:
  1138   001870                     l3085:
  1139   001870  90D8               	bcf	status,0,c
  1140   001872  360C               	rlcf	___awdiv@quotient^0,f,c
  1141   001874  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  1142   001876  5008               	movf	___awdiv@divisor^0,w,c
  1143   001878  5C06               	subwf	___awdiv@dividend^0,w,c
  1144   00187A  5009               	movf	(___awdiv@divisor+1)^0,w,c
  1145   00187C  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  1146   00187E  A0D8               	btfss	status,0,c
  1147   001880  EF44  F00C         	goto	u2451
  1148   001884  EF46  F00C         	goto	u2450
  1149   001888                     u2451:
  1150   001888  EF4B  F00C         	goto	l3093
  1151   00188C                     u2450:
  1152   00188C  5008               	movf	___awdiv@divisor^0,w,c
  1153   00188E  5E06               	subwf	___awdiv@dividend^0,f,c
  1154   001890  5009               	movf	(___awdiv@divisor+1)^0,w,c
  1155   001892  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  1156   001894  800C               	bsf	___awdiv@quotient^0,0,c
  1157   001896                     l3093:
  1158   001896  90D8               	bcf	status,0,c
  1159   001898  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  1160   00189A  3208               	rrcf	___awdiv@divisor^0,f,c
  1161   00189C  2E0A               	decfsz	___awdiv@counter^0,f,c
  1162   00189E  EF38  F00C         	goto	l3085
  1163   0018A2                     l3097:
  1164   0018A2  500B               	movf	___awdiv@sign^0,w,c
  1165   0018A4  B4D8               	btfsc	status,2,c
  1166   0018A6  EF57  F00C         	goto	u2461
  1167   0018AA  EF59  F00C         	goto	u2460
  1168   0018AE                     u2461:
  1169   0018AE  EF5D  F00C         	goto	l3101
  1170   0018B2                     u2460:
  1171   0018B2  6C0C               	negf	___awdiv@quotient^0,c
  1172   0018B4  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  1173   0018B6  B0D8               	btfsc	status,0,c
  1174   0018B8  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  1175   0018BA                     l3101:
  1176   0018BA  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  1177   0018BE  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  1178   0018C2  0012               	return		;funcret
  1179   0018C4                     __end_of___awdiv:
  1180                           	callstack 0
  1181                           
  1182 ;; *************** function _time2String *****************
  1183 ;; Defined at:
  1184 ;;		line 132 in file "LCD.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;  buf             2   45[BANK0 ] PTR unsigned char 
  1187 ;;		 -> main@strdate(100), 
  1188 ;;  h               2   47[BANK0 ] unsigned int 
  1189 ;;  s               2   49[BANK0 ] unsigned int 
  1190 ;;  d               2   51[BANK0 ] unsigned int 
  1191 ;;  m               2   53[BANK0 ] unsigned int 
  1192 ;;  y               2   55[BANK0 ] unsigned int 
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;		None
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      void 
  1197 ;; Registers used:
  1198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1204 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1206 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1207 ;;      Totals:         2      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1208 ;;Total ram usage:       14 bytes
  1209 ;; Hardware stack levels used: 1
  1210 ;; Hardware stack levels required when called: 10
  1211 ;; This function calls:
  1212 ;;		_LCD_sendstring
  1213 ;;		___lwdiv
  1214 ;;		_sprintf
  1215 ;; This function is called by:
  1216 ;;		_main
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           	psect	text3
  1221   0019FE                     __ptext3:
  1222                           	callstack 0
  1223   0019FE                     _time2String:
  1224                           	callstack 20
  1225   0019FE                     
  1226                           ;LCD.c: 138:     sprintf(buf,"%d:%d:%d %d-%d-%d",h, s/60, s,d,m,y);
  1227   0019FE  C08D  F070         	movff	time2String@buf,sprintf@s
  1228   001A02  C08E  F071         	movff	time2String@buf+1,sprintf@s+1
  1229   001A06  0E7D               	movlw	low STR_1
  1230   001A08  0100               	movlb	0	; () banked
  1231   001A0A  6F72               	movwf	sprintf@fmt& (0+255),b
  1232   001A0C  0E0E               	movlw	high STR_1
  1233   001A0E  6F73               	movwf	(sprintf@fmt+1)& (0+255),b
  1234   001A10  C08F  F074         	movff	time2String@h,?_sprintf+4
  1235   001A14  C090  F075         	movff	time2String@h+1,?_sprintf+5
  1236   001A18  C091  F006         	movff	time2String@s,___lwdiv@dividend
  1237   001A1C  C092  F007         	movff	time2String@s+1,___lwdiv@dividend+1
  1238   001A20  0E00               	movlw	0
  1239   001A22  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  1240   001A24  0E3C               	movlw	60
  1241   001A26  6E08               	movwf	___lwdiv@divisor^0,c
  1242   001A28  EC7C  F00D         	call	___lwdiv	;wreg free
  1243   001A2C  C006  F076         	movff	?___lwdiv,?_sprintf+6
  1244   001A30  C007  F077         	movff	?___lwdiv+1,?_sprintf+7
  1245   001A34  C091  F078         	movff	time2String@s,?_sprintf+8
  1246   001A38  C092  F079         	movff	time2String@s+1,?_sprintf+9
  1247   001A3C  C093  F07A         	movff	time2String@d,?_sprintf+10
  1248   001A40  C094  F07B         	movff	time2String@d+1,?_sprintf+11
  1249   001A44  C095  F07C         	movff	time2String@m,?_sprintf+12
  1250   001A48  C096  F07D         	movff	time2String@m+1,?_sprintf+13
  1251   001A4C  C097  F07E         	movff	time2String@y,?_sprintf+14
  1252   001A50  C098  F07F         	movff	time2String@y+1,?_sprintf+15
  1253   001A54  ECBF  F00E         	call	_sprintf	;wreg free
  1254   001A58                     
  1255                           ;LCD.c: 139:     LCD_sendstring(buf);
  1256   001A58  C08D  F009         	movff	time2String@buf,LCD_sendstring@string
  1257   001A5C  C08E  F00A         	movff	time2String@buf+1,LCD_sendstring@string+1
  1258   001A60  ECD7  F00F         	call	_LCD_sendstring	;wreg free
  1259   001A64                     
  1260                           ;LCD.c: 140:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1261   001A64  0E52               	movlw	82
  1262   001A66  6E4F               	movwf	(??_time2String+1)^0,c
  1263   001A68  0E2B               	movlw	43
  1264   001A6A  6E4E               	movwf	??_time2String^0,c
  1265   001A6C  0E00               	movlw	0
  1266   001A6E                     u2767:
  1267   001A6E  2EE8               	decfsz	wreg,f,c
  1268   001A70  D7FE               	bra	u2767
  1269   001A72  2E4E               	decfsz	??_time2String^0,f,c
  1270   001A74  D7FC               	bra	u2767
  1271   001A76  2E4F               	decfsz	(??_time2String+1)^0,f,c
  1272   001A78  D7FA               	bra	u2767
  1273   001A7A  D000               	nop2	
  1274   001A7C  0012               	return		;funcret
  1275   001A7E                     __end_of_time2String:
  1276                           	callstack 0
  1277                           
  1278 ;; *************** function _sprintf *****************
  1279 ;; Defined at:
  1280 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;  s               2   16[BANK0 ] PTR unsigned char 
  1283 ;;		 -> main@strdate(100), 
  1284 ;;  fmt             2   18[BANK0 ] PTR const unsigned char 
  1285 ;;		 -> STR_1(18), 
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;  f              11   34[BANK0 ] struct _IO_FILE
  1288 ;;  ap              2   32[BANK0 ] PTR void [1]
  1289 ;;		 -> ?_sprintf(2), 
  1290 ;;  ret             2    0        int 
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  2   16[BANK0 ] int 
  1293 ;; Registers used:
  1294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1300 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1301 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1303 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1304 ;;Total ram usage:       29 bytes
  1305 ;; Hardware stack levels used: 1
  1306 ;; Hardware stack levels required when called: 9
  1307 ;; This function calls:
  1308 ;;		_vfprintf
  1309 ;; This function is called by:
  1310 ;;		_time2String
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text4
  1315   001D7E                     __ptext4:
  1316                           	callstack 0
  1317   001D7E                     _sprintf:
  1318                           	callstack 20
  1319   001D7E  0E74               	movlw	low (?_sprintf+4)
  1320   001D80  0100               	movlb	0	; () banked
  1321   001D82  6F80               	movwf	sprintf@ap& (0+255),b
  1322   001D84  0E00               	movlw	high (?_sprintf+4)
  1323   001D86  6F81               	movwf	(sprintf@ap+1)& (0+255),b
  1324   001D88  C070  F082         	movff	sprintf@s,sprintf@f
  1325   001D8C  C071  F083         	movff	sprintf@s+1,sprintf@f+1
  1326   001D90                     
  1327                           ; BSR set to: 0
  1328   001D90  0E00               	movlw	0
  1329   001D92  6F86               	movwf	(sprintf@f+4)& (0+255),b
  1330   001D94  0E00               	movlw	0
  1331   001D96  6F85               	movwf	(sprintf@f+3)& (0+255),b
  1332   001D98                     
  1333                           ; BSR set to: 0
  1334   001D98  0E00               	movlw	0
  1335   001D9A  6F8C               	movwf	(sprintf@f+10)& (0+255),b
  1336   001D9C  0E00               	movlw	0
  1337   001D9E  6F8B               	movwf	(sprintf@f+9)& (0+255),b
  1338   001DA0                     
  1339                           ; BSR set to: 0
  1340   001DA0  0E82               	movlw	low sprintf@f
  1341   001DA2  6F6A               	movwf	vfprintf@fp& (0+255),b
  1342   001DA4  0E00               	movlw	high sprintf@f
  1343   001DA6  6F6B               	movwf	(vfprintf@fp+1)& (0+255),b
  1344   001DA8  C072  F06C         	movff	sprintf@fmt,vfprintf@fmt
  1345   001DAC  C073  F06D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1346   001DB0  0E80               	movlw	low sprintf@ap
  1347   001DB2  6F6E               	movwf	vfprintf@ap& (0+255),b
  1348   001DB4  0E00               	movlw	high sprintf@ap
  1349   001DB6  6F6F               	movwf	(vfprintf@ap+1)& (0+255),b
  1350   001DB8  EC10  F00F         	call	_vfprintf	;wreg free
  1351   001DBC  0100               	movlb	0	; () banked
  1352   001DBE  5185               	movf	(sprintf@f+3)& (0+255),w,b
  1353   001DC0  2570               	addwf	sprintf@s& (0+255),w,b
  1354   001DC2  6ED9               	movwf	fsr2l,c
  1355   001DC4  5186               	movf	(sprintf@f+4)& (0+255),w,b
  1356   001DC6  2171               	addwfc	(sprintf@s+1)& (0+255),w,b
  1357   001DC8  6EDA               	movwf	fsr2h,c
  1358   001DCA  0E00               	movlw	0
  1359   001DCC  6EDF               	movwf	indf2,c
  1360   001DCE                     
  1361                           ; BSR set to: 0
  1362   001DCE  0012               	return		;funcret
  1363   001DD0                     __end_of_sprintf:
  1364                           	callstack 0
  1365                           
  1366 ;; *************** function _vfprintf *****************
  1367 ;; Defined at:
  1368 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
  1371 ;;		 -> sprintf@f(11), 
  1372 ;;  fmt             2   12[BANK0 ] PTR const unsigned char 
  1373 ;;		 -> STR_1(18), 
  1374 ;;  ap              2   14[BANK0 ] PTR PTR void 
  1375 ;;		 -> sprintf@ap(2), 
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;  cfmt            2   75[COMRAM] PTR unsigned char 
  1378 ;;		 -> STR_1(18), 
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  2   10[BANK0 ] int 
  1381 ;; Registers used:
  1382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1388 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1389 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1391 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1392 ;;Total ram usage:        8 bytes
  1393 ;; Hardware stack levels used: 1
  1394 ;; Hardware stack levels required when called: 8
  1395 ;; This function calls:
  1396 ;;		_vfpfcnvrt
  1397 ;; This function is called by:
  1398 ;;		_sprintf
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           	psect	text5
  1403   001E20                     __ptext5:
  1404                           	callstack 0
  1405   001E20                     _vfprintf:
  1406                           	callstack 20
  1407   001E20                     
  1408                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1409   001E20  C06C  F04C         	movff	vfprintf@fmt,vfprintf@cfmt
  1410   001E24  C06D  F04D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1411                           
  1412                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1413   001E28  EF24  F00F         	goto	l3005
  1414   001E2C                     l3003:
  1415                           
  1416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1417   001E2C  C06A  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
  1418   001E30  C06B  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1419   001E34  0E4C               	movlw	low vfprintf@cfmt
  1420   001E36  6E46               	movwf	vfpfcnvrt@fmt^0,c
  1421   001E38  0E00               	movlw	high vfprintf@cfmt
  1422   001E3A  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1423   001E3C  C06E  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
  1424   001E40  C06F  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1425   001E44  ECFC  F009         	call	_vfpfcnvrt	;wreg free
  1426   001E48                     l3005:
  1427                           
  1428                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1429   001E48  C04C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1430   001E4C  C04D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1431   001E50                     	if	0	;tblptru may be non-zero
  1432   001E50                     	endif
  1433   001E50                     	if	0	;tblptru may be non-zero
  1434   001E50                     	endif
  1435   001E50  0008               	tblrd		*
  1436   001E52  50F5               	movf	tablat,w,c
  1437   001E54  0900               	iorlw	0
  1438   001E56  A4D8               	btfss	status,2,c
  1439   001E58  EF30  F00F         	goto	u2281
  1440   001E5C  EF32  F00F         	goto	u2280
  1441   001E60                     u2281:
  1442   001E60  EF16  F00F         	goto	l3003
  1443   001E64                     u2280:
  1444   001E64                     
  1445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1446   001E64  0E00               	movlw	0
  1447   001E66  0100               	movlb	0	; () banked
  1448   001E68  6F6B               	movwf	(?_vfprintf+1)& (0+255),b
  1449   001E6A  0E00               	movlw	0
  1450   001E6C  6F6A               	movwf	?_vfprintf& (0+255),b
  1451   001E6E                     
  1452                           ; BSR set to: 0
  1453   001E6E  0012               	return		;funcret
  1454   001E70                     __end_of_vfprintf:
  1455                           	callstack 0
  1456                           
  1457 ;; *************** function _vfpfcnvrt *****************
  1458 ;; Defined at:
  1459 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  1462 ;;		 -> sprintf@f(11), 
  1463 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
  1464 ;;		 -> vfprintf@cfmt(2), 
  1465 ;;  ap              2   71[COMRAM] PTR PTR void 
  1466 ;;		 -> sprintf@ap(2), 
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;  convarg         8    0[BANK0 ] struct .
  1469 ;;  cp              2    8[BANK0 ] PTR unsigned char 
  1470 ;;		 -> STR_1(18), 
  1471 ;;  i               2    0        int 
  1472 ;;  done            2    0        int 
  1473 ;;  c               1    0        unsigned char 
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1483 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1484 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1485 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1486 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1487 ;;Total ram usage:       18 bytes
  1488 ;; Hardware stack levels used: 1
  1489 ;; Hardware stack levels required when called: 7
  1490 ;; This function calls:
  1491 ;;		_dtoa
  1492 ;;		_fputc
  1493 ;; This function is called by:
  1494 ;;		_vfprintf
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           	psect	text6
  1499   0013F8                     __ptext6:
  1500                           	callstack 0
  1501   0013F8                     _vfpfcnvrt:
  1502                           	callstack 20
  1503   0013F8                     
  1504                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1505   0013F8  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1506   0013FC  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1507   001400  CFDE FFF6          	movff	postinc2,tblptrl
  1508   001404  CFDD FFF7          	movff	postdec2,tblptrh
  1509   001408                     	if	0	;tblptru may be non-zero
  1510   001408                     	endif
  1511   001408                     	if	0	;tblptru may be non-zero
  1512   001408                     	endif
  1513   001408  0008               	tblrd		*
  1514   00140A  50F5               	movf	tablat,w,c
  1515   00140C  0A25               	xorlw	37
  1516   00140E  A4D8               	btfss	status,2,c
  1517   001410  EF0C  F00A         	goto	u2241
  1518   001414  EF0E  F00A         	goto	u2240
  1519   001418                     u2241:
  1520   001418  EF8E  F00A         	goto	l2985
  1521   00141C                     u2240:
  1522   00141C                     
  1523                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1524   00141C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1525   001420  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1526   001424  2ADE               	incf	postinc2,f,c
  1527   001426  0E00               	movlw	0
  1528   001428  22DD               	addwfc	postdec2,f,c
  1529   00142A                     
  1530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1531   00142A  0E00               	movlw	0
  1532   00142C  0100               	movlb	0	; () banked
  1533   00142E  6F9C               	movwf	(_width+1)& (0+255),b
  1534   001430  0E00               	movlw	0
  1535   001432  6F9B               	movwf	_width& (0+255),b
  1536   001434  C09B  F052         	movff	_width,_flags
  1537   001438                     
  1538                           ; BSR set to: 0
  1539                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1540   001438  6850               	setf	_prec^0,c
  1541   00143A  6851               	setf	(_prec+1)^0,c
  1542   00143C                     
  1543                           ; BSR set to: 0
  1544                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1545   00143C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1546   001440  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1547   001444  CFDE F068          	movff	postinc2,vfpfcnvrt@cp
  1548   001448  CFDD F069          	movff	postdec2,vfpfcnvrt@cp+1
  1549   00144C                     
  1550                           ; BSR set to: 0
  1551                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1552   00144C  C068  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1553   001450  C069  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1554   001454                     	if	0	;tblptru may be non-zero
  1555   001454                     	endif
  1556   001454                     	if	0	;tblptru may be non-zero
  1557   001454                     	endif
  1558   001454  0008               	tblrd		*
  1559   001456  50F5               	movf	tablat,w,c
  1560   001458  0A64               	xorlw	100
  1561   00145A  B4D8               	btfsc	status,2,c
  1562   00145C  EF32  F00A         	goto	u2251
  1563   001460  EF34  F00A         	goto	u2250
  1564   001464                     u2251:
  1565   001464  EF42  F00A         	goto	l2975
  1566   001468                     u2250:
  1567   001468                     
  1568                           ; BSR set to: 0
  1569   001468  C068  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1570   00146C  C069  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1571   001470                     	if	0	;tblptru may be non-zero
  1572   001470                     	endif
  1573   001470                     	if	0	;tblptru may be non-zero
  1574   001470                     	endif
  1575   001470  0008               	tblrd		*
  1576   001472  50F5               	movf	tablat,w,c
  1577   001474  0A69               	xorlw	105
  1578   001476  A4D8               	btfss	status,2,c
  1579   001478  EF40  F00A         	goto	u2261
  1580   00147C  EF42  F00A         	goto	u2260
  1581   001480                     u2261:
  1582   001480  EF85  F00A         	goto	l2981
  1583   001484                     u2260:
  1584   001484                     l2975:
  1585                           
  1586                           ; BSR set to: 0
  1587                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1588   001484  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1589   001488  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1590   00148C  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  1591   001490  0E02               	movlw	2
  1592   001492  26DE               	addwf	postinc2,f,c
  1593   001494  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  1594   001498  0E00               	movlw	0
  1595   00149A  22DD               	addwfc	postdec2,f,c
  1596   00149C  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1597   0014A0  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1598   0014A4  CFDE F060          	movff	postinc2,vfpfcnvrt@convarg
  1599   0014A8  CFDD F061          	movff	postdec2,vfpfcnvrt@convarg+1
  1600   0014AC  0E00               	movlw	0
  1601   0014AE  BF61               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  1602   0014B0  0EFF               	movlw	-1
  1603   0014B2  6F62               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  1604   0014B4  6F63               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  1605   0014B6  6F64               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  1606   0014B8  6F65               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  1607   0014BA  6F66               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  1608   0014BC  6F67               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  1609                           
  1610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1611   0014BE  0E01               	movlw	1
  1612   0014C0  2568               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1613   0014C2  6E4A               	movwf	??_vfpfcnvrt^0,c
  1614   0014C4  0E00               	movlw	0
  1615   0014C6  2169               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1616   0014C8  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
  1617   0014CA  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1618   0014CE  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1619   0014D2  C04A  FFDE         	movff	??_vfpfcnvrt,postinc2
  1620   0014D6  C04B  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1621   0014DA                     
  1622                           ; BSR set to: 0
  1623                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1624   0014DA  C044  F021         	movff	vfpfcnvrt@fp,dtoa@fp
  1625   0014DE  C045  F022         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1626   0014E2  C060  F023         	movff	vfpfcnvrt@convarg,dtoa@d
  1627   0014E6  C061  F024         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1628   0014EA  C062  F025         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1629   0014EE  C063  F026         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1630   0014F2  C064  F027         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1631   0014F6  C065  F028         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1632   0014FA  C066  F029         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1633   0014FE  C067  F02A         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1634   001502  EC48  F007         	call	_dtoa	;wreg free
  1635   001506  EFA2  F00A         	goto	l1182
  1636   00150A                     l2981:
  1637                           
  1638                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1639   00150A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1640   00150E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1641   001512  2ADE               	incf	postinc2,f,c
  1642   001514  0E00               	movlw	0
  1643   001516  22DD               	addwfc	postdec2,f,c
  1644   001518  EFA2  F00A         	goto	l1182
  1645   00151C                     l2985:
  1646                           
  1647                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1648   00151C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1649   001520  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1650   001524  CFDE FFF6          	movff	postinc2,tblptrl
  1651   001528  CFDD FFF7          	movff	postdec2,tblptrh
  1652   00152C                     	if	0	;tblptru may be non-zero
  1653   00152C                     	endif
  1654   00152C                     	if	0	;tblptru may be non-zero
  1655   00152C                     	endif
  1656   00152C  0008               	tblrd		*
  1657   00152E  50F5               	movf	tablat,w,c
  1658   001530  6E06               	movwf	fputc@c^0,c
  1659   001532  6A07               	clrf	(fputc@c+1)^0,c
  1660   001534  C044  F008         	movff	vfpfcnvrt@fp,fputc@fp
  1661   001538  C045  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1662   00153C  EC9B  F00B         	call	_fputc	;wreg free
  1663   001540  EF85  F00A         	goto	l2981
  1664   001544                     l1182:
  1665   001544  0012               	return		;funcret
  1666   001546                     __end_of_vfpfcnvrt:
  1667                           	callstack 0
  1668                           
  1669 ;; *************** function _dtoa *****************
  1670 ;; Defined at:
  1671 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  1674 ;;		 -> sprintf@f(11), 
  1675 ;;  d               8   34[COMRAM] long long 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;  n               8   56[COMRAM] long long 
  1678 ;;  i               2   65[COMRAM] int 
  1679 ;;  w               2   54[COMRAM] int 
  1680 ;;  p               2   52[COMRAM] int 
  1681 ;;  s               1   64[COMRAM] unsigned char 
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      void 
  1684 ;; Registers used:
  1685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1691 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1692 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1693 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1694 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1695 ;;Total ram usage:       35 bytes
  1696 ;; Hardware stack levels used: 1
  1697 ;; Hardware stack levels required when called: 6
  1698 ;; This function calls:
  1699 ;;		___aodiv
  1700 ;;		___aomod
  1701 ;;		_abs
  1702 ;;		_pad
  1703 ;; This function is called by:
  1704 ;;		_vfpfcnvrt
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           	psect	text7
  1709   000E90                     __ptext7:
  1710                           	callstack 0
  1711   000E90                     _dtoa:
  1712                           	callstack 20
  1713   000E90                     
  1714                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1715   000E90  C023  F039         	movff	dtoa@d,dtoa@n
  1716   000E94  C024  F03A         	movff	dtoa@d+1,dtoa@n+1
  1717   000E98  C025  F03B         	movff	dtoa@d+2,dtoa@n+2
  1718   000E9C  C026  F03C         	movff	dtoa@d+3,dtoa@n+3
  1719   000EA0  C027  F03D         	movff	dtoa@d+4,dtoa@n+4
  1720   000EA4  C028  F03E         	movff	dtoa@d+5,dtoa@n+5
  1721   000EA8  C029  F03F         	movff	dtoa@d+6,dtoa@n+6
  1722   000EAC  C02A  F040         	movff	dtoa@d+7,dtoa@n+7
  1723   000EB0                     
  1724                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1725   000EB0  BE40               	btfsc	(dtoa@n+7)^0,7,c
  1726   000EB2  EF5D  F007         	goto	u2101
  1727   000EB6  EF60  F007         	goto	u2100
  1728   000EBA                     u2101:
  1729   000EBA  0E01               	movlw	1
  1730   000EBC  EF61  F007         	goto	u2110
  1731   000EC0                     u2100:
  1732   000EC0  0E00               	movlw	0
  1733   000EC2                     u2110:
  1734   000EC2  6E41               	movwf	dtoa@s^0,c
  1735   000EC4                     
  1736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1737   000EC4  5041               	movf	dtoa@s^0,w,c
  1738   000EC6  B4D8               	btfsc	status,2,c
  1739   000EC8  EF68  F007         	goto	u2121
  1740   000ECC  EF6A  F007         	goto	u2120
  1741   000ED0                     u2121:
  1742   000ED0  EF7A  F007         	goto	l2897
  1743   000ED4                     u2120:
  1744   000ED4                     
  1745                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1746   000ED4  1E40               	comf	(dtoa@n+7)^0,f,c
  1747   000ED6  1E3F               	comf	(dtoa@n+6)^0,f,c
  1748   000ED8  1E3E               	comf	(dtoa@n+5)^0,f,c
  1749   000EDA  1E3D               	comf	(dtoa@n+4)^0,f,c
  1750   000EDC  1E3C               	comf	(dtoa@n+3)^0,f,c
  1751   000EDE  1E3B               	comf	(dtoa@n+2)^0,f,c
  1752   000EE0  1E3A               	comf	(dtoa@n+1)^0,f,c
  1753   000EE2  6C39               	negf	dtoa@n^0,c
  1754   000EE4  0E00               	movlw	0
  1755   000EE6  223A               	addwfc	(dtoa@n+1)^0,f,c
  1756   000EE8  223B               	addwfc	(dtoa@n+2)^0,f,c
  1757   000EEA  223C               	addwfc	(dtoa@n+3)^0,f,c
  1758   000EEC  223D               	addwfc	(dtoa@n+4)^0,f,c
  1759   000EEE  223E               	addwfc	(dtoa@n+5)^0,f,c
  1760   000EF0  223F               	addwfc	(dtoa@n+6)^0,f,c
  1761   000EF2  2240               	addwfc	(dtoa@n+7)^0,f,c
  1762   000EF4                     l2897:
  1763                           
  1764                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1765   000EF4  BE51               	btfsc	(_prec+1)^0,7,c
  1766   000EF6  EF87  F007         	goto	u2130
  1767   000EFA  5051               	movf	(_prec+1)^0,w,c
  1768   000EFC  E106               	bnz	u2131
  1769   000EFE  0450               	decf	_prec^0,w,c
  1770   000F00  B0D8               	btfsc	status,0,c
  1771   000F02  EF85  F007         	goto	u2131
  1772   000F06  EF87  F007         	goto	u2130
  1773   000F0A                     u2131:
  1774   000F0A  EF8D  F007         	goto	l1161
  1775   000F0E                     u2130:
  1776   000F0E  0E00               	movlw	0
  1777   000F10  6E36               	movwf	(dtoa@p+1)^0,c
  1778   000F12  0E01               	movlw	1
  1779   000F14  6E35               	movwf	dtoa@p^0,c
  1780   000F16  EF91  F007         	goto	l1163
  1781   000F1A                     l1161:
  1782   000F1A  C050  F035         	movff	_prec,dtoa@p
  1783   000F1E  C051  F036         	movff	_prec+1,dtoa@p+1
  1784   000F22                     l1163:
  1785                           
  1786                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1787   000F22  C09B  F037         	movff	_width,dtoa@w
  1788   000F26  C09C  F038         	movff	_width+1,dtoa@w+1
  1789   000F2A                     
  1790                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1791   000F2A  5041               	movf	dtoa@s^0,w,c
  1792   000F2C  B4D8               	btfsc	status,2,c
  1793   000F2E  EF9B  F007         	goto	u2141
  1794   000F32  EF9D  F007         	goto	u2140
  1795   000F36                     u2141:
  1796   000F36  EFB4  F007         	goto	l1164
  1797   000F3A                     u2140:
  1798   000F3A                     
  1799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1800   000F3A  0637               	decf	dtoa@w^0,f,c
  1801   000F3C  A0D8               	btfss	status,0,c
  1802   000F3E  0638               	decf	(dtoa@w+1)^0,f,c
  1803   000F40                     
  1804                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1805   000F40  5041               	movf	dtoa@s^0,w,c
  1806   000F42  A4D8               	btfss	status,2,c
  1807   000F44  EFA6  F007         	goto	u2151
  1808   000F48  EFA8  F007         	goto	u2150
  1809   000F4C                     u2151:
  1810   000F4C  EFAE  F007         	goto	l2909
  1811   000F50                     u2150:
  1812   000F50  0E00               	movlw	0
  1813   000F52  6E34               	movwf	(_dtoa$2130+1)^0,c
  1814   000F54  0E2B               	movlw	43
  1815   000F56  6E33               	movwf	_dtoa$2130^0,c
  1816   000F58  EFB2  F007         	goto	l2911
  1817   000F5C                     l2909:
  1818   000F5C  0E00               	movlw	0
  1819   000F5E  6E34               	movwf	(_dtoa$2130+1)^0,c
  1820   000F60  0E2D               	movlw	45
  1821   000F62  6E33               	movwf	_dtoa$2130^0,c
  1822   000F64                     l2911:
  1823   000F64  C033  F041         	movff	_dtoa$2130,dtoa@s
  1824   000F68                     l1164:
  1825                           
  1826                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1827   000F68  0E00               	movlw	0
  1828   000F6A  6E43               	movwf	(dtoa@i+1)^0,c
  1829   000F6C  0E1F               	movlw	31
  1830   000F6E  6E42               	movwf	dtoa@i^0,c
  1831   000F70                     
  1832                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1833   000F70  0E00               	movlw	0
  1834   000F72  0101               	movlb	1	; () banked
  1835   000F74  6F87               	movwf	(_dbuf+31)& (0+255),b
  1836                           
  1837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1838   000F76  EF39  F008         	goto	l2925
  1839   000F7A                     l2915:
  1840                           
  1841                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1842   000F7A  0642               	decf	dtoa@i^0,f,c
  1843   000F7C  A0D8               	btfss	status,0,c
  1844   000F7E  0643               	decf	(dtoa@i+1)^0,f,c
  1845   000F80                     
  1846                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1847   000F80  0E68               	movlw	low _dbuf
  1848   000F82  2442               	addwf	dtoa@i^0,w,c
  1849   000F84  6ED9               	movwf	fsr2l,c
  1850   000F86  0E01               	movlw	high _dbuf
  1851   000F88  2043               	addwfc	(dtoa@i+1)^0,w,c
  1852   000F8A  6EDA               	movwf	fsr2h,c
  1853   000F8C  C039  F006         	movff	dtoa@n,___aomod@dividend
  1854   000F90  C03A  F007         	movff	dtoa@n+1,___aomod@dividend+1
  1855   000F94  C03B  F008         	movff	dtoa@n+2,___aomod@dividend+2
  1856   000F98  C03C  F009         	movff	dtoa@n+3,___aomod@dividend+3
  1857   000F9C  C03D  F00A         	movff	dtoa@n+4,___aomod@dividend+4
  1858   000FA0  C03E  F00B         	movff	dtoa@n+5,___aomod@dividend+5
  1859   000FA4  C03F  F00C         	movff	dtoa@n+6,___aomod@dividend+6
  1860   000FA8  C040  F00D         	movff	dtoa@n+7,___aomod@dividend+7
  1861   000FAC  0E0A               	movlw	10
  1862   000FAE  6E0E               	movwf	___aomod@divisor^0,c
  1863   000FB0  0E00               	movlw	0
  1864   000FB2  6E0F               	movwf	(___aomod@divisor+1)^0,c
  1865   000FB4  0E00               	movlw	0
  1866   000FB6  6E10               	movwf	(___aomod@divisor+2)^0,c
  1867   000FB8  0E00               	movlw	0
  1868   000FBA  6E11               	movwf	(___aomod@divisor+3)^0,c
  1869   000FBC  0E00               	movlw	0
  1870   000FBE  6E12               	movwf	(___aomod@divisor+4)^0,c
  1871   000FC0  0E00               	movlw	0
  1872   000FC2  6E13               	movwf	(___aomod@divisor+5)^0,c
  1873   000FC4  0E00               	movlw	0
  1874   000FC6  6E14               	movwf	(___aomod@divisor+6)^0,c
  1875   000FC8  0E00               	movlw	0
  1876   000FCA  6E15               	movwf	(___aomod@divisor+7)^0,c
  1877   000FCC  EC4A  F009         	call	___aomod	;wreg free
  1878   000FD0  C006  F02B         	movff	?___aomod,??_dtoa
  1879   000FD4  C007  F02C         	movff	?___aomod+1,??_dtoa+1
  1880   000FD8  C008  F02D         	movff	?___aomod+2,??_dtoa+2
  1881   000FDC  C009  F02E         	movff	?___aomod+3,??_dtoa+3
  1882   000FE0  C00A  F02F         	movff	?___aomod+4,??_dtoa+4
  1883   000FE4  C00B  F030         	movff	?___aomod+5,??_dtoa+5
  1884   000FE8  C00C  F031         	movff	?___aomod+6,??_dtoa+6
  1885   000FEC  C00D  F032         	movff	?___aomod+7,??_dtoa+7
  1886   000FF0  C02B  F018         	movff	??_dtoa,abs@a
  1887   000FF4  C02C  F019         	movff	??_dtoa+1,abs@a+1
  1888   000FF8  EC7B  F00F         	call	_abs	;wreg free
  1889   000FFC  5018               	movf	?_abs^0,w,c
  1890   000FFE  0F30               	addlw	48
  1891   001000  6EDF               	movwf	indf2,c
  1892   001002                     
  1893                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1894   001002  0635               	decf	dtoa@p^0,f,c
  1895   001004  A0D8               	btfss	status,0,c
  1896   001006  0636               	decf	(dtoa@p+1)^0,f,c
  1897   001008                     
  1898                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1899   001008  0637               	decf	dtoa@w^0,f,c
  1900   00100A  A0D8               	btfss	status,0,c
  1901   00100C  0638               	decf	(dtoa@w+1)^0,f,c
  1902   00100E                     
  1903                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1904   00100E  C039  F006         	movff	dtoa@n,___aodiv@dividend
  1905   001012  C03A  F007         	movff	dtoa@n+1,___aodiv@dividend+1
  1906   001016  C03B  F008         	movff	dtoa@n+2,___aodiv@dividend+2
  1907   00101A  C03C  F009         	movff	dtoa@n+3,___aodiv@dividend+3
  1908   00101E  C03D  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
  1909   001022  C03E  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
  1910   001026  C03F  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
  1911   00102A  C040  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
  1912   00102E  0E0A               	movlw	10
  1913   001030  6E0E               	movwf	___aodiv@divisor^0,c
  1914   001032  0E00               	movlw	0
  1915   001034  6E0F               	movwf	(___aodiv@divisor+1)^0,c
  1916   001036  0E00               	movlw	0
  1917   001038  6E10               	movwf	(___aodiv@divisor+2)^0,c
  1918   00103A  0E00               	movlw	0
  1919   00103C  6E11               	movwf	(___aodiv@divisor+3)^0,c
  1920   00103E  0E00               	movlw	0
  1921   001040  6E12               	movwf	(___aodiv@divisor+4)^0,c
  1922   001042  0E00               	movlw	0
  1923   001044  6E13               	movwf	(___aodiv@divisor+5)^0,c
  1924   001046  0E00               	movlw	0
  1925   001048  6E14               	movwf	(___aodiv@divisor+6)^0,c
  1926   00104A  0E00               	movlw	0
  1927   00104C  6E15               	movwf	(___aodiv@divisor+7)^0,c
  1928   00104E  EC86  F008         	call	___aodiv	;wreg free
  1929   001052  C006  F039         	movff	?___aodiv,dtoa@n
  1930   001056  C007  F03A         	movff	?___aodiv+1,dtoa@n+1
  1931   00105A  C008  F03B         	movff	?___aodiv+2,dtoa@n+2
  1932   00105E  C009  F03C         	movff	?___aodiv+3,dtoa@n+3
  1933   001062  C00A  F03D         	movff	?___aodiv+4,dtoa@n+4
  1934   001066  C00B  F03E         	movff	?___aodiv+5,dtoa@n+5
  1935   00106A  C00C  F03F         	movff	?___aodiv+6,dtoa@n+6
  1936   00106E  C00D  F040         	movff	?___aodiv+7,dtoa@n+7
  1937   001072                     l2925:
  1938                           
  1939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1940   001072  BE43               	btfsc	(dtoa@i+1)^0,7,c
  1941   001074  EF44  F008         	goto	u2161
  1942   001078  5043               	movf	(dtoa@i+1)^0,w,c
  1943   00107A  E108               	bnz	u2160
  1944   00107C  0442               	decf	dtoa@i^0,w,c
  1945   00107E  A0D8               	btfss	status,0,c
  1946   001080  EF44  F008         	goto	u2161
  1947   001084  EF46  F008         	goto	u2160
  1948   001088                     u2161:
  1949   001088  EF62  F008         	goto	l2931
  1950   00108C                     u2160:
  1951   00108C  5039               	movf	dtoa@n^0,w,c
  1952   00108E  103A               	iorwf	(dtoa@n+1)^0,w,c
  1953   001090  103B               	iorwf	(dtoa@n+2)^0,w,c
  1954   001092  103C               	iorwf	(dtoa@n+3)^0,w,c
  1955   001094  103D               	iorwf	(dtoa@n+4)^0,w,c
  1956   001096  103E               	iorwf	(dtoa@n+5)^0,w,c
  1957   001098  103F               	iorwf	(dtoa@n+6)^0,w,c
  1958   00109A  1040               	iorwf	(dtoa@n+7)^0,w,c
  1959   00109C  A4D8               	btfss	status,2,c
  1960   00109E  EF53  F008         	goto	u2171
  1961   0010A2  EF55  F008         	goto	u2170
  1962   0010A6                     u2171:
  1963   0010A6  EFBD  F007         	goto	l2915
  1964   0010AA                     u2170:
  1965   0010AA  BE36               	btfsc	(dtoa@p+1)^0,7,c
  1966   0010AC  EF62  F008         	goto	u2180
  1967   0010B0  5036               	movf	(dtoa@p+1)^0,w,c
  1968   0010B2  E106               	bnz	u2181
  1969   0010B4  0435               	decf	dtoa@p^0,w,c
  1970   0010B6  B0D8               	btfsc	status,0,c
  1971   0010B8  EF60  F008         	goto	u2181
  1972   0010BC  EF62  F008         	goto	u2180
  1973   0010C0                     u2181:
  1974   0010C0  EFBD  F007         	goto	l2915
  1975   0010C4                     u2180:
  1976   0010C4                     l2931:
  1977                           
  1978                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1979   0010C4  5041               	movf	dtoa@s^0,w,c
  1980   0010C6  B4D8               	btfsc	status,2,c
  1981   0010C8  EF68  F008         	goto	u2191
  1982   0010CC  EF6A  F008         	goto	u2190
  1983   0010D0                     u2191:
  1984   0010D0  EF75  F008         	goto	l2937
  1985   0010D4                     u2190:
  1986   0010D4                     
  1987                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1988   0010D4  0642               	decf	dtoa@i^0,f,c
  1989   0010D6  A0D8               	btfss	status,0,c
  1990   0010D8  0643               	decf	(dtoa@i+1)^0,f,c
  1991   0010DA                     
  1992                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1993   0010DA  0E68               	movlw	low _dbuf
  1994   0010DC  2442               	addwf	dtoa@i^0,w,c
  1995   0010DE  6ED9               	movwf	fsr2l,c
  1996   0010E0  0E01               	movlw	high _dbuf
  1997   0010E2  2043               	addwfc	(dtoa@i+1)^0,w,c
  1998   0010E4  6EDA               	movwf	fsr2h,c
  1999   0010E6  C041  FFDF         	movff	dtoa@s,indf2
  2000   0010EA                     l2937:
  2001                           
  2002                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2003   0010EA  C021  F016         	movff	dtoa@fp,pad@fp
  2004   0010EE  C022  F017         	movff	dtoa@fp+1,pad@fp+1
  2005   0010F2  0E68               	movlw	low _dbuf
  2006   0010F4  2442               	addwf	dtoa@i^0,w,c
  2007   0010F6  6E18               	movwf	pad@buf^0,c
  2008   0010F8  0E01               	movlw	high _dbuf
  2009   0010FA  2043               	addwfc	(dtoa@i+1)^0,w,c
  2010   0010FC  6E19               	movwf	(pad@buf+1)^0,c
  2011   0010FE  C037  F01A         	movff	dtoa@w,pad@p
  2012   001102  C038  F01B         	movff	dtoa@w+1,pad@p+1
  2013   001106  EC3F  F00D         	call	_pad	;wreg free
  2014   00110A  0012               	return		;funcret
  2015   00110C                     __end_of_dtoa:
  2016                           	callstack 0
  2017                           
  2018 ;; *************** function _pad *****************
  2019 ;; Defined at:
  2020 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  2023 ;;		 -> sprintf@f(11), 
  2024 ;;  buf             2   23[COMRAM] PTR unsigned char 
  2025 ;;		 -> dbuf(32), 
  2026 ;;  p               2   25[COMRAM] int 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  w               2   30[COMRAM] int 
  2029 ;;  i               2   28[COMRAM] int 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2039 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2040 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2041 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2042 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2043 ;;Total ram usage:       11 bytes
  2044 ;; Hardware stack levels used: 1
  2045 ;; Hardware stack levels required when called: 5
  2046 ;; This function calls:
  2047 ;;		_fputc
  2048 ;;		_fputs
  2049 ;; This function is called by:
  2050 ;;		_dtoa
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           	psect	text8
  2055   001A7E                     __ptext8:
  2056                           	callstack 0
  2057   001A7E                     _pad:
  2058                           	callstack 20
  2059   001A7E                     
  2060                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2061   001A7E  BE1B               	btfsc	(pad@p+1)^0,7,c
  2062   001A80  EF44  F00D         	goto	u2071
  2063   001A84  EF46  F00D         	goto	u2070
  2064   001A88                     u2071:
  2065   001A88  EF4C  F00D         	goto	l2869
  2066   001A8C                     u2070:
  2067   001A8C  C01A  F01F         	movff	pad@p,pad@w
  2068   001A90  C01B  F020         	movff	pad@p+1,pad@w+1
  2069   001A94  EF50  F00D         	goto	l1152
  2070   001A98                     l2869:
  2071   001A98  0E00               	movlw	0
  2072   001A9A  6E20               	movwf	(pad@w+1)^0,c
  2073   001A9C  0E00               	movlw	0
  2074   001A9E  6E1F               	movwf	pad@w^0,c
  2075   001AA0                     l1152:
  2076                           
  2077                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2078   001AA0  0E00               	movlw	0
  2079   001AA2  6E1E               	movwf	(pad@i+1)^0,c
  2080   001AA4  0E00               	movlw	0
  2081   001AA6  6E1D               	movwf	pad@i^0,c
  2082                           
  2083                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2084   001AA8  EF62  F00D         	goto	l2875
  2085   001AAC                     l2871:
  2086                           
  2087                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2088   001AAC  0E00               	movlw	0
  2089   001AAE  6E07               	movwf	(fputc@c+1)^0,c
  2090   001AB0  0E20               	movlw	32
  2091   001AB2  6E06               	movwf	fputc@c^0,c
  2092   001AB4  C016  F008         	movff	pad@fp,fputc@fp
  2093   001AB8  C017  F009         	movff	pad@fp+1,fputc@fp+1
  2094   001ABC  EC9B  F00B         	call	_fputc	;wreg free
  2095   001AC0                     
  2096                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2097   001AC0  4A1D               	infsnz	pad@i^0,f,c
  2098   001AC2  2A1E               	incf	(pad@i+1)^0,f,c
  2099   001AC4                     l2875:
  2100                           
  2101                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2102   001AC4  501F               	movf	pad@w^0,w,c
  2103   001AC6  5C1D               	subwf	pad@i^0,w,c
  2104   001AC8  501E               	movf	(pad@i+1)^0,w,c
  2105   001ACA  0A80               	xorlw	128
  2106   001ACC  6E1C               	movwf	??_pad^0,c
  2107   001ACE  5020               	movf	(pad@w+1)^0,w,c
  2108   001AD0  0A80               	xorlw	128
  2109   001AD2  581C               	subwfb	??_pad^0,w,c
  2110   001AD4  A0D8               	btfss	status,0,c
  2111   001AD6  EF6F  F00D         	goto	u2081
  2112   001ADA  EF71  F00D         	goto	u2080
  2113   001ADE                     u2081:
  2114   001ADE  EF56  F00D         	goto	l2871
  2115   001AE2                     u2080:
  2116   001AE2                     
  2117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2118   001AE2  C018  F00F         	movff	pad@buf,fputs@s
  2119   001AE6  C019  F010         	movff	pad@buf+1,fputs@s+1
  2120   001AEA  C016  F011         	movff	pad@fp,fputs@fp
  2121   001AEE  C017  F012         	movff	pad@fp+1,fputs@fp+1
  2122   001AF2  EC38  F00F         	call	_fputs	;wreg free
  2123   001AF6  0012               	return		;funcret
  2124   001AF8                     __end_of_pad:
  2125                           	callstack 0
  2126                           
  2127 ;; *************** function _fputs *****************
  2128 ;; Defined at:
  2129 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;  s               2   14[COMRAM] PTR const unsigned char 
  2132 ;;		 -> dbuf(32), 
  2133 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2134 ;;		 -> sprintf@f(11), 
  2135 ;; Auto vars:     Size  Location     Type
  2136 ;;  i               2   19[COMRAM] int 
  2137 ;;  c               1   18[COMRAM] unsigned char 
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  2   14[COMRAM] int 
  2140 ;; Registers used:
  2141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2147 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2148 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2150 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2151 ;;Total ram usage:        7 bytes
  2152 ;; Hardware stack levels used: 1
  2153 ;; Hardware stack levels required when called: 4
  2154 ;; This function calls:
  2155 ;;		_fputc
  2156 ;; This function is called by:
  2157 ;;		_pad
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           	psect	text9
  2162   001E70                     __ptext9:
  2163                           	callstack 0
  2164   001E70                     _fputs:
  2165                           	callstack 20
  2166   001E70  0E00               	movlw	0
  2167   001E72  6E15               	movwf	(fputs@i+1)^0,c
  2168   001E74  0E00               	movlw	0
  2169   001E76  6E14               	movwf	fputs@i^0,c
  2170   001E78  EF49  F00F         	goto	l2783
  2171   001E7C                     l2779:
  2172   001E7C  C013  F006         	movff	fputs@c,fputc@c
  2173   001E80  6A07               	clrf	(fputc@c+1)^0,c
  2174   001E82  C011  F008         	movff	fputs@fp,fputc@fp
  2175   001E86  C012  F009         	movff	fputs@fp+1,fputc@fp+1
  2176   001E8A  EC9B  F00B         	call	_fputc	;wreg free
  2177   001E8E  4A14               	infsnz	fputs@i^0,f,c
  2178   001E90  2A15               	incf	(fputs@i+1)^0,f,c
  2179   001E92                     l2783:
  2180   001E92  5014               	movf	fputs@i^0,w,c
  2181   001E94  240F               	addwf	fputs@s^0,w,c
  2182   001E96  6ED9               	movwf	fsr2l,c
  2183   001E98  5015               	movf	(fputs@i+1)^0,w,c
  2184   001E9A  2010               	addwfc	(fputs@s+1)^0,w,c
  2185   001E9C  6EDA               	movwf	fsr2h,c
  2186   001E9E  50DF               	movf	indf2,w,c
  2187   001EA0  6E13               	movwf	fputs@c^0,c
  2188   001EA2  5013               	movf	fputs@c^0,w,c
  2189   001EA4  A4D8               	btfss	status,2,c
  2190   001EA6  EF57  F00F         	goto	u1931
  2191   001EAA  EF59  F00F         	goto	u1930
  2192   001EAE                     u1931:
  2193   001EAE  EF3E  F00F         	goto	l2779
  2194   001EB2                     u1930:
  2195   001EB2  0012               	return		;funcret
  2196   001EB4                     __end_of_fputs:
  2197                           	callstack 0
  2198                           
  2199 ;; *************** function _fputc *****************
  2200 ;; Defined at:
  2201 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;  c               2    5[COMRAM] int 
  2204 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
  2205 ;;		 -> sprintf@f(11), 
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;		None
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  2    5[COMRAM] int 
  2210 ;; Registers used:
  2211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2217 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2219 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2220 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2221 ;;Total ram usage:        9 bytes
  2222 ;; Hardware stack levels used: 1
  2223 ;; Hardware stack levels required when called: 3
  2224 ;; This function calls:
  2225 ;;		_putch
  2226 ;; This function is called by:
  2227 ;;		_pad
  2228 ;;		_vfpfcnvrt
  2229 ;;		_fputs
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           	psect	text10
  2234   001736                     __ptext10:
  2235                           	callstack 0
  2236   001736                     _fputc:
  2237                           	callstack 23
  2238   001736  5008               	movf	fputc@fp^0,w,c
  2239   001738  1009               	iorwf	(fputc@fp+1)^0,w,c
  2240   00173A  B4D8               	btfsc	status,2,c
  2241   00173C  EFA2  F00B         	goto	u1891
  2242   001740  EFA4  F00B         	goto	u1890
  2243   001744                     u1891:
  2244   001744  EFAD  F00B         	goto	l2767
  2245   001748                     u1890:
  2246   001748  5008               	movf	fputc@fp^0,w,c
  2247   00174A  1009               	iorwf	(fputc@fp+1)^0,w,c
  2248   00174C  A4D8               	btfss	status,2,c
  2249   00174E  EFAB  F00B         	goto	u1901
  2250   001752  EFAD  F00B         	goto	u1900
  2251   001756                     u1901:
  2252   001756  EFB2  F00B         	goto	l2769
  2253   00175A                     u1900:
  2254   00175A                     l2767:
  2255   00175A  5006               	movf	fputc@c^0,w,c
  2256   00175C  ECB5  F010         	call	_putch
  2257   001760  EFFF  F00B         	goto	l1207
  2258   001764                     l2769:
  2259   001764  EE20 F009          	lfsr	2,9
  2260   001768  5008               	movf	fputc@fp^0,w,c
  2261   00176A  26D9               	addwf	fsr2l,f,c
  2262   00176C  5009               	movf	(fputc@fp+1)^0,w,c
  2263   00176E  22DA               	addwfc	fsr2h,f,c
  2264   001770  50DE               	movf	postinc2,w,c
  2265   001772  10DE               	iorwf	postinc2,w,c
  2266   001774  B4D8               	btfsc	status,2,c
  2267   001776  EFBF  F00B         	goto	u1911
  2268   00177A  EFC1  F00B         	goto	u1910
  2269   00177E                     u1911:
  2270   00177E  EFDC  F00B         	goto	l2773
  2271   001782                     u1910:
  2272   001782  EE20 F009          	lfsr	2,9
  2273   001786  5008               	movf	fputc@fp^0,w,c
  2274   001788  26D9               	addwf	fsr2l,f,c
  2275   00178A  5009               	movf	(fputc@fp+1)^0,w,c
  2276   00178C  22DA               	addwfc	fsr2h,f,c
  2277   00178E  EE10 F003          	lfsr	1,3
  2278   001792  5008               	movf	fputc@fp^0,w,c
  2279   001794  26E1               	addwf	fsr1l,f,c
  2280   001796  5009               	movf	(fputc@fp+1)^0,w,c
  2281   001798  22E2               	addwfc	fsr1h,f,c
  2282   00179A  50DE               	movf	postinc2,w,c
  2283   00179C  5CE6               	subwf	postinc1,w,c
  2284   00179E  50E6               	movf	postinc1,w,c
  2285   0017A0  0A80               	xorlw	128
  2286   0017A2  6E0E               	movwf	(??_fputc+4)^0,c
  2287   0017A4  50DE               	movf	postinc2,w,c
  2288   0017A6  0A80               	xorlw	128
  2289   0017A8  580E               	subwfb	(??_fputc+4)^0,w,c
  2290   0017AA  B0D8               	btfsc	status,0,c
  2291   0017AC  EFDA  F00B         	goto	u1921
  2292   0017B0  EFDC  F00B         	goto	u1920
  2293   0017B4                     u1921:
  2294   0017B4  EFFF  F00B         	goto	l1207
  2295   0017B8                     u1920:
  2296   0017B8                     l2773:
  2297   0017B8  EE20 F003          	lfsr	2,3
  2298   0017BC  5008               	movf	fputc@fp^0,w,c
  2299   0017BE  26D9               	addwf	fsr2l,f,c
  2300   0017C0  5009               	movf	(fputc@fp+1)^0,w,c
  2301   0017C2  22DA               	addwfc	fsr2h,f,c
  2302   0017C4  CFDE F00A          	movff	postinc2,??_fputc
  2303   0017C8  CFDD F00B          	movff	postdec2,??_fputc+1
  2304   0017CC  C008  FFD9         	movff	fputc@fp,fsr2l
  2305   0017D0  C009  FFDA         	movff	fputc@fp+1,fsr2h
  2306   0017D4  CFDE F00C          	movff	postinc2,??_fputc+2
  2307   0017D8  CFDD F00D          	movff	postdec2,??_fputc+3
  2308   0017DC  500A               	movf	??_fputc^0,w,c
  2309   0017DE  240C               	addwf	(??_fputc+2)^0,w,c
  2310   0017E0  6ED9               	movwf	fsr2l,c
  2311   0017E2  500B               	movf	(??_fputc+1)^0,w,c
  2312   0017E4  200D               	addwfc	(??_fputc+3)^0,w,c
  2313   0017E6  6EDA               	movwf	fsr2h,c
  2314   0017E8  C006  FFDF         	movff	fputc@c,indf2
  2315   0017EC  EE20 F003          	lfsr	2,3
  2316   0017F0  5008               	movf	fputc@fp^0,w,c
  2317   0017F2  26D9               	addwf	fsr2l,f,c
  2318   0017F4  5009               	movf	(fputc@fp+1)^0,w,c
  2319   0017F6  22DA               	addwfc	fsr2h,f,c
  2320   0017F8  2ADE               	incf	postinc2,f,c
  2321   0017FA  0E00               	movlw	0
  2322   0017FC  22DD               	addwfc	postdec2,f,c
  2323   0017FE                     l1207:
  2324   0017FE  0012               	return		;funcret
  2325   001800                     __end_of_fputc:
  2326                           	callstack 0
  2327                           
  2328 ;; *************** function _putch *****************
  2329 ;; Defined at:
  2330 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  c               1    wreg     unsigned char 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  c               1    0[COMRAM] unsigned char 
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      void 
  2337 ;; Registers used:
  2338 ;;		wreg
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2348 ;;Total ram usage:        0 bytes
  2349 ;; Hardware stack levels used: 1
  2350 ;; Hardware stack levels required when called: 2
  2351 ;; This function calls:
  2352 ;;		Nothing
  2353 ;; This function is called by:
  2354 ;;		_fputc
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           	psect	text11
  2359   00216A                     __ptext11:
  2360                           	callstack 0
  2361   00216A                     _putch:
  2362                           	callstack 23
  2363   00216A  0012               	return		;funcret
  2364   00216C                     __end_of_putch:
  2365                           	callstack 0
  2366                           
  2367 ;; *************** function _abs *****************
  2368 ;; Defined at:
  2369 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;  a               2   23[COMRAM] int 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;		None
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  2   23[COMRAM] int 
  2376 ;; Registers used:
  2377 ;;		wreg, status,2, status,0
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2383 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2385 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2386 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2387 ;;Total ram usage:        4 bytes
  2388 ;; Hardware stack levels used: 1
  2389 ;; Hardware stack levels required when called: 2
  2390 ;; This function calls:
  2391 ;;		Nothing
  2392 ;; This function is called by:
  2393 ;;		_dtoa
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           	psect	text12
  2398   001EF6                     __ptext12:
  2399                           	callstack 0
  2400   001EF6                     _abs:
  2401                           	callstack 23
  2402   001EF6  BE19               	btfsc	(abs@a+1)^0,7,c
  2403   001EF8  EF88  F00F         	goto	u2090
  2404   001EFC  5019               	movf	(abs@a+1)^0,w,c
  2405   001EFE  E106               	bnz	u2091
  2406   001F00  0418               	decf	abs@a^0,w,c
  2407   001F02  B0D8               	btfsc	status,0,c
  2408   001F04  EF86  F00F         	goto	u2091
  2409   001F08  EF88  F00F         	goto	u2090
  2410   001F0C                     u2091:
  2411   001F0C  EF96  F00F         	goto	l1192
  2412   001F10                     u2090:
  2413   001F10  C018  F01A         	movff	abs@a,??_abs
  2414   001F14  C019  F01B         	movff	abs@a+1,??_abs+1
  2415   001F18  1E1A               	comf	??_abs^0,f,c
  2416   001F1A  1E1B               	comf	(??_abs+1)^0,f,c
  2417   001F1C  4A1A               	infsnz	??_abs^0,f,c
  2418   001F1E  2A1B               	incf	(??_abs+1)^0,f,c
  2419   001F20  C01A  F018         	movff	??_abs,?_abs
  2420   001F24  C01B  F019         	movff	??_abs+1,?_abs+1
  2421   001F28  EF9A  F00F         	goto	l1195
  2422   001F2C                     l1192:
  2423   001F2C  C018  F018         	movff	abs@a,?_abs
  2424   001F30  C019  F019         	movff	abs@a+1,?_abs+1
  2425   001F34                     l1195:
  2426   001F34  0012               	return		;funcret
  2427   001F36                     __end_of_abs:
  2428                           	callstack 0
  2429                           
  2430 ;; *************** function ___aomod *****************
  2431 ;; Defined at:
  2432 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;  dividend        8    5[COMRAM] long long 
  2435 ;;  divisor         8   13[COMRAM] long long 
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;  sign            1   22[COMRAM] unsigned char 
  2438 ;;  counter         1   21[COMRAM] unsigned char 
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  8    5[COMRAM] long long 
  2441 ;; Registers used:
  2442 ;;		wreg, status,2, status,0
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2448 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2449 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2451 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2452 ;;Total ram usage:       18 bytes
  2453 ;; Hardware stack levels used: 1
  2454 ;; Hardware stack levels required when called: 2
  2455 ;; This function calls:
  2456 ;;		Nothing
  2457 ;; This function is called by:
  2458 ;;		_dtoa
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           	psect	text13
  2463   001294                     __ptext13:
  2464                           	callstack 0
  2465   001294                     ___aomod:
  2466                           	callstack 23
  2467   001294  0E00               	movlw	0
  2468   001296  6E17               	movwf	___aomod@sign^0,c
  2469   001298  BE0D               	btfsc	(___aomod@dividend+7)^0,7,c
  2470   00129A  EF53  F009         	goto	u2010
  2471   00129E  EF51  F009         	goto	u2011
  2472   0012A2                     u2011:
  2473   0012A2  EF65  F009         	goto	l2837
  2474   0012A6                     u2010:
  2475   0012A6  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  2476   0012A8  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  2477   0012AA  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  2478   0012AC  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  2479   0012AE  1E09               	comf	(___aomod@dividend+3)^0,f,c
  2480   0012B0  1E08               	comf	(___aomod@dividend+2)^0,f,c
  2481   0012B2  1E07               	comf	(___aomod@dividend+1)^0,f,c
  2482   0012B4  6C06               	negf	___aomod@dividend^0,c
  2483   0012B6  0E00               	movlw	0
  2484   0012B8  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  2485   0012BA  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  2486   0012BC  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  2487   0012BE  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  2488   0012C0  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  2489   0012C2  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  2490   0012C4  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  2491   0012C6  0E01               	movlw	1
  2492   0012C8  6E17               	movwf	___aomod@sign^0,c
  2493   0012CA                     l2837:
  2494   0012CA  BE15               	btfsc	(___aomod@divisor+7)^0,7,c
  2495   0012CC  EF6C  F009         	goto	u2020
  2496   0012D0  EF6A  F009         	goto	u2021
  2497   0012D4                     u2021:
  2498   0012D4  EF7C  F009         	goto	l2841
  2499   0012D8                     u2020:
  2500   0012D8  1E15               	comf	(___aomod@divisor+7)^0,f,c
  2501   0012DA  1E14               	comf	(___aomod@divisor+6)^0,f,c
  2502   0012DC  1E13               	comf	(___aomod@divisor+5)^0,f,c
  2503   0012DE  1E12               	comf	(___aomod@divisor+4)^0,f,c
  2504   0012E0  1E11               	comf	(___aomod@divisor+3)^0,f,c
  2505   0012E2  1E10               	comf	(___aomod@divisor+2)^0,f,c
  2506   0012E4  1E0F               	comf	(___aomod@divisor+1)^0,f,c
  2507   0012E6  6C0E               	negf	___aomod@divisor^0,c
  2508   0012E8  0E00               	movlw	0
  2509   0012EA  220F               	addwfc	(___aomod@divisor+1)^0,f,c
  2510   0012EC  2210               	addwfc	(___aomod@divisor+2)^0,f,c
  2511   0012EE  2211               	addwfc	(___aomod@divisor+3)^0,f,c
  2512   0012F0  2212               	addwfc	(___aomod@divisor+4)^0,f,c
  2513   0012F2  2213               	addwfc	(___aomod@divisor+5)^0,f,c
  2514   0012F4  2214               	addwfc	(___aomod@divisor+6)^0,f,c
  2515   0012F6  2215               	addwfc	(___aomod@divisor+7)^0,f,c
  2516   0012F8                     l2841:
  2517   0012F8  500E               	movf	___aomod@divisor^0,w,c
  2518   0012FA  100F               	iorwf	(___aomod@divisor+1)^0,w,c
  2519   0012FC  1010               	iorwf	(___aomod@divisor+2)^0,w,c
  2520   0012FE  1011               	iorwf	(___aomod@divisor+3)^0,w,c
  2521   001300  1012               	iorwf	(___aomod@divisor+4)^0,w,c
  2522   001302  1013               	iorwf	(___aomod@divisor+5)^0,w,c
  2523   001304  1014               	iorwf	(___aomod@divisor+6)^0,w,c
  2524   001306  1015               	iorwf	(___aomod@divisor+7)^0,w,c
  2525   001308  B4D8               	btfsc	status,2,c
  2526   00130A  EF89  F009         	goto	u2031
  2527   00130E  EF8B  F009         	goto	u2030
  2528   001312                     u2031:
  2529   001312  EFD3  F009         	goto	l2857
  2530   001316                     u2030:
  2531   001316  0E01               	movlw	1
  2532   001318  6E16               	movwf	___aomod@counter^0,c
  2533   00131A  EF99  F009         	goto	l2847
  2534   00131E                     l2845:
  2535   00131E  90D8               	bcf	status,0,c
  2536   001320  360E               	rlcf	___aomod@divisor^0,f,c
  2537   001322  360F               	rlcf	(___aomod@divisor+1)^0,f,c
  2538   001324  3610               	rlcf	(___aomod@divisor+2)^0,f,c
  2539   001326  3611               	rlcf	(___aomod@divisor+3)^0,f,c
  2540   001328  3612               	rlcf	(___aomod@divisor+4)^0,f,c
  2541   00132A  3613               	rlcf	(___aomod@divisor+5)^0,f,c
  2542   00132C  3614               	rlcf	(___aomod@divisor+6)^0,f,c
  2543   00132E  3615               	rlcf	(___aomod@divisor+7)^0,f,c
  2544   001330  2A16               	incf	___aomod@counter^0,f,c
  2545   001332                     l2847:
  2546   001332  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  2547   001334  EF9E  F009         	goto	u2041
  2548   001338  EFA0  F009         	goto	u2040
  2549   00133C                     u2041:
  2550   00133C  EF8F  F009         	goto	l2845
  2551   001340                     u2040:
  2552   001340                     l2849:
  2553   001340  500E               	movf	___aomod@divisor^0,w,c
  2554   001342  5C06               	subwf	___aomod@dividend^0,w,c
  2555   001344  500F               	movf	(___aomod@divisor+1)^0,w,c
  2556   001346  5807               	subwfb	(___aomod@dividend+1)^0,w,c
  2557   001348  5010               	movf	(___aomod@divisor+2)^0,w,c
  2558   00134A  5808               	subwfb	(___aomod@dividend+2)^0,w,c
  2559   00134C  5011               	movf	(___aomod@divisor+3)^0,w,c
  2560   00134E  5809               	subwfb	(___aomod@dividend+3)^0,w,c
  2561   001350  5012               	movf	(___aomod@divisor+4)^0,w,c
  2562   001352  580A               	subwfb	(___aomod@dividend+4)^0,w,c
  2563   001354  5013               	movf	(___aomod@divisor+5)^0,w,c
  2564   001356  580B               	subwfb	(___aomod@dividend+5)^0,w,c
  2565   001358  5014               	movf	(___aomod@divisor+6)^0,w,c
  2566   00135A  580C               	subwfb	(___aomod@dividend+6)^0,w,c
  2567   00135C  5015               	movf	(___aomod@divisor+7)^0,w,c
  2568   00135E  580D               	subwfb	(___aomod@dividend+7)^0,w,c
  2569   001360  A0D8               	btfss	status,0,c
  2570   001362  EFB5  F009         	goto	u2051
  2571   001366  EFB7  F009         	goto	u2050
  2572   00136A                     u2051:
  2573   00136A  EFC7  F009         	goto	l2853
  2574   00136E                     u2050:
  2575   00136E  500E               	movf	___aomod@divisor^0,w,c
  2576   001370  5E06               	subwf	___aomod@dividend^0,f,c
  2577   001372  500F               	movf	(___aomod@divisor+1)^0,w,c
  2578   001374  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
  2579   001376  5010               	movf	(___aomod@divisor+2)^0,w,c
  2580   001378  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
  2581   00137A  5011               	movf	(___aomod@divisor+3)^0,w,c
  2582   00137C  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
  2583   00137E  5012               	movf	(___aomod@divisor+4)^0,w,c
  2584   001380  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
  2585   001382  5013               	movf	(___aomod@divisor+5)^0,w,c
  2586   001384  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
  2587   001386  5014               	movf	(___aomod@divisor+6)^0,w,c
  2588   001388  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
  2589   00138A  5015               	movf	(___aomod@divisor+7)^0,w,c
  2590   00138C  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
  2591   00138E                     l2853:
  2592   00138E  90D8               	bcf	status,0,c
  2593   001390  3215               	rrcf	(___aomod@divisor+7)^0,f,c
  2594   001392  3214               	rrcf	(___aomod@divisor+6)^0,f,c
  2595   001394  3213               	rrcf	(___aomod@divisor+5)^0,f,c
  2596   001396  3212               	rrcf	(___aomod@divisor+4)^0,f,c
  2597   001398  3211               	rrcf	(___aomod@divisor+3)^0,f,c
  2598   00139A  3210               	rrcf	(___aomod@divisor+2)^0,f,c
  2599   00139C  320F               	rrcf	(___aomod@divisor+1)^0,f,c
  2600   00139E  320E               	rrcf	___aomod@divisor^0,f,c
  2601   0013A0  2E16               	decfsz	___aomod@counter^0,f,c
  2602   0013A2  EFA0  F009         	goto	l2849
  2603   0013A6                     l2857:
  2604   0013A6  5017               	movf	___aomod@sign^0,w,c
  2605   0013A8  B4D8               	btfsc	status,2,c
  2606   0013AA  EFD9  F009         	goto	u2061
  2607   0013AE  EFDB  F009         	goto	u2060
  2608   0013B2                     u2061:
  2609   0013B2  EFEB  F009         	goto	l2861
  2610   0013B6                     u2060:
  2611   0013B6  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  2612   0013B8  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  2613   0013BA  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  2614   0013BC  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  2615   0013BE  1E09               	comf	(___aomod@dividend+3)^0,f,c
  2616   0013C0  1E08               	comf	(___aomod@dividend+2)^0,f,c
  2617   0013C2  1E07               	comf	(___aomod@dividend+1)^0,f,c
  2618   0013C4  6C06               	negf	___aomod@dividend^0,c
  2619   0013C6  0E00               	movlw	0
  2620   0013C8  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  2621   0013CA  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  2622   0013CC  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  2623   0013CE  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  2624   0013D0  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  2625   0013D2  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  2626   0013D4  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  2627   0013D6                     l2861:
  2628   0013D6  C006  F006         	movff	___aomod@dividend,?___aomod
  2629   0013DA  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
  2630   0013DE  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
  2631   0013E2  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
  2632   0013E6  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
  2633   0013EA  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
  2634   0013EE  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
  2635   0013F2  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
  2636   0013F6  0012               	return		;funcret
  2637   0013F8                     __end_of___aomod:
  2638                           	callstack 0
  2639                           
  2640 ;; *************** function ___aodiv *****************
  2641 ;; Defined at:
  2642 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;  dividend        8    5[COMRAM] long long 
  2645 ;;  divisor         8   13[COMRAM] long long 
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;  quotient        8   23[COMRAM] long long 
  2648 ;;  sign            1   22[COMRAM] unsigned char 
  2649 ;;  counter         1   21[COMRAM] unsigned char 
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  8    5[COMRAM] long long 
  2652 ;; Registers used:
  2653 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2659 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2660 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2662 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2663 ;;Total ram usage:       26 bytes
  2664 ;; Hardware stack levels used: 1
  2665 ;; Hardware stack levels required when called: 2
  2666 ;; This function calls:
  2667 ;;		Nothing
  2668 ;; This function is called by:
  2669 ;;		_dtoa
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           	psect	text14
  2674   00110C                     __ptext14:
  2675                           	callstack 0
  2676   00110C                     ___aodiv:
  2677                           	callstack 23
  2678   00110C  0E00               	movlw	0
  2679   00110E  6E17               	movwf	___aodiv@sign^0,c
  2680   001110  BE15               	btfsc	(___aodiv@divisor+7)^0,7,c
  2681   001112  EF8F  F008         	goto	u1940
  2682   001116  EF8D  F008         	goto	u1941
  2683   00111A                     u1941:
  2684   00111A  EFA1  F008         	goto	l2793
  2685   00111E                     u1940:
  2686   00111E  1E15               	comf	(___aodiv@divisor+7)^0,f,c
  2687   001120  1E14               	comf	(___aodiv@divisor+6)^0,f,c
  2688   001122  1E13               	comf	(___aodiv@divisor+5)^0,f,c
  2689   001124  1E12               	comf	(___aodiv@divisor+4)^0,f,c
  2690   001126  1E11               	comf	(___aodiv@divisor+3)^0,f,c
  2691   001128  1E10               	comf	(___aodiv@divisor+2)^0,f,c
  2692   00112A  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
  2693   00112C  6C0E               	negf	___aodiv@divisor^0,c
  2694   00112E  0E00               	movlw	0
  2695   001130  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
  2696   001132  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
  2697   001134  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
  2698   001136  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
  2699   001138  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
  2700   00113A  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
  2701   00113C  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
  2702   00113E  0E01               	movlw	1
  2703   001140  6E17               	movwf	___aodiv@sign^0,c
  2704   001142                     l2793:
  2705   001142  BE0D               	btfsc	(___aodiv@dividend+7)^0,7,c
  2706   001144  EFA8  F008         	goto	u1950
  2707   001148  EFA6  F008         	goto	u1951
  2708   00114C                     u1951:
  2709   00114C  EFBA  F008         	goto	l2799
  2710   001150                     u1950:
  2711   001150  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
  2712   001152  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
  2713   001154  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
  2714   001156  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
  2715   001158  1E09               	comf	(___aodiv@dividend+3)^0,f,c
  2716   00115A  1E08               	comf	(___aodiv@dividend+2)^0,f,c
  2717   00115C  1E07               	comf	(___aodiv@dividend+1)^0,f,c
  2718   00115E  6C06               	negf	___aodiv@dividend^0,c
  2719   001160  0E00               	movlw	0
  2720   001162  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
  2721   001164  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
  2722   001166  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
  2723   001168  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
  2724   00116A  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
  2725   00116C  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
  2726   00116E  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
  2727   001170  0E01               	movlw	1
  2728   001172  1A17               	xorwf	___aodiv@sign^0,f,c
  2729   001174                     l2799:
  2730   001174  EE20  F018         	lfsr	2,___aodiv@quotient
  2731   001178  0E07               	movlw	7
  2732   00117A                     u1961:
  2733   00117A  6ADE               	clrf	postinc2,c
  2734   00117C  06E8               	decf	wreg,f,c
  2735   00117E  E2FD               	bc	u1961
  2736   001180  500E               	movf	___aodiv@divisor^0,w,c
  2737   001182  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
  2738   001184  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
  2739   001186  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
  2740   001188  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
  2741   00118A  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
  2742   00118C  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
  2743   00118E  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
  2744   001190  B4D8               	btfsc	status,2,c
  2745   001192  EFCD  F008         	goto	u1971
  2746   001196  EFCF  F008         	goto	u1970
  2747   00119A                     u1971:
  2748   00119A  EF21  F009         	goto	l2821
  2749   00119E                     u1970:
  2750   00119E  0E01               	movlw	1
  2751   0011A0  6E16               	movwf	___aodiv@counter^0,c
  2752   0011A2  EFDD  F008         	goto	l2807
  2753   0011A6                     l2805:
  2754   0011A6  90D8               	bcf	status,0,c
  2755   0011A8  360E               	rlcf	___aodiv@divisor^0,f,c
  2756   0011AA  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
  2757   0011AC  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
  2758   0011AE  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
  2759   0011B0  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
  2760   0011B2  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
  2761   0011B4  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
  2762   0011B6  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
  2763   0011B8  2A16               	incf	___aodiv@counter^0,f,c
  2764   0011BA                     l2807:
  2765   0011BA  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  2766   0011BC  EFE2  F008         	goto	u1981
  2767   0011C0  EFE4  F008         	goto	u1980
  2768   0011C4                     u1981:
  2769   0011C4  EFD3  F008         	goto	l2805
  2770   0011C8                     u1980:
  2771   0011C8                     l2809:
  2772   0011C8  90D8               	bcf	status,0,c
  2773   0011CA  3618               	rlcf	___aodiv@quotient^0,f,c
  2774   0011CC  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
  2775   0011CE  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
  2776   0011D0  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
  2777   0011D2  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
  2778   0011D4  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
  2779   0011D6  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
  2780   0011D8  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
  2781   0011DA  500E               	movf	___aodiv@divisor^0,w,c
  2782   0011DC  5C06               	subwf	___aodiv@dividend^0,w,c
  2783   0011DE  500F               	movf	(___aodiv@divisor+1)^0,w,c
  2784   0011E0  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
  2785   0011E2  5010               	movf	(___aodiv@divisor+2)^0,w,c
  2786   0011E4  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
  2787   0011E6  5011               	movf	(___aodiv@divisor+3)^0,w,c
  2788   0011E8  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
  2789   0011EA  5012               	movf	(___aodiv@divisor+4)^0,w,c
  2790   0011EC  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
  2791   0011EE  5013               	movf	(___aodiv@divisor+5)^0,w,c
  2792   0011F0  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
  2793   0011F2  5014               	movf	(___aodiv@divisor+6)^0,w,c
  2794   0011F4  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
  2795   0011F6  5015               	movf	(___aodiv@divisor+7)^0,w,c
  2796   0011F8  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
  2797   0011FA  A0D8               	btfss	status,0,c
  2798   0011FC  EF02  F009         	goto	u1991
  2799   001200  EF04  F009         	goto	u1990
  2800   001204                     u1991:
  2801   001204  EF15  F009         	goto	l2817
  2802   001208                     u1990:
  2803   001208  500E               	movf	___aodiv@divisor^0,w,c
  2804   00120A  5E06               	subwf	___aodiv@dividend^0,f,c
  2805   00120C  500F               	movf	(___aodiv@divisor+1)^0,w,c
  2806   00120E  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
  2807   001210  5010               	movf	(___aodiv@divisor+2)^0,w,c
  2808   001212  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
  2809   001214  5011               	movf	(___aodiv@divisor+3)^0,w,c
  2810   001216  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
  2811   001218  5012               	movf	(___aodiv@divisor+4)^0,w,c
  2812   00121A  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
  2813   00121C  5013               	movf	(___aodiv@divisor+5)^0,w,c
  2814   00121E  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
  2815   001220  5014               	movf	(___aodiv@divisor+6)^0,w,c
  2816   001222  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
  2817   001224  5015               	movf	(___aodiv@divisor+7)^0,w,c
  2818   001226  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
  2819   001228  8018               	bsf	___aodiv@quotient^0,0,c
  2820   00122A                     l2817:
  2821   00122A  90D8               	bcf	status,0,c
  2822   00122C  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
  2823   00122E  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
  2824   001230  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
  2825   001232  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
  2826   001234  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
  2827   001236  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
  2828   001238  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
  2829   00123A  320E               	rrcf	___aodiv@divisor^0,f,c
  2830   00123C  2E16               	decfsz	___aodiv@counter^0,f,c
  2831   00123E  EFE4  F008         	goto	l2809
  2832   001242                     l2821:
  2833   001242  5017               	movf	___aodiv@sign^0,w,c
  2834   001244  B4D8               	btfsc	status,2,c
  2835   001246  EF27  F009         	goto	u2001
  2836   00124A  EF29  F009         	goto	u2000
  2837   00124E                     u2001:
  2838   00124E  EF39  F009         	goto	l2825
  2839   001252                     u2000:
  2840   001252  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
  2841   001254  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
  2842   001256  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
  2843   001258  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
  2844   00125A  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
  2845   00125C  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
  2846   00125E  1E19               	comf	(___aodiv@quotient+1)^0,f,c
  2847   001260  6C18               	negf	___aodiv@quotient^0,c
  2848   001262  0E00               	movlw	0
  2849   001264  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
  2850   001266  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
  2851   001268  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
  2852   00126A  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
  2853   00126C  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
  2854   00126E  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
  2855   001270  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
  2856   001272                     l2825:
  2857   001272  C018  F006         	movff	___aodiv@quotient,?___aodiv
  2858   001276  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
  2859   00127A  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
  2860   00127E  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
  2861   001282  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
  2862   001286  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
  2863   00128A  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
  2864   00128E  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
  2865   001292  0012               	return		;funcret
  2866   001294                     __end_of___aodiv:
  2867                           	callstack 0
  2868                           
  2869 ;; *************** function ___lwdiv *****************
  2870 ;; Defined at:
  2871 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;  dividend        2    5[COMRAM] unsigned int 
  2874 ;;  divisor         2    7[COMRAM] unsigned int 
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;  quotient        2   10[COMRAM] unsigned int 
  2877 ;;  counter         1    9[COMRAM] unsigned char 
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  2    5[COMRAM] unsigned int 
  2880 ;; Registers used:
  2881 ;;		wreg, status,2, status,0
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2887 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2888 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2890 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2891 ;;Total ram usage:        7 bytes
  2892 ;; Hardware stack levels used: 1
  2893 ;; Hardware stack levels required when called: 2
  2894 ;; This function calls:
  2895 ;;		Nothing
  2896 ;; This function is called by:
  2897 ;;		_time2String
  2898 ;;		_LEDarray_disp_dec
  2899 ;;		_LEDarray_disp_PPM
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           	psect	text15
  2904   001AF8                     __ptext15:
  2905                           	callstack 0
  2906   001AF8                     ___lwdiv:
  2907                           	callstack 27
  2908   001AF8  0E00               	movlw	0
  2909   001AFA  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  2910   001AFC  0E00               	movlw	0
  2911   001AFE  6E0B               	movwf	___lwdiv@quotient^0,c
  2912   001B00  5008               	movf	___lwdiv@divisor^0,w,c
  2913   001B02  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2914   001B04  B4D8               	btfsc	status,2,c
  2915   001B06  EF87  F00D         	goto	u2471
  2916   001B0A  EF89  F00D         	goto	u2470
  2917   001B0E                     u2471:
  2918   001B0E  EFB1  F00D         	goto	l943
  2919   001B12                     u2470:
  2920   001B12  0E01               	movlw	1
  2921   001B14  6E0A               	movwf	___lwdiv@counter^0,c
  2922   001B16  EF91  F00D         	goto	l3113
  2923   001B1A                     l3111:
  2924   001B1A  90D8               	bcf	status,0,c
  2925   001B1C  3608               	rlcf	___lwdiv@divisor^0,f,c
  2926   001B1E  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2927   001B20  2A0A               	incf	___lwdiv@counter^0,f,c
  2928   001B22                     l3113:
  2929   001B22  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  2930   001B24  EF96  F00D         	goto	u2481
  2931   001B28  EF98  F00D         	goto	u2480
  2932   001B2C                     u2481:
  2933   001B2C  EF8D  F00D         	goto	l3111
  2934   001B30                     u2480:
  2935   001B30                     l3115:
  2936   001B30  90D8               	bcf	status,0,c
  2937   001B32  360B               	rlcf	___lwdiv@quotient^0,f,c
  2938   001B34  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2939   001B36  5008               	movf	___lwdiv@divisor^0,w,c
  2940   001B38  5C06               	subwf	___lwdiv@dividend^0,w,c
  2941   001B3A  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  2942   001B3C  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2943   001B3E  A0D8               	btfss	status,0,c
  2944   001B40  EFA4  F00D         	goto	u2491
  2945   001B44  EFA6  F00D         	goto	u2490
  2946   001B48                     u2491:
  2947   001B48  EFAB  F00D         	goto	l3123
  2948   001B4C                     u2490:
  2949   001B4C  5008               	movf	___lwdiv@divisor^0,w,c
  2950   001B4E  5E06               	subwf	___lwdiv@dividend^0,f,c
  2951   001B50  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  2952   001B52  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2953   001B54  800B               	bsf	___lwdiv@quotient^0,0,c
  2954   001B56                     l3123:
  2955   001B56  90D8               	bcf	status,0,c
  2956   001B58  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2957   001B5A  3208               	rrcf	___lwdiv@divisor^0,f,c
  2958   001B5C  2E0A               	decfsz	___lwdiv@counter^0,f,c
  2959   001B5E  EF98  F00D         	goto	l3115
  2960   001B62                     l943:
  2961   001B62  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
  2962   001B66  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2963   001B6A  0012               	return		;funcret
  2964   001B6C                     __end_of___lwdiv:
  2965                           	callstack 0
  2966                           
  2967 ;; *************** function _LCD_sendstring *****************
  2968 ;; Defined at:
  2969 ;;		line 109 in file "LCD.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;  string          2    8[COMRAM] PTR unsigned char 
  2972 ;;		 -> main@strdate(100), 
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;		None
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  1    wreg      void 
  2977 ;; Registers used:
  2978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2984 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2987 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2988 ;;Total ram usage:        2 bytes
  2989 ;; Hardware stack levels used: 1
  2990 ;; Hardware stack levels required when called: 5
  2991 ;; This function calls:
  2992 ;;		_LCD_sendbyte
  2993 ;; This function is called by:
  2994 ;;		_time2String
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text16
  2999   001FAE                     __ptext16:
  3000                           	callstack 0
  3001   001FAE                     _LCD_sendstring:
  3002                           	callstack 24
  3003   001FAE                     
  3004                           ;LCD.c: 111: {;LCD.c: 112:  while(*string != 0){
  3005   001FAE  EFE4  F00F         	goto	l3041
  3006   001FB2                     l3037:
  3007                           
  3008                           ;LCD.c: 113:   LCD_sendbyte(*string++,1);
  3009   001FB2  0E01               	movlw	1
  3010   001FB4  6E07               	movwf	LCD_sendbyte@type^0,c
  3011   001FB6  C009  FFD9         	movff	LCD_sendstring@string,fsr2l
  3012   001FBA  C00A  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  3013   001FBE  50DF               	movf	indf2,w,c
  3014   001FC0  EC0B  F010         	call	_LCD_sendbyte
  3015   001FC4  4A09               	infsnz	LCD_sendstring@string^0,f,c
  3016   001FC6  2A0A               	incf	(LCD_sendstring@string+1)^0,f,c
  3017   001FC8                     l3041:
  3018                           
  3019                           ;LCD.c: 112:  while(*string != 0){
  3020   001FC8  C009  FFD9         	movff	LCD_sendstring@string,fsr2l
  3021   001FCC  C00A  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  3022   001FD0  50DF               	movf	indf2,w,c
  3023   001FD2  A4D8               	btfss	status,2,c
  3024   001FD4  EFEE  F00F         	goto	u2401
  3025   001FD8  EFF0  F00F         	goto	u2400
  3026   001FDC                     u2401:
  3027   001FDC  EFD9  F00F         	goto	l3037
  3028   001FE0                     u2400:
  3029   001FE0  0012               	return		;funcret
  3030   001FE2                     __end_of_LCD_sendstring:
  3031                           	callstack 0
  3032                           
  3033 ;; *************** function _sunset *****************
  3034 ;; Defined at:
  3035 ;;		line 96 in file "Functions.c"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;		None
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;  sunset_time     2   16[COMRAM] int 
  3040 ;;  prevState       2   14[COMRAM] int 
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  2   11[COMRAM] int 
  3043 ;; Registers used:
  3044 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3050 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3051 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3052 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3053 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3054 ;;Total ram usage:        7 bytes
  3055 ;; Hardware stack levels used: 1
  3056 ;; Hardware stack levels required when called: 3
  3057 ;; This function calls:
  3058 ;;		___wmul
  3059 ;; This function is called by:
  3060 ;;		_main
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           	psect	text17
  3065   001BDC                     __ptext17:
  3066                           	callstack 0
  3067   001BDC                     _sunset:
  3068                           	callstack 27
  3069   001BDC                     
  3070                           ;Functions.c: 98:     int prevState = LATHbits.LATH3;
  3071   001BDC  B680               	btfsc	128,3,c	;volatile
  3072   001BDE  EFF3  F00D         	goto	u2631
  3073   001BE2  EFF7  F00D         	goto	u2630
  3074   001BE6                     u2631:
  3075   001BE6  6A0E               	clrf	??_sunset^0,c
  3076   001BE8  2A0E               	incf	??_sunset^0,f,c
  3077   001BEA  EFF8  F00D         	goto	u2638
  3078   001BEE                     u2630:
  3079   001BEE  6A0E               	clrf	??_sunset^0,c
  3080   001BF0                     u2638:
  3081   001BF0  500E               	movf	??_sunset^0,w,c
  3082   001BF2  6E0F               	movwf	sunset@prevState^0,c
  3083   001BF4  6A10               	clrf	(sunset@prevState+1)^0,c
  3084                           
  3085                           ;Functions.c: 100:     if (16<=hour<=20)
  3086   001BF6  0E00               	movlw	0
  3087   001BF8  6E12               	movwf	(sunset@sunset_time+1)^0,c
  3088   001BFA  0E00               	movlw	0
  3089   001BFC  6E11               	movwf	sunset@sunset_time^0,c
  3090   001BFE                     
  3091                           ;Functions.c: 101:     {;Functions.c: 102:         if (prevState==0 && LATHbits.LATH3==1
      +                          )
  3092   001BFE  500F               	movf	sunset@prevState^0,w,c
  3093   001C00  1010               	iorwf	(sunset@prevState+1)^0,w,c
  3094   001C02  A4D8               	btfss	status,2,c
  3095   001C04  EF06  F00E         	goto	u2641
  3096   001C08  EF08  F00E         	goto	u2640
  3097   001C0C                     u2641:
  3098   001C0C  EF20  F00E         	goto	l3287
  3099   001C10                     u2640:
  3100   001C10  A680               	btfss	128,3,c	;volatile
  3101   001C12  EF0D  F00E         	goto	u2651
  3102   001C16  EF0F  F00E         	goto	u2650
  3103   001C1A                     u2651:
  3104   001C1A  EF20  F00E         	goto	l3287
  3105   001C1E                     u2650:
  3106   001C1E                     
  3107                           ;Functions.c: 103:         {;Functions.c: 104:             sunset_time = seconds+(hour*3
      +                          600);
  3108   001C1E  C09F  F006         	movff	_hour,___wmul@multiplier
  3109   001C22  C0A0  F007         	movff	_hour+1,___wmul@multiplier+1
  3110   001C26  0E0E               	movlw	14
  3111   001C28  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  3112   001C2A  0E10               	movlw	16
  3113   001C2C  6E08               	movwf	___wmul@multiplicand^0,c
  3114   001C2E  EC23  F010         	call	___wmul	;wreg free
  3115   001C32  0100               	movlb	0	; () banked
  3116   001C34  51A1               	movf	_seconds& (0+255),w,b
  3117   001C36  2406               	addwf	?___wmul^0,w,c
  3118   001C38  6E11               	movwf	sunset@sunset_time^0,c
  3119   001C3A  51A2               	movf	(_seconds+1)& (0+255),w,b
  3120   001C3C  2007               	addwfc	(?___wmul+1)^0,w,c
  3121   001C3E  6E12               	movwf	(sunset@sunset_time+1)^0,c
  3122   001C40                     l3287:
  3123                           
  3124                           ;Functions.c: 107:     return sunset_time;
  3125   001C40  C011  F00C         	movff	sunset@sunset_time,?_sunset
  3126   001C44  C012  F00D         	movff	sunset@sunset_time+1,?_sunset+1
  3127   001C48  0012               	return		;funcret
  3128   001C4A                     __end_of_sunset:
  3129                           	callstack 0
  3130                           
  3131 ;; *************** function _sunrise *****************
  3132 ;; Defined at:
  3133 ;;		line 82 in file "Functions.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;		None
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;  sunrise_time    2   16[COMRAM] int 
  3138 ;;  prevState       2   14[COMRAM] int 
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  2   11[COMRAM] int 
  3141 ;; Registers used:
  3142 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3148 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3149 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3150 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3151 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3152 ;;Total ram usage:        7 bytes
  3153 ;; Hardware stack levels used: 1
  3154 ;; Hardware stack levels required when called: 3
  3155 ;; This function calls:
  3156 ;;		___wmul
  3157 ;; This function is called by:
  3158 ;;		_main
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162                           	psect	text18
  3163   001C4A                     __ptext18:
  3164                           	callstack 0
  3165   001C4A                     _sunrise:
  3166                           	callstack 27
  3167   001C4A                     
  3168                           ;Functions.c: 84:     int prevState = LATHbits.LATH3;
  3169   001C4A  B680               	btfsc	128,3,c	;volatile
  3170   001C4C  EF2A  F00E         	goto	u2601
  3171   001C50  EF2E  F00E         	goto	u2600
  3172   001C54                     u2601:
  3173   001C54  6A0E               	clrf	??_sunrise^0,c
  3174   001C56  2A0E               	incf	??_sunrise^0,f,c
  3175   001C58  EF2F  F00E         	goto	u2608
  3176   001C5C                     u2600:
  3177   001C5C  6A0E               	clrf	??_sunrise^0,c
  3178   001C5E                     u2608:
  3179   001C5E  500E               	movf	??_sunrise^0,w,c
  3180   001C60  6E0F               	movwf	sunrise@prevState^0,c
  3181   001C62  6A10               	clrf	(sunrise@prevState+1)^0,c
  3182                           
  3183                           ;Functions.c: 86:     if (5<=hour<=8)
  3184   001C64  0E00               	movlw	0
  3185   001C66  6E12               	movwf	(sunrise@sunrise_time+1)^0,c
  3186   001C68  0E00               	movlw	0
  3187   001C6A  6E11               	movwf	sunrise@sunrise_time^0,c
  3188   001C6C                     
  3189                           ;Functions.c: 87:     {;Functions.c: 88:         if (prevState==1 && LATHbits.LATH3==0)
  3190   001C6C  040F               	decf	sunrise@prevState^0,w,c
  3191   001C6E  1010               	iorwf	(sunrise@prevState+1)^0,w,c
  3192   001C70  A4D8               	btfss	status,2,c
  3193   001C72  EF3D  F00E         	goto	u2611
  3194   001C76  EF3F  F00E         	goto	u2610
  3195   001C7A                     u2611:
  3196   001C7A  EF57  F00E         	goto	l3275
  3197   001C7E                     u2610:
  3198   001C7E  B680               	btfsc	128,3,c	;volatile
  3199   001C80  EF44  F00E         	goto	u2621
  3200   001C84  EF46  F00E         	goto	u2620
  3201   001C88                     u2621:
  3202   001C88  EF57  F00E         	goto	l3275
  3203   001C8C                     u2620:
  3204   001C8C                     
  3205                           ;Functions.c: 89:         {;Functions.c: 90:             sunrise_time = seconds+(hour*36
      +                          00);
  3206   001C8C  C09F  F006         	movff	_hour,___wmul@multiplier
  3207   001C90  C0A0  F007         	movff	_hour+1,___wmul@multiplier+1
  3208   001C94  0E0E               	movlw	14
  3209   001C96  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  3210   001C98  0E10               	movlw	16
  3211   001C9A  6E08               	movwf	___wmul@multiplicand^0,c
  3212   001C9C  EC23  F010         	call	___wmul	;wreg free
  3213   001CA0  0100               	movlb	0	; () banked
  3214   001CA2  51A1               	movf	_seconds& (0+255),w,b
  3215   001CA4  2406               	addwf	?___wmul^0,w,c
  3216   001CA6  6E11               	movwf	sunrise@sunrise_time^0,c
  3217   001CA8  51A2               	movf	(_seconds+1)& (0+255),w,b
  3218   001CAA  2007               	addwfc	(?___wmul+1)^0,w,c
  3219   001CAC  6E12               	movwf	(sunrise@sunrise_time+1)^0,c
  3220   001CAE                     l3275:
  3221                           
  3222                           ;Functions.c: 93:     return sunrise_time;
  3223   001CAE  C011  F00C         	movff	sunrise@sunrise_time,?_sunrise
  3224   001CB2  C012  F00D         	movff	sunrise@sunrise_time+1,?_sunrise+1
  3225   001CB6  0012               	return		;funcret
  3226   001CB8                     __end_of_sunrise:
  3227                           	callstack 0
  3228                           
  3229 ;; *************** function ___wmul *****************
  3230 ;; Defined at:
  3231 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;  multiplier      2    5[COMRAM] unsigned int 
  3234 ;;  multiplicand    2    7[COMRAM] unsigned int 
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;  product         2    9[COMRAM] unsigned int 
  3237 ;; Return value:  Size  Location     Type
  3238 ;;                  2    5[COMRAM] unsigned int 
  3239 ;; Registers used:
  3240 ;;		wreg, status,2, status,0, prodl, prodh
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3246 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3247 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3249 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3250 ;;Total ram usage:        6 bytes
  3251 ;; Hardware stack levels used: 1
  3252 ;; Hardware stack levels required when called: 2
  3253 ;; This function calls:
  3254 ;;		Nothing
  3255 ;; This function is called by:
  3256 ;;		_sunrise
  3257 ;;		_sunset
  3258 ;;		_ADC_lightMeter
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262                           	psect	text19
  3263   002046                     __ptext19:
  3264                           	callstack 0
  3265   002046                     ___wmul:
  3266                           	callstack 27
  3267   002046  5006               	movf	___wmul@multiplier^0,w,c
  3268   002048  0208               	mulwf	___wmul@multiplicand^0,c
  3269   00204A  CFF3 F00A          	movff	prodl,___wmul@product
  3270   00204E  CFF4 F00B          	movff	prodh,___wmul@product+1
  3271   002052  5006               	movf	___wmul@multiplier^0,w,c
  3272   002054  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  3273   002056  50F3               	movf	243,w,c
  3274   002058  260B               	addwf	(___wmul@product+1)^0,f,c
  3275   00205A  5007               	movf	(___wmul@multiplier+1)^0,w,c
  3276   00205C  0208               	mulwf	___wmul@multiplicand^0,c
  3277   00205E  50F3               	movf	243,w,c
  3278   002060  260B               	addwf	(___wmul@product+1)^0,f,c
  3279   002062  C00A  F006         	movff	___wmul@product,?___wmul
  3280   002066  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  3281   00206A  0012               	return		;funcret
  3282   00206C                     __end_of___wmul:
  3283                           	callstack 0
  3284                           
  3285 ;; *************** function _streetLightInit *****************
  3286 ;; Defined at:
  3287 ;;		line 12 in file "Functions.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;		None
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;		None
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		None
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3305 ;;Total ram usage:        0 bytes
  3306 ;; Hardware stack levels used: 1
  3307 ;; Hardware stack levels required when called: 2
  3308 ;; This function calls:
  3309 ;;		Nothing
  3310 ;; This function is called by:
  3311 ;;		_main
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           	psect	text20
  3316   002160                     __ptext20:
  3317                           	callstack 0
  3318   002160                     _streetLightInit:
  3319                           	callstack 28
  3320   002160                     
  3321                           ;Functions.c: 14:     LATHbits.LATH3 = 0;
  3322   002160  9680               	bcf	128,3,c	;volatile
  3323                           
  3324                           ;Functions.c: 15:     TRISHbits.TRISH3 = 0;
  3325   002162  9688               	bcf	136,3,c	;volatile
  3326                           
  3327                           ;Functions.c: 16:     LATDbits.LATD7 = 1;
  3328   002164  8E7C               	bsf	124,7,c	;volatile
  3329                           
  3330                           ;Functions.c: 17:     TRISDbits.TRISD7 = 0;
  3331   002166  9E84               	bcf	132,7,c	;volatile
  3332   002168  0012               	return		;funcret
  3333   00216A                     __end_of_streetLightInit:
  3334                           	callstack 0
  3335                           
  3336 ;; *************** function _poweroff *****************
  3337 ;; Defined at:
  3338 ;;		line 61 in file "Functions.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;		None
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;		None
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  1    wreg      void 
  3345 ;; Registers used:
  3346 ;;		wreg, status,2, status,0
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3356 ;;Total ram usage:        0 bytes
  3357 ;; Hardware stack levels used: 1
  3358 ;; Hardware stack levels required when called: 2
  3359 ;; This function calls:
  3360 ;;		Nothing
  3361 ;; This function is called by:
  3362 ;;		_main
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           	psect	text21
  3367   001F36                     __ptext21:
  3368                           	callstack 0
  3369   001F36                     _poweroff:
  3370                           	callstack 28
  3371   001F36                     
  3372                           ;Functions.c: 64:         if (1 <= hour && hour < 5) {
  3373   001F36  0100               	movlb	0	; () banked
  3374   001F38  BFA0               	btfsc	(_hour+1)& (0+255),7,b
  3375   001F3A  EFA7  F00F         	goto	u2581
  3376   001F3E  51A0               	movf	(_hour+1)& (0+255),w,b
  3377   001F40  E108               	bnz	u2580
  3378   001F42  059F               	decf	_hour& (0+255),w,b
  3379   001F44  A0D8               	btfss	status,0,c
  3380   001F46  EFA7  F00F         	goto	u2581
  3381   001F4A  EFA9  F00F         	goto	u2580
  3382   001F4E                     u2581:
  3383   001F4E  EFB8  F00F         	goto	l372
  3384   001F52                     u2580:
  3385   001F52                     
  3386                           ; BSR set to: 0
  3387   001F52  BFA0               	btfsc	(_hour+1)& (0+255),7,b
  3388   001F54  EFB7  F00F         	goto	u2590
  3389   001F58  51A0               	movf	(_hour+1)& (0+255),w,b
  3390   001F5A  E107               	bnz	u2591
  3391   001F5C  0E05               	movlw	5
  3392   001F5E  5D9F               	subwf	_hour& (0+255),w,b
  3393   001F60  B0D8               	btfsc	status,0,c
  3394   001F62  EFB5  F00F         	goto	u2591
  3395   001F66  EFB7  F00F         	goto	u2590
  3396   001F6A                     u2591:
  3397   001F6A  EFB8  F00F         	goto	l372
  3398   001F6E                     u2590:
  3399   001F6E                     
  3400                           ; BSR set to: 0
  3401                           ;Functions.c: 65:             LATHbits.LATH3 = 0;
  3402   001F6E  9680               	bcf	128,3,c	;volatile
  3403   001F70                     l372:
  3404                           
  3405                           ; BSR set to: 0
  3406   001F70  0012               	return		;funcret
  3407   001F72                     __end_of_poweroff:
  3408                           	callstack 0
  3409                           
  3410 ;; *************** function _increment *****************
  3411 ;; Defined at:
  3412 ;;		line 19 in file "Functions.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;		None
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;		None
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      void 
  3419 ;; Registers used:
  3420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3428 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3429 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3430 ;;Total ram usage:        2 bytes
  3431 ;; Hardware stack levels used: 1
  3432 ;; Hardware stack levels required when called: 3
  3433 ;; This function calls:
  3434 ;;		_LEDarray_disp_bin
  3435 ;; This function is called by:
  3436 ;;		_main
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440                           	psect	text22
  3441   001546                     __ptext22:
  3442                           	callstack 0
  3443   001546                     _increment:
  3444                           	callstack 27
  3445   001546                     
  3446                           ;Functions.c: 21:     if (year%4 == 0)
  3447   001546  0E03               	movlw	3
  3448   001548  0101               	movlb	1	; () banked
  3449   00154A  15A0               	andwf	_year& (0+255),w,b
  3450   00154C  6E20               	movwf	??_increment^0,c
  3451   00154E  0E00               	movlw	0
  3452   001550  15A1               	andwf	(_year+1)& (0+255),w,b
  3453   001552  6E21               	movwf	(??_increment+1)^0,c
  3454   001554  5020               	movf	??_increment^0,w,c
  3455   001556  1021               	iorwf	(??_increment+1)^0,w,c
  3456   001558  A4D8               	btfss	status,2,c
  3457   00155A  EFB1  F00A         	goto	u2521
  3458   00155E  EFB3  F00A         	goto	u2520
  3459   001562                     u2521:
  3460   001562  EFB9  F00A         	goto	l3229
  3461   001566                     u2520:
  3462   001566                     
  3463                           ; BSR set to: 1
  3464                           ;Functions.c: 22:     {;Functions.c: 23:         month[1] = 29;
  3465   001566  0E00               	movlw	0
  3466   001568  6F8B               	movwf	(_month+3)& (0+255),b
  3467   00156A  0E1D               	movlw	29
  3468   00156C  6F8A               	movwf	(_month+2)& (0+255),b
  3469                           
  3470                           ;Functions.c: 24:     }
  3471   00156E  EFBD  F00A         	goto	l3231
  3472   001572                     l3229:
  3473                           
  3474                           ; BSR set to: 1
  3475                           ;Functions.c: 26:     {;Functions.c: 27:         month[1] = 28;
  3476   001572  0E00               	movlw	0
  3477   001574  6F8B               	movwf	(_month+3)& (0+255),b
  3478   001576  0E1C               	movlw	28
  3479   001578  6F8A               	movwf	(_month+2)& (0+255),b
  3480   00157A                     l3231:
  3481                           
  3482                           ; BSR set to: 1
  3483                           ;Functions.c: 29:     if (seconds == 1)
  3484   00157A  0100               	movlb	0	; () banked
  3485   00157C  05A1               	decf	_seconds& (0+255),w,b
  3486   00157E  11A2               	iorwf	(_seconds+1)& (0+255),w,b
  3487   001580  A4D8               	btfss	status,2,c
  3488   001582  EFC5  F00A         	goto	u2531
  3489   001586  EFC7  F00A         	goto	u2530
  3490   00158A                     u2531:
  3491   00158A  EFCD  F00A         	goto	l3237
  3492   00158E                     u2530:
  3493   00158E                     
  3494                           ; BSR set to: 0
  3495                           ;Functions.c: 30:     {;Functions.c: 31:         hour++;
  3496   00158E  4B9F               	infsnz	_hour& (0+255),f,b
  3497   001590  2BA0               	incf	(_hour+1)& (0+255),f,b
  3498   001592                     
  3499                           ; BSR set to: 0
  3500                           ;Functions.c: 33:         seconds = 0;
  3501   001592  0E00               	movlw	0
  3502   001594  6FA2               	movwf	(_seconds+1)& (0+255),b
  3503   001596  0E00               	movlw	0
  3504   001598  6FA1               	movwf	_seconds& (0+255),b
  3505   00159A                     l3237:
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;Functions.c: 35:     if (hour == 5)
  3509   00159A  0E05               	movlw	5
  3510   00159C  199F               	xorwf	_hour& (0+255),w,b
  3511   00159E  11A0               	iorwf	(_hour+1)& (0+255),w,b
  3512   0015A0  A4D8               	btfss	status,2,c
  3513   0015A2  EFD5  F00A         	goto	u2541
  3514   0015A6  EFD7  F00A         	goto	u2540
  3515   0015AA                     u2541:
  3516   0015AA  EFE3  F00A         	goto	l3243
  3517   0015AE                     u2540:
  3518   0015AE                     
  3519                           ; BSR set to: 0
  3520                           ;Functions.c: 36:     {;Functions.c: 37:         day_of_year++;
  3521   0015AE  0101               	movlb	1	; () banked
  3522   0015B0  4BA4               	infsnz	_day_of_year& (0+255),f,b
  3523   0015B2  2BA5               	incf	(_day_of_year+1)& (0+255),f,b
  3524                           
  3525                           ;Functions.c: 39:         day_of_week++;
  3526   0015B4  4A53               	infsnz	_day_of_week^0,f,c
  3527   0015B6  2A54               	incf	(_day_of_week+1)^0,f,c
  3528                           
  3529                           ;Functions.c: 41:         day_of_month++;
  3530   0015B8  4BA2               	infsnz	_day_of_month& (0+255),f,b
  3531   0015BA  2BA3               	incf	(_day_of_month+1)& (0+255),f,b
  3532   0015BC                     
  3533                           ; BSR set to: 1
  3534                           ;Functions.c: 42:         hour = 0;
  3535   0015BC  0E00               	movlw	0
  3536   0015BE  0100               	movlb	0	; () banked
  3537   0015C0  6FA0               	movwf	(_hour+1)& (0+255),b
  3538   0015C2  0E00               	movlw	0
  3539   0015C4  6F9F               	movwf	_hour& (0+255),b
  3540   0015C6                     l3243:
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;Functions.c: 44:     if (day_of_week == 8)
  3544   0015C6  0E08               	movlw	8
  3545   0015C8  1853               	xorwf	_day_of_week^0,w,c
  3546   0015CA  1054               	iorwf	(_day_of_week+1)^0,w,c
  3547   0015CC  A4D8               	btfss	status,2,c
  3548   0015CE  EFEB  F00A         	goto	u2551
  3549   0015D2  EFED  F00A         	goto	u2550
  3550   0015D6                     u2551:
  3551   0015D6  EFF1  F00A         	goto	l3247
  3552   0015DA                     u2550:
  3553   0015DA                     
  3554                           ; BSR set to: 0
  3555                           ;Functions.c: 45:     {;Functions.c: 46:         day_of_week = 1;
  3556   0015DA  0E00               	movlw	0
  3557   0015DC  6E54               	movwf	(_day_of_week+1)^0,c
  3558   0015DE  0E01               	movlw	1
  3559   0015E0  6E53               	movwf	_day_of_week^0,c
  3560   0015E2                     l3247:
  3561                           
  3562                           ; BSR set to: 0
  3563                           ;Functions.c: 48:     if (day_of_month == month[month_num-1])
  3564   0015E2  90D8               	bcf	status,0,c
  3565   0015E4  35A3               	rlcf	_month_num& (0+255),w,b
  3566   0015E6  6ED9               	movwf	fsr2l,c
  3567   0015E8  35A4               	rlcf	(_month_num+1)& (0+255),w,b
  3568   0015EA  6EDA               	movwf	fsr2h,c
  3569   0015EC  0E86               	movlw	low (_month+65534)
  3570   0015EE  26D9               	addwf	fsr2l,f,c
  3571   0015F0  0E01               	movlw	high (_month+65534)
  3572   0015F2  22DA               	addwfc	fsr2h,f,c
  3573   0015F4  0101               	movlb	1	; () banked
  3574   0015F6  51A2               	movf	_day_of_month& (0+255),w,b
  3575   0015F8  18DE               	xorwf	postinc2,w,c
  3576   0015FA  E107               	bnz	u2561
  3577   0015FC  51A3               	movf	(_day_of_month+1)& (0+255),w,b
  3578   0015FE  18DE               	xorwf	postinc2,w,c
  3579   001600  A4D8               	btfss	status,2,c
  3580   001602  EF05  F00B         	goto	u2561
  3581   001606  EF07  F00B         	goto	u2560
  3582   00160A                     u2561:
  3583   00160A  EF0E  F00B         	goto	l3253
  3584   00160E                     u2560:
  3585   00160E                     
  3586                           ; BSR set to: 1
  3587                           ;Functions.c: 49:     {;Functions.c: 50:         day_of_month = 0;
  3588   00160E  0E00               	movlw	0
  3589   001610  6FA3               	movwf	(_day_of_month+1)& (0+255),b
  3590   001612  0E00               	movlw	0
  3591   001614  6FA2               	movwf	_day_of_month& (0+255),b
  3592   001616                     
  3593                           ; BSR set to: 1
  3594                           ;Functions.c: 51:         month_num++;
  3595   001616  0100               	movlb	0	; () banked
  3596   001618  4BA3               	infsnz	_month_num& (0+255),f,b
  3597   00161A  2BA4               	incf	(_month_num+1)& (0+255),f,b
  3598   00161C                     l3253:
  3599                           
  3600                           ;Functions.c: 53:     if (month_num == 13)
  3601   00161C  0E0D               	movlw	13
  3602   00161E  0100               	movlb	0	; () banked
  3603   001620  19A3               	xorwf	_month_num& (0+255),w,b
  3604   001622  11A4               	iorwf	(_month_num+1)& (0+255),w,b
  3605   001624  A4D8               	btfss	status,2,c
  3606   001626  EF17  F00B         	goto	u2571
  3607   00162A  EF19  F00B         	goto	u2570
  3608   00162E                     u2571:
  3609   00162E  EF20  F00B         	goto	l3259
  3610   001632                     u2570:
  3611   001632                     
  3612                           ; BSR set to: 0
  3613                           ;Functions.c: 54:     {;Functions.c: 55:         month_num=0;
  3614   001632  0E00               	movlw	0
  3615   001634  6FA4               	movwf	(_month_num+1)& (0+255),b
  3616   001636  0E00               	movlw	0
  3617   001638  6FA3               	movwf	_month_num& (0+255),b
  3618   00163A                     
  3619                           ; BSR set to: 0
  3620                           ;Functions.c: 56:         year++;
  3621   00163A  0101               	movlb	1	; () banked
  3622   00163C  4BA0               	infsnz	_year& (0+255),f,b
  3623   00163E  2BA1               	incf	(_year+1)& (0+255),f,b
  3624   001640                     l3259:
  3625                           
  3626                           ;Functions.c: 58:     LEDarray_disp_bin(day_of_week);
  3627   001640  C053  F006         	movff	_day_of_week,LEDarray_disp_bin@number
  3628   001644  C054  F007         	movff	_day_of_week+1,LEDarray_disp_bin@number+1
  3629   001648  EC27  F00B         	call	_LEDarray_disp_bin	;wreg free
  3630   00164C  0012               	return		;funcret
  3631   00164E                     __end_of_increment:
  3632                           	callstack 0
  3633                           
  3634 ;; *************** function _LEDarray_disp_bin *****************
  3635 ;; Defined at:
  3636 ;;		line 38 in file "LEDarray.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;  number          2    5[COMRAM] unsigned int 
  3639 ;; Auto vars:     Size  Location     Type
  3640 ;;  ctr             2   29[COMRAM] int 
  3641 ;;  led_arr        18    9[COMRAM] int [9]
  3642 ;;  mask            2   27[COMRAM] int 
  3643 ;; Return value:  Size  Location     Type
  3644 ;;                  1    wreg      void 
  3645 ;; Registers used:
  3646 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3652 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3653 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3654 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3655 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3656 ;;Total ram usage:       26 bytes
  3657 ;; Hardware stack levels used: 1
  3658 ;; Hardware stack levels required when called: 2
  3659 ;; This function calls:
  3660 ;;		Nothing
  3661 ;; This function is called by:
  3662 ;;		_increment
  3663 ;;		_ADC_lightMeter
  3664 ;;		_LEDarray_disp_dec
  3665 ;;		_LEDarray_disp_PPM
  3666 ;;		_incrementseconds
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           	psect	text23
  3671   00164E                     __ptext23:
  3672                           	callstack 0
  3673   00164E                     _LEDarray_disp_bin:
  3674                           	callstack 27
  3675   00164E                     
  3676                           ;LEDarray.c: 38: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 39: {;LEDarray.
      +                          c: 43:     int mask= 0b000000001;
  3677   00164E  0E00               	movlw	0
  3678   001650  6E1D               	movwf	(LEDarray_disp_bin@mask+1)^0,c
  3679   001652  0E01               	movlw	1
  3680   001654  6E1C               	movwf	LEDarray_disp_bin@mask^0,c
  3681                           
  3682                           ;LEDarray.c: 44:     int led_arr[9];;LEDarray.c: 45:     for(int ctr=0;ctr<9;ctr++){
  3683   001656  0E00               	movlw	0
  3684   001658  6E1F               	movwf	(LEDarray_disp_bin@ctr+1)^0,c
  3685   00165A  0E00               	movlw	0
  3686   00165C  6E1E               	movwf	LEDarray_disp_bin@ctr^0,c
  3687   00165E                     l3017:
  3688                           
  3689                           ;LEDarray.c: 46:         if (number & mask)
  3690   00165E  5006               	movf	LEDarray_disp_bin@number^0,w,c
  3691   001660  141C               	andwf	LEDarray_disp_bin@mask^0,w,c
  3692   001662  6E08               	movwf	??_LEDarray_disp_bin^0,c
  3693   001664  5007               	movf	(LEDarray_disp_bin@number+1)^0,w,c
  3694   001666  141D               	andwf	(LEDarray_disp_bin@mask+1)^0,w,c
  3695   001668  6E09               	movwf	(??_LEDarray_disp_bin+1)^0,c
  3696   00166A  5008               	movf	??_LEDarray_disp_bin^0,w,c
  3697   00166C  1009               	iorwf	(??_LEDarray_disp_bin+1)^0,w,c
  3698   00166E  B4D8               	btfsc	status,2,c
  3699   001670  EF3C  F00B         	goto	u2291
  3700   001674  EF3E  F00B         	goto	u2290
  3701   001678                     u2291:
  3702   001678  EF4D  F00B         	goto	l3021
  3703   00167C                     u2290:
  3704   00167C                     
  3705                           ;LEDarray.c: 47:             led_arr[ctr]=1;
  3706   00167C  90D8               	bcf	status,0,c
  3707   00167E  341E               	rlcf	LEDarray_disp_bin@ctr^0,w,c
  3708   001680  6ED9               	movwf	fsr2l,c
  3709   001682  341F               	rlcf	(LEDarray_disp_bin@ctr+1)^0,w,c
  3710   001684  6EDA               	movwf	fsr2h,c
  3711   001686  0E0A               	movlw	low LEDarray_disp_bin@led_arr
  3712   001688  26D9               	addwf	fsr2l,f,c
  3713   00168A  0E00               	movlw	high LEDarray_disp_bin@led_arr
  3714   00168C  22DA               	addwfc	fsr2h,f,c
  3715   00168E  0E01               	movlw	1
  3716   001690  6EDE               	movwf	postinc2,c
  3717   001692  0E00               	movlw	0
  3718   001694  6EDD               	movwf	postdec2,c
  3719   001696  EF5A  F00B         	goto	l3023
  3720   00169A                     l3021:
  3721                           
  3722                           ;LEDarray.c: 50:             led_arr[ctr]=0;
  3723   00169A  90D8               	bcf	status,0,c
  3724   00169C  341E               	rlcf	LEDarray_disp_bin@ctr^0,w,c
  3725   00169E  6ED9               	movwf	fsr2l,c
  3726   0016A0  341F               	rlcf	(LEDarray_disp_bin@ctr+1)^0,w,c
  3727   0016A2  6EDA               	movwf	fsr2h,c
  3728   0016A4  0E0A               	movlw	low LEDarray_disp_bin@led_arr
  3729   0016A6  26D9               	addwf	fsr2l,f,c
  3730   0016A8  0E00               	movlw	high LEDarray_disp_bin@led_arr
  3731   0016AA  22DA               	addwfc	fsr2h,f,c
  3732   0016AC  0E00               	movlw	0
  3733   0016AE  6EDE               	movwf	postinc2,c
  3734   0016B0  0E00               	movlw	0
  3735   0016B2  6EDD               	movwf	postdec2,c
  3736   0016B4                     l3023:
  3737                           
  3738                           ;LEDarray.c: 52:         mask<<=1;
  3739   0016B4  90D8               	bcf	status,0,c
  3740   0016B6  361C               	rlcf	LEDarray_disp_bin@mask^0,f,c
  3741   0016B8  361D               	rlcf	(LEDarray_disp_bin@mask+1)^0,f,c
  3742   0016BA                     
  3743                           ;LEDarray.c: 53:     }
  3744   0016BA  4A1E               	infsnz	LEDarray_disp_bin@ctr^0,f,c
  3745   0016BC  2A1F               	incf	(LEDarray_disp_bin@ctr+1)^0,f,c
  3746   0016BE  BE1F               	btfsc	(LEDarray_disp_bin@ctr+1)^0,7,c
  3747   0016C0  EF6B  F00B         	goto	u2301
  3748   0016C4  501F               	movf	(LEDarray_disp_bin@ctr+1)^0,w,c
  3749   0016C6  E109               	bnz	u2300
  3750   0016C8  0E09               	movlw	9
  3751   0016CA  5C1E               	subwf	LEDarray_disp_bin@ctr^0,w,c
  3752   0016CC  A0D8               	btfss	status,0,c
  3753   0016CE  EF6B  F00B         	goto	u2301
  3754   0016D2  EF6D  F00B         	goto	u2300
  3755   0016D6                     u2301:
  3756   0016D6  EF2F  F00B         	goto	l3017
  3757   0016DA                     u2300:
  3758   0016DA                     
  3759                           ;LEDarray.c: 55:     LATGbits.LATG0 = led_arr[0];
  3760   0016DA  B00A               	btfsc	LEDarray_disp_bin@led_arr^0,0,c
  3761   0016DC  D002               	bra	u2315
  3762   0016DE  907F               	bcf	127,0,c	;volatile
  3763   0016E0  D001               	bra	u2316
  3764   0016E2                     u2315:
  3765   0016E2  807F               	bsf	127,0,c	;volatile
  3766   0016E4                     u2316:
  3767                           
  3768                           ;LEDarray.c: 56:     LATGbits.LATG1 = led_arr[1];
  3769   0016E4  B00C               	btfsc	(LEDarray_disp_bin@led_arr+2)^0,0,c
  3770   0016E6  D002               	bra	u2325
  3771   0016E8  927F               	bcf	127,1,c	;volatile
  3772   0016EA  D001               	bra	u2326
  3773   0016EC                     u2325:
  3774   0016EC  827F               	bsf	127,1,c	;volatile
  3775   0016EE                     u2326:
  3776                           
  3777                           ;LEDarray.c: 57:     LATAbits.LATA2 = led_arr[2];
  3778   0016EE  B00E               	btfsc	(LEDarray_disp_bin@led_arr+4)^0,0,c
  3779   0016F0  D002               	bra	u2335
  3780   0016F2  9479               	bcf	121,2,c	;volatile
  3781   0016F4  D001               	bra	u2336
  3782   0016F6                     u2335:
  3783   0016F6  8479               	bsf	121,2,c	;volatile
  3784   0016F8                     u2336:
  3785                           
  3786                           ;LEDarray.c: 58:     LATFbits.LATF6 = led_arr[3];
  3787   0016F8  B010               	btfsc	(LEDarray_disp_bin@led_arr+6)^0,0,c
  3788   0016FA  D002               	bra	u2345
  3789   0016FC  9C7E               	bcf	126,6,c	;volatile
  3790   0016FE  D001               	bra	u2346
  3791   001700                     u2345:
  3792   001700  8C7E               	bsf	126,6,c	;volatile
  3793   001702                     u2346:
  3794                           
  3795                           ;LEDarray.c: 59:     LATAbits.LATA4 = led_arr[4];
  3796   001702  B012               	btfsc	(LEDarray_disp_bin@led_arr+8)^0,0,c
  3797   001704  D002               	bra	u2355
  3798   001706  9879               	bcf	121,4,c	;volatile
  3799   001708  D001               	bra	u2356
  3800   00170A                     u2355:
  3801   00170A  8879               	bsf	121,4,c	;volatile
  3802   00170C                     u2356:
  3803                           
  3804                           ;LEDarray.c: 60:     LATAbits.LATA5 = led_arr[5];
  3805   00170C  B014               	btfsc	(LEDarray_disp_bin@led_arr+10)^0,0,c
  3806   00170E  D002               	bra	u2365
  3807   001710  9A79               	bcf	121,5,c	;volatile
  3808   001712  D001               	bra	u2366
  3809   001714                     u2365:
  3810   001714  8A79               	bsf	121,5,c	;volatile
  3811   001716                     u2366:
  3812                           
  3813                           ;LEDarray.c: 61:     LATFbits.LATF0 = led_arr[6];
  3814   001716  B016               	btfsc	(LEDarray_disp_bin@led_arr+12)^0,0,c
  3815   001718  D002               	bra	u2375
  3816   00171A  907E               	bcf	126,0,c	;volatile
  3817   00171C  D001               	bra	u2376
  3818   00171E                     u2375:
  3819   00171E  807E               	bsf	126,0,c	;volatile
  3820   001720                     u2376:
  3821                           
  3822                           ;LEDarray.c: 62:     LATBbits.LATB0 = led_arr[7];
  3823   001720  B018               	btfsc	(LEDarray_disp_bin@led_arr+14)^0,0,c
  3824   001722  D002               	bra	u2385
  3825   001724  907A               	bcf	122,0,c	;volatile
  3826   001726  D001               	bra	u2386
  3827   001728                     u2385:
  3828   001728  807A               	bsf	122,0,c	;volatile
  3829   00172A                     u2386:
  3830                           
  3831                           ;LEDarray.c: 63:     LATBbits.LATB1 = led_arr[8];
  3832   00172A  B01A               	btfsc	(LEDarray_disp_bin@led_arr+16)^0,0,c
  3833   00172C  D002               	bra	u2395
  3834   00172E  927A               	bcf	122,1,c	;volatile
  3835   001730  D001               	bra	u2396
  3836   001732                     u2395:
  3837   001732  827A               	bsf	122,1,c	;volatile
  3838   001734                     u2396:
  3839   001734  0012               	return		;funcret
  3840   001736                     __end_of_LEDarray_disp_bin:
  3841                           	callstack 0
  3842                           
  3843 ;; *************** function _daylightsavings *****************
  3844 ;; Defined at:
  3845 ;;		line 121 in file "Functions.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;		None
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;		None
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  1    wreg      void 
  3852 ;; Registers used:
  3853 ;;		wreg, status,2, status,0
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3863 ;;Total ram usage:        0 bytes
  3864 ;; Hardware stack levels used: 1
  3865 ;; Hardware stack levels required when called: 2
  3866 ;; This function calls:
  3867 ;;		Nothing
  3868 ;; This function is called by:
  3869 ;;		_main
  3870 ;; This function uses a non-reentrant model
  3871 ;;
  3872                           
  3873                           	psect	text24
  3874   001D20                     __ptext24:
  3875                           	callstack 0
  3876   001D20                     _daylightsavings:
  3877                           	callstack 28
  3878   001D20                     
  3879                           ;Functions.c: 123:     if (month_num ==3 && day_of_week==7 && 25<=day_of_month<=31)
  3880   001D20  0E03               	movlw	3
  3881   001D22  0100               	movlb	0	; () banked
  3882   001D24  19A3               	xorwf	_month_num& (0+255),w,b
  3883   001D26  11A4               	iorwf	(_month_num+1)& (0+255),w,b
  3884   001D28  A4D8               	btfss	status,2,c
  3885   001D2A  EF99  F00E         	goto	u2681
  3886   001D2E  EF9B  F00E         	goto	u2680
  3887   001D32                     u2681:
  3888   001D32  EFA7  F00E         	goto	l3309
  3889   001D36                     u2680:
  3890   001D36                     
  3891                           ; BSR set to: 0
  3892   001D36  0E07               	movlw	7
  3893   001D38  1853               	xorwf	_day_of_week^0,w,c
  3894   001D3A  1054               	iorwf	(_day_of_week+1)^0,w,c
  3895   001D3C  A4D8               	btfss	status,2,c
  3896   001D3E  EFA3  F00E         	goto	u2691
  3897   001D42  EFA5  F00E         	goto	u2690
  3898   001D46                     u2691:
  3899   001D46  EFA7  F00E         	goto	l3309
  3900   001D4A                     u2690:
  3901   001D4A                     
  3902                           ; BSR set to: 0
  3903                           ;Functions.c: 124:     {;Functions.c: 125:         hour++;
  3904   001D4A  4B9F               	infsnz	_hour& (0+255),f,b
  3905   001D4C  2BA0               	incf	(_hour+1)& (0+255),f,b
  3906   001D4E                     l3309:
  3907                           
  3908                           ; BSR set to: 0
  3909                           ;Functions.c: 127:     if (month_num ==10 && day_of_week==7 && 25<=day_of_month<=31)
  3910   001D4E  0E0A               	movlw	10
  3911   001D50  19A3               	xorwf	_month_num& (0+255),w,b
  3912   001D52  11A4               	iorwf	(_month_num+1)& (0+255),w,b
  3913   001D54  A4D8               	btfss	status,2,c
  3914   001D56  EFAF  F00E         	goto	u2701
  3915   001D5A  EFB1  F00E         	goto	u2700
  3916   001D5E                     u2701:
  3917   001D5E  EFBE  F00E         	goto	l394
  3918   001D62                     u2700:
  3919   001D62                     
  3920                           ; BSR set to: 0
  3921   001D62  0E07               	movlw	7
  3922   001D64  1853               	xorwf	_day_of_week^0,w,c
  3923   001D66  1054               	iorwf	(_day_of_week+1)^0,w,c
  3924   001D68  A4D8               	btfss	status,2,c
  3925   001D6A  EFB9  F00E         	goto	u2711
  3926   001D6E  EFBB  F00E         	goto	u2710
  3927   001D72                     u2711:
  3928   001D72  EFBE  F00E         	goto	l394
  3929   001D76                     u2710:
  3930   001D76                     
  3931                           ; BSR set to: 0
  3932                           ;Functions.c: 128:     {;Functions.c: 129:         hour--;
  3933   001D76  079F               	decf	_hour& (0+255),f,b
  3934   001D78  A0D8               	btfss	status,0,c
  3935   001D7A  07A0               	decf	(_hour+1)& (0+255),f,b
  3936   001D7C                     l394:
  3937                           
  3938                           ; BSR set to: 0
  3939   001D7C  0012               	return		;funcret
  3940   001D7E                     __end_of_daylightsavings:
  3941                           	callstack 0
  3942                           
  3943 ;; *************** function _day1_init *****************
  3944 ;; Defined at:
  3945 ;;		line 70 in file "Functions.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;		None
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;		None
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  1    wreg      void 
  3952 ;; Registers used:
  3953 ;;		wreg, status,2
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3963 ;;Total ram usage:        0 bytes
  3964 ;; Hardware stack levels used: 1
  3965 ;; Hardware stack levels required when called: 2
  3966 ;; This function calls:
  3967 ;;		Nothing
  3968 ;; This function is called by:
  3969 ;;		_main
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973                           	psect	text25
  3974   001EB4                     __ptext25:
  3975                           	callstack 0
  3976   001EB4                     _day1_init:
  3977                           	callstack 28
  3978   001EB4                     
  3979                           ;Functions.c: 72:     seconds = 0;
  3980   001EB4  0E00               	movlw	0
  3981   001EB6  0100               	movlb	0	; () banked
  3982   001EB8  6FA2               	movwf	(_seconds+1)& (0+255),b
  3983   001EBA  0E00               	movlw	0
  3984   001EBC  6FA1               	movwf	_seconds& (0+255),b
  3985                           
  3986                           ;Functions.c: 73:     hour = 0;
  3987   001EBE  0E00               	movlw	0
  3988   001EC0  6FA0               	movwf	(_hour+1)& (0+255),b
  3989   001EC2  0E00               	movlw	0
  3990   001EC4  6F9F               	movwf	_hour& (0+255),b
  3991                           
  3992                           ;Functions.c: 74:     day_of_year = 1;
  3993   001EC6  0E00               	movlw	0
  3994   001EC8  0101               	movlb	1	; () banked
  3995   001ECA  6FA5               	movwf	(_day_of_year+1)& (0+255),b
  3996   001ECC  0E01               	movlw	1
  3997   001ECE  6FA4               	movwf	_day_of_year& (0+255),b
  3998                           
  3999                           ;Functions.c: 75:     day_of_month = 1;
  4000   001ED0  0E00               	movlw	0
  4001   001ED2  6FA3               	movwf	(_day_of_month+1)& (0+255),b
  4002   001ED4  0E01               	movlw	1
  4003   001ED6  6FA2               	movwf	_day_of_month& (0+255),b
  4004                           
  4005                           ;Functions.c: 76:     day_of_week = 6;
  4006   001ED8  0E00               	movlw	0
  4007   001EDA  6E54               	movwf	(_day_of_week+1)^0,c
  4008   001EDC  0E06               	movlw	6
  4009   001EDE  6E53               	movwf	_day_of_week^0,c
  4010                           
  4011                           ;Functions.c: 77:     year = 2022;
  4012   001EE0  0E07               	movlw	7
  4013   001EE2  6FA1               	movwf	(_year+1)& (0+255),b
  4014   001EE4  0EE6               	movlw	230
  4015   001EE6  6FA0               	movwf	_year& (0+255),b
  4016                           
  4017                           ;Functions.c: 78:     month_num = 1;
  4018   001EE8  0E00               	movlw	0
  4019   001EEA  0100               	movlb	0	; () banked
  4020   001EEC  6FA4               	movwf	(_month_num+1)& (0+255),b
  4021   001EEE  0E01               	movlw	1
  4022   001EF0  6FA3               	movwf	_month_num& (0+255),b
  4023   001EF2                     
  4024                           ; BSR set to: 0
  4025                           ;Functions.c: 79:     LATHbits.LATH3 = 1;
  4026   001EF2  8680               	bsf	128,3,c	;volatile
  4027   001EF4                     
  4028                           ; BSR set to: 0
  4029   001EF4  0012               	return		;funcret
  4030   001EF6                     __end_of_day1_init:
  4031                           	callstack 0
  4032                           
  4033 ;; *************** function _Timer0_init *****************
  4034 ;; Defined at:
  4035 ;;		line 7 in file "timers.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;		None
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;		None
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  1    wreg      void 
  4042 ;; Registers used:
  4043 ;;		wreg, status,2
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4053 ;;Total ram usage:        0 bytes
  4054 ;; Hardware stack levels used: 1
  4055 ;; Hardware stack levels required when called: 2
  4056 ;; This function calls:
  4057 ;;		Nothing
  4058 ;; This function is called by:
  4059 ;;		_main
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           	psect	text26
  4064   0020DA                     __ptext26:
  4065                           	callstack 0
  4066   0020DA                     _Timer0_init:
  4067                           	callstack 28
  4068   0020DA                     
  4069                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  4070   0020DA  50D6               	movf	214,w,c	;volatile
  4071   0020DC  0B1F               	andlw	-225
  4072   0020DE  0940               	iorlw	64
  4073   0020E0  6ED6               	movwf	214,c	;volatile
  4074   0020E2                     
  4075                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  4076   0020E2  88D6               	bsf	214,4,c	;volatile
  4077                           
  4078                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  4079   0020E4  50D6               	movf	214,w,c	;volatile
  4080   0020E6  0BF0               	andlw	-16
  4081   0020E8  0908               	iorlw	8
  4082   0020EA  6ED6               	movwf	214,c	;volatile
  4083   0020EC                     
  4084                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  4085   0020EC  88D5               	bsf	213,4,c	;volatile
  4086                           
  4087                           ;timers.c: 15:     TMR0H=0b00001011;
  4088   0020EE  0E0B               	movlw	11
  4089   0020F0  6ED4               	movwf	212,c	;volatile
  4090                           
  4091                           ;timers.c: 16:     TMR0L=0b11011011;
  4092   0020F2  0EDB               	movlw	219
  4093   0020F4  6ED3               	movwf	211,c	;volatile
  4094   0020F6                     
  4095                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  4096   0020F6  8ED5               	bsf	213,7,c	;volatile
  4097   0020F8  0012               	return		;funcret
  4098   0020FA                     __end_of_Timer0_init:
  4099                           	callstack 0
  4100                           
  4101 ;; *************** function _LEDarray_init *****************
  4102 ;; Defined at:
  4103 ;;		line 10 in file "LEDarray.c"
  4104 ;; Parameters:    Size  Location     Type
  4105 ;;		None
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;		None
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  1    wreg      void 
  4110 ;; Registers used:
  4111 ;;		None
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4121 ;;Total ram usage:        0 bytes
  4122 ;; Hardware stack levels used: 1
  4123 ;; Hardware stack levels required when called: 2
  4124 ;; This function calls:
  4125 ;;		Nothing
  4126 ;; This function is called by:
  4127 ;;		_main
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           	psect	text27
  4132   00206C                     __ptext27:
  4133                           	callstack 0
  4134   00206C                     _LEDarray_init:
  4135                           	callstack 28
  4136   00206C                     
  4137                           ;LEDarray.c: 13:     TRISGbits.TRISG0 = 0;
  4138   00206C  9087               	bcf	135,0,c	;volatile
  4139                           
  4140                           ;LEDarray.c: 14:     TRISGbits.TRISG1 = 0;
  4141   00206E  9287               	bcf	135,1,c	;volatile
  4142                           
  4143                           ;LEDarray.c: 15:     TRISAbits.TRISA2 = 0;
  4144   002070  9481               	bcf	129,2,c	;volatile
  4145                           
  4146                           ;LEDarray.c: 16:     TRISFbits.TRISF6 = 0;
  4147   002072  9C86               	bcf	134,6,c	;volatile
  4148                           
  4149                           ;LEDarray.c: 17:     TRISAbits.TRISA4 = 0;
  4150   002074  9881               	bcf	129,4,c	;volatile
  4151                           
  4152                           ;LEDarray.c: 18:     TRISAbits.TRISA5 = 0;
  4153   002076  9A81               	bcf	129,5,c	;volatile
  4154                           
  4155                           ;LEDarray.c: 19:     TRISFbits.TRISF0 = 0;
  4156   002078  9086               	bcf	134,0,c	;volatile
  4157                           
  4158                           ;LEDarray.c: 20:     TRISBbits.TRISB0 = 0;
  4159   00207A  9082               	bcf	130,0,c	;volatile
  4160                           
  4161                           ;LEDarray.c: 21:     TRISBbits.TRISB1 = 0;
  4162   00207C  9282               	bcf	130,1,c	;volatile
  4163                           
  4164                           ;LEDarray.c: 24:     LATGbits.LATG0 = 0;
  4165   00207E  907F               	bcf	127,0,c	;volatile
  4166                           
  4167                           ;LEDarray.c: 25:     LATGbits.LATG1 = 0;
  4168   002080  927F               	bcf	127,1,c	;volatile
  4169                           
  4170                           ;LEDarray.c: 26:     LATAbits.LATA2 = 0;
  4171   002082  9479               	bcf	121,2,c	;volatile
  4172                           
  4173                           ;LEDarray.c: 27:     LATFbits.LATF6 = 0;
  4174   002084  9C7E               	bcf	126,6,c	;volatile
  4175                           
  4176                           ;LEDarray.c: 28:     LATAbits.LATA4 = 0;
  4177   002086  9879               	bcf	121,4,c	;volatile
  4178                           
  4179                           ;LEDarray.c: 29:     LATAbits.LATA5 = 0;
  4180   002088  9A79               	bcf	121,5,c	;volatile
  4181                           
  4182                           ;LEDarray.c: 30:     LATFbits.LATF0 = 0;
  4183   00208A  907E               	bcf	126,0,c	;volatile
  4184                           
  4185                           ;LEDarray.c: 31:     LATBbits.LATB0 = 0;
  4186   00208C  907A               	bcf	122,0,c	;volatile
  4187                           
  4188                           ;LEDarray.c: 32:     LATBbits.LATB1 = 0;
  4189   00208E  927A               	bcf	122,1,c	;volatile
  4190   002090  0012               	return		;funcret
  4191   002092                     __end_of_LEDarray_init:
  4192                           	callstack 0
  4193                           
  4194 ;; *************** function _LCD_setline *****************
  4195 ;; Defined at:
  4196 ;;		line 95 in file "LCD.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;  line            1    wreg     unsigned char 
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;  line            1    8[COMRAM] unsigned char 
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  1    wreg      void 
  4203 ;; Registers used:
  4204 ;;		wreg, status,2, status,0, cstack
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4211 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4213 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4214 ;;Total ram usage:        1 bytes
  4215 ;; Hardware stack levels used: 1
  4216 ;; Hardware stack levels required when called: 5
  4217 ;; This function calls:
  4218 ;;		_LCD_sendbyte
  4219 ;; This function is called by:
  4220 ;;		_main
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           	psect	text28
  4225   001FE2                     __ptext28:
  4226                           	callstack 0
  4227   001FE2                     _LCD_setline:
  4228                           	callstack 25
  4229                           
  4230                           ;incstack = 0
  4231                           ;LCD_setline@line stored from wreg
  4232   001FE2  6E09               	movwf	LCD_setline@line^0,c
  4233   001FE4                     
  4234                           ;LCD.c: 96:     if(line&0b01)
  4235   001FE4  A009               	btfss	LCD_setline@line^0,0,c
  4236   001FE6  EFF7  F00F         	goto	u2501
  4237   001FEA  EFF9  F00F         	goto	u2500
  4238   001FEE                     u2501:
  4239   001FEE  EFFE  F00F         	goto	l3215
  4240   001FF2                     u2500:
  4241   001FF2                     
  4242                           ;LCD.c: 97:     {;LCD.c: 98:         LCD_sendbyte(0x80,0);
  4243   001FF2  0E00               	movlw	0
  4244   001FF4  6E07               	movwf	LCD_sendbyte@type^0,c
  4245   001FF6  0E80               	movlw	128
  4246   001FF8  EC0B  F010         	call	_LCD_sendbyte
  4247   001FFC                     l3215:
  4248                           
  4249                           ;LCD.c: 100:     if(line&0b10)
  4250   001FFC  A209               	btfss	LCD_setline@line^0,1,c
  4251   001FFE  EF03  F010         	goto	u2511
  4252   002002  EF05  F010         	goto	u2510
  4253   002006                     u2511:
  4254   002006  EF0A  F010         	goto	l437
  4255   00200A                     u2510:
  4256   00200A                     
  4257                           ;LCD.c: 101:     {;LCD.c: 102:         LCD_sendbyte(0xC0,0);
  4258   00200A  0E00               	movlw	0
  4259   00200C  6E07               	movwf	LCD_sendbyte@type^0,c
  4260   00200E  0EC0               	movlw	192
  4261   002010  EC0B  F010         	call	_LCD_sendbyte
  4262   002014                     l437:
  4263   002014  0012               	return		;funcret
  4264   002016                     __end_of_LCD_setline:
  4265                           	callstack 0
  4266                           
  4267 ;; *************** function _LCD_Init *****************
  4268 ;; Defined at:
  4269 ;;		line 53 in file "LCD.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;		None
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;		None
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  1    wreg      void 
  4276 ;; Registers used:
  4277 ;;		wreg, status,2, status,0, cstack
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4285 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4286 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4287 ;;Total ram usage:        2 bytes
  4288 ;; Hardware stack levels used: 1
  4289 ;; Hardware stack levels required when called: 5
  4290 ;; This function calls:
  4291 ;;		_LCD_sendbyte
  4292 ;;		_LCD_sendnibble
  4293 ;; This function is called by:
  4294 ;;		_main
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           	psect	text29
  4299   0018C4                     __ptext29:
  4300                           	callstack 0
  4301   0018C4                     _LCD_Init:
  4302                           	callstack 25
  4303   0018C4                     
  4304                           ;LCD.c: 57:     TRISCbits.TRISC2 = 0;
  4305   0018C4  9483               	bcf	131,2,c	;volatile
  4306                           
  4307                           ;LCD.c: 58:     TRISCbits.TRISC6 = 0;
  4308   0018C6  9C83               	bcf	131,6,c	;volatile
  4309                           
  4310                           ;LCD.c: 60:     TRISBbits.TRISB3 = 0;
  4311   0018C8  9682               	bcf	130,3,c	;volatile
  4312                           
  4313                           ;LCD.c: 61:     TRISBbits.TRISB2 = 0;
  4314   0018CA  9482               	bcf	130,2,c	;volatile
  4315                           
  4316                           ;LCD.c: 62:     TRISEbits.TRISE1 = 0;
  4317   0018CC  9285               	bcf	133,1,c	;volatile
  4318                           
  4319                           ;LCD.c: 63:     TRISEbits.TRISE3 = 0;
  4320   0018CE  9685               	bcf	133,3,c	;volatile
  4321                           
  4322                           ;LCD.c: 65:     LATBbits.LATB3 = 0;
  4323   0018D0  967A               	bcf	122,3,c	;volatile
  4324                           
  4325                           ;LCD.c: 66:     LATBbits.LATB2 = 0;
  4326   0018D2  947A               	bcf	122,2,c	;volatile
  4327                           
  4328                           ;LCD.c: 67:     LATEbits.LATE1 = 0;
  4329   0018D4  927D               	bcf	125,1,c	;volatile
  4330                           
  4331                           ;LCD.c: 68:     LATEbits.LATE3 = 0;
  4332   0018D6  967D               	bcf	125,3,c	;volatile
  4333                           
  4334                           ;LCD.c: 70:     LATCbits.LATC2 = 0;
  4335   0018D8  947B               	bcf	123,2,c	;volatile
  4336                           
  4337                           ;LCD.c: 71:     LATCbits.LATC6 = 0;
  4338   0018DA  9C7B               	bcf	123,6,c	;volatile
  4339   0018DC                     
  4340                           ;LCD.c: 72:     _delay((unsigned long)((40)*(64000000/4000.0)));
  4341   0018DC  0E04               	movlw	4
  4342   0018DE  6E0A               	movwf	(??_LCD_Init+1)^0,c
  4343   0018E0  0E40               	movlw	64
  4344   0018E2  6E09               	movwf	??_LCD_Init^0,c
  4345   0018E4  0E26               	movlw	38
  4346   0018E6                     u2777:
  4347   0018E6  2EE8               	decfsz	wreg,f,c
  4348   0018E8  D7FE               	bra	u2777
  4349   0018EA  2E09               	decfsz	??_LCD_Init^0,f,c
  4350   0018EC  D7FC               	bra	u2777
  4351   0018EE  2E0A               	decfsz	(??_LCD_Init+1)^0,f,c
  4352   0018F0  D7FA               	bra	u2777
  4353   0018F2  D000               	nop2	
  4354   0018F4                     
  4355                           ;LCD.c: 77:     LCD_sendnibble(0b0011);
  4356   0018F4  0E03               	movlw	3
  4357   0018F6  EC5C  F00E         	call	_LCD_sendnibble
  4358   0018FA                     
  4359                           ;LCD.c: 78:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  4360   0018FA  0ED5               	movlw	213
  4361   0018FC                     u2787:
  4362   0018FC  2EE8               	decfsz	wreg,f,c
  4363   0018FE  D7FE               	bra	u2787
  4364   001900  F000               	nop	
  4365   001902                     
  4366                           ;LCD.c: 79:     LCD_sendbyte(0b00101100,0);
  4367   001902  0E00               	movlw	0
  4368   001904  6E07               	movwf	LCD_sendbyte@type^0,c
  4369   001906  0E2C               	movlw	44
  4370   001908  EC0B  F010         	call	_LCD_sendbyte
  4371   00190C                     
  4372                           ;LCD.c: 80:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  4373   00190C  0ED5               	movlw	213
  4374   00190E                     u2797:
  4375   00190E  2EE8               	decfsz	wreg,f,c
  4376   001910  D7FE               	bra	u2797
  4377   001912  F000               	nop	
  4378   001914                     
  4379                           ;LCD.c: 81:     LCD_sendbyte(0b00101100,0);
  4380   001914  0E00               	movlw	0
  4381   001916  6E07               	movwf	LCD_sendbyte@type^0,c
  4382   001918  0E2C               	movlw	44
  4383   00191A  EC0B  F010         	call	_LCD_sendbyte
  4384   00191E                     
  4385                           ;LCD.c: 82:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  4386   00191E  0ED5               	movlw	213
  4387   001920                     u2807:
  4388   001920  2EE8               	decfsz	wreg,f,c
  4389   001922  D7FE               	bra	u2807
  4390   001924  F000               	nop	
  4391   001926                     
  4392                           ;LCD.c: 83:     LCD_sendbyte(0b00001100,0);
  4393   001926  0E00               	movlw	0
  4394   001928  6E07               	movwf	LCD_sendbyte@type^0,c
  4395   00192A  0E0C               	movlw	12
  4396   00192C  EC0B  F010         	call	_LCD_sendbyte
  4397   001930                     
  4398                           ;LCD.c: 84:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  4399   001930  0ED5               	movlw	213
  4400   001932                     u2817:
  4401   001932  2EE8               	decfsz	wreg,f,c
  4402   001934  D7FE               	bra	u2817
  4403   001936  F000               	nop	
  4404   001938                     
  4405                           ;LCD.c: 85:     LCD_sendbyte(0b00000001,0);
  4406   001938  0E00               	movlw	0
  4407   00193A  6E07               	movwf	LCD_sendbyte@type^0,c
  4408   00193C  0E01               	movlw	1
  4409   00193E  EC0B  F010         	call	_LCD_sendbyte
  4410   001942                     
  4411                           ;LCD.c: 86:     _delay((unsigned long)((1.53)*(64000000/4000.0)));
  4412   001942  0E20               	movlw	32
  4413   001944  6E09               	movwf	??_LCD_Init^0,c
  4414   001946  0ECA               	movlw	202
  4415   001948                     u2827:
  4416   001948  2EE8               	decfsz	wreg,f,c
  4417   00194A  D7FE               	bra	u2827
  4418   00194C  2E09               	decfsz	??_LCD_Init^0,f,c
  4419   00194E  D7FC               	bra	u2827
  4420   001950                     
  4421                           ;LCD.c: 87:     LCD_sendbyte(0b00000111,0);
  4422   001950  0E00               	movlw	0
  4423   001952  6E07               	movwf	LCD_sendbyte@type^0,c
  4424   001954  0E07               	movlw	7
  4425   001956  EC0B  F010         	call	_LCD_sendbyte
  4426   00195A                     
  4427                           ;LCD.c: 88:     LCD_sendbyte(0b00001100,0);
  4428   00195A  0E00               	movlw	0
  4429   00195C  6E07               	movwf	LCD_sendbyte@type^0,c
  4430   00195E  0E0C               	movlw	12
  4431   001960  EC0B  F010         	call	_LCD_sendbyte
  4432   001964  0012               	return		;funcret
  4433   001966                     __end_of_LCD_Init:
  4434                           	callstack 0
  4435                           
  4436 ;; *************** function _LCD_sendbyte *****************
  4437 ;; Defined at:
  4438 ;;		line 36 in file "LCD.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;  Byte            1    wreg     unsigned char 
  4441 ;;  type            1    6[COMRAM] unsigned char 
  4442 ;; Auto vars:     Size  Location     Type
  4443 ;;  Byte            1    7[COMRAM] unsigned char 
  4444 ;; Return value:  Size  Location     Type
  4445 ;;                  1    wreg      void 
  4446 ;; Registers used:
  4447 ;;		wreg, status,2, status,0, cstack
  4448 ;; Tracked objects:
  4449 ;;		On entry : 0/0
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4453 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4454 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4456 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4457 ;;Total ram usage:        2 bytes
  4458 ;; Hardware stack levels used: 1
  4459 ;; Hardware stack levels required when called: 4
  4460 ;; This function calls:
  4461 ;;		_LCD_sendnibble
  4462 ;; This function is called by:
  4463 ;;		_LCD_Init
  4464 ;;		_LCD_setline
  4465 ;;		_LCD_sendstring
  4466 ;;		_LCD_scroll
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469                           
  4470                           	psect	text30
  4471   002016                     __ptext30:
  4472                           	callstack 0
  4473   002016                     _LCD_sendbyte:
  4474                           	callstack 24
  4475                           
  4476                           ;incstack = 0
  4477                           ;LCD_sendbyte@Byte stored from wreg
  4478   002016  6E08               	movwf	LCD_sendbyte@Byte^0,c
  4479   002018                     
  4480                           ;LCD.c: 37:     if(type&0b1)
  4481   002018  A007               	btfss	LCD_sendbyte@type^0,0,c
  4482   00201A  EF11  F010         	goto	u2271
  4483   00201E  EF13  F010         	goto	u2270
  4484   002022                     u2271:
  4485   002022  EF16  F010         	goto	l427
  4486   002026                     u2270:
  4487   002026                     
  4488                           ;LCD.c: 38:     {;LCD.c: 39:         LATCbits.LATC6 = 1;
  4489   002026  8C7B               	bsf	123,6,c	;volatile
  4490                           
  4491                           ;LCD.c: 40:     }
  4492   002028  EF17  F010         	goto	l2995
  4493   00202C                     l427:
  4494                           
  4495                           ;LCD.c: 42:     {;LCD.c: 43:         (LATCbits.LATC6 = 0);
  4496   00202C  9C7B               	bcf	123,6,c	;volatile
  4497   00202E                     l2995:
  4498                           
  4499                           ;LCD.c: 45:     LCD_sendnibble(Byte>>4);
  4500   00202E  3808               	swapf	LCD_sendbyte@Byte^0,w,c
  4501   002030  0B0F               	andlw	15
  4502   002032  EC5C  F00E         	call	_LCD_sendnibble
  4503   002036                     
  4504                           ;LCD.c: 46:     LCD_sendnibble(Byte);
  4505   002036  5008               	movf	LCD_sendbyte@Byte^0,w,c
  4506   002038  EC5C  F00E         	call	_LCD_sendnibble
  4507   00203C                     
  4508                           ;LCD.c: 47:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  4509   00203C  0EA0               	movlw	160
  4510   00203E                     u2837:
  4511   00203E  D000               	nop2	
  4512   002040  2EE8               	decfsz	wreg,f,c
  4513   002042  D7FD               	bra	u2837
  4514   002044  0012               	return		;funcret
  4515   002046                     __end_of_LCD_sendbyte:
  4516                           	callstack 0
  4517                           
  4518 ;; *************** function _LCD_sendnibble *****************
  4519 ;; Defined at:
  4520 ;;		line 17 in file "LCD.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;  number          1    wreg     unsigned char 
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;  number          1    5[COMRAM] unsigned char 
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  1    wreg      void 
  4527 ;; Registers used:
  4528 ;;		wreg, cstack
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4535 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4537 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4538 ;;Total ram usage:        1 bytes
  4539 ;; Hardware stack levels used: 1
  4540 ;; Hardware stack levels required when called: 3
  4541 ;; This function calls:
  4542 ;;		_LCD_E_TOG
  4543 ;; This function is called by:
  4544 ;;		_LCD_sendbyte
  4545 ;;		_LCD_Init
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549                           	psect	text31
  4550   001CB8                     __ptext31:
  4551                           	callstack 0
  4552   001CB8                     _LCD_sendnibble:
  4553                           	callstack 24
  4554                           
  4555                           ;incstack = 0
  4556                           ;LCD_sendnibble@number stored from wreg
  4557   001CB8  6E06               	movwf	LCD_sendnibble@number^0,c
  4558   001CBA                     
  4559                           ;LCD.c: 20:     if(number&0b0001) LATBbits.LATB3=1;
  4560   001CBA  A006               	btfss	LCD_sendnibble@number^0,0,c
  4561   001CBC  EF62  F00E         	goto	u2201
  4562   001CC0  EF64  F00E         	goto	u2200
  4563   001CC4                     u2201:
  4564   001CC4  EF67  F00E         	goto	l416
  4565   001CC8                     u2200:
  4566   001CC8  867A               	bsf	122,3,c	;volatile
  4567   001CCA  EF68  F00E         	goto	l2945
  4568   001CCE                     l416:
  4569   001CCE  967A               	bcf	122,3,c	;volatile
  4570   001CD0                     l2945:
  4571                           
  4572                           ;LCD.c: 22:     if(number&0b0010) LATBbits.LATB2=1;
  4573   001CD0  A206               	btfss	LCD_sendnibble@number^0,1,c
  4574   001CD2  EF6D  F00E         	goto	u2211
  4575   001CD6  EF6F  F00E         	goto	u2210
  4576   001CDA                     u2211:
  4577   001CDA  EF72  F00E         	goto	l418
  4578   001CDE                     u2210:
  4579   001CDE  847A               	bsf	122,2,c	;volatile
  4580   001CE0  EF73  F00E         	goto	l2949
  4581   001CE4                     l418:
  4582   001CE4  947A               	bcf	122,2,c	;volatile
  4583   001CE6                     l2949:
  4584                           
  4585                           ;LCD.c: 24:     if(number&0b0100) LATEbits.LATE3=1;
  4586   001CE6  A406               	btfss	LCD_sendnibble@number^0,2,c
  4587   001CE8  EF78  F00E         	goto	u2221
  4588   001CEC  EF7A  F00E         	goto	u2220
  4589   001CF0                     u2221:
  4590   001CF0  EF7D  F00E         	goto	l420
  4591   001CF4                     u2220:
  4592   001CF4  867D               	bsf	125,3,c	;volatile
  4593   001CF6  EF7E  F00E         	goto	l2953
  4594   001CFA                     l420:
  4595   001CFA  967D               	bcf	125,3,c	;volatile
  4596   001CFC                     l2953:
  4597                           
  4598                           ;LCD.c: 26:     if(number&0b1000) LATEbits.LATE1=1;
  4599   001CFC  A606               	btfss	LCD_sendnibble@number^0,3,c
  4600   001CFE  EF83  F00E         	goto	u2231
  4601   001D02  EF85  F00E         	goto	u2230
  4602   001D06                     u2231:
  4603   001D06  EF88  F00E         	goto	l422
  4604   001D0A                     u2230:
  4605   001D0A  827D               	bsf	125,1,c	;volatile
  4606   001D0C  EF89  F00E         	goto	l2957
  4607   001D10                     l422:
  4608   001D10  927D               	bcf	125,1,c	;volatile
  4609   001D12                     l2957:
  4610                           
  4611                           ;LCD.c: 28:     LCD_E_TOG();
  4612   001D12  ECA9  F010         	call	_LCD_E_TOG	;wreg free
  4613   001D16                     
  4614                           ;LCD.c: 29:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  4615   001D16  0E1A               	movlw	26
  4616   001D18                     u2847:
  4617   001D18  2EE8               	decfsz	wreg,f,c
  4618   001D1A  D7FE               	bra	u2847
  4619   001D1C  D000               	nop2	
  4620   001D1E  0012               	return		;funcret
  4621   001D20                     __end_of_LCD_sendnibble:
  4622                           	callstack 0
  4623                           
  4624 ;; *************** function _LCD_E_TOG *****************
  4625 ;; Defined at:
  4626 ;;		line 8 in file "LCD.c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;		None
  4629 ;; Auto vars:     Size  Location     Type
  4630 ;;		None
  4631 ;; Return value:  Size  Location     Type
  4632 ;;                  1    wreg      void 
  4633 ;; Registers used:
  4634 ;;		wreg
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4644 ;;Total ram usage:        0 bytes
  4645 ;; Hardware stack levels used: 1
  4646 ;; Hardware stack levels required when called: 2
  4647 ;; This function calls:
  4648 ;;		Nothing
  4649 ;; This function is called by:
  4650 ;;		_LCD_sendnibble
  4651 ;; This function uses a non-reentrant model
  4652 ;;
  4653                           
  4654                           	psect	text32
  4655   002152                     __ptext32:
  4656                           	callstack 0
  4657   002152                     _LCD_E_TOG:
  4658                           	callstack 24
  4659   002152                     
  4660                           ;LCD.c: 9:     LATCbits.LATC2=1;
  4661   002152  847B               	bsf	123,2,c	;volatile
  4662   002154                     
  4663                           ;LCD.c: 10:     _delay((unsigned long)((2)*(64000000/4000000.0)));
  4664   002154  0E0A               	movlw	10
  4665   002156                     u2857:
  4666   002156  2EE8               	decfsz	wreg,f,c
  4667   002158  D7FE               	bra	u2857
  4668   00215A  D000               	nop2	
  4669   00215C                     
  4670                           ;LCD.c: 11:     LATCbits.LATC2=0;
  4671   00215C  947B               	bcf	123,2,c	;volatile
  4672   00215E  0012               	return		;funcret
  4673   002160                     __end_of_LCD_E_TOG:
  4674                           	callstack 0
  4675                           
  4676 ;; *************** function _Interrupts_init *****************
  4677 ;; Defined at:
  4678 ;;		line 10 in file "interrupts.c"
  4679 ;; Parameters:    Size  Location     Type
  4680 ;;		None
  4681 ;; Auto vars:     Size  Location     Type
  4682 ;;		None
  4683 ;; Return value:  Size  Location     Type
  4684 ;;                  1    wreg      void 
  4685 ;; Registers used:
  4686 ;;		None
  4687 ;; Tracked objects:
  4688 ;;		On entry : 0/0
  4689 ;;		On exit  : 0/0
  4690 ;;		Unchanged: 0/0
  4691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4696 ;;Total ram usage:        0 bytes
  4697 ;; Hardware stack levels used: 1
  4698 ;; Hardware stack levels required when called: 2
  4699 ;; This function calls:
  4700 ;;		Nothing
  4701 ;; This function is called by:
  4702 ;;		_main
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           
  4706                           	psect	text33
  4707   002140                     __ptext33:
  4708                           	callstack 0
  4709   002140                     _Interrupts_init:
  4710                           	callstack 28
  4711   002140                     
  4712                           ;interrupts.c: 14:     PIE2bits.C1IE=1;
  4713   002140  010E               	movlb	14	; () banked
  4714   002142  812B               	bsf	43,0,b	;volatile
  4715                           
  4716                           ;interrupts.c: 15:     PIE0bits.TMR0IE=1;
  4717   002144  8B29               	bsf	41,5,b	;volatile
  4718                           
  4719                           ;interrupts.c: 16:     IPR2bits.C1IP = 1;
  4720   002146  8121               	bsf	33,0,b	;volatile
  4721                           
  4722                           ;interrupts.c: 17:     IPR0bits.TMR0IP = 0;
  4723   002148  9B1F               	bcf	31,5,b	;volatile
  4724                           
  4725                           ;interrupts.c: 18:     INTCONbits.IPEN=1;
  4726   00214A  8AF2               	bsf	242,5,c	;volatile
  4727                           
  4728                           ;interrupts.c: 19:     INTCONbits.PEIE=1;
  4729   00214C  8CF2               	bsf	242,6,c	;volatile
  4730                           
  4731                           ;interrupts.c: 20:     INTCONbits.GIE=1;
  4732   00214E  8EF2               	bsf	242,7,c	;volatile
  4733   002150                     
  4734                           ; BSR set to: 14
  4735   002150  0012               	return		;funcret
  4736   002152                     __end_of_Interrupts_init:
  4737                           	callstack 0
  4738                           
  4739 ;; *************** function _Comp1_init_rising_edge *****************
  4740 ;; Defined at:
  4741 ;;		line 24 in file "comparator.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;		None
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;		None
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  1    wreg      void 
  4748 ;; Registers used:
  4749 ;;		wreg, status,2, cstack
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4759 ;;Total ram usage:        0 bytes
  4760 ;; Hardware stack levels used: 1
  4761 ;; Hardware stack levels required when called: 3
  4762 ;; This function calls:
  4763 ;;		_DAC_init
  4764 ;; This function is called by:
  4765 ;;		_main
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           	psect	text34
  4770   002092                     __ptext34:
  4771                           	callstack 0
  4772   002092                     _Comp1_init_rising_edge:
  4773                           	callstack 27
  4774   002092                     
  4775                           ;comparator.c: 26:     TRISFbits.TRISF7=1;
  4776   002092  8E86               	bsf	134,7,c	;volatile
  4777   002094                     
  4778                           ;comparator.c: 27:     CM1NCHbits.NCH=0b011;
  4779   002094  010E               	movlb	14	; () banked
  4780   002096  51D2               	movf	210,w,b	;volatile
  4781   002098  0BF8               	andlw	-8
  4782   00209A  0903               	iorlw	3
  4783   00209C  6FD2               	movwf	210,b	;volatile
  4784                           
  4785                           ;comparator.c: 28:     CM1PCHbits.PCH=0b101;
  4786   00209E  51D3               	movf	211,w,b	;volatile
  4787   0020A0  0BF8               	andlw	-8
  4788   0020A2  0905               	iorlw	5
  4789   0020A4  6FD3               	movwf	211,b	;volatile
  4790   0020A6                     
  4791                           ; BSR set to: 14
  4792                           ;comparator.c: 29:     CM1CON0bits.HYS=1;
  4793   0020A6  83D0               	bsf	208,1,b	;volatile
  4794   0020A8                     
  4795                           ; BSR set to: 14
  4796                           ;comparator.c: 30:     CM1CON0bits.POL=1;
  4797   0020A8  89D0               	bsf	208,4,b	;volatile
  4798   0020AA                     
  4799                           ; BSR set to: 14
  4800                           ;comparator.c: 31:     CM1CON1bits.INTP=1;
  4801   0020AA  83D1               	bsf	209,1,b	;volatile
  4802   0020AC                     
  4803                           ; BSR set to: 14
  4804                           ;comparator.c: 32:     DAC_init();
  4805   0020AC  EC96  F010         	call	_DAC_init	;wreg free
  4806   0020B0                     
  4807                           ;comparator.c: 33:     CM1CON0bits.EN=1;
  4808   0020B0  010E               	movlb	14	; () banked
  4809   0020B2  8FD0               	bsf	208,7,b	;volatile
  4810   0020B4                     
  4811                           ; BSR set to: 14
  4812   0020B4  0012               	return		;funcret
  4813   0020B6                     __end_of_Comp1_init_rising_edge:
  4814                           	callstack 0
  4815                           
  4816 ;; *************** function _Comp1_init_falling_edge *****************
  4817 ;; Defined at:
  4818 ;;		line 37 in file "comparator.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;		None
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;		None
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  1    wreg      void 
  4825 ;; Registers used:
  4826 ;;		wreg, status,2, cstack
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4836 ;;Total ram usage:        0 bytes
  4837 ;; Hardware stack levels used: 1
  4838 ;; Hardware stack levels required when called: 3
  4839 ;; This function calls:
  4840 ;;		_DAC_init
  4841 ;; This function is called by:
  4842 ;;		_main
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846                           	psect	text35
  4847   0020B6                     __ptext35:
  4848                           	callstack 0
  4849   0020B6                     _Comp1_init_falling_edge:
  4850                           	callstack 27
  4851   0020B6                     
  4852                           ;comparator.c: 39:     TRISFbits.TRISF7=1;
  4853   0020B6  8E86               	bsf	134,7,c	;volatile
  4854   0020B8                     
  4855                           ;comparator.c: 40:     CM1NCHbits.NCH=0b011;
  4856   0020B8  010E               	movlb	14	; () banked
  4857   0020BA  51D2               	movf	210,w,b	;volatile
  4858   0020BC  0BF8               	andlw	-8
  4859   0020BE  0903               	iorlw	3
  4860   0020C0  6FD2               	movwf	210,b	;volatile
  4861                           
  4862                           ;comparator.c: 41:     CM1PCHbits.PCH=0b101;
  4863   0020C2  51D3               	movf	211,w,b	;volatile
  4864   0020C4  0BF8               	andlw	-8
  4865   0020C6  0905               	iorlw	5
  4866   0020C8  6FD3               	movwf	211,b	;volatile
  4867   0020CA                     
  4868                           ; BSR set to: 14
  4869                           ;comparator.c: 42:     CM1CON0bits.HYS=1;
  4870   0020CA  83D0               	bsf	208,1,b	;volatile
  4871   0020CC                     
  4872                           ; BSR set to: 14
  4873                           ;comparator.c: 43:     CM1CON0bits.POL=1;
  4874   0020CC  89D0               	bsf	208,4,b	;volatile
  4875   0020CE                     
  4876                           ; BSR set to: 14
  4877                           ;comparator.c: 44:     CM1CON1bits.INTN=1;
  4878   0020CE  81D1               	bsf	209,0,b	;volatile
  4879   0020D0                     
  4880                           ; BSR set to: 14
  4881                           ;comparator.c: 45:     DAC_init();
  4882   0020D0  EC96  F010         	call	_DAC_init	;wreg free
  4883   0020D4                     
  4884                           ;comparator.c: 46:     CM1CON0bits.EN=1;
  4885   0020D4  010E               	movlb	14	; () banked
  4886   0020D6  8FD0               	bsf	208,7,b	;volatile
  4887   0020D8                     
  4888                           ; BSR set to: 14
  4889   0020D8  0012               	return		;funcret
  4890   0020DA                     __end_of_Comp1_init_falling_edge:
  4891                           	callstack 0
  4892                           
  4893 ;; *************** function _DAC_init *****************
  4894 ;; Defined at:
  4895 ;;		line 7 in file "comparator.c"
  4896 ;; Parameters:    Size  Location     Type
  4897 ;;		None
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;		None
  4900 ;; Return value:  Size  Location     Type
  4901 ;;                  1    wreg      void 
  4902 ;; Registers used:
  4903 ;;		wreg, status,2
  4904 ;; Tracked objects:
  4905 ;;		On entry : 0/0
  4906 ;;		On exit  : 0/0
  4907 ;;		Unchanged: 0/0
  4908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4913 ;;Total ram usage:        0 bytes
  4914 ;; Hardware stack levels used: 1
  4915 ;; Hardware stack levels required when called: 2
  4916 ;; This function calls:
  4917 ;;		Nothing
  4918 ;; This function is called by:
  4919 ;;		_Comp1_init_rising_edge
  4920 ;;		_Comp1_init_falling_edge
  4921 ;; This function uses a non-reentrant model
  4922 ;;
  4923                           
  4924                           	psect	text36
  4925   00212C                     __ptext36:
  4926                           	callstack 0
  4927   00212C                     _DAC_init:
  4928                           	callstack 27
  4929   00212C                     
  4930                           ;comparator.c: 9:     DAC1CON0bits.PSS=0b00;
  4931   00212C  0EF3               	movlw	-13
  4932   00212E  010E               	movlb	14	; () banked
  4933   002130  17C6               	andwf	198,f,b	;volatile
  4934   002132                     
  4935                           ; BSR set to: 14
  4936                           ;comparator.c: 10:     DAC1CON0bits.NSS=0b0;
  4937   002132  91C6               	bcf	198,0,b	;volatile
  4938                           
  4939                           ;comparator.c: 14:     DAC1CON1bits.DAC1R=20;
  4940   002134  51C7               	movf	199,w,b	;volatile
  4941   002136  0BE0               	andlw	-32
  4942   002138  0914               	iorlw	20
  4943   00213A  6FC7               	movwf	199,b	;volatile
  4944   00213C                     
  4945                           ; BSR set to: 14
  4946                           ;comparator.c: 15:     DAC1CON0bits.DAC1EN=1;
  4947   00213C  8FC6               	bsf	198,7,b	;volatile
  4948   00213E                     
  4949                           ; BSR set to: 14
  4950   00213E  0012               	return		;funcret
  4951   002140                     __end_of_DAC_init:
  4952                           	callstack 0
  4953                           
  4954 ;; *************** function _ADC_init *****************
  4955 ;; Defined at:
  4956 ;;		line 11 in file "ADC.c"
  4957 ;; Parameters:    Size  Location     Type
  4958 ;;		None
  4959 ;; Auto vars:     Size  Location     Type
  4960 ;;		None
  4961 ;; Return value:  Size  Location     Type
  4962 ;;                  1    wreg      void 
  4963 ;; Registers used:
  4964 ;;		wreg, status,2
  4965 ;; Tracked objects:
  4966 ;;		On entry : 0/0
  4967 ;;		On exit  : 0/0
  4968 ;;		Unchanged: 0/0
  4969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4974 ;;Total ram usage:        0 bytes
  4975 ;; Hardware stack levels used: 1
  4976 ;; Hardware stack levels required when called: 2
  4977 ;; This function calls:
  4978 ;;		Nothing
  4979 ;; This function is called by:
  4980 ;;		_main
  4981 ;; This function uses a non-reentrant model
  4982 ;;
  4983                           
  4984                           	psect	text37
  4985   0020FA                     __ptext37:
  4986                           	callstack 0
  4987   0020FA                     _ADC_init:
  4988                           	callstack 28
  4989   0020FA                     
  4990                           ;ADC.c: 13:     TRISAbits.TRISA3=1;
  4991   0020FA  8681               	bsf	129,3,c	;volatile
  4992                           
  4993                           ;ADC.c: 14:     ANSELAbits.ANSELA3=1;
  4994   0020FC  010E               	movlb	14	; () banked
  4995   0020FE  8792               	bsf	146,3,b	;volatile
  4996                           
  4997                           ;ADC.c: 17:     ADREFbits.ADNREF = 0;
  4998   002100  010F               	movlb	15	; () banked
  4999   002102  9958               	bcf	88,4,b	;volatile
  5000   002104                     
  5001                           ; BSR set to: 15
  5002                           ;ADC.c: 18:     ADREFbits.ADPREF = 0b00;
  5003   002104  0EFC               	movlw	-4
  5004   002106  1758               	andwf	88,f,b	;volatile
  5005                           
  5006                           ;ADC.c: 19:     ADPCH=0b11;
  5007   002108  0E03               	movlw	3
  5008   00210A  6F5F               	movwf	95,b	;volatile
  5009   00210C                     
  5010                           ; BSR set to: 15
  5011                           ;ADC.c: 20:     ADCON0bits.ADFM = 0;
  5012   00210C  9460               	bcf	96,2,c	;volatile
  5013   00210E                     
  5014                           ; BSR set to: 15
  5015                           ;ADC.c: 21:     ADCON0bits.ADCS = 1;
  5016   00210E  8860               	bsf	96,4,c	;volatile
  5017   002110                     
  5018                           ; BSR set to: 15
  5019                           ;ADC.c: 22:     ADCON0bits.ADON = 1;
  5020   002110  8E60               	bsf	96,7,c	;volatile
  5021   002112                     
  5022                           ; BSR set to: 15
  5023   002112  0012               	return		;funcret
  5024   002114                     __end_of_ADC_init:
  5025                           	callstack 0
  5026                           
  5027 ;; *************** function _LowISR *****************
  5028 ;; Defined at:
  5029 ;;		line 37 in file "interrupts.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;		None
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;		None
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  1    wreg      void 
  5036 ;; Registers used:
  5037 ;;		wreg, status,2, status,0
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5045 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5046 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5047 ;;Total ram usage:        4 bytes
  5048 ;; Hardware stack levels used: 1
  5049 ;; Hardware stack levels required when called: 1
  5050 ;; This function calls:
  5051 ;;		Nothing
  5052 ;; This function is called by:
  5053 ;;		Interrupt level 1
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	intcodelo
  5058   000018                     __pintcodelo:
  5059                           	callstack 0
  5060   000018                     _LowISR:
  5061                           	callstack 20
  5062                           
  5063                           ; BSR set to: 15
  5064                           ;incstack = 0
  5065   000018  8055               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  5066   00001A  CFD8 F003          	movff	status,??_LowISR+1
  5067   00001E  CFE8 F004          	movff	wreg,??_LowISR+2
  5068   000022  CFE0 F005          	movff	bsr,??_LowISR+3
  5069   000026                     
  5070                           ;interrupts.c: 39:     if(PIR0bits.TMR0IF){
  5071   000026  010E               	movlb	14	; () banked
  5072   000028  AB33               	btfss	51,5,b	;volatile
  5073   00002A  EF19  F000         	goto	i1u184_21
  5074   00002E  EF1B  F000         	goto	i1u184_20
  5075   000032                     i1u184_21:
  5076   000032  EF24  F000         	goto	i1l2717
  5077   000036                     i1u184_20:
  5078   000036                     
  5079                           ; BSR set to: 14
  5080                           ;interrupts.c: 40:         seconds++;
  5081   000036  0100               	movlb	0	; () banked
  5082   000038  4BA1               	infsnz	_seconds& (0+255),f,b
  5083   00003A  2BA2               	incf	(_seconds+1)& (0+255),f,b
  5084   00003C                     
  5085                           ; BSR set to: 0
  5086                           ;interrupts.c: 41:         TMR0H=00001011;
  5087   00003C  0E09               	movlw	9
  5088   00003E  6ED4               	movwf	212,c	;volatile
  5089   000040                     
  5090                           ; BSR set to: 0
  5091                           ;interrupts.c: 42:         TMR0L=11011011;
  5092   000040  0EC3               	movlw	195
  5093   000042  6ED3               	movwf	211,c	;volatile
  5094   000044                     
  5095                           ; BSR set to: 0
  5096                           ;interrupts.c: 43:         PIR0bits.TMR0IF = 0;
  5097   000044  010E               	movlb	14	; () banked
  5098   000046  9B33               	bcf	51,5,b	;volatile
  5099   000048                     i1l2717:
  5100                           
  5101                           ; BSR set to: 14
  5102                           ;interrupts.c: 46:     if(seconds==5)
  5103   000048  0E05               	movlw	5
  5104   00004A  0100               	movlb	0	; () banked
  5105   00004C  19A1               	xorwf	_seconds& (0+255),w,b
  5106   00004E  11A2               	iorwf	(_seconds+1)& (0+255),w,b
  5107   000050  A4D8               	btfss	status,2,c
  5108   000052  EF2D  F000         	goto	i1u185_21
  5109   000056  EF2F  F000         	goto	i1u185_20
  5110   00005A                     i1u185_21:
  5111   00005A  EF40  F000         	goto	i1l205
  5112   00005E                     i1u185_20:
  5113   00005E                     
  5114                           ; BSR set to: 0
  5115                           ;interrupts.c: 47:     {;interrupts.c: 48:         LATDbits.LATD7 = !LATDbits.LATD7;
  5116   00005E  AE7C               	btfss	124,7,c	;volatile
  5117   000060  EF34  F000         	goto	i1u186_21
  5118   000064  EF38  F000         	goto	i1u186_20
  5119   000068                     i1u186_21:
  5120   000068  6A02               	clrf	??_LowISR^0,c
  5121   00006A  2A02               	incf	??_LowISR^0,f,c
  5122   00006C  EF39  F000         	goto	i1u187_28
  5123   000070                     i1u186_20:
  5124   000070  6A02               	clrf	??_LowISR^0,c
  5125   000072                     i1u187_28:
  5126   000072  3202               	rrcf	??_LowISR^0,f,c
  5127   000074  3202               	rrcf	??_LowISR^0,f,c
  5128   000076  507C               	movf	124,w,c	;volatile
  5129   000078  1802               	xorwf	??_LowISR^0,w,c
  5130   00007A  0B7F               	andlw	-129
  5131   00007C  1802               	xorwf	??_LowISR^0,w,c
  5132   00007E  6E7C               	movwf	124,c	;volatile
  5133   000080                     i1l205:
  5134                           
  5135                           ;interrupts.c: 50:     if (hour==5)
  5136   000080  0E05               	movlw	5
  5137   000082  0100               	movlb	0	; () banked
  5138   000084  199F               	xorwf	_hour& (0+255),w,b
  5139   000086  11A0               	iorwf	(_hour+1)& (0+255),w,b
  5140   000088  A4D8               	btfss	status,2,c
  5141   00008A  EF49  F000         	goto	i1u188_21
  5142   00008E  EF4B  F000         	goto	i1u188_20
  5143   000092                     i1u188_21:
  5144   000092  EF4C  F000         	goto	i1l207
  5145   000096                     i1u188_20:
  5146   000096                     
  5147                           ; BSR set to: 0
  5148                           ;interrupts.c: 51:     {;interrupts.c: 52:         LATHbits.LATH3 = 1;
  5149   000096  8680               	bsf	128,3,c	;volatile
  5150   000098                     i1l207:
  5151                           
  5152                           ; BSR set to: 0
  5153   000098  C005  FFE0         	movff	??_LowISR+3,bsr
  5154   00009C  C004  FFE8         	movff	??_LowISR+2,wreg
  5155   0000A0  C003  FFD8         	movff	??_LowISR+1,status
  5156   0000A4  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5157   0000A6  0010               	retfie	
  5158   0000A8                     __end_of_LowISR:
  5159                           	callstack 0
  5160                           
  5161 ;; *************** function _HighISR *****************
  5162 ;; Defined at:
  5163 ;;		line 28 in file "interrupts.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;		None
  5166 ;; Auto vars:     Size  Location     Type
  5167 ;;		None
  5168 ;; Return value:  Size  Location     Type
  5169 ;;                  1    wreg      void 
  5170 ;; Registers used:
  5171 ;;		wreg, status,2, status,0
  5172 ;; Tracked objects:
  5173 ;;		On entry : 0/0
  5174 ;;		On exit  : 0/0
  5175 ;;		Unchanged: 0/0
  5176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5179 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5180 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5181 ;;Total ram usage:        1 bytes
  5182 ;; Hardware stack levels used: 1
  5183 ;; This function calls:
  5184 ;;		Nothing
  5185 ;; This function is called by:
  5186 ;;		Interrupt level 2
  5187 ;; This function uses a non-reentrant model
  5188 ;;
  5189                           
  5190                           	psect	intcode
  5191   000008                     __pintcode:
  5192                           	callstack 0
  5193   000008                     _HighISR:
  5194                           	callstack 20
  5195                           
  5196                           ; BSR set to: 0
  5197                           ;incstack = 0
  5198   000008  8255               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5199   00000A  EFB9  F00F         	goto	int_func
  5200                           
  5201                           	psect	intcode_body
  5202   001F72                     __pintcode_body:
  5203                           	callstack 20
  5204   001F72                     int_func:
  5205                           	callstack 20
  5206   001F72                     
  5207                           ;interrupts.c: 30:         if(PIR2bits.C1IF){
  5208   001F72  010E               	movlb	14	; () banked
  5209   001F74  A135               	btfss	53,0,b	;volatile
  5210   001F76  EFBF  F00F         	goto	i2u89_41
  5211   001F7A  EFC1  F00F         	goto	i2u89_40
  5212   001F7E                     i2u89_41:
  5213   001F7E  EFD5  F00F         	goto	i2l199
  5214   001F82                     i2u89_40:
  5215   001F82                     
  5216                           ; BSR set to: 14
  5217                           ;interrupts.c: 31:         LATHbits.LATH3 = !LATHbits.LATH3;
  5218   001F82  A680               	btfss	128,3,c	;volatile
  5219   001F84  EFC6  F00F         	goto	i2u90_41
  5220   001F88  EFCA  F00F         	goto	i2u90_40
  5221   001F8C                     i2u90_41:
  5222   001F8C  6A01               	clrf	??_HighISR^0,c
  5223   001F8E  2A01               	incf	??_HighISR^0,f,c
  5224   001F90  EFCB  F00F         	goto	i2u91_48
  5225   001F94                     i2u90_40:
  5226   001F94  6A01               	clrf	??_HighISR^0,c
  5227   001F96                     i2u91_48:
  5228   001F96  4601               	rlncf	??_HighISR^0,f,c
  5229   001F98  4601               	rlncf	??_HighISR^0,f,c
  5230   001F9A  4601               	rlncf	??_HighISR^0,f,c
  5231   001F9C  5080               	movf	128,w,c	;volatile
  5232   001F9E  1801               	xorwf	??_HighISR^0,w,c
  5233   001FA0  0BF7               	andlw	-9
  5234   001FA2  1801               	xorwf	??_HighISR^0,w,c
  5235   001FA4  6E80               	movwf	128,c	;volatile
  5236   001FA6                     
  5237                           ;interrupts.c: 32:         PIR2bits.C1IF=0;
  5238   001FA6  010E               	movlb	14	; () banked
  5239   001FA8  9135               	bcf	53,0,b	;volatile
  5240   001FAA                     i2l199:
  5241                           
  5242                           ; BSR set to: 14
  5243   001FAA  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5244   001FAC  0011               	retfie		f
  5245   001FAE                     __end_of_HighISR:
  5246                           	callstack 0
  5247                           
  5248                           	psect	rparam
  5249   000000                     
  5250                           	psect	temp
  5251   000055                     btemp:
  5252                           	callstack 0
  5253   000055                     	ds	1
  5254   000000                     int$flags	set	btemp
  5255   000000                     wtemp8	set	btemp+1
  5256   000000                     ttemp5	set	btemp+1
  5257   000000                     ttemp6	set	btemp+4
  5258   000000                     ttemp7	set	btemp+8
  5259                           
  5260                           	psect	idloc
  5261                           
  5262                           ;Config register IDLOC0 @ 0x200000
  5263                           ;	unspecified, using default values
  5264   200000                     	org	2097152
  5265   200000  0FFF               	dw	4095
  5266                           
  5267                           ;Config register IDLOC1 @ 0x200002
  5268                           ;	unspecified, using default values
  5269   200002                     	org	2097154
  5270   200002  0FFF               	dw	4095
  5271                           
  5272                           ;Config register IDLOC2 @ 0x200004
  5273                           ;	unspecified, using default values
  5274   200004                     	org	2097156
  5275   200004  0FFF               	dw	4095
  5276                           
  5277                           ;Config register IDLOC3 @ 0x200006
  5278                           ;	unspecified, using default values
  5279   200006                     	org	2097158
  5280   200006  0FFF               	dw	4095
  5281                           
  5282                           ;Config register IDLOC4 @ 0x200008
  5283                           ;	unspecified, using default values
  5284   200008                     	org	2097160
  5285   200008  0FFF               	dw	4095
  5286                           
  5287                           ;Config register IDLOC5 @ 0x20000A
  5288                           ;	unspecified, using default values
  5289   20000A                     	org	2097162
  5290   20000A  0FFF               	dw	4095
  5291                           
  5292                           ;Config register IDLOC6 @ 0x20000C
  5293                           ;	unspecified, using default values
  5294   20000C                     	org	2097164
  5295   20000C  0FFF               	dw	4095
  5296                           
  5297                           ;Config register IDLOC7 @ 0x20000E
  5298                           ;	unspecified, using default values
  5299   20000E                     	org	2097166
  5300   20000E  0FFF               	dw	4095
  5301                           
  5302                           	psect	config
  5303                           
  5304                           ;Config register CONFIG1L @ 0x300000
  5305                           ;	External Oscillator mode Selection bits
  5306                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5307                           ;	Power-up default value for COSC bits
  5308                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5309   300000                     	org	3145728
  5310   300000  AA                 	db	170
  5311                           
  5312                           ;Config register CONFIG1H @ 0x300001
  5313                           ;	unspecified, using default values
  5314                           ;	Clock Out Enable bit
  5315                           ;	CLKOUTEN = 0x1, unprogrammed default
  5316                           ;	Clock Switch Enable bit
  5317                           ;	CSWEN = 0x1, unprogrammed default
  5318                           ;	Fail-Safe Clock Monitor Enable bit
  5319                           ;	FCMEN = 0x1, unprogrammed default
  5320   300001                     	org	3145729
  5321   300001  FF                 	db	255
  5322                           
  5323                           ;Config register CONFIG2L @ 0x300002
  5324                           ;	unspecified, using default values
  5325                           ;	Master Clear Enable bit
  5326                           ;	MCLRE = 0x1, unprogrammed default
  5327                           ;	Power-up Timer Enable bit
  5328                           ;	PWRTE = 0x1, unprogrammed default
  5329                           ;	Low-power BOR enable bit
  5330                           ;	LPBOREN = 0x1, unprogrammed default
  5331                           ;	Brown-out Reset Enable bits
  5332                           ;	BOREN = 0x3, unprogrammed default
  5333   300002                     	org	3145730
  5334   300002  FF                 	db	255
  5335                           
  5336                           ;Config register CONFIG2H @ 0x300003
  5337                           ;	unspecified, using default values
  5338                           ;	Brown Out Reset Voltage selection bits
  5339                           ;	BORV = 0x3, unprogrammed default
  5340                           ;	ZCD Disable bit
  5341                           ;	ZCD = 0x1, unprogrammed default
  5342                           ;	PPSLOCK bit One-Way Set Enable bit
  5343                           ;	PPS1WAY = 0x1, unprogrammed default
  5344                           ;	Stack Full/Underflow Reset Enable bit
  5345                           ;	STVREN = 0x1, unprogrammed default
  5346                           ;	Debugger Enable bit
  5347                           ;	DEBUG = 0x1, unprogrammed default
  5348                           ;	Extended Instruction Set Enable bit
  5349                           ;	XINST = 0x1, unprogrammed default
  5350   300003                     	org	3145731
  5351   300003  FF                 	db	255
  5352                           
  5353                           ;Config register CONFIG3L @ 0x300004
  5354                           ;	WDT Period Select bits
  5355                           ;	WDTCPS = 0x1F, unprogrammed default
  5356                           ;	WDT operating mode
  5357                           ;	WDTE = OFF, WDT Disabled
  5358   300004                     	org	3145732
  5359   300004  9F                 	db	159
  5360                           
  5361                           ;Config register CONFIG3H @ 0x300005
  5362                           ;	unspecified, using default values
  5363                           ;	WDT Window Select bits
  5364                           ;	WDTCWS = 0x7, unprogrammed default
  5365                           ;	WDT input clock selector
  5366                           ;	WDTCCS = 0x7, unprogrammed default
  5367   300005                     	org	3145733
  5368   300005  FF                 	db	255
  5369                           
  5370                           ;Config register CONFIG4L @ 0x300006
  5371                           ;	unspecified, using default values
  5372                           ;	Write Protection Block 0
  5373                           ;	WRT0 = 0x1, unprogrammed default
  5374                           ;	Write Protection Block 1
  5375                           ;	WRT1 = 0x1, unprogrammed default
  5376                           ;	Write Protection Block 2
  5377                           ;	WRT2 = 0x1, unprogrammed default
  5378                           ;	Write Protection Block 3
  5379                           ;	WRT3 = 0x1, unprogrammed default
  5380                           ;	Write Protection Block 3
  5381                           ;	WRT4 = 0x1, unprogrammed default
  5382                           ;	Write Protection Block 3
  5383                           ;	WRT5 = 0x1, unprogrammed default
  5384                           ;	Write Protection Block 3
  5385                           ;	WRT6 = 0x1, unprogrammed default
  5386                           ;	Write Protection Block 3
  5387                           ;	WRT7 = 0x1, unprogrammed default
  5388   300006                     	org	3145734
  5389   300006  FF                 	db	255
  5390                           
  5391                           ;Config register CONFIG4H @ 0x300007
  5392                           ;	unspecified, using default values
  5393                           ;	Configuration Register Write Protection bit
  5394                           ;	WRTC = 0x1, unprogrammed default
  5395                           ;	Boot Block Write Protection bit
  5396                           ;	WRTB = 0x1, unprogrammed default
  5397                           ;	Data EEPROM Write Protection bit
  5398                           ;	WRTD = 0x1, unprogrammed default
  5399                           ;	Scanner Enable bit
  5400                           ;	SCANE = 0x1, unprogrammed default
  5401                           ;	Low Voltage Programming Enable bit
  5402                           ;	LVP = 0x1, unprogrammed default
  5403   300007                     	org	3145735
  5404   300007  FF                 	db	255
  5405                           
  5406                           ;Config register CONFIG5L @ 0x300008
  5407                           ;	unspecified, using default values
  5408                           ;	UserNVM Program Memory Code Protection bit
  5409                           ;	CP = 0x1, unprogrammed default
  5410                           ;	DataNVM Memory Code Protection bit
  5411                           ;	CPD = 0x1, unprogrammed default
  5412   300008                     	org	3145736
  5413   300008  FF                 	db	255
  5414                           
  5415                           ;Config register CONFIG5H @ 0x300009
  5416                           ;	unspecified, using default values
  5417   300009                     	org	3145737
  5418   300009  FF                 	db	255
  5419                           
  5420                           ;Config register CONFIG6L @ 0x30000A
  5421                           ;	unspecified, using default values
  5422                           ;	Table Read Protection Block 0
  5423                           ;	EBTR0 = 0x1, unprogrammed default
  5424                           ;	Table Read Protection Block 1
  5425                           ;	EBTR1 = 0x1, unprogrammed default
  5426                           ;	Table Read Protection Block 2
  5427                           ;	EBTR2 = 0x1, unprogrammed default
  5428                           ;	Table Read Protection Block 3
  5429                           ;	EBTR3 = 0x1, unprogrammed default
  5430                           ;	Table Read Protection Block 4
  5431                           ;	EBTR4 = 0x1, unprogrammed default
  5432                           ;	Table Read Protection Block 5
  5433                           ;	EBTR5 = 0x1, unprogrammed default
  5434                           ;	Table Read Protection Block 6
  5435                           ;	EBTR6 = 0x1, unprogrammed default
  5436                           ;	Table Read Protection Block 7
  5437                           ;	EBTR7 = 0x1, unprogrammed default
  5438   30000A                     	org	3145738
  5439   30000A  FF                 	db	255
  5440                           
  5441                           ;Config register CONFIG6H @ 0x30000B
  5442                           ;	unspecified, using default values
  5443                           ;	Boot Block Table Read Protection bit
  5444                           ;	EBTRB = 0x1, unprogrammed default
  5445   30000B                     	org	3145739
  5446   30000B  FF                 	db	255
  5447                           tosu	equ	0xFFF
  5448                           tosh	equ	0xFFE
  5449                           tosl	equ	0xFFD
  5450                           stkptr	equ	0xFFC
  5451                           pclatu	equ	0xFFB
  5452                           pclath	equ	0xFFA
  5453                           pcl	equ	0xFF9
  5454                           tblptru	equ	0xFF8
  5455                           tblptrh	equ	0xFF7
  5456                           tblptrl	equ	0xFF6
  5457                           tablat	equ	0xFF5
  5458                           prodh	equ	0xFF4
  5459                           prodl	equ	0xFF3
  5460                           indf0	equ	0xFEF
  5461                           postinc0	equ	0xFEE
  5462                           postdec0	equ	0xFED
  5463                           preinc0	equ	0xFEC
  5464                           plusw0	equ	0xFEB
  5465                           fsr0h	equ	0xFEA
  5466                           fsr0l	equ	0xFE9
  5467                           wreg	equ	0xFE8
  5468                           indf1	equ	0xFE7
  5469                           postinc1	equ	0xFE6
  5470                           postdec1	equ	0xFE5
  5471                           preinc1	equ	0xFE4
  5472                           plusw1	equ	0xFE3
  5473                           fsr1h	equ	0xFE2
  5474                           fsr1l	equ	0xFE1
  5475                           bsr	equ	0xFE0
  5476                           indf2	equ	0xFDF
  5477                           postinc2	equ	0xFDE
  5478                           postdec2	equ	0xFDD
  5479                           preinc2	equ	0xFDC
  5480                           plusw2	equ	0xFDB
  5481                           fsr2h	equ	0xFDA
  5482                           fsr2l	equ	0xFD9
  5483                           status	equ	0xFD8

Data Sizes:
    Strings     18
    Constant    124
    Data        24
    BSS         49
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     79      84
    BANK0           160     57      69
    BANK1           256    100     166
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2102$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@strdate(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2049$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2049$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    time2String@buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@strdate(BANK1[100]), 

    LCD_sendstring@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@strdate(BANK1[100]), 


Critical Paths under _main in COMRAM

    _main->_time2String
    _timeadjuster->_sunrise
    _timeadjuster->_sunset
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_sendstring->_LCD_sendbyte
    _sunset->___wmul
    _sunrise->___wmul
    _increment->_LEDarray_disp_bin
    _LCD_setline->_LCD_sendbyte
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_time2String
    _time2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               200   200      0   16638
                                              0 BANK1    100   100      0
                           _ADC_init
            _Comp1_init_falling_edge
             _Comp1_init_rising_edge
                    _Interrupts_init
                           _LCD_Init
                        _LCD_setline
                      _LEDarray_init
                        _Timer0_init
                          _day1_init
                    _daylightsavings
                          _increment
                           _poweroff
                    _streetLightInit
                            _sunrise
                             _sunset
                        _time2String
                       _timeadjuster
 ---------------------------------------------------------------------------------
 (1) _timeadjuster                                         8     4      4    1121
                                             18 COMRAM     8     4      4
                            ___awdiv
                            _sunrise (ARG)
                             _sunset (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     805
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _time2String                                         14     2     12   10337
                                             77 COMRAM     2     2      0
                                             45 BANK0     12     0     12
                     _LCD_sendstring
                            ___lwdiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             31    15     16    7316
                                             16 BANK0     29    13     16
                            ___lwdiv (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6830
                                             75 COMRAM     2     2      0
                                             10 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           23    17      6    6369
                                             67 COMRAM     8     2      6
                                              0 BANK0     10    10      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    4802
                                             32 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2533
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1177
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     857
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     961
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_sendstring                                       2     0      2    1272
                                              8 COMRAM     2     0      2
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _sunset                                               7     5      2     843
                                             11 COMRAM     7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _sunrise                                              7     5      2     843
                                             11 COMRAM     7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     772
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _streetLightInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _poweroff                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _increment                                            2     2      0    1025
                                             31 COMRAM     2     2      0
                  _LEDarray_disp_bin
 ---------------------------------------------------------------------------------
 (2) _LEDarray_disp_bin                                   26    24      2    1025
                                              5 COMRAM    26    24      2
 ---------------------------------------------------------------------------------
 (1) _daylightsavings                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _day1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_setline                                          1     1      0    1179
                                              8 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    1241
                                              8 COMRAM     2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendbyte                                         2     1      1    1117
                                              6 COMRAM     2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (4) _LCD_sendnibble                                       1     1      0     124
                                              5 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (5) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init_rising_edge                               0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (1) _Comp1_init_falling_edge                              0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _LowISR                                              4     4      0       0
                                              1 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _HighISR                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Comp1_init_falling_edge
     _DAC_init
   _Comp1_init_rising_edge
     _DAC_init
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_setline
     _LCD_sendbyte
   _LEDarray_init
   _Timer0_init
   _day1_init
   _daylightsavings
   _increment
     _LEDarray_disp_bin
   _poweroff
   _streetLightInit
   _sunrise
     ___wmul
   _sunset
     ___wmul
   _time2String
     _LCD_sendstring
       _LCD_sendbyte
     ___lwdiv
     _sprintf
       ___lwdiv (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _timeadjuster
     ___awdiv
     _sunrise (ARG)
     _sunset (ARG)

 _LowISR (ROOT)

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     64      A6       7       64.8%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     39      45       5       43.1%
BITBIGSFRlhlhh      84      0       0      38        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4F      54       1       89.4%
BITBIGSFRllhh       5C      0       0      41        0.0%
BITBIGSFRhhll       4A      0       0      34        0.0%
BITBIGSFRlhll       33      0       0      40        0.0%
BITBIGSFRllllll     30      0       0      47        0.0%
BITBIGSFRhhlhh      1B      0       0      33        0.0%
BITBIGSFRlhhhhl     14      0       0      35        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRlhlhll      8      0       0      39        0.0%
BITBIGSFRllllh       7      0       0      45        0.0%
BITBIGSFRllhll       7      0       0      43        0.0%
BITBIGSFRlhhl        6      0       0      37        0.0%
BITBIGSFRlhhhl       3      0       0      36        0.0%
BITBIGSFRllhlh       1      0       0      42        0.0%
BITBIGSFRlllllh      1      0       0      46        0.0%
BITBIGSFRlllh        1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13F      48        0.0%
DATA                 0      0     13F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Nov 08 03:06:38 2022

                             _L1 0E59                               _L2 0E55  
                             _L3 0E51                               _L4 0E4D  
                             _L5 0E49                               _L6 0E45  
                             l35 2112                               _P1 0E41  
                             _P2 0E3D                               _P3 0E39  
                             _P4 0E35                               l81 2090  
                             _P5 0E31                               l85 16DA  
                             l88 1734                     ___awdiv@sign 000B  
                             _bp 0E69                               _cp 0E1D  
                             bsr 000FE0              ___wmul@multiplicand 0008  
              ??_Interrupts_init 0006                              l130 213E  
                            l133 20B4                              l136 20D8  
                            l420 1CFA                              l308 20F8  
                            l413 215E                              l422 1D10  
                            l424 1D1E                              l416 1CCE  
                            l432 1964                              l193 2150  
                            l418 1CE4                              l427 202C  
                            l443 1FE0                              l372 1F70  
                            l452 206A                              l380 1CB6  
                            l429 2044                              l437 2014  
                            l358 2168                              l375 1EF4  
                            l368 164C                              l385 1C48  
                            l449 1A7C                              l394 1D7C  
                            l389 1BDA                              l566 1292  
                            l579 13F6                              l683 18C2  
                            l950 1B6A                              l943 1B62  
__end_of_Comp1_init_falling_edge 20DA          __end_of_streetLightInit 216A  
                            _lg2 0E2D                              _abs 1EF6  
                            _pad 1A7E                              _ovt 0E21  
                            wreg 000FE8                             l1130 1DCE  
                           ?_abs 0018                             l1207 17FE  
                           l1215 1EB2                             l1152 1AA0  
                           l1161 0F1A                             l3001 1E20  
                           l3011 164E                             l1163 0F22  
                           l3003 1E2C                             l1156 1AF6  
                           l1164 0F68                             l3021 169A  
                           l3005 1E48                             l3101 18BA  
                           l1182 1544                             l3031 2132  
                           l3023 16B4                             l3111 1B1A  
                           l1175 110A                             l3007 1E64  
                           l1192 1F2C                             l1408 216A  
                           l3033 213C                             l3201 1930  
                           l3025 16BA                             l3017 165E  
                           l3041 1FC8                             l3121 1B54  
                           l3113 1B22                             l3105 1AF8  
                           l3131 210C                             l3203 1938  
                           l3211 1FE4                             l3027 16BE  
                           l3019 167C                             l3035 1FAE  
                           l3123 1B56                             l3115 1B30  
                           l3107 1B00                             l1195 1F34  
                           l3051 1DBC                             l3043 1D7E  
                           l1188 1E6E                             l3133 210E  
                           l3029 212C                             l3141 2094  
                           l3205 1942                             l3213 1FF2  
                           l3037 1FB2                             l3125 1B5C  
                           l3117 1B36                             l3109 1B12  
                           l3045 1D90                             l3221 1A58  
                           l3061 1800                             l3301 1BD2  
                           l3135 2110                             l3127 20FA  
                           l3151 20B0                             l3143 20A6  
                           l3207 1950                             l3215 1FFC  
                           l3311 1D62                             l3303 1D20  
                           l3231 157A                             l3055 2046  
                           l3039 1FC4                             l3119 1B4C  
                           l3047 1D98                             l3223 1A64  
                           l3071 182C                             l3063 1804  
                           l3129 2104                             l3161 20CE  
                           l3153 20B6                             l3145 20A8  
                           l3209 195A                             l3217 200A  
                           l3137 206C                             l3313 1D76  
                           l3305 1D36                             l3241 15BC  
                           l3233 158E                             l3225 1546  
                           l3057 2062                             l3049 1DA0  
                           l3081 185A                             l3073 1834  
                           l3065 1812                             l3163 20D0  
                           l3155 20B8                             l3147 20AA  
                           l3139 2092                             l3171 20DA  
                           l3307 1D4A                             l3251 1616  
                           l3243 15C6                             l3235 1592  
                           l3227 1566                             l3219 19FE  
                           l3091 1894                             l3083 1862  
                           l3075 1838                             l3067 181A  
                           l3165 20D4                             l3157 20CA  
                           l3149 20AC                             l3173 20E2  
                           l3181 1EF2                             l3309 1D4E  
                           l3253 161C                             l3245 15DA  
                           l3237 159A                             l3229 1572  
                           l3261 1F36                             l3093 1896  
                           l3085 1870                             l3077 1840  
                           l3069 181E                             l3159 20CC  
                           l3167 2140                             l3191 1902  
                           l3183 18C4                             l3175 20EC  
                           l3255 1632                             l3247 15E2  
                           l3239 15AE                             l3263 1F52  
                           l3271 1C7E                             l3095 189C  
                           l3087 1876                             l3079 1852  
                           l3193 190C                             l3185 18DC  
                           l3177 20F6                             l3257 163A  
                           l3249 160E                             l3265 1F6E  
                           l3169 2160                             l3273 1C8C  
                           l3281 1BFE                             l2801 1180  
                           l3089 188C                             l3097 18A2  
                           l3361 196E                             l3195 1914  
                           l3187 18F4                             l3179 1EB4  
                           l3259 1640                             l3275 1CAE  
                           l3267 1C4A                             l3283 1C10  
                           l2811 11DA                             l2803 119E  
                           l3099 18B2                             l3291 1B6C  
                           l3371 198A                             l3363 1972  
                           l3197 191E                             l3189 18FA  
                           l3269 1C6C                             l3285 1C1E  
                           l2813 1208                             l2805 11A6  
                           l2821 1242                             l2901 0F2A  
                           l3293 1B74                             l3381 19D2  
                           l3373 1990                             l3365 1976  
                           l3199 1926                             l3287 1C40  
                           l3279 1BDC                             l2823 1252  
                           l2815 1228                             l2807 11BA  
                           l2831 1298                             l2911 0F64  
                           l2903 0F3A                             l3295 1B94  
                           l3383 19D6                             l3375 19C6  
                           l3367 197A                             l3359 1966  
                           l2825 1272                             l2817 122A  
                           l2809 11C8                             l2841 12F8  
                           l2833 12A6                             l2921 1008  
                           l2913 0F70                             l2905 0F40  
                           l3297 1BA4                             l3385 19F2  
                           l3377 19CA                             l3369 1986  
                           l2819 123C                             l2851 136E  
                           l2843 1316                             l2835 12C6  
                           l2771 1782                             l2763 1736  
                           l2931 10C4                             l2923 100E  
                           l2915 0F7A                             l2907 0F50  
                           l3299 1BBA                             l3379 19CE  
                           l2941 1CBA                             l2861 13D6  
                           l2853 138E                             l2845 131E  
                           l2837 12CA                             l2829 1294  
                           l2773 17B8                             l2765 1748  
                           l2781 1E8E                             l2933 10D4  
                           l2917 0F80                             l2925 1072  
                           l2909 0F5C                             ?_pad 0016  
                           l2951 1CF4                             l2943 1CC8  
                           l2791 113E                             l2855 13A0  
                           l2847 1332                             l2839 12D8  
                           l2767 175A                             l2783 1E92  
                           l2871 1AAC                             l2935 10DA  
                           l2927 108C                             l2919 1002  
                           l2953 1CFC                             l2945 1CD0  
                           l2793 1142                             l2785 110C  
                           l2849 1340                             l2857 13A6  
                           l2881 1F10                             l2769 1764  
                           l2777 1E70                             l2873 1AC0  
                           l2865 1A7E                             l2937 10EA  
                           l2929 10AA                             l2961 13F8  
                           l2883 2152                             l2955 1D0A  
                           l2947 1CDE                             l2795 1150  
                           l2787 1110                             l2859 13B6  
                           l2779 1E7C                             l2875 1AC4  
                           l2867 1A8C                             l2891 0EB0  
                           l2971 144C                             l2963 141C  
                           l2885 2154                             l2957 1D12  
                           l2949 1CE6                             l2797 1170  
                           l2789 111E                             l2877 1AE2  
                           l2869 1A98                             l2893 0EC4  
                           l2981 150A                             l2973 1468  
                           l2965 142A                             l2887 215C  
                           l2959 1D16                             l2991 2018  
                           l2799 1174                             l2879 1EF6  
                           l2895 0ED4                             l2975 1484  
                           l2967 1438                             l2993 2026  
                           l2897 0EF4                             l2889 0E90  
                           l2977 14DA                             l2969 143C  
                           l2985 151C                             l2995 202E  
                           l2899 0F0E                             l2997 2036  
                           l2999 203C                             STR_1 0E7D  
                           u2000 1252                             u2001 124E  
                           u2010 12A6                             u2011 12A2  
                           u2020 12D8                             u2100 0EC0  
                           u2021 12D4                             u2101 0EBA  
                           u2030 1316                             u2110 0EC2  
                           u2031 1312                             u2200 1CC8  
                           u2040 1340                             u2120 0ED4  
                           u2201 1CC4                             u2041 133C  
                           u2121 0ED0                             u2210 1CDE  
                           u2050 136E                             u2130 0F0E  
                           u2211 1CDA                             u2051 136A  
                           u2131 0F0A                             u2220 1CF4  
                           u2300 16DA                             u2060 13B6  
                           u2140 0F3A                             u2221 1CF0  
                           u2301 16D6                             u2061 13B2  
                           u2141 0F36                             u2230 1D0A  
                           u2070 1A8C                             u2150 0F50  
                           u2231 1D06                             u2071 1A88  
                           u2151 0F4C                             u2400 1FE0  
                           u2080 1AE2                             u2160 108C  
                           u2240 141C                             u2401 1FDC  
                           u2081 1ADE                             u2161 1088  
                           u2241 1418                             u2090 1F10  
                           u2170 10AA                             u2250 1468  
                           u2410 1812                             u2315 16E2  
                           u2091 1F0C                             u2171 10A6  
                           u2251 1464                             u2411 180E  
                           u2500 1FF2                             u2316 16E4  
                           u2180 10C4                             u2260 1484  
                           u2420 182C                             u2501 1FEE  
                           u2325 16EC                             u2181 10C0  
                           u2261 1480                             u2421 1828  
                           u2270 2026                             u2510 200A  
                           u2326 16EE                             u2190 10D4  
                           u2430 1852                             u2271 2022  
                           u2511 2006                             u2335 16F6  
                           u2191 10D0                             u2431 184E  
                           u2336 16F8                             u2520 1566  
                           u2600 1C5C                             u2280 1E64  
                           u2440 1870                             u2345 1700  
                           u2521 1562                             u2601 1C54  
                           u2281 1E60                             u2441 186C  
                           u2346 1702                             u2290 167C  
                           u2530 158E                             u2610 1C7E  
                           u2450 188C                             u2355 170A  
                           u2291 1678                             u2531 158A  
                           u2611 1C7A                             u2451 1888  
                           u2700 1D62                             u2356 170C  
                           u2540 15AE                             u2620 1C8C  
                           u1900 175A                             u2460 18B2  
                           u2701 1D5E                             u2365 1714  
                           u2541 15AA                             u2621 1C88  
                           u1901 1756                             u2461 18AE  
                           u2710 1D76                             u2366 1716  
                           u2550 15DA                             u2630 1BEE  
                           u2470 1B12                             u1910 1782  
                           u2711 1D72                             u2375 171E  
                           u2551 15D6                             u2631 1BE6  
                           u2471 1B0E                             u1911 177E  
                           u2376 1720                             u2560 160E  
                           u2608 1C5E                             u2640 1C10  
                           u2480 1B30                             u1920 17B8  
                           u2385 1728                             u2561 160A  
                           u2641 1C0C                             u2481 1B2C  
                           u1921 17B4                             u2386 172A  
                           u2570 1632                             u2650 1C1E  
                           u2490 1B4C                             u1930 1EB2  
                           u2395 1732                             u2571 162E  
                           u2651 1C1A                             u2491 1B48  
                           u1931 1EAE                             u2396 1734  
                           u2580 1F52                             u1940 111E  
                           u2660 1BBA                             u2581 1F4E  
                           u1941 111A                             u2661 1BB6  
                           u2590 1F6E                             u2638 1BF0  
                           u1950 1150                             u2670 1BD2  
                           u2807 1920                             u2591 1F6A  
                           u1951 114C                             u2671 1BCE  
                           u2680 1D36                             u2817 1932  
                           u2681 1D32                             u1961 117A  
                           u2690 1D4A                             u1970 119E  
                           u1890 1748                             u2827 1948  
                           u2691 1D46                             u1971 119A  
                           u1891 1744                             u1980 11C8  
                           u2837 203E                             u1981 11C4  
                           u1990 1208                             u2847 1D18  
                           u1991 1204                             u2767 1A6E  
                           u2857 2156                             u2777 18E6  
                           u2787 18FC                             u2797 190E  
                           abs@a 0018                             _dbuf 0168  
                           _cp_h 0E79                             _cp_l 0E75  
                           _dp_h 0E09                             _dp_l 0E01  
                           _main 1966                             _dtoa 0E90  
                           _huge 0E61                             _hour 009F  
                           _prec 0050                             _year 01A0  
                           pad@i 001D                             pad@p 001A  
                           _tiny 0E5D                             fsr1h 000FE2  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr1l 000FE1                             pad@w 001F  
                           fsr2l 000FD9                             btemp 0055  
                   ?_LCD_setline 0001                             prodh 000FF4  
                           prodl 000FF3                             start 00A8  
               __end_of_ADC_init 2114                      main@strdate 0100  
               __end_of_DAC_init 2140                  __end_of_HighISR 1FAE  
                   ___param_bank 000000                            ??_abs 001A  
                          ??_pad 001C                 __end_of_LCD_Init 1966  
                __end_of___aodiv 1294                            ?_main 0001  
                          ?_dtoa 0021                  __end_of___aomod 13F8  
                          _ADPCH 000F5F                  __end_of___awdiv 18C4  
                ___awdiv@divisor 0008                  __end_of___lwdiv 1B6C  
                          i1l205 0080                            i1l207 0098  
                          i2l199 1FAA                  ___awdiv@counter 000A  
                   vfpfcnvrt@fmt 0046                            _TMR0H 000FD4  
                          _TMR0L 000FD3                  _daylightsavings 1D20  
                          _lg2_h 0E29                            _lg2_l 0E25  
                          _flags 0052                            _errno 0099  
                          _ivln2 0E19                            _fputc 1736  
                          _fputs 1E70                  __end_of_ivln2_h 0E75  
                __end_of_ivln2_l 0E19                            _two24 0E65  
                          _month 0188                            pad@fp 0016  
                          _width 009B                            _putch 216A  
                          dtoa@d 0023                            dtoa@i 0042  
                          dtoa@n 0039                            dtoa@p 0035  
                          dtoa@s 0041                            dtoa@w 0037  
                  ?_LCD_sendbyte 0007                            tablat 000FF5  
        timeadjuster@sunset_time 0015                            ttemp5 0056  
                          ttemp6 0059                            ttemp7 005D  
                          status 000FD8                            wtemp8 0056  
                __end_of_sprintf 1DD0                  __end_of_sunrise 1CB8  
                __initialization 1DD0                     __end_of_cp_h 0E7D  
                   __end_of_cp_l 0E79                     __end_of_dp_h 0E11  
                   __end_of_dp_l 0E09                     __end_of_main 19FE  
                   __end_of_dtoa 110C                     __end_of_huge 0E65  
                   __end_of_tiny 0E61                __end_of_LCD_E_TOG 2160  
                         ??_main 0050                           ??_dtoa 002B  
                  __activetblptr 000001                 ?_streetLightInit 0001  
                   ?_time2String 008D                           ?_fputc 0006  
                         ?_fputs 000F                           _ADRESH 000F64  
                 ??_LCD_sendbyte 0008                 ___awdiv@dividend 0006  
                         ?_putch 0001                           i1l2711 003C  
                         i1l2721 0096                           i1l2713 0040  
                         i1l2715 0044                           i1l2707 0026  
                         i1l2709 0036                           i1l2717 0048  
                         i1l2719 005E                           i2l2055 1F72  
                         i2l2057 1F82                           i2l2059 1FA6  
                      ??_HighISR 0001                _LEDarray_disp_bin 164E  
                         _LowISR 0018               ?_LEDarray_disp_bin 0006  
                  ??_Timer0_init 0006                     vfprintf@cfmt 004C  
                      ??___aodiv 0016                        ??___aomod 0016  
                         ___wmul 2046                        ??___awdiv 000A  
                      ??___lwdiv 000A            LEDarray_disp_bin@mask 001C  
        __end_of_daylightsavings 1D7E              ??_LEDarray_disp_bin 0008  
                         clear_0 1DF6                           clear_1 1E02  
               ___awdiv@quotient 000C                           isa$std 000001  
                         pad@buf 0018                           dtoa@fp 0021  
                         _sunset 1BDC                           fputc@c 0006  
              sunset@sunset_time 0011                           fputs@c 0013  
                         fputs@i 0014                           fputs@s 000F  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                      ?_ADC_init 0001                 __end_of_poweroff 1F72  
                         putch@c 0001                        ?_DAC_init 0001  
               __end_of_vfprintf 1E70         timeadjuster@sunrise_time 0013  
               _tiny@sqrtf$F2315 0E11                        ??_sprintf 004E  
                      ??_sunrise 000E        __end_of_LEDarray_disp_bin 1736  
                     __accesstop 0060          __end_of__initialization 1E0E  
                      ?_LCD_Init 0001         ??_Comp1_init_rising_edge 0006  
                  ___rparam_used 000001                    _LEDarray_init 206C  
                _Interrupts_init 2140                   __pcstackCOMRAM 0001  
                   __pidataBANK1 2114                    __end_of_lg2_h 0E2D  
                  __end_of_lg2_l 0E29                    __end_of_ivln2 0E1D  
                  __end_of_fputc 1800                    __end_of_fputs 1EB4  
                  __end_of_two24 0E69                    __end_of_putch 216C  
                     __end_of_L1 0E5D                       __end_of_L2 0E59  
                     __end_of_L3 0E55                       __end_of_L4 0E51  
                     __end_of_L5 0E4D                       __end_of_L6 0E49  
                     __end_of_P1 0E45                       __end_of_P2 0E41  
                     __end_of_P3 0E3D                       __end_of_P4 0E39  
                     __end_of_P5 0E35              __end_of_Timer0_init 20FA  
                     __end_of_bp 0E71                       __end_of_cp 0E21  
                     ??_ADC_init 0006                       ??_DAC_init 0006  
                        ??_fputc 000A                          ??_fputs 0013  
                        ??_putch 0006                       __pbssBANK0 0099  
                     __pbssBANK1 0164                       ??_LCD_Init 0009  
                 _LCD_sendnibble 1CB8                       __pnvCOMRAM 0053  
                 ?_LEDarray_init 0001              sunrise@sunrise_time 0011  
                 _LCD_sendstring 1FAE                          ?_LowISR 0001  
                   _day_of_month 01A2           timeadjuster@adjustment 0019  
                        ?___wmul 0006             __end_of_LCD_sendbyte 2046  
               ?_daylightsavings 0001                          ?_sunset 000C  
              __end_of_day1_init 1EF6                       _comp_check 009D  
                        i2u90_40 1F94                          i2u90_41 1F8C  
                        i2u91_48 1F96                          i2u89_40 1F82  
                        i2u89_41 1F7E           __end_of_LCD_sendnibble 1D20  
        __end_of_Interrupts_init 2152                 sunrise@prevState 000F  
                        _HighISR 0008           __end_of_LCD_sendstring 1FE2  
                      _ADREFbits 000F58          _Comp1_init_falling_edge 20B6  
                        __Hparam 0000                          __Lparam 0000  
                    _Timer0_init 20DA                          ___aodiv 110C  
                        ___aomod 1294                          ___awdiv 1800  
                      ?_poweroff 0001                          ___lwdiv 1AF8  
                      ?_vfprintf 006A                     __psmallconst 0E00  
                        __pcinit 1DD0                          __ramtop 0E00  
                        __ptext0 1966                          __ptext1 1B6C  
                        __ptext2 1800                          __ptext3 19FE  
                        __ptext4 1D7E                          __ptext5 1E20  
                        __ptext6 13F8                          __ptext7 0E90  
                        __ptext8 1A7E                          __ptext9 1E70  
              __end_of_increment 164E                          _ivln2_h 0E71  
                        _ivln2_l 0E15                          _seconds 00A1  
                      _LCD_E_TOG 2152                  LCD_setline@line 0009  
                        _sprintf 1D7E                   __pintcode_body 1F72  
                        _sunrise 1C4A             end_of_initialization 1E0E  
                ?_LCD_sendnibble 0001                    ?_timeadjuster 0013  
                        fputc@fp 0008                  ??_LEDarray_init 0006  
                        int_func 1F72                          fputs@fp 0011  
                ?_LCD_sendstring 0009                __end_of_vfpfcnvrt 1546  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                 vfpfcnvrt@convarg 0060  
       __end_of_tiny@sqrtf$F2315 0E15                       ??_poweroff 0006  
                     ??_vfprintf 004C           _Comp1_init_rising_edge 2092  
                     ?_LCD_E_TOG 0001                        _TRISAbits 000F81  
                      _TRISBbits 000F82                        _TRISCbits 000F83  
                      _TRISDbits 000F84                        _TRISEbits 000F85  
                      _TRISFbits 000F86                        _TRISGbits 000F87  
                      _TRISHbits 000F88                   ??_timeadjuster 0017  
      ??_Comp1_init_falling_edge 0006                      _CM1CON0bits 000ED0  
                    _CM1CON1bits 000ED1                 ?_Interrupts_init 0001  
                sunset@prevState 000F                   __end_of_LowISR 00A8  
                    vfpfcnvrt@ap 0048                      vfpfcnvrt@cp 0068  
                    vfpfcnvrt@fp 0044                   __end_of___wmul 206C  
           LCD_sendnibble@number 0006                   __end_of_sunset 1C4A  
            start_initialization 1DD0                      __end_of_lg2 0E31  
                    __end_of_abs 1F36                      __end_of_pad 1AF8  
                    __end_of_ovt 0E25                     _LCD_sendbyte 2016  
                  ??_LCD_setline 0009                         ??_LowISR 0002  
                    vfprintf@fmt 006C             LEDarray_disp_bin@ctr 001E  
           LCD_sendstring@string 0009                         ??___wmul 000A  
                    __pdataBANK1 0188                         ??_sunset 000E  
                    __pbssCOMRAM 0050                      ??_LCD_E_TOG 0006  
                  __pcstackBANK0 0060                    __pcstackBANK1 0100  
               ___aodiv@dividend 0006                        _day1_init 1EB4  
                       ?_HighISR 0001                        __pnvBANK0 00A3  
                      __pnvBANK1 01A0                ??_streetLightInit 0006  
               ___lwdiv@dividend 0006                        _dtoa$2130 0033  
                   ?_Timer0_init 0001                      _day_of_week 0053  
                    _day_of_year 01A4                        __pintcode 0008  
                       ?___aodiv 0006                         ?___aomod 0006  
                       ?___awdiv 0006                 ___aodiv@quotient 0018  
       LEDarray_disp_bin@led_arr 000A              __end_of_LCD_setline 2016  
                       ?___lwdiv 0006             __end_of_timeadjuster 1BDC  
                    __pintcodelo 0018                        fabsf@F465 0164  
                    __smallconst 0E00                    ??_time2String 004E  
               ??_LCD_sendnibble 0006                         _ADC_init 20FA  
                      _increment 1546                         _DAC_init 212C  
               ___lwdiv@quotient 000B                       ?_day1_init 0001  
               ??_LCD_sendstring 000B                         ?_sprintf 0070  
                       ?_sunrise 000C                 LCD_sendbyte@Byte 0008  
                       _LCD_Init 18C4                 LCD_sendbyte@type 0007  
                 ___wmul@product 000A                         _LATAbits 000F79  
                       _LATBbits 000F7A                         _LATCbits 000F7B  
                       _LATDbits 000F7C                         _LATEbits 000F7D  
                       _LATFbits 000F7E                         _LATGbits 000F7F  
                       _LATHbits 000F80                         _IPR0bits 000E1F  
                       _PIE0bits 000E29                         _IPR2bits 000E21  
                       _PIE2bits 000E2B                         i1u184_20 0036  
                       i1u184_21 0032                         i1u185_20 005E  
                       i1u185_21 005A                         i1u186_20 0070  
                       i1u186_21 0068                         i1u188_20 0096  
                       i1u187_28 0072                         i1u188_21 0092  
                       _PIR0bits 000E33                         _PIR2bits 000E35  
                      _month_num 00A3                     time2String@d 0093  
                   time2String@h 008F                     time2String@m 0095  
                   time2String@s 0091                     time2String@y 0097  
        ?_Comp1_init_rising_edge 0001                        _vfpfcnvrt 13F8  
                     _ADCON0bits 000F60                ___wmul@multiplier 0006  
          timeadjuster@solarnoon 0017                       ?_increment 0001  
                     _CM1NCHbits 000ED2                       _CM1PCHbits 000ED3  
                      copy_data0 1DE4              __end_of_time2String 1A7E  
          __end_of_LEDarray_init 2092                      _LCD_setline 1FE2  
                       __Hrparam 0000                       vfprintf@ap 006E  
                       __Lrparam 0000                       vfprintf@fp 006A  
                   __Lsmallconst 0E00   __end_of_Comp1_init_rising_edge 20B6  
                     ?_vfpfcnvrt 0044                  ___aodiv@divisor 000E  
                ___aodiv@counter 0016                       _ANSELAbits 000E92  
                     sprintf@fmt 0072                       _T0CON0bits 000FD5  
                     _T0CON1bits 000FD6                  ___lwdiv@divisor 0008  
                ___lwdiv@counter 000A                         __ptext10 1736  
                       __ptext11 216A                         __ptext20 2160  
                       __ptext12 1EF6                         __ptext21 1F36  
                       __ptext13 1294                         __ptext30 2016  
                       __ptext22 1546                         __ptext14 110C  
                       __ptext31 1CB8                         __ptext23 164E  
                       __ptext15 1AF8                         __ptext32 2152  
                       __ptext24 1D20                         __ptext16 1FAE  
                       __ptext33 2140                         __ptext25 1EB4  
                       __ptext17 1BDC                         __ptext34 2092  
                       __ptext26 20DA                         __ptext18 1C4A  
                       __ptext35 20B6                         __ptext27 206C  
                       __ptext19 2046                         __ptext36 212C  
                       __ptext28 1FE2                         __ptext37 20FA  
                       __ptext29 18C4                      ??_day1_init 0006  
        LEDarray_disp_bin@number 0006                ??_daylightsavings 0006  
                       isa$xinst 000000                         int$flags 0055  
                       _poweroff 1F36                         _vfprintf 1E20  
               ___aomod@dividend 0006                       _INTCONbits 000FF2  
                    _time2String 19FE                      ??_increment 0020  
       ?_Comp1_init_falling_edge 0001                  _streetLightInit 2160  
                       intlevel1 0000                         intlevel2 0000  
                      sprintf@ap 0080                     _timeadjuster 1B6C  
                   _DAC1CON0bits 000EC6                     _DAC1CON1bits 000EC7  
                 time2String@buf 008D                  ___aomod@divisor 000E  
                    ??_vfpfcnvrt 004A                  ___aomod@counter 0016  
                       sprintf@f 0082                         sprintf@s 0070  
                   ___aodiv@sign 0017                     ___aomod@sign 0017  
