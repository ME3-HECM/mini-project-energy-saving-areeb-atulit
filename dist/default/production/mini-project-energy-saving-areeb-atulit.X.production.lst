

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Nov 08 03:28:33 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    63   000000                     
    64                           ; Generated 06/04/2022 GMT
    65                           ; 
    66                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution. Publication is not required when
    80                           ;        this file is used in an embedded application.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F67K40 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98   000000                     
    99                           	psect	idataBANK1
   100   002162                     __pidataBANK1:
   101                           	callstack 0
   102                           
   103                           ;initializer for _month
   104   002162  001F               	dw	31
   105   002164  001C               	dw	28
   106   002166  001F               	dw	31
   107   002168  001E               	dw	30
   108   00216A  001F               	dw	31
   109   00216C  001E               	dw	30
   110   00216E  001F               	dw	31
   111   002170  001F               	dw	31
   112   002172  001E               	dw	30
   113   002174  001F               	dw	31
   114   002176  001E               	dw	30
   115   002178  001F               	dw	31
   116                           
   117                           	psect	smallconst
   118   000E00                     __psmallconst:
   119                           	callstack 0
   120   000E00  00                 	db	0
   121   000E01  0000               	dw	0
   122   000E03  0000               	dw	0
   123   000E05  CFDC               	dw	53212
   124   000E07  35D1               	dw	13777
   125   000E09                     __end_of_dp_l:
   126                           	callstack 0
   127   000E09  0000               	dw	0
   128   000E0B  0000               	dw	0
   129   000E0D  C000               	dw	49152
   130   000E0F  3F15               	dw	16149
   131   000E11                     __end_of_dp_h:
   132                           	callstack 0
   133   000E11  4260               	dw	16992
   134   000E13  0DA2               	dw	3490
   135   000E15                     __end_of_tiny@sqrtf$F2315:
   136                           	callstack 0
   137   000E15  A570               	dw	42352
   138   000E17  36EC               	dw	14060
   139   000E19                     __end_of_ivln2_l:
   140                           	callstack 0
   141   000E19  AA3B               	dw	43579
   142   000E1B  3FB8               	dw	16312
   143   000E1D                     __end_of_ivln2:
   144                           	callstack 0
   145   000E1D  384F               	dw	14415
   146   000E1F  3F76               	dw	16246
   147   000E21                     __end_of_cp:
   148                           	callstack 0
   149   000E21  AA3C               	dw	43580
   150   000E23  3338               	dw	13112
   151   000E25                     __end_of_ovt:
   152                           	callstack 0
   153   000E25  BE8C               	dw	48780
   154   000E27  35BF               	dw	13759
   155   000E29                     __end_of_lg2_l:
   156                           	callstack 0
   157   000E29  7200               	dw	29184
   158   000E2B  3F31               	dw	16177
   159   000E2D                     __end_of_lg2_h:
   160                           	callstack 0
   161   000E2D  7218               	dw	29208
   162   000E2F  3F31               	dw	16177
   163   000E31                     __end_of_lg2:
   164                           	callstack 0
   165   000E31  BB4C               	dw	47948
   166   000E33  3331               	dw	13105
   167   000E35                     __end_of_P5:
   168                           	callstack 0
   169   000E35  EA0E               	dw	59918
   170   000E37  B5DD               	dw	46557
   171   000E39                     __end_of_P4:
   172                           	callstack 0
   173   000E39  B355               	dw	45909
   174   000E3B  388A               	dw	14474
   175   000E3D                     __end_of_P3:
   176                           	callstack 0
   177   000E3D  0B61               	dw	2913
   178   000E3F  BB36               	dw	47926
   179   000E41                     __end_of_P2:
   180                           	callstack 0
   181   000E41  AAAB               	dw	43691
   182   000E43  3E2A               	dw	15914
   183   000E45                     __end_of_P1:
   184                           	callstack 0
   185   000E45  F142               	dw	61762
   186   000E47  3E53               	dw	15955
   187   000E49                     __end_of_L6:
   188                           	callstack 0
   189   000E49  3255               	dw	12885
   190   000E4B  3E6C               	dw	15980
   191   000E4D                     __end_of_L5:
   192                           	callstack 0
   193   000E4D  A305               	dw	41733
   194   000E4F  3E8B               	dw	16011
   195   000E51                     __end_of_L4:
   196                           	callstack 0
   197   000E51  AAAB               	dw	43691
   198   000E53  3EAA               	dw	16042
   199   000E55                     __end_of_L3:
   200                           	callstack 0
   201   000E55  6DB7               	dw	28087
   202   000E57  3EDB               	dw	16091
   203   000E59                     __end_of_L2:
   204                           	callstack 0
   205   000E59  999A               	dw	39322
   206   000E5B  3F19               	dw	16153
   207   000E5D                     __end_of_L1:
   208                           	callstack 0
   209   000E5D  4260               	dw	16992
   210   000E5F  0DA2               	dw	3490
   211   000E61                     __end_of_tiny:
   212                           	callstack 0
   213   000E61  F2CA               	dw	62154
   214   000E63  7149               	dw	29001
   215   000E65                     __end_of_huge:
   216                           	callstack 0
   217   000E65  0000               	dw	0
   218   000E67  4B80               	dw	19328
   219   000E69                     __end_of_two24:
   220                           	callstack 0
   221   000E69  0000               	dw	0
   222   000E6B  3F80               	dw	16256
   223   000E6D  0000               	dw	0
   224   000E6F  3FC0               	dw	16320
   225   000E71                     __end_of_bp:
   226                           	callstack 0
   227   000E71  AA00               	dw	43520
   228   000E73  3FB8               	dw	16312
   229   000E75                     __end_of_ivln2_h:
   230                           	callstack 0
   231   000E75  23C6               	dw	9158
   232   000E77  B8F6               	dw	47350
   233   000E79                     __end_of_cp_l:
   234                           	callstack 0
   235   000E79  4000               	dw	16384
   236   000E7B  3F76               	dw	16246
   237   000E7D                     __end_of_cp_h:
   238                           	callstack 0
   239   000000                     _TRISEbits	set	3973
   240   000000                     _TRISCbits	set	3971
   241   000000                     _LATEbits	set	3965
   242   000000                     _LATCbits	set	3963
   243   000000                     _TRISDbits	set	3972
   244   000000                     _T0CON0bits	set	4053
   245   000000                     _T0CON1bits	set	4054
   246   000000                     _LATDbits	set	3964
   247   000000                     _LATHbits	set	3968
   248   000000                     _CM1CON1bits	set	3793
   249   000000                     _LATBbits	set	3962
   250   000000                     _LATFbits	set	3966
   251   000000                     _TRISBbits	set	3970
   252   000000                     _TRISFbits	set	3974
   253   000000                     _TRISGbits	set	3975
   254   000E7D                     STR_1:
   255                           
   256                           ; BSR set to: 14
   257   000E7D  25                 	db	37
   258   000E7E  64                 	db	100	;'d'
   259   000E7F  3A                 	db	58	;':'
   260   000E80  25                 	db	37
   261   000E81  64                 	db	100	;'d'
   262   000E82  3A                 	db	58	;':'
   263   000E83  25                 	db	37
   264   000E84  64                 	db	100	;'d'
   265   000E85  20                 	db	32
   266   000E86  25                 	db	37
   267   000E87  64                 	db	100	;'d'
   268   000E88  2D                 	db	45
   269   000E89  25                 	db	37
   270   000E8A  64                 	db	100	;'d'
   271   000E8B  2D                 	db	45
   272   000E8C  25                 	db	37
   273   000E8D  64                 	db	100	;'d'
   274   000E8E  20                 	db	32
   275   000E8F  00                 	db	0
   276   000E90  00                 	db	0	; dummy byte at the end
   277   000000                     
   278                           	psect	nvBANK0
   279   000099                     __pnvBANK0:
   280                           	callstack 0
   281   000099                     _year:
   282                           	callstack 0
   283   000099                     	ds	2
   284   00009B                     _day_of_week:
   285                           	callstack 0
   286   00009B                     	ds	2
   287   00009D                     _month_num:
   288                           	callstack 0
   289   00009D                     	ds	2
   290                           
   291                           	psect	nvBANK1
   292   0001A2                     __pnvBANK1:
   293                           	callstack 0
   294   0001A2                     _day_of_month:
   295                           	callstack 0
   296   0001A2                     	ds	2
   297   0001A4                     _day_of_year:
   298                           	callstack 0
   299   0001A4                     	ds	2
   300   000000                     _IPR0bits	set	3615
   301   000000                     _IPR2bits	set	3617
   302   000000                     _PIE0bits	set	3625
   303   000000                     _PIE2bits	set	3627
   304   000000                     _ANSELAbits	set	3730
   305   000000                     _TRISAbits	set	3969
   306   000000                     _DAC1CON0bits	set	3782
   307   000000                     _ADREFbits	set	3928
   308   000000                     _ADPCH	set	3935
   309   000000                     _ADRESH	set	3940
   310   000000                     _ADCON0bits	set	3936
   311   000000                     _LATAbits	set	3961
   312   000000                     _LATGbits	set	3967
   313   000000                     _TRISHbits	set	3976
   314   000000                     _TMR0L	set	4051
   315   000000                     _TMR0H	set	4052
   316   000000                     _INTCONbits	set	4082
   317   000000                     _CM1CON0bits	set	3792
   318   000000                     _CM1NCHbits	set	3794
   319   000000                     _DAC1CON1bits	set	3783
   320   000000                     _CM1PCHbits	set	3795
   321   000000                     _PIR0bits	set	3635
   322   000000                     _PIR2bits	set	3637
   323                           
   324                           ; #config settings
   325                           
   326                           	psect	cinit
   327   001DC6                     __pcinit:
   328                           	callstack 0
   329   001DC6                     start_initialization:
   330                           	callstack 0
   331   001DC6                     __initialization:
   332                           	callstack 0
   333                           
   334                           ; Initialize objects allocated to BANK1 (24 bytes)
   335                           ; load TBLPTR registers with __pidataBANK1
   336   001DC6  0E62               	movlw	low __pidataBANK1
   337   001DC8  6EF6               	movwf	tblptrl,c
   338   001DCA  0E21               	movlw	high __pidataBANK1
   339   001DCC  6EF7               	movwf	tblptrh,c
   340   001DCE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   341   001DD0  6EF8               	movwf	tblptru,c
   342   001DD2  EE01  F08A         	lfsr	0,__pdataBANK1
   343   001DD6  EE10 F018          	lfsr	1,24
   344   001DDA                     copy_data0:
   345   001DDA  0009               	tblrd		*+
   346   001DDC  CFF5 FFEE          	movff	tablat,postinc0
   347   001DE0  50E5               	movf	postdec1,w,c
   348   001DE2  50E1               	movf	fsr1l,w,c
   349   001DE4  E1FA               	bnz	copy_data0
   350                           
   351                           ; Clear objects allocated to BANK1 (38 bytes)
   352   001DE6  EE01  F064         	lfsr	0,__pbssBANK1
   353   001DEA  0E26               	movlw	38
   354   001DEC                     clear_0:
   355   001DEC  6AEE               	clrf	postinc0,c
   356   001DEE  06E8               	decf	wreg,f,c
   357   001DF0  E1FD               	bnz	clear_0
   358                           
   359                           ; Clear objects allocated to BANK0 (6 bytes)
   360   001DF2  0100               	movlb	0
   361   001DF4  6BA4               	clrf	(__pbssBANK0+5)& (0+255),b
   362   001DF6  6BA3               	clrf	(__pbssBANK0+4)& (0+255),b
   363   001DF8  6BA2               	clrf	(__pbssBANK0+3)& (0+255),b
   364   001DFA  6BA1               	clrf	(__pbssBANK0+2)& (0+255),b
   365   001DFC  6BA0               	clrf	(__pbssBANK0+1)& (0+255),b
   366   001DFE  6B9F               	clrf	__pbssBANK0& (0+255),b
   367                           
   368                           ; Clear objects allocated to COMRAM (5 bytes)
   369   001E00  6A54               	clrf	(__pbssCOMRAM+4)& (0+255),c
   370   001E02  6A53               	clrf	(__pbssCOMRAM+3)& (0+255),c
   371   001E04  6A52               	clrf	(__pbssCOMRAM+2)& (0+255),c
   372   001E06  6A51               	clrf	(__pbssCOMRAM+1)& (0+255),c
   373   001E08  6A50               	clrf	__pbssCOMRAM& (0+255),c
   374   001E0A                     end_of_initialization:
   375                           	callstack 0
   376   001E0A                     __end_of__initialization:
   377                           	callstack 0
   378   001E0A  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   379   001E0C  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   380   001E0E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   381   001E10  6EF8               	movwf	tblptru,c
   382   001E12  0E0E               	movlw	high __Lsmallconst
   383   001E14  6EF7               	movwf	tblptrh,c
   384   001E16  0100               	movlb	0
   385   001E18  EFD7  F00C         	goto	_main	;jump to C main() function
   386                           
   387                           	psect	bssCOMRAM
   388   000050                     __pbssCOMRAM:
   389                           	callstack 0
   390   000050                     _width:
   391                           	callstack 0
   392   000050                     	ds	2
   393   000052                     _prec:
   394                           	callstack 0
   395   000052                     	ds	2
   396   000054                     _flags:
   397                           	callstack 0
   398   000054                     	ds	1
   399                           
   400                           	psect	bssBANK0
   401   00009F                     __pbssBANK0:
   402                           	callstack 0
   403   00009F                     _comp_check:
   404                           	callstack 0
   405   00009F                     	ds	2
   406   0000A1                     _hour:
   407                           	callstack 0
   408   0000A1                     	ds	2
   409   0000A3                     _seconds:
   410                           	callstack 0
   411   0000A3                     	ds	2
   412                           
   413                           	psect	bssBANK1
   414   000164                     __pbssBANK1:
   415                           	callstack 0
   416   000164                     fabsf@F465:
   417                           	callstack 0
   418   000164                     	ds	4
   419   000168                     _errno:
   420                           	callstack 0
   421   000168                     	ds	2
   422   00016A                     _dbuf:
   423                           	callstack 0
   424   00016A                     	ds	32
   425                           
   426                           	psect	dataBANK1
   427   00018A                     __pdataBANK1:
   428                           	callstack 0
   429   00018A                     _month:
   430                           	callstack 0
   431   00018A                     	ds	24
   432                           
   433                           	psect	cstackBANK1
   434   000100                     __pcstackBANK1:
   435                           	callstack 0
   436   000100                     main@strdate:
   437                           	callstack 0
   438                           
   439                           ; 100 bytes @ 0x0
   440   000100                     	ds	100
   441                           
   442                           	psect	cstackBANK0
   443   000060                     __pcstackBANK0:
   444                           	callstack 0
   445   000060                     vfpfcnvrt@convarg:
   446                           	callstack 0
   447                           
   448                           ; 8 bytes @ 0x0
   449   000060                     	ds	8
   450   000068                     vfpfcnvrt@cp:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x8
   454   000068                     	ds	2
   455   00006A                     ?_vfprintf:
   456                           	callstack 0
   457   00006A                     vfprintf@fp:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0xA
   461   00006A                     	ds	2
   462   00006C                     vfprintf@fmt:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0xC
   466   00006C                     	ds	2
   467   00006E                     vfprintf@ap:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0xE
   471   00006E                     	ds	2
   472   000070                     ?_sprintf:
   473                           	callstack 0
   474   000070                     sprintf@s:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x10
   478   000070                     	ds	2
   479   000072                     sprintf@fmt:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x12
   483   000072                     	ds	14
   484   000080                     sprintf@ap:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x20
   488   000080                     	ds	2
   489   000082                     sprintf@f:
   490                           	callstack 0
   491                           
   492                           ; 11 bytes @ 0x22
   493   000082                     	ds	11
   494   00008D                     time2String@buf:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x2D
   498   00008D                     	ds	2
   499   00008F                     time2String@h:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x2F
   503   00008F                     	ds	2
   504   000091                     time2String@s:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x31
   508   000091                     	ds	2
   509   000093                     time2String@d:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x33
   513   000093                     	ds	2
   514   000095                     time2String@m:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x35
   518   000095                     	ds	2
   519   000097                     time2String@y:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x37
   523   000097                     	ds	2
   524                           
   525                           	psect	cstackCOMRAM
   526   000001                     __pcstackCOMRAM:
   527                           	callstack 0
   528   000001                     ??_HighISR:
   529   000001                     
   530                           ; 1 bytes @ 0x0
   531   000001                     	ds	1
   532   000002                     ??_LowISR:
   533                           
   534                           ; 1 bytes @ 0x1
   535   000002                     	ds	4
   536   000006                     ?___wmul:
   537                           	callstack 0
   538   000006                     ?___awdiv:
   539                           	callstack 0
   540   000006                     ?___lwdiv:
   541                           	callstack 0
   542   000006                     ?___aodiv:
   543                           	callstack 0
   544   000006                     ?___aomod:
   545                           	callstack 0
   546   000006                     LCD_sendnibble@number:
   547                           	callstack 0
   548   000006                     LEDarray_disp_bin@number:
   549                           	callstack 0
   550   000006                     ___wmul@multiplier:
   551                           	callstack 0
   552   000006                     ___awdiv@dividend:
   553                           	callstack 0
   554   000006                     ___lwdiv@dividend:
   555                           	callstack 0
   556   000006                     fputc@c:
   557                           	callstack 0
   558   000006                     ___aodiv@dividend:
   559                           	callstack 0
   560   000006                     ___aomod@dividend:
   561                           	callstack 0
   562                           
   563                           ; 8 bytes @ 0x5
   564   000006                     	ds	1
   565   000007                     LCD_sendbyte@type:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x6
   569   000007                     	ds	1
   570   000008                     ??_LEDarray_disp_bin:
   571   000008                     LCD_sendbyte@Byte:
   572                           	callstack 0
   573   000008                     ___wmul@multiplicand:
   574                           	callstack 0
   575   000008                     ___awdiv@divisor:
   576                           	callstack 0
   577   000008                     ___lwdiv@divisor:
   578                           	callstack 0
   579   000008                     fputc@fp:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x7
   583   000008                     	ds	1
   584   000009                     ??_LCD_Init:
   585   000009                     LCD_setline@line:
   586                           	callstack 0
   587   000009                     LCD_sendstring@string:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x8
   591   000009                     	ds	1
   592   00000A                     ??_fputc:
   593   00000A                     ___awdiv@counter:
   594                           	callstack 0
   595   00000A                     ___lwdiv@counter:
   596                           	callstack 0
   597   00000A                     ___wmul@product:
   598                           	callstack 0
   599   00000A                     LEDarray_disp_bin@led_arr:
   600                           	callstack 0
   601                           
   602                           ; 18 bytes @ 0x9
   603   00000A                     	ds	1
   604   00000B                     ___awdiv@sign:
   605                           	callstack 0
   606   00000B                     ___lwdiv@quotient:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0xA
   610   00000B                     	ds	1
   611   00000C                     ?_sunrise:
   612                           	callstack 0
   613   00000C                     ?_sunset:
   614                           	callstack 0
   615   00000C                     ___awdiv@quotient:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0xB
   619   00000C                     	ds	2
   620   00000E                     ??_sunrise:
   621   00000E                     ??_sunset:
   622   00000E                     ___aodiv@divisor:
   623                           	callstack 0
   624   00000E                     ___aomod@divisor:
   625                           	callstack 0
   626                           
   627                           ; 8 bytes @ 0xD
   628   00000E                     	ds	1
   629   00000F                     sunrise@prevState:
   630                           	callstack 0
   631   00000F                     sunset@prevState:
   632                           	callstack 0
   633   00000F                     fputs@s:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0xE
   637   00000F                     	ds	2
   638   000011                     sunrise@sunrise_time:
   639                           	callstack 0
   640   000011                     sunset@sunset_time:
   641                           	callstack 0
   642   000011                     fputs@fp:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x10
   646   000011                     	ds	2
   647   000013                     fputs@c:
   648                           	callstack 0
   649   000013                     timeadjuster@sunrise_time:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x12
   653   000013                     	ds	1
   654   000014                     fputs@i:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x13
   658   000014                     	ds	1
   659   000015                     timeadjuster@sunset_time:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x14
   663   000015                     	ds	1
   664   000016                     ___aodiv@counter:
   665                           	callstack 0
   666   000016                     ___aomod@counter:
   667                           	callstack 0
   668   000016                     pad@fp:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x15
   672   000016                     	ds	1
   673   000017                     ___aodiv@sign:
   674                           	callstack 0
   675   000017                     ___aomod@sign:
   676                           	callstack 0
   677   000017                     timeadjuster@solarnoon:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x16
   681   000017                     	ds	1
   682   000018                     ?_abs:
   683                           	callstack 0
   684   000018                     pad@buf:
   685                           	callstack 0
   686   000018                     abs@a:
   687                           	callstack 0
   688   000018                     ___aodiv@quotient:
   689                           	callstack 0
   690                           
   691                           ; 8 bytes @ 0x17
   692   000018                     	ds	1
   693   000019                     timeadjuster@adjustment:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x18
   697   000019                     	ds	1
   698   00001A                     ??_abs:
   699   00001A                     pad@p:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x19
   703   00001A                     	ds	2
   704   00001C                     ??_pad:
   705   00001C                     LEDarray_disp_bin@mask:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x1B
   709   00001C                     	ds	1
   710   00001D                     pad@i:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x1C
   714   00001D                     	ds	1
   715   00001E                     LEDarray_disp_bin@ctr:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x1D
   719   00001E                     	ds	1
   720   00001F                     pad@w:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x1E
   724   00001F                     	ds	1
   725   000020                     ??_increment:
   726                           
   727                           ; 1 bytes @ 0x1F
   728   000020                     	ds	1
   729   000021                     dtoa@fp:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x20
   733   000021                     	ds	2
   734   000023                     dtoa@d:
   735                           	callstack 0
   736                           
   737                           ; 8 bytes @ 0x22
   738   000023                     	ds	8
   739   00002B                     ??_dtoa:
   740                           
   741                           ; 1 bytes @ 0x2A
   742   00002B                     	ds	8
   743   000033                     _dtoa$2130:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x32
   747   000033                     	ds	2
   748   000035                     dtoa@p:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x34
   752   000035                     	ds	2
   753   000037                     dtoa@w:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x36
   757   000037                     	ds	2
   758   000039                     dtoa@n:
   759                           	callstack 0
   760                           
   761                           ; 8 bytes @ 0x38
   762   000039                     	ds	8
   763   000041                     dtoa@s:
   764                           	callstack 0
   765                           
   766                           ; 1 bytes @ 0x40
   767   000041                     	ds	1
   768   000042                     dtoa@i:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x41
   772   000042                     	ds	2
   773   000044                     vfpfcnvrt@fp:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x43
   777   000044                     	ds	2
   778   000046                     vfpfcnvrt@fmt:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x45
   782   000046                     	ds	2
   783   000048                     vfpfcnvrt@ap:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x47
   787   000048                     	ds	2
   788   00004A                     ??_vfpfcnvrt:
   789                           
   790                           ; 1 bytes @ 0x49
   791   00004A                     	ds	2
   792   00004C                     vfprintf@cfmt:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x4B
   796   00004C                     	ds	2
   797   00004E                     ??_time2String:
   798   00004E                     
   799                           ; 1 bytes @ 0x4D
   800   00004E                     	ds	2
   801   000050                     
   802                           ; 1 bytes @ 0x4F
   803 ;;
   804 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   805 ;;
   806 ;; *************** function _main *****************
   807 ;; Defined at:
   808 ;;		line 19 in file "main.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;		None
   811 ;; Auto vars:     Size  Location     Type
   812 ;;  strdate       100    0[BANK1 ] unsigned char [100]
   813 ;;  strtime       100    0        unsigned char [100]
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   824 ;;      Locals:         0       0     100       0       0       0       0       0       0       0       0       0       
      +0       0       0
   825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   826 ;;      Totals:         0       0     100       0       0       0       0       0       0       0       0       0       
      +0       0       0
   827 ;;Total ram usage:      100 bytes
   828 ;; Hardware stack levels required when called: 11
   829 ;; This function calls:
   830 ;;		_ADC_init
   831 ;;		_Comp1_init_falling_edge
   832 ;;		_Comp1_init_rising_edge
   833 ;;		_Interrupts_init
   834 ;;		_LCD_Init
   835 ;;		_LCD_setline
   836 ;;		_LEDarray_init
   837 ;;		_Timer0_init
   838 ;;		_day1_init
   839 ;;		_daylightsavings
   840 ;;		_increment
   841 ;;		_poweroff
   842 ;;		_streetLightInit
   843 ;;		_sunrise
   844 ;;		_sunset
   845 ;;		_time2String
   846 ;;		_timeadjuster
   847 ;; This function is called by:
   848 ;;		Startup code after reset
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           	psect	text0
   853   0019AE                     __ptext0:
   854                           	callstack 0
   855   0019AE                     _main:
   856                           	callstack 20
   857   0019AE                     
   858                           ;main.c: 21:     streetLightInit();
   859   0019AE  ECD7  F010         	call	_streetLightInit	;wreg free
   860                           
   861                           ;main.c: 22:     LEDarray_init();
   862   0019B2  EC5D  F010         	call	_LEDarray_init	;wreg free
   863   0019B6                     
   864                           ;main.c: 23:     Timer0_init();
   865   0019B6  EC94  F010         	call	_Timer0_init	;wreg free
   866   0019BA                     
   867                           ;main.c: 24:     Comp1_init_rising_edge();
   868   0019BA  EC70  F010         	call	_Comp1_init_rising_edge	;wreg free
   869   0019BE                     
   870                           ;main.c: 25:     Comp1_init_falling_edge();
   871   0019BE  EC82  F010         	call	_Comp1_init_falling_edge	;wreg free
   872   0019C2                     
   873                           ;main.c: 26:     Interrupts_init();
   874   0019C2  ECC7  F010         	call	_Interrupts_init	;wreg free
   875                           
   876                           ;main.c: 27:     ADC_init();
   877   0019C6  ECA4  F010         	call	_ADC_init	;wreg free
   878                           
   879                           ;main.c: 28:     day1_init();
   880   0019CA  EC81  F00F         	call	_day1_init	;wreg free
   881   0019CE                     
   882                           ;main.c: 29:     LCD_Init();
   883   0019CE  EC86  F00C         	call	_LCD_Init	;wreg free
   884   0019D2                     l3378:
   885                           
   886                           ;main.c: 33:         LCD_setline(1);
   887   0019D2  0E01               	movlw	1
   888   0019D4  EC18  F010         	call	_LCD_setline
   889   0019D8                     
   890                           ;main.c: 34:         time2String(strdate, hour,seconds,day_of_month, month_num,year);
   891   0019D8  0E00               	movlw	low main@strdate
   892   0019DA  0100               	movlb	0	; () banked
   893   0019DC  6F8D               	movwf	time2String@buf& (0+255),b
   894   0019DE  0E01               	movlw	high main@strdate
   895   0019E0  6F8E               	movwf	(time2String@buf+1)& (0+255),b
   896   0019E2  C0A1  F08F         	movff	_hour,time2String@h
   897   0019E6  C0A2  F090         	movff	_hour+1,time2String@h+1
   898   0019EA  C0A3  F091         	movff	_seconds,time2String@s
   899   0019EE  C0A4  F092         	movff	_seconds+1,time2String@s+1
   900   0019F2  C1A2  F093         	movff	_day_of_month,time2String@d
   901   0019F6  C1A3  F094         	movff	_day_of_month+1,time2String@d+1
   902   0019FA  C09D  F095         	movff	_month_num,time2String@m
   903   0019FE  C09E  F096         	movff	_month_num+1,time2String@m+1
   904   001A02  C099  F097         	movff	_year,time2String@y
   905   001A06  C09A  F098         	movff	_year+1,time2String@y+1
   906   001A0A  EC23  F00D         	call	_time2String	;wreg free
   907   001A0E                     
   908                           ;main.c: 35:         increment();
   909   001A0E  ECA4  F00A         	call	_increment	;wreg free
   910   001A12                     
   911                           ;main.c: 36:         poweroff();
   912   001A12  ECC2  F00F         	call	_poweroff	;wreg free
   913   001A16                     
   914                           ;main.c: 37:         sunrise();
   915   001A16  EC49  F00E         	call	_sunrise	;wreg free
   916   001A1A                     
   917                           ;main.c: 38:         sunset();
   918   001A1A  EC12  F00E         	call	_sunset	;wreg free
   919   001A1E                     
   920                           ;main.c: 39:         timeadjuster(sunrise(),sunset());
   921   001A1E  EC49  F00E         	call	_sunrise	;wreg free
   922   001A22  C00C  F013         	movff	?_sunrise,timeadjuster@sunrise_time
   923   001A26  C00D  F014         	movff	?_sunrise+1,timeadjuster@sunrise_time+1
   924   001A2A  EC12  F00E         	call	_sunset	;wreg free
   925   001A2E  C00C  F015         	movff	?_sunset,timeadjuster@sunset_time
   926   001A32  C00D  F016         	movff	?_sunset+1,timeadjuster@sunset_time+1
   927   001A36  ECDA  F00D         	call	_timeadjuster	;wreg free
   928   001A3A                     
   929                           ;main.c: 40:         daylightsavings();
   930   001A3A  ECB4  F00E         	call	_daylightsavings	;wreg free
   931   001A3E  EFE9  F00C         	goto	l3378
   932   001A42  EF54  F000         	goto	start
   933   001A46                     __end_of_main:
   934                           	callstack 0
   935                           
   936 ;; *************** function _timeadjuster *****************
   937 ;; Defined at:
   938 ;;		line 109 in file "Functions.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;  sunrise_time    2   18[COMRAM] int 
   941 ;;  sunset_time     2   20[COMRAM] int 
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  adjustment      2   24[COMRAM] int 
   944 ;;  solarnoon       2   22[COMRAM] int 
   945 ;; Return value:  Size  Location     Type
   946 ;;                  1    wreg      void 
   947 ;; Registers used:
   948 ;;		wreg, status,2, status,0, cstack
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   954 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   955 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   957 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   958 ;;Total ram usage:        8 bytes
   959 ;; Hardware stack levels used: 1
   960 ;; Hardware stack levels required when called: 3
   961 ;; This function calls:
   962 ;;		___awdiv
   963 ;; This function is called by:
   964 ;;		_main
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           	psect	text1
   969   001BB4                     __ptext1:
   970                           	callstack 0
   971   001BB4                     _timeadjuster:
   972                           	callstack 27
   973   001BB4                     
   974                           ;Functions.c: 112:     int adjustment = 0;
   975   001BB4  0E00               	movlw	0
   976   001BB6  6E1A               	movwf	(timeadjuster@adjustment+1)^0,c
   977   001BB8  0E00               	movlw	0
   978   001BBA  6E19               	movwf	timeadjuster@adjustment^0,c
   979   001BBC                     
   980                           ;Functions.c: 113:     solarnoon = (sunrise_time+sunset_time)/2;
   981   001BBC  5015               	movf	timeadjuster@sunset_time^0,w,c
   982   001BBE  2413               	addwf	timeadjuster@sunrise_time^0,w,c
   983   001BC0  6E06               	movwf	___awdiv@dividend^0,c
   984   001BC2  5016               	movf	(timeadjuster@sunset_time+1)^0,w,c
   985   001BC4  2014               	addwfc	(timeadjuster@sunrise_time+1)^0,w,c
   986   001BC6  6E07               	movwf	(___awdiv@dividend+1)^0,c
   987   001BC8  0E00               	movlw	0
   988   001BCA  6E09               	movwf	(___awdiv@divisor+1)^0,c
   989   001BCC  0E02               	movlw	2
   990   001BCE  6E08               	movwf	___awdiv@divisor^0,c
   991   001BD0  EC24  F00C         	call	___awdiv	;wreg free
   992   001BD4  C006  F017         	movff	?___awdiv,timeadjuster@solarnoon
   993   001BD8  C007  F018         	movff	?___awdiv+1,timeadjuster@solarnoon+1
   994   001BDC                     
   995                           ;Functions.c: 114:     adjustment = (12*3600)-solarnoon;
   996   001BDC  5017               	movf	timeadjuster@solarnoon^0,w,c
   997   001BDE  08C0               	sublw	192
   998   001BE0  6E19               	movwf	timeadjuster@adjustment^0,c
   999   001BE2  5018               	movf	(timeadjuster@solarnoon+1)^0,w,c
  1000   001BE4  A0D8               	btfss	status,0,c
  1001   001BE6  2AE8               	incf	wreg,f,c
  1002   001BE8  08A8               	sublw	168
  1003   001BEA  6E1A               	movwf	(timeadjuster@adjustment+1)^0,c
  1004   001BEC                     
  1005                           ;Functions.c: 115:     if (hour==11 && seconds==1800)
  1006   001BEC  0E0B               	movlw	11
  1007   001BEE  0100               	movlb	0	; () banked
  1008   001BF0  19A1               	xorwf	_hour& (0+255),w,b
  1009   001BF2  11A2               	iorwf	(_hour+1)& (0+255),w,b
  1010   001BF4  A4D8               	btfss	status,2,c
  1011   001BF6  EFFF  F00D         	goto	u2691
  1012   001BFA  EF01  F00E         	goto	u2690
  1013   001BFE                     u2691:
  1014   001BFE  EF11  F00E         	goto	l390
  1015   001C02                     u2690:
  1016   001C02                     
  1017                           ; BSR set to: 0
  1018   001C02  0E08               	movlw	8
  1019   001C04  19A3               	xorwf	_seconds& (0+255),w,b
  1020   001C06  E107               	bnz	u2701
  1021   001C08  0E07               	movlw	7
  1022   001C0A  19A4               	xorwf	(_seconds+1)& (0+255),w,b
  1023   001C0C  A4D8               	btfss	status,2,c
  1024   001C0E  EF0B  F00E         	goto	u2701
  1025   001C12  EF0D  F00E         	goto	u2700
  1026   001C16                     u2701:
  1027   001C16  EF11  F00E         	goto	l390
  1028   001C1A                     u2700:
  1029   001C1A                     
  1030                           ; BSR set to: 0
  1031                           ;Functions.c: 116:     {;Functions.c: 117:         seconds+=adjustment;
  1032   001C1A  5019               	movf	timeadjuster@adjustment^0,w,c
  1033   001C1C  27A3               	addwf	_seconds& (0+255),f,b
  1034   001C1E  501A               	movf	(timeadjuster@adjustment+1)^0,w,c
  1035   001C20  23A4               	addwfc	(_seconds+1)& (0+255),f,b
  1036   001C22                     l390:
  1037                           
  1038                           ; BSR set to: 0
  1039   001C22  0012               	return		;funcret
  1040   001C24                     __end_of_timeadjuster:
  1041                           	callstack 0
  1042                           
  1043 ;; *************** function ___awdiv *****************
  1044 ;; Defined at:
  1045 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;  dividend        2    5[COMRAM] int 
  1048 ;;  divisor         2    7[COMRAM] int 
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;  quotient        2   11[COMRAM] int 
  1051 ;;  sign            1   10[COMRAM] unsigned char 
  1052 ;;  counter         1    9[COMRAM] unsigned char 
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  2    5[COMRAM] int 
  1055 ;; Registers used:
  1056 ;;		wreg, status,2, status,0
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1062 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1063 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1065 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1066 ;;Total ram usage:        8 bytes
  1067 ;; Hardware stack levels used: 1
  1068 ;; Hardware stack levels required when called: 2
  1069 ;; This function calls:
  1070 ;;		Nothing
  1071 ;; This function is called by:
  1072 ;;		_timeadjuster
  1073 ;;		_ADC_lightMeter
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           	psect	text2
  1078   001848                     __ptext2:
  1079                           	callstack 0
  1080   001848                     ___awdiv:
  1081                           	callstack 27
  1082   001848  0E00               	movlw	0
  1083   00184A  6E0B               	movwf	___awdiv@sign^0,c
  1084   00184C  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
  1085   00184E  EF2D  F00C         	goto	u2430
  1086   001852  EF2B  F00C         	goto	u2431
  1087   001856                     u2431:
  1088   001856  EF33  F00C         	goto	l3074
  1089   00185A                     u2430:
  1090   00185A  6C08               	negf	___awdiv@divisor^0,c
  1091   00185C  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  1092   00185E  B0D8               	btfsc	status,0,c
  1093   001860  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  1094   001862  0E01               	movlw	1
  1095   001864  6E0B               	movwf	___awdiv@sign^0,c
  1096   001866                     l3074:
  1097   001866  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
  1098   001868  EF3A  F00C         	goto	u2440
  1099   00186C  EF38  F00C         	goto	u2441
  1100   001870                     u2441:
  1101   001870  EF40  F00C         	goto	l3080
  1102   001874                     u2440:
  1103   001874  6C06               	negf	___awdiv@dividend^0,c
  1104   001876  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  1105   001878  B0D8               	btfsc	status,0,c
  1106   00187A  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  1107   00187C  0E01               	movlw	1
  1108   00187E  1A0B               	xorwf	___awdiv@sign^0,f,c
  1109   001880                     l3080:
  1110   001880  0E00               	movlw	0
  1111   001882  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  1112   001884  0E00               	movlw	0
  1113   001886  6E0C               	movwf	___awdiv@quotient^0,c
  1114   001888  5008               	movf	___awdiv@divisor^0,w,c
  1115   00188A  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  1116   00188C  B4D8               	btfsc	status,2,c
  1117   00188E  EF4B  F00C         	goto	u2451
  1118   001892  EF4D  F00C         	goto	u2450
  1119   001896                     u2451:
  1120   001896  EF75  F00C         	goto	l3102
  1121   00189A                     u2450:
  1122   00189A  0E01               	movlw	1
  1123   00189C  6E0A               	movwf	___awdiv@counter^0,c
  1124   00189E  EF55  F00C         	goto	l3088
  1125   0018A2                     l3086:
  1126   0018A2  90D8               	bcf	status,0,c
  1127   0018A4  3608               	rlcf	___awdiv@divisor^0,f,c
  1128   0018A6  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  1129   0018A8  2A0A               	incf	___awdiv@counter^0,f,c
  1130   0018AA                     l3088:
  1131   0018AA  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  1132   0018AC  EF5A  F00C         	goto	u2461
  1133   0018B0  EF5C  F00C         	goto	u2460
  1134   0018B4                     u2461:
  1135   0018B4  EF51  F00C         	goto	l3086
  1136   0018B8                     u2460:
  1137   0018B8                     l3090:
  1138   0018B8  90D8               	bcf	status,0,c
  1139   0018BA  360C               	rlcf	___awdiv@quotient^0,f,c
  1140   0018BC  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  1141   0018BE  5008               	movf	___awdiv@divisor^0,w,c
  1142   0018C0  5C06               	subwf	___awdiv@dividend^0,w,c
  1143   0018C2  5009               	movf	(___awdiv@divisor+1)^0,w,c
  1144   0018C4  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  1145   0018C6  A0D8               	btfss	status,0,c
  1146   0018C8  EF68  F00C         	goto	u2471
  1147   0018CC  EF6A  F00C         	goto	u2470
  1148   0018D0                     u2471:
  1149   0018D0  EF6F  F00C         	goto	l3098
  1150   0018D4                     u2470:
  1151   0018D4  5008               	movf	___awdiv@divisor^0,w,c
  1152   0018D6  5E06               	subwf	___awdiv@dividend^0,f,c
  1153   0018D8  5009               	movf	(___awdiv@divisor+1)^0,w,c
  1154   0018DA  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  1155   0018DC  800C               	bsf	___awdiv@quotient^0,0,c
  1156   0018DE                     l3098:
  1157   0018DE  90D8               	bcf	status,0,c
  1158   0018E0  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  1159   0018E2  3208               	rrcf	___awdiv@divisor^0,f,c
  1160   0018E4  2E0A               	decfsz	___awdiv@counter^0,f,c
  1161   0018E6  EF5C  F00C         	goto	l3090
  1162   0018EA                     l3102:
  1163   0018EA  500B               	movf	___awdiv@sign^0,w,c
  1164   0018EC  B4D8               	btfsc	status,2,c
  1165   0018EE  EF7B  F00C         	goto	u2481
  1166   0018F2  EF7D  F00C         	goto	u2480
  1167   0018F6                     u2481:
  1168   0018F6  EF81  F00C         	goto	l3106
  1169   0018FA                     u2480:
  1170   0018FA  6C0C               	negf	___awdiv@quotient^0,c
  1171   0018FC  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  1172   0018FE  B0D8               	btfsc	status,0,c
  1173   001900  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  1174   001902                     l3106:
  1175   001902  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  1176   001906  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  1177   00190A  0012               	return		;funcret
  1178   00190C                     __end_of___awdiv:
  1179                           	callstack 0
  1180                           
  1181 ;; *************** function _time2String *****************
  1182 ;; Defined at:
  1183 ;;		line 132 in file "LCD.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;  buf             2   45[BANK0 ] PTR unsigned char 
  1186 ;;		 -> main@strdate(100), 
  1187 ;;  h               2   47[BANK0 ] unsigned int 
  1188 ;;  s               2   49[BANK0 ] unsigned int 
  1189 ;;  d               2   51[BANK0 ] unsigned int 
  1190 ;;  m               2   53[BANK0 ] unsigned int 
  1191 ;;  y               2   55[BANK0 ] unsigned int 
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;		None
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      void 
  1196 ;; Registers used:
  1197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1203 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1205 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1206 ;;      Totals:         2      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1207 ;;Total ram usage:       14 bytes
  1208 ;; Hardware stack levels used: 1
  1209 ;; Hardware stack levels required when called: 10
  1210 ;; This function calls:
  1211 ;;		_LCD_sendstring
  1212 ;;		___lwdiv
  1213 ;;		_sprintf
  1214 ;; This function is called by:
  1215 ;;		_main
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219                           	psect	text3
  1220   001A46                     __ptext3:
  1221                           	callstack 0
  1222   001A46                     _time2String:
  1223                           	callstack 20
  1224   001A46                     
  1225                           ;LCD.c: 138:     sprintf(buf,"%d:%d:%d %d-%d-%d ",h, s/60, s,d,m,y);
  1226   001A46  C08D  F070         	movff	time2String@buf,sprintf@s
  1227   001A4A  C08E  F071         	movff	time2String@buf+1,sprintf@s+1
  1228   001A4E  0E7D               	movlw	low STR_1
  1229   001A50  0100               	movlb	0	; () banked
  1230   001A52  6F72               	movwf	sprintf@fmt& (0+255),b
  1231   001A54  0E0E               	movlw	high STR_1
  1232   001A56  6F73               	movwf	(sprintf@fmt+1)& (0+255),b
  1233   001A58  C08F  F074         	movff	time2String@h,?_sprintf+4
  1234   001A5C  C090  F075         	movff	time2String@h+1,?_sprintf+5
  1235   001A60  C091  F006         	movff	time2String@s,___lwdiv@dividend
  1236   001A64  C092  F007         	movff	time2String@s+1,___lwdiv@dividend+1
  1237   001A68  0E00               	movlw	0
  1238   001A6A  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  1239   001A6C  0E3C               	movlw	60
  1240   001A6E  6E08               	movwf	___lwdiv@divisor^0,c
  1241   001A70  ECA0  F00D         	call	___lwdiv	;wreg free
  1242   001A74  C006  F076         	movff	?___lwdiv,?_sprintf+6
  1243   001A78  C007  F077         	movff	?___lwdiv+1,?_sprintf+7
  1244   001A7C  C091  F078         	movff	time2String@s,?_sprintf+8
  1245   001A80  C092  F079         	movff	time2String@s+1,?_sprintf+9
  1246   001A84  C093  F07A         	movff	time2String@d,?_sprintf+10
  1247   001A88  C094  F07B         	movff	time2String@d+1,?_sprintf+11
  1248   001A8C  C095  F07C         	movff	time2String@m,?_sprintf+12
  1249   001A90  C096  F07D         	movff	time2String@m+1,?_sprintf+13
  1250   001A94  C097  F07E         	movff	time2String@y,?_sprintf+14
  1251   001A98  C098  F07F         	movff	time2String@y+1,?_sprintf+15
  1252   001A9C  EC0E  F00F         	call	_sprintf	;wreg free
  1253   001AA0                     
  1254                           ;LCD.c: 139:     LCD_sendstring(buf);
  1255   001AA0  C08D  F009         	movff	time2String@buf,LCD_sendstring@string
  1256   001AA4  C08E  F00A         	movff	time2String@buf+1,LCD_sendstring@string+1
  1257   001AA8  ECFE  F00F         	call	_LCD_sendstring	;wreg free
  1258   001AAC                     
  1259                           ;LCD.c: 140:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1260   001AAC  0E52               	movlw	82
  1261   001AAE  6E4F               	movwf	(??_time2String+1)^0,c
  1262   001AB0  0E2B               	movlw	43
  1263   001AB2  6E4E               	movwf	??_time2String^0,c
  1264   001AB4  0E00               	movlw	0
  1265   001AB6                     u2797:
  1266   001AB6  2EE8               	decfsz	wreg,f,c
  1267   001AB8  D7FE               	bra	u2797
  1268   001ABA  2E4E               	decfsz	??_time2String^0,f,c
  1269   001ABC  D7FC               	bra	u2797
  1270   001ABE  2E4F               	decfsz	(??_time2String+1)^0,f,c
  1271   001AC0  D7FA               	bra	u2797
  1272   001AC2  D000               	nop2	
  1273   001AC4  0012               	return		;funcret
  1274   001AC6                     __end_of_time2String:
  1275                           	callstack 0
  1276                           
  1277 ;; *************** function _sprintf *****************
  1278 ;; Defined at:
  1279 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;  s               2   16[BANK0 ] PTR unsigned char 
  1282 ;;		 -> main@strdate(100), 
  1283 ;;  fmt             2   18[BANK0 ] PTR const unsigned char 
  1284 ;;		 -> STR_1(19), 
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  f              11   34[BANK0 ] struct _IO_FILE
  1287 ;;  ap              2   32[BANK0 ] PTR void [1]
  1288 ;;		 -> ?_sprintf(2), 
  1289 ;;  ret             2    0        int 
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  2   16[BANK0 ] int 
  1292 ;; Registers used:
  1293 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1299 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1300 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1302 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1303 ;;Total ram usage:       29 bytes
  1304 ;; Hardware stack levels used: 1
  1305 ;; Hardware stack levels required when called: 9
  1306 ;; This function calls:
  1307 ;;		_vfprintf
  1308 ;; This function is called by:
  1309 ;;		_time2String
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           	psect	text4
  1314   001E1C                     __ptext4:
  1315                           	callstack 0
  1316   001E1C                     _sprintf:
  1317                           	callstack 20
  1318   001E1C  0E74               	movlw	low (?_sprintf+4)
  1319   001E1E  0100               	movlb	0	; () banked
  1320   001E20  6F80               	movwf	sprintf@ap& (0+255),b
  1321   001E22  0E00               	movlw	high (?_sprintf+4)
  1322   001E24  6F81               	movwf	(sprintf@ap+1)& (0+255),b
  1323   001E26  C070  F082         	movff	sprintf@s,sprintf@f
  1324   001E2A  C071  F083         	movff	sprintf@s+1,sprintf@f+1
  1325   001E2E                     
  1326                           ; BSR set to: 0
  1327   001E2E  0E00               	movlw	0
  1328   001E30  6F86               	movwf	(sprintf@f+4)& (0+255),b
  1329   001E32  0E00               	movlw	0
  1330   001E34  6F85               	movwf	(sprintf@f+3)& (0+255),b
  1331   001E36                     
  1332                           ; BSR set to: 0
  1333   001E36  0E00               	movlw	0
  1334   001E38  6F8C               	movwf	(sprintf@f+10)& (0+255),b
  1335   001E3A  0E00               	movlw	0
  1336   001E3C  6F8B               	movwf	(sprintf@f+9)& (0+255),b
  1337   001E3E                     
  1338                           ; BSR set to: 0
  1339   001E3E  0E82               	movlw	low sprintf@f
  1340   001E40  6F6A               	movwf	vfprintf@fp& (0+255),b
  1341   001E42  0E00               	movlw	high sprintf@f
  1342   001E44  6F6B               	movwf	(vfprintf@fp+1)& (0+255),b
  1343   001E46  C072  F06C         	movff	sprintf@fmt,vfprintf@fmt
  1344   001E4A  C073  F06D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1345   001E4E  0E80               	movlw	low sprintf@ap
  1346   001E50  6F6E               	movwf	vfprintf@ap& (0+255),b
  1347   001E52  0E00               	movlw	high sprintf@ap
  1348   001E54  6F6F               	movwf	(vfprintf@ap+1)& (0+255),b
  1349   001E56  EC37  F00F         	call	_vfprintf	;wreg free
  1350   001E5A  0100               	movlb	0	; () banked
  1351   001E5C  5185               	movf	(sprintf@f+3)& (0+255),w,b
  1352   001E5E  2570               	addwf	sprintf@s& (0+255),w,b
  1353   001E60  6ED9               	movwf	fsr2l,c
  1354   001E62  5186               	movf	(sprintf@f+4)& (0+255),w,b
  1355   001E64  2171               	addwfc	(sprintf@s+1)& (0+255),w,b
  1356   001E66  6EDA               	movwf	fsr2h,c
  1357   001E68  0E00               	movlw	0
  1358   001E6A  6EDF               	movwf	indf2,c
  1359   001E6C                     
  1360                           ; BSR set to: 0
  1361   001E6C  0012               	return		;funcret
  1362   001E6E                     __end_of_sprintf:
  1363                           	callstack 0
  1364                           
  1365 ;; *************** function _vfprintf *****************
  1366 ;; Defined at:
  1367 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
  1370 ;;		 -> sprintf@f(11), 
  1371 ;;  fmt             2   12[BANK0 ] PTR const unsigned char 
  1372 ;;		 -> STR_1(19), 
  1373 ;;  ap              2   14[BANK0 ] PTR PTR void 
  1374 ;;		 -> sprintf@ap(2), 
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;  cfmt            2   75[COMRAM] PTR unsigned char 
  1377 ;;		 -> STR_1(19), 
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  2   10[BANK0 ] int 
  1380 ;; Registers used:
  1381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1387 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1388 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1390 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1391 ;;Total ram usage:        8 bytes
  1392 ;; Hardware stack levels used: 1
  1393 ;; Hardware stack levels required when called: 8
  1394 ;; This function calls:
  1395 ;;		_vfpfcnvrt
  1396 ;; This function is called by:
  1397 ;;		_sprintf
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           	psect	text5
  1402   001E6E                     __ptext5:
  1403                           	callstack 0
  1404   001E6E                     _vfprintf:
  1405                           	callstack 20
  1406   001E6E                     
  1407                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1408   001E6E  C06C  F04C         	movff	vfprintf@fmt,vfprintf@cfmt
  1409   001E72  C06D  F04D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1410                           
  1411                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1412   001E76  EF4B  F00F         	goto	l3010
  1413   001E7A                     l3008:
  1414                           
  1415                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1416   001E7A  C06A  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
  1417   001E7E  C06B  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1418   001E82  0E4C               	movlw	low vfprintf@cfmt
  1419   001E84  6E46               	movwf	vfpfcnvrt@fmt^0,c
  1420   001E86  0E00               	movlw	high vfprintf@cfmt
  1421   001E88  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1422   001E8A  C06E  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
  1423   001E8E  C06F  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1424   001E92  ECFD  F009         	call	_vfpfcnvrt	;wreg free
  1425   001E96                     l3010:
  1426                           
  1427                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1428   001E96  C04C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1429   001E9A  C04D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1430   001E9E                     	if	0	;tblptru may be non-zero
  1431   001E9E                     	endif
  1432   001E9E                     	if	0	;tblptru may be non-zero
  1433   001E9E                     	endif
  1434   001E9E  0008               	tblrd		*
  1435   001EA0  50F5               	movf	tablat,w,c
  1436   001EA2  0900               	iorlw	0
  1437   001EA4  A4D8               	btfss	status,2,c
  1438   001EA6  EF57  F00F         	goto	u2301
  1439   001EAA  EF59  F00F         	goto	u2300
  1440   001EAE                     u2301:
  1441   001EAE  EF3D  F00F         	goto	l3008
  1442   001EB2                     u2300:
  1443   001EB2                     
  1444                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1445   001EB2  0E00               	movlw	0
  1446   001EB4  0100               	movlb	0	; () banked
  1447   001EB6  6F6B               	movwf	(?_vfprintf+1)& (0+255),b
  1448   001EB8  0E00               	movlw	0
  1449   001EBA  6F6A               	movwf	?_vfprintf& (0+255),b
  1450   001EBC                     
  1451                           ; BSR set to: 0
  1452   001EBC  0012               	return		;funcret
  1453   001EBE                     __end_of_vfprintf:
  1454                           	callstack 0
  1455                           
  1456 ;; *************** function _vfpfcnvrt *****************
  1457 ;; Defined at:
  1458 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  1461 ;;		 -> sprintf@f(11), 
  1462 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
  1463 ;;		 -> vfprintf@cfmt(2), 
  1464 ;;  ap              2   71[COMRAM] PTR PTR void 
  1465 ;;		 -> sprintf@ap(2), 
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;  convarg         8    0[BANK0 ] struct .
  1468 ;;  cp              2    8[BANK0 ] PTR unsigned char 
  1469 ;;		 -> STR_1(19), 
  1470 ;;  i               2    0        int 
  1471 ;;  done            2    0        int 
  1472 ;;  c               1    0        unsigned char 
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  1    wreg      void 
  1475 ;; Registers used:
  1476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1482 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1483 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1484 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1485 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1486 ;;Total ram usage:       18 bytes
  1487 ;; Hardware stack levels used: 1
  1488 ;; Hardware stack levels required when called: 7
  1489 ;; This function calls:
  1490 ;;		_dtoa
  1491 ;;		_fputc
  1492 ;; This function is called by:
  1493 ;;		_vfprintf
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           	psect	text6
  1498   0013FA                     __ptext6:
  1499                           	callstack 0
  1500   0013FA                     _vfpfcnvrt:
  1501                           	callstack 20
  1502   0013FA                     
  1503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1504   0013FA  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1505   0013FE  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1506   001402  CFDE FFF6          	movff	postinc2,tblptrl
  1507   001406  CFDD FFF7          	movff	postdec2,tblptrh
  1508   00140A                     	if	0	;tblptru may be non-zero
  1509   00140A                     	endif
  1510   00140A                     	if	0	;tblptru may be non-zero
  1511   00140A                     	endif
  1512   00140A  0008               	tblrd		*
  1513   00140C  50F5               	movf	tablat,w,c
  1514   00140E  0A25               	xorlw	37
  1515   001410  A4D8               	btfss	status,2,c
  1516   001412  EF0D  F00A         	goto	u2261
  1517   001416  EF0F  F00A         	goto	u2260
  1518   00141A                     u2261:
  1519   00141A  EF8F  F00A         	goto	l2990
  1520   00141E                     u2260:
  1521   00141E                     
  1522                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1523   00141E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1524   001422  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1525   001426  2ADE               	incf	postinc2,f,c
  1526   001428  0E00               	movlw	0
  1527   00142A  22DD               	addwfc	postdec2,f,c
  1528   00142C                     
  1529                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1530   00142C  0E00               	movlw	0
  1531   00142E  6E51               	movwf	(_width+1)^0,c
  1532   001430  0E00               	movlw	0
  1533   001432  6E50               	movwf	_width^0,c
  1534   001434  C050  F054         	movff	_width,_flags
  1535   001438                     
  1536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1537   001438  6852               	setf	_prec^0,c
  1538   00143A  6853               	setf	(_prec+1)^0,c
  1539   00143C                     
  1540                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1541   00143C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1542   001440  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1543   001444  CFDE F068          	movff	postinc2,vfpfcnvrt@cp
  1544   001448  CFDD F069          	movff	postdec2,vfpfcnvrt@cp+1
  1545   00144C                     
  1546                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1547   00144C  C068  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1548   001450  C069  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1549   001454                     	if	0	;tblptru may be non-zero
  1550   001454                     	endif
  1551   001454                     	if	0	;tblptru may be non-zero
  1552   001454                     	endif
  1553   001454  0008               	tblrd		*
  1554   001456  50F5               	movf	tablat,w,c
  1555   001458  0A64               	xorlw	100
  1556   00145A  B4D8               	btfsc	status,2,c
  1557   00145C  EF32  F00A         	goto	u2271
  1558   001460  EF34  F00A         	goto	u2270
  1559   001464                     u2271:
  1560   001464  EF42  F00A         	goto	l2980
  1561   001468                     u2270:
  1562   001468  C068  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1563   00146C  C069  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1564   001470                     	if	0	;tblptru may be non-zero
  1565   001470                     	endif
  1566   001470                     	if	0	;tblptru may be non-zero
  1567   001470                     	endif
  1568   001470  0008               	tblrd		*
  1569   001472  50F5               	movf	tablat,w,c
  1570   001474  0A69               	xorlw	105
  1571   001476  A4D8               	btfss	status,2,c
  1572   001478  EF40  F00A         	goto	u2281
  1573   00147C  EF42  F00A         	goto	u2280
  1574   001480                     u2281:
  1575   001480  EF86  F00A         	goto	l2986
  1576   001484                     u2280:
  1577   001484                     l2980:
  1578                           
  1579                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1580   001484  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1581   001488  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1582   00148C  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  1583   001490  0E02               	movlw	2
  1584   001492  26DE               	addwf	postinc2,f,c
  1585   001494  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  1586   001498  0E00               	movlw	0
  1587   00149A  22DD               	addwfc	postdec2,f,c
  1588   00149C  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1589   0014A0  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1590   0014A4  CFDE F060          	movff	postinc2,vfpfcnvrt@convarg
  1591   0014A8  CFDD F061          	movff	postdec2,vfpfcnvrt@convarg+1
  1592   0014AC  0100               	movlb	0	; () banked
  1593   0014AE  0E00               	movlw	0
  1594   0014B0  BF61               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  1595   0014B2  0EFF               	movlw	-1
  1596   0014B4  6F62               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  1597   0014B6  6F63               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  1598   0014B8  6F64               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  1599   0014BA  6F65               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  1600   0014BC  6F66               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  1601   0014BE  6F67               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  1602                           
  1603                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1604   0014C0  0E01               	movlw	1
  1605   0014C2  2568               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1606   0014C4  6E4A               	movwf	??_vfpfcnvrt^0,c
  1607   0014C6  0E00               	movlw	0
  1608   0014C8  2169               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1609   0014CA  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
  1610   0014CC  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1611   0014D0  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1612   0014D4  C04A  FFDE         	movff	??_vfpfcnvrt,postinc2
  1613   0014D8  C04B  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1614   0014DC                     
  1615                           ; BSR set to: 0
  1616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1617   0014DC  C044  F021         	movff	vfpfcnvrt@fp,dtoa@fp
  1618   0014E0  C045  F022         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1619   0014E4  C060  F023         	movff	vfpfcnvrt@convarg,dtoa@d
  1620   0014E8  C061  F024         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1621   0014EC  C062  F025         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1622   0014F0  C063  F026         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1623   0014F4  C064  F027         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1624   0014F8  C065  F028         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1625   0014FC  C066  F029         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1626   001500  C067  F02A         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1627   001504  EC49  F007         	call	_dtoa	;wreg free
  1628   001508  EFA3  F00A         	goto	l1183
  1629   00150C                     l2986:
  1630                           
  1631                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1632   00150C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1633   001510  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1634   001514  2ADE               	incf	postinc2,f,c
  1635   001516  0E00               	movlw	0
  1636   001518  22DD               	addwfc	postdec2,f,c
  1637   00151A  EFA3  F00A         	goto	l1183
  1638   00151E                     l2990:
  1639                           
  1640                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1641   00151E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1642   001522  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1643   001526  CFDE FFF6          	movff	postinc2,tblptrl
  1644   00152A  CFDD FFF7          	movff	postdec2,tblptrh
  1645   00152E                     	if	0	;tblptru may be non-zero
  1646   00152E                     	endif
  1647   00152E                     	if	0	;tblptru may be non-zero
  1648   00152E                     	endif
  1649   00152E  0008               	tblrd		*
  1650   001530  50F5               	movf	tablat,w,c
  1651   001532  6E06               	movwf	fputc@c^0,c
  1652   001534  6A07               	clrf	(fputc@c+1)^0,c
  1653   001536  C044  F008         	movff	vfpfcnvrt@fp,fputc@fp
  1654   00153A  C045  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1655   00153E  ECBF  F00B         	call	_fputc	;wreg free
  1656   001542  EF86  F00A         	goto	l2986
  1657   001546                     l1183:
  1658   001546  0012               	return		;funcret
  1659   001548                     __end_of_vfpfcnvrt:
  1660                           	callstack 0
  1661                           
  1662 ;; *************** function _dtoa *****************
  1663 ;; Defined at:
  1664 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  1667 ;;		 -> sprintf@f(11), 
  1668 ;;  d               8   34[COMRAM] long long 
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;  n               8   56[COMRAM] long long 
  1671 ;;  i               2   65[COMRAM] int 
  1672 ;;  w               2   54[COMRAM] int 
  1673 ;;  p               2   52[COMRAM] int 
  1674 ;;  s               1   64[COMRAM] unsigned char 
  1675 ;; Return value:  Size  Location     Type
  1676 ;;                  1    wreg      void 
  1677 ;; Registers used:
  1678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1684 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1685 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1686 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1687 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1688 ;;Total ram usage:       35 bytes
  1689 ;; Hardware stack levels used: 1
  1690 ;; Hardware stack levels required when called: 6
  1691 ;; This function calls:
  1692 ;;		___aodiv
  1693 ;;		___aomod
  1694 ;;		_abs
  1695 ;;		_pad
  1696 ;; This function is called by:
  1697 ;;		_vfpfcnvrt
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           	psect	text7
  1702   000E92                     __ptext7:
  1703                           	callstack 0
  1704   000E92                     _dtoa:
  1705                           	callstack 20
  1706   000E92                     
  1707                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1708   000E92  C023  F039         	movff	dtoa@d,dtoa@n
  1709   000E96  C024  F03A         	movff	dtoa@d+1,dtoa@n+1
  1710   000E9A  C025  F03B         	movff	dtoa@d+2,dtoa@n+2
  1711   000E9E  C026  F03C         	movff	dtoa@d+3,dtoa@n+3
  1712   000EA2  C027  F03D         	movff	dtoa@d+4,dtoa@n+4
  1713   000EA6  C028  F03E         	movff	dtoa@d+5,dtoa@n+5
  1714   000EAA  C029  F03F         	movff	dtoa@d+6,dtoa@n+6
  1715   000EAE  C02A  F040         	movff	dtoa@d+7,dtoa@n+7
  1716   000EB2                     
  1717                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1718   000EB2  BE40               	btfsc	(dtoa@n+7)^0,7,c
  1719   000EB4  EF5E  F007         	goto	u2121
  1720   000EB8  EF61  F007         	goto	u2120
  1721   000EBC                     u2121:
  1722   000EBC  0E01               	movlw	1
  1723   000EBE  EF62  F007         	goto	u2130
  1724   000EC2                     u2120:
  1725   000EC2  0E00               	movlw	0
  1726   000EC4                     u2130:
  1727   000EC4  6E41               	movwf	dtoa@s^0,c
  1728   000EC6                     
  1729                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1730   000EC6  5041               	movf	dtoa@s^0,w,c
  1731   000EC8  B4D8               	btfsc	status,2,c
  1732   000ECA  EF69  F007         	goto	u2141
  1733   000ECE  EF6B  F007         	goto	u2140
  1734   000ED2                     u2141:
  1735   000ED2  EF7B  F007         	goto	l2902
  1736   000ED6                     u2140:
  1737   000ED6                     
  1738                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1739   000ED6  1E40               	comf	(dtoa@n+7)^0,f,c
  1740   000ED8  1E3F               	comf	(dtoa@n+6)^0,f,c
  1741   000EDA  1E3E               	comf	(dtoa@n+5)^0,f,c
  1742   000EDC  1E3D               	comf	(dtoa@n+4)^0,f,c
  1743   000EDE  1E3C               	comf	(dtoa@n+3)^0,f,c
  1744   000EE0  1E3B               	comf	(dtoa@n+2)^0,f,c
  1745   000EE2  1E3A               	comf	(dtoa@n+1)^0,f,c
  1746   000EE4  6C39               	negf	dtoa@n^0,c
  1747   000EE6  0E00               	movlw	0
  1748   000EE8  223A               	addwfc	(dtoa@n+1)^0,f,c
  1749   000EEA  223B               	addwfc	(dtoa@n+2)^0,f,c
  1750   000EEC  223C               	addwfc	(dtoa@n+3)^0,f,c
  1751   000EEE  223D               	addwfc	(dtoa@n+4)^0,f,c
  1752   000EF0  223E               	addwfc	(dtoa@n+5)^0,f,c
  1753   000EF2  223F               	addwfc	(dtoa@n+6)^0,f,c
  1754   000EF4  2240               	addwfc	(dtoa@n+7)^0,f,c
  1755   000EF6                     l2902:
  1756                           
  1757                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1758   000EF6  BE53               	btfsc	(_prec+1)^0,7,c
  1759   000EF8  EF88  F007         	goto	u2150
  1760   000EFC  5053               	movf	(_prec+1)^0,w,c
  1761   000EFE  E106               	bnz	u2151
  1762   000F00  0452               	decf	_prec^0,w,c
  1763   000F02  B0D8               	btfsc	status,0,c
  1764   000F04  EF86  F007         	goto	u2151
  1765   000F08  EF88  F007         	goto	u2150
  1766   000F0C                     u2151:
  1767   000F0C  EF8E  F007         	goto	l1162
  1768   000F10                     u2150:
  1769   000F10  0E00               	movlw	0
  1770   000F12  6E36               	movwf	(dtoa@p+1)^0,c
  1771   000F14  0E01               	movlw	1
  1772   000F16  6E35               	movwf	dtoa@p^0,c
  1773   000F18  EF92  F007         	goto	l1164
  1774   000F1C                     l1162:
  1775   000F1C  C052  F035         	movff	_prec,dtoa@p
  1776   000F20  C053  F036         	movff	_prec+1,dtoa@p+1
  1777   000F24                     l1164:
  1778                           
  1779                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1780   000F24  C050  F037         	movff	_width,dtoa@w
  1781   000F28  C051  F038         	movff	_width+1,dtoa@w+1
  1782   000F2C                     
  1783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1784   000F2C  5041               	movf	dtoa@s^0,w,c
  1785   000F2E  B4D8               	btfsc	status,2,c
  1786   000F30  EF9C  F007         	goto	u2161
  1787   000F34  EF9E  F007         	goto	u2160
  1788   000F38                     u2161:
  1789   000F38  EFB5  F007         	goto	l1165
  1790   000F3C                     u2160:
  1791   000F3C                     
  1792                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1793   000F3C  0637               	decf	dtoa@w^0,f,c
  1794   000F3E  A0D8               	btfss	status,0,c
  1795   000F40  0638               	decf	(dtoa@w+1)^0,f,c
  1796   000F42                     
  1797                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1798   000F42  5041               	movf	dtoa@s^0,w,c
  1799   000F44  A4D8               	btfss	status,2,c
  1800   000F46  EFA7  F007         	goto	u2171
  1801   000F4A  EFA9  F007         	goto	u2170
  1802   000F4E                     u2171:
  1803   000F4E  EFAF  F007         	goto	l2914
  1804   000F52                     u2170:
  1805   000F52  0E00               	movlw	0
  1806   000F54  6E34               	movwf	(_dtoa$2130+1)^0,c
  1807   000F56  0E2B               	movlw	43
  1808   000F58  6E33               	movwf	_dtoa$2130^0,c
  1809   000F5A  EFB3  F007         	goto	l2916
  1810   000F5E                     l2914:
  1811   000F5E  0E00               	movlw	0
  1812   000F60  6E34               	movwf	(_dtoa$2130+1)^0,c
  1813   000F62  0E2D               	movlw	45
  1814   000F64  6E33               	movwf	_dtoa$2130^0,c
  1815   000F66                     l2916:
  1816   000F66  C033  F041         	movff	_dtoa$2130,dtoa@s
  1817   000F6A                     l1165:
  1818                           
  1819                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1820   000F6A  0E00               	movlw	0
  1821   000F6C  6E43               	movwf	(dtoa@i+1)^0,c
  1822   000F6E  0E1F               	movlw	31
  1823   000F70  6E42               	movwf	dtoa@i^0,c
  1824   000F72                     
  1825                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1826   000F72  0E00               	movlw	0
  1827   000F74  0101               	movlb	1	; () banked
  1828   000F76  6F89               	movwf	(_dbuf+31)& (0+255),b
  1829                           
  1830                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1831   000F78  EF3A  F008         	goto	l2930
  1832   000F7C                     l2920:
  1833                           
  1834                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1835   000F7C  0642               	decf	dtoa@i^0,f,c
  1836   000F7E  A0D8               	btfss	status,0,c
  1837   000F80  0643               	decf	(dtoa@i+1)^0,f,c
  1838   000F82                     
  1839                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1840   000F82  0E6A               	movlw	low _dbuf
  1841   000F84  2442               	addwf	dtoa@i^0,w,c
  1842   000F86  6ED9               	movwf	fsr2l,c
  1843   000F88  0E01               	movlw	high _dbuf
  1844   000F8A  2043               	addwfc	(dtoa@i+1)^0,w,c
  1845   000F8C  6EDA               	movwf	fsr2h,c
  1846   000F8E  C039  F006         	movff	dtoa@n,___aomod@dividend
  1847   000F92  C03A  F007         	movff	dtoa@n+1,___aomod@dividend+1
  1848   000F96  C03B  F008         	movff	dtoa@n+2,___aomod@dividend+2
  1849   000F9A  C03C  F009         	movff	dtoa@n+3,___aomod@dividend+3
  1850   000F9E  C03D  F00A         	movff	dtoa@n+4,___aomod@dividend+4
  1851   000FA2  C03E  F00B         	movff	dtoa@n+5,___aomod@dividend+5
  1852   000FA6  C03F  F00C         	movff	dtoa@n+6,___aomod@dividend+6
  1853   000FAA  C040  F00D         	movff	dtoa@n+7,___aomod@dividend+7
  1854   000FAE  0E0A               	movlw	10
  1855   000FB0  6E0E               	movwf	___aomod@divisor^0,c
  1856   000FB2  0E00               	movlw	0
  1857   000FB4  6E0F               	movwf	(___aomod@divisor+1)^0,c
  1858   000FB6  0E00               	movlw	0
  1859   000FB8  6E10               	movwf	(___aomod@divisor+2)^0,c
  1860   000FBA  0E00               	movlw	0
  1861   000FBC  6E11               	movwf	(___aomod@divisor+3)^0,c
  1862   000FBE  0E00               	movlw	0
  1863   000FC0  6E12               	movwf	(___aomod@divisor+4)^0,c
  1864   000FC2  0E00               	movlw	0
  1865   000FC4  6E13               	movwf	(___aomod@divisor+5)^0,c
  1866   000FC6  0E00               	movlw	0
  1867   000FC8  6E14               	movwf	(___aomod@divisor+6)^0,c
  1868   000FCA  0E00               	movlw	0
  1869   000FCC  6E15               	movwf	(___aomod@divisor+7)^0,c
  1870   000FCE  EC4B  F009         	call	___aomod	;wreg free
  1871   000FD2  C006  F02B         	movff	?___aomod,??_dtoa
  1872   000FD6  C007  F02C         	movff	?___aomod+1,??_dtoa+1
  1873   000FDA  C008  F02D         	movff	?___aomod+2,??_dtoa+2
  1874   000FDE  C009  F02E         	movff	?___aomod+3,??_dtoa+3
  1875   000FE2  C00A  F02F         	movff	?___aomod+4,??_dtoa+4
  1876   000FE6  C00B  F030         	movff	?___aomod+5,??_dtoa+5
  1877   000FEA  C00C  F031         	movff	?___aomod+6,??_dtoa+6
  1878   000FEE  C00D  F032         	movff	?___aomod+7,??_dtoa+7
  1879   000FF2  C02B  F018         	movff	??_dtoa,abs@a
  1880   000FF6  C02C  F019         	movff	??_dtoa+1,abs@a+1
  1881   000FFA  ECA2  F00F         	call	_abs	;wreg free
  1882   000FFE  5018               	movf	?_abs^0,w,c
  1883   001000  0F30               	addlw	48
  1884   001002  6EDF               	movwf	indf2,c
  1885   001004                     
  1886                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1887   001004  0635               	decf	dtoa@p^0,f,c
  1888   001006  A0D8               	btfss	status,0,c
  1889   001008  0636               	decf	(dtoa@p+1)^0,f,c
  1890   00100A                     
  1891                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1892   00100A  0637               	decf	dtoa@w^0,f,c
  1893   00100C  A0D8               	btfss	status,0,c
  1894   00100E  0638               	decf	(dtoa@w+1)^0,f,c
  1895   001010                     
  1896                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1897   001010  C039  F006         	movff	dtoa@n,___aodiv@dividend
  1898   001014  C03A  F007         	movff	dtoa@n+1,___aodiv@dividend+1
  1899   001018  C03B  F008         	movff	dtoa@n+2,___aodiv@dividend+2
  1900   00101C  C03C  F009         	movff	dtoa@n+3,___aodiv@dividend+3
  1901   001020  C03D  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
  1902   001024  C03E  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
  1903   001028  C03F  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
  1904   00102C  C040  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
  1905   001030  0E0A               	movlw	10
  1906   001032  6E0E               	movwf	___aodiv@divisor^0,c
  1907   001034  0E00               	movlw	0
  1908   001036  6E0F               	movwf	(___aodiv@divisor+1)^0,c
  1909   001038  0E00               	movlw	0
  1910   00103A  6E10               	movwf	(___aodiv@divisor+2)^0,c
  1911   00103C  0E00               	movlw	0
  1912   00103E  6E11               	movwf	(___aodiv@divisor+3)^0,c
  1913   001040  0E00               	movlw	0
  1914   001042  6E12               	movwf	(___aodiv@divisor+4)^0,c
  1915   001044  0E00               	movlw	0
  1916   001046  6E13               	movwf	(___aodiv@divisor+5)^0,c
  1917   001048  0E00               	movlw	0
  1918   00104A  6E14               	movwf	(___aodiv@divisor+6)^0,c
  1919   00104C  0E00               	movlw	0
  1920   00104E  6E15               	movwf	(___aodiv@divisor+7)^0,c
  1921   001050  EC87  F008         	call	___aodiv	;wreg free
  1922   001054  C006  F039         	movff	?___aodiv,dtoa@n
  1923   001058  C007  F03A         	movff	?___aodiv+1,dtoa@n+1
  1924   00105C  C008  F03B         	movff	?___aodiv+2,dtoa@n+2
  1925   001060  C009  F03C         	movff	?___aodiv+3,dtoa@n+3
  1926   001064  C00A  F03D         	movff	?___aodiv+4,dtoa@n+4
  1927   001068  C00B  F03E         	movff	?___aodiv+5,dtoa@n+5
  1928   00106C  C00C  F03F         	movff	?___aodiv+6,dtoa@n+6
  1929   001070  C00D  F040         	movff	?___aodiv+7,dtoa@n+7
  1930   001074                     l2930:
  1931                           
  1932                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1933   001074  BE43               	btfsc	(dtoa@i+1)^0,7,c
  1934   001076  EF45  F008         	goto	u2181
  1935   00107A  5043               	movf	(dtoa@i+1)^0,w,c
  1936   00107C  E108               	bnz	u2180
  1937   00107E  0442               	decf	dtoa@i^0,w,c
  1938   001080  A0D8               	btfss	status,0,c
  1939   001082  EF45  F008         	goto	u2181
  1940   001086  EF47  F008         	goto	u2180
  1941   00108A                     u2181:
  1942   00108A  EF63  F008         	goto	l2936
  1943   00108E                     u2180:
  1944   00108E  5039               	movf	dtoa@n^0,w,c
  1945   001090  103A               	iorwf	(dtoa@n+1)^0,w,c
  1946   001092  103B               	iorwf	(dtoa@n+2)^0,w,c
  1947   001094  103C               	iorwf	(dtoa@n+3)^0,w,c
  1948   001096  103D               	iorwf	(dtoa@n+4)^0,w,c
  1949   001098  103E               	iorwf	(dtoa@n+5)^0,w,c
  1950   00109A  103F               	iorwf	(dtoa@n+6)^0,w,c
  1951   00109C  1040               	iorwf	(dtoa@n+7)^0,w,c
  1952   00109E  A4D8               	btfss	status,2,c
  1953   0010A0  EF54  F008         	goto	u2191
  1954   0010A4  EF56  F008         	goto	u2190
  1955   0010A8                     u2191:
  1956   0010A8  EFBE  F007         	goto	l2920
  1957   0010AC                     u2190:
  1958   0010AC  BE36               	btfsc	(dtoa@p+1)^0,7,c
  1959   0010AE  EF63  F008         	goto	u2200
  1960   0010B2  5036               	movf	(dtoa@p+1)^0,w,c
  1961   0010B4  E106               	bnz	u2201
  1962   0010B6  0435               	decf	dtoa@p^0,w,c
  1963   0010B8  B0D8               	btfsc	status,0,c
  1964   0010BA  EF61  F008         	goto	u2201
  1965   0010BE  EF63  F008         	goto	u2200
  1966   0010C2                     u2201:
  1967   0010C2  EFBE  F007         	goto	l2920
  1968   0010C6                     u2200:
  1969   0010C6                     l2936:
  1970                           
  1971                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1972   0010C6  5041               	movf	dtoa@s^0,w,c
  1973   0010C8  B4D8               	btfsc	status,2,c
  1974   0010CA  EF69  F008         	goto	u2211
  1975   0010CE  EF6B  F008         	goto	u2210
  1976   0010D2                     u2211:
  1977   0010D2  EF76  F008         	goto	l2942
  1978   0010D6                     u2210:
  1979   0010D6                     
  1980                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1981   0010D6  0642               	decf	dtoa@i^0,f,c
  1982   0010D8  A0D8               	btfss	status,0,c
  1983   0010DA  0643               	decf	(dtoa@i+1)^0,f,c
  1984   0010DC                     
  1985                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1986   0010DC  0E6A               	movlw	low _dbuf
  1987   0010DE  2442               	addwf	dtoa@i^0,w,c
  1988   0010E0  6ED9               	movwf	fsr2l,c
  1989   0010E2  0E01               	movlw	high _dbuf
  1990   0010E4  2043               	addwfc	(dtoa@i+1)^0,w,c
  1991   0010E6  6EDA               	movwf	fsr2h,c
  1992   0010E8  C041  FFDF         	movff	dtoa@s,indf2
  1993   0010EC                     l2942:
  1994                           
  1995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1996   0010EC  C021  F016         	movff	dtoa@fp,pad@fp
  1997   0010F0  C022  F017         	movff	dtoa@fp+1,pad@fp+1
  1998   0010F4  0E6A               	movlw	low _dbuf
  1999   0010F6  2442               	addwf	dtoa@i^0,w,c
  2000   0010F8  6E18               	movwf	pad@buf^0,c
  2001   0010FA  0E01               	movlw	high _dbuf
  2002   0010FC  2043               	addwfc	(dtoa@i+1)^0,w,c
  2003   0010FE  6E19               	movwf	(pad@buf+1)^0,c
  2004   001100  C037  F01A         	movff	dtoa@w,pad@p
  2005   001104  C038  F01B         	movff	dtoa@w+1,pad@p+1
  2006   001108  EC63  F00D         	call	_pad	;wreg free
  2007   00110C  0012               	return		;funcret
  2008   00110E                     __end_of_dtoa:
  2009                           	callstack 0
  2010                           
  2011 ;; *************** function _pad *****************
  2012 ;; Defined at:
  2013 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  2016 ;;		 -> sprintf@f(11), 
  2017 ;;  buf             2   23[COMRAM] PTR unsigned char 
  2018 ;;		 -> dbuf(32), 
  2019 ;;  p               2   25[COMRAM] int 
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;  w               2   30[COMRAM] int 
  2022 ;;  i               2   28[COMRAM] int 
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  1    wreg      void 
  2025 ;; Registers used:
  2026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2032 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2033 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2034 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2035 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2036 ;;Total ram usage:       11 bytes
  2037 ;; Hardware stack levels used: 1
  2038 ;; Hardware stack levels required when called: 5
  2039 ;; This function calls:
  2040 ;;		_fputc
  2041 ;;		_fputs
  2042 ;; This function is called by:
  2043 ;;		_dtoa
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text8
  2048   001AC6                     __ptext8:
  2049                           	callstack 0
  2050   001AC6                     _pad:
  2051                           	callstack 20
  2052   001AC6                     
  2053                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2054   001AC6  BE1B               	btfsc	(pad@p+1)^0,7,c
  2055   001AC8  EF68  F00D         	goto	u2091
  2056   001ACC  EF6A  F00D         	goto	u2090
  2057   001AD0                     u2091:
  2058   001AD0  EF70  F00D         	goto	l2874
  2059   001AD4                     u2090:
  2060   001AD4  C01A  F01F         	movff	pad@p,pad@w
  2061   001AD8  C01B  F020         	movff	pad@p+1,pad@w+1
  2062   001ADC  EF74  F00D         	goto	l1153
  2063   001AE0                     l2874:
  2064   001AE0  0E00               	movlw	0
  2065   001AE2  6E20               	movwf	(pad@w+1)^0,c
  2066   001AE4  0E00               	movlw	0
  2067   001AE6  6E1F               	movwf	pad@w^0,c
  2068   001AE8                     l1153:
  2069                           
  2070                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2071   001AE8  0E00               	movlw	0
  2072   001AEA  6E1E               	movwf	(pad@i+1)^0,c
  2073   001AEC  0E00               	movlw	0
  2074   001AEE  6E1D               	movwf	pad@i^0,c
  2075                           
  2076                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2077   001AF0  EF86  F00D         	goto	l2880
  2078   001AF4                     l2876:
  2079                           
  2080                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2081   001AF4  0E00               	movlw	0
  2082   001AF6  6E07               	movwf	(fputc@c+1)^0,c
  2083   001AF8  0E20               	movlw	32
  2084   001AFA  6E06               	movwf	fputc@c^0,c
  2085   001AFC  C016  F008         	movff	pad@fp,fputc@fp
  2086   001B00  C017  F009         	movff	pad@fp+1,fputc@fp+1
  2087   001B04  ECBF  F00B         	call	_fputc	;wreg free
  2088   001B08                     
  2089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2090   001B08  4A1D               	infsnz	pad@i^0,f,c
  2091   001B0A  2A1E               	incf	(pad@i+1)^0,f,c
  2092   001B0C                     l2880:
  2093                           
  2094                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2095   001B0C  501F               	movf	pad@w^0,w,c
  2096   001B0E  5C1D               	subwf	pad@i^0,w,c
  2097   001B10  501E               	movf	(pad@i+1)^0,w,c
  2098   001B12  0A80               	xorlw	128
  2099   001B14  6E1C               	movwf	??_pad^0,c
  2100   001B16  5020               	movf	(pad@w+1)^0,w,c
  2101   001B18  0A80               	xorlw	128
  2102   001B1A  581C               	subwfb	??_pad^0,w,c
  2103   001B1C  A0D8               	btfss	status,0,c
  2104   001B1E  EF93  F00D         	goto	u2101
  2105   001B22  EF95  F00D         	goto	u2100
  2106   001B26                     u2101:
  2107   001B26  EF7A  F00D         	goto	l2876
  2108   001B2A                     u2100:
  2109   001B2A                     
  2110                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2111   001B2A  C018  F00F         	movff	pad@buf,fputs@s
  2112   001B2E  C019  F010         	movff	pad@buf+1,fputs@s+1
  2113   001B32  C016  F011         	movff	pad@fp,fputs@fp
  2114   001B36  C017  F012         	movff	pad@fp+1,fputs@fp+1
  2115   001B3A  EC5F  F00F         	call	_fputs	;wreg free
  2116   001B3E  0012               	return		;funcret
  2117   001B40                     __end_of_pad:
  2118                           	callstack 0
  2119                           
  2120 ;; *************** function _fputs *****************
  2121 ;; Defined at:
  2122 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  s               2   14[COMRAM] PTR const unsigned char 
  2125 ;;		 -> dbuf(32), 
  2126 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2127 ;;		 -> sprintf@f(11), 
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;  i               2   19[COMRAM] int 
  2130 ;;  c               1   18[COMRAM] unsigned char 
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  2   14[COMRAM] int 
  2133 ;; Registers used:
  2134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2140 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2141 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2143 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2144 ;;Total ram usage:        7 bytes
  2145 ;; Hardware stack levels used: 1
  2146 ;; Hardware stack levels required when called: 4
  2147 ;; This function calls:
  2148 ;;		_fputc
  2149 ;; This function is called by:
  2150 ;;		_pad
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           	psect	text9
  2155   001EBE                     __ptext9:
  2156                           	callstack 0
  2157   001EBE                     _fputs:
  2158                           	callstack 20
  2159   001EBE  0E00               	movlw	0
  2160   001EC0  6E15               	movwf	(fputs@i+1)^0,c
  2161   001EC2  0E00               	movlw	0
  2162   001EC4  6E14               	movwf	fputs@i^0,c
  2163   001EC6  EF70  F00F         	goto	l2788
  2164   001ECA                     l2784:
  2165   001ECA  C013  F006         	movff	fputs@c,fputc@c
  2166   001ECE  6A07               	clrf	(fputc@c+1)^0,c
  2167   001ED0  C011  F008         	movff	fputs@fp,fputc@fp
  2168   001ED4  C012  F009         	movff	fputs@fp+1,fputc@fp+1
  2169   001ED8  ECBF  F00B         	call	_fputc	;wreg free
  2170   001EDC  4A14               	infsnz	fputs@i^0,f,c
  2171   001EDE  2A15               	incf	(fputs@i+1)^0,f,c
  2172   001EE0                     l2788:
  2173   001EE0  5014               	movf	fputs@i^0,w,c
  2174   001EE2  240F               	addwf	fputs@s^0,w,c
  2175   001EE4  6ED9               	movwf	fsr2l,c
  2176   001EE6  5015               	movf	(fputs@i+1)^0,w,c
  2177   001EE8  2010               	addwfc	(fputs@s+1)^0,w,c
  2178   001EEA  6EDA               	movwf	fsr2h,c
  2179   001EEC  50DF               	movf	indf2,w,c
  2180   001EEE  6E13               	movwf	fputs@c^0,c
  2181   001EF0  5013               	movf	fputs@c^0,w,c
  2182   001EF2  A4D8               	btfss	status,2,c
  2183   001EF4  EF7E  F00F         	goto	u1951
  2184   001EF8  EF80  F00F         	goto	u1950
  2185   001EFC                     u1951:
  2186   001EFC  EF65  F00F         	goto	l2784
  2187   001F00                     u1950:
  2188   001F00  0012               	return		;funcret
  2189   001F02                     __end_of_fputs:
  2190                           	callstack 0
  2191                           
  2192 ;; *************** function _fputc *****************
  2193 ;; Defined at:
  2194 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;  c               2    5[COMRAM] int 
  2197 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
  2198 ;;		 -> sprintf@f(11), 
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;		None
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  2    5[COMRAM] int 
  2203 ;; Registers used:
  2204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2210 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2212 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2213 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2214 ;;Total ram usage:        9 bytes
  2215 ;; Hardware stack levels used: 1
  2216 ;; Hardware stack levels required when called: 3
  2217 ;; This function calls:
  2218 ;;		_putch
  2219 ;; This function is called by:
  2220 ;;		_pad
  2221 ;;		_vfpfcnvrt
  2222 ;;		_fputs
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           	psect	text10
  2227   00177E                     __ptext10:
  2228                           	callstack 0
  2229   00177E                     _fputc:
  2230                           	callstack 23
  2231   00177E  5008               	movf	fputc@fp^0,w,c
  2232   001780  1009               	iorwf	(fputc@fp+1)^0,w,c
  2233   001782  B4D8               	btfsc	status,2,c
  2234   001784  EFC6  F00B         	goto	u1911
  2235   001788  EFC8  F00B         	goto	u1910
  2236   00178C                     u1911:
  2237   00178C  EFD1  F00B         	goto	l2772
  2238   001790                     u1910:
  2239   001790  5008               	movf	fputc@fp^0,w,c
  2240   001792  1009               	iorwf	(fputc@fp+1)^0,w,c
  2241   001794  A4D8               	btfss	status,2,c
  2242   001796  EFCF  F00B         	goto	u1921
  2243   00179A  EFD1  F00B         	goto	u1920
  2244   00179E                     u1921:
  2245   00179E  EFD6  F00B         	goto	l2774
  2246   0017A2                     u1920:
  2247   0017A2                     l2772:
  2248   0017A2  5006               	movf	fputc@c^0,w,c
  2249   0017A4  ECDC  F010         	call	_putch
  2250   0017A8  EF23  F00C         	goto	l1208
  2251   0017AC                     l2774:
  2252   0017AC  EE20 F009          	lfsr	2,9
  2253   0017B0  5008               	movf	fputc@fp^0,w,c
  2254   0017B2  26D9               	addwf	fsr2l,f,c
  2255   0017B4  5009               	movf	(fputc@fp+1)^0,w,c
  2256   0017B6  22DA               	addwfc	fsr2h,f,c
  2257   0017B8  50DE               	movf	postinc2,w,c
  2258   0017BA  10DE               	iorwf	postinc2,w,c
  2259   0017BC  B4D8               	btfsc	status,2,c
  2260   0017BE  EFE3  F00B         	goto	u1931
  2261   0017C2  EFE5  F00B         	goto	u1930
  2262   0017C6                     u1931:
  2263   0017C6  EF00  F00C         	goto	l2778
  2264   0017CA                     u1930:
  2265   0017CA  EE20 F009          	lfsr	2,9
  2266   0017CE  5008               	movf	fputc@fp^0,w,c
  2267   0017D0  26D9               	addwf	fsr2l,f,c
  2268   0017D2  5009               	movf	(fputc@fp+1)^0,w,c
  2269   0017D4  22DA               	addwfc	fsr2h,f,c
  2270   0017D6  EE10 F003          	lfsr	1,3
  2271   0017DA  5008               	movf	fputc@fp^0,w,c
  2272   0017DC  26E1               	addwf	fsr1l,f,c
  2273   0017DE  5009               	movf	(fputc@fp+1)^0,w,c
  2274   0017E0  22E2               	addwfc	fsr1h,f,c
  2275   0017E2  50DE               	movf	postinc2,w,c
  2276   0017E4  5CE6               	subwf	postinc1,w,c
  2277   0017E6  50E6               	movf	postinc1,w,c
  2278   0017E8  0A80               	xorlw	128
  2279   0017EA  6E0E               	movwf	(??_fputc+4)^0,c
  2280   0017EC  50DE               	movf	postinc2,w,c
  2281   0017EE  0A80               	xorlw	128
  2282   0017F0  580E               	subwfb	(??_fputc+4)^0,w,c
  2283   0017F2  B0D8               	btfsc	status,0,c
  2284   0017F4  EFFE  F00B         	goto	u1941
  2285   0017F8  EF00  F00C         	goto	u1940
  2286   0017FC                     u1941:
  2287   0017FC  EF23  F00C         	goto	l1208
  2288   001800                     u1940:
  2289   001800                     l2778:
  2290   001800  EE20 F003          	lfsr	2,3
  2291   001804  5008               	movf	fputc@fp^0,w,c
  2292   001806  26D9               	addwf	fsr2l,f,c
  2293   001808  5009               	movf	(fputc@fp+1)^0,w,c
  2294   00180A  22DA               	addwfc	fsr2h,f,c
  2295   00180C  CFDE F00A          	movff	postinc2,??_fputc
  2296   001810  CFDD F00B          	movff	postdec2,??_fputc+1
  2297   001814  C008  FFD9         	movff	fputc@fp,fsr2l
  2298   001818  C009  FFDA         	movff	fputc@fp+1,fsr2h
  2299   00181C  CFDE F00C          	movff	postinc2,??_fputc+2
  2300   001820  CFDD F00D          	movff	postdec2,??_fputc+3
  2301   001824  500A               	movf	??_fputc^0,w,c
  2302   001826  240C               	addwf	(??_fputc+2)^0,w,c
  2303   001828  6ED9               	movwf	fsr2l,c
  2304   00182A  500B               	movf	(??_fputc+1)^0,w,c
  2305   00182C  200D               	addwfc	(??_fputc+3)^0,w,c
  2306   00182E  6EDA               	movwf	fsr2h,c
  2307   001830  C006  FFDF         	movff	fputc@c,indf2
  2308   001834  EE20 F003          	lfsr	2,3
  2309   001838  5008               	movf	fputc@fp^0,w,c
  2310   00183A  26D9               	addwf	fsr2l,f,c
  2311   00183C  5009               	movf	(fputc@fp+1)^0,w,c
  2312   00183E  22DA               	addwfc	fsr2h,f,c
  2313   001840  2ADE               	incf	postinc2,f,c
  2314   001842  0E00               	movlw	0
  2315   001844  22DD               	addwfc	postdec2,f,c
  2316   001846                     l1208:
  2317   001846  0012               	return		;funcret
  2318   001848                     __end_of_fputc:
  2319                           	callstack 0
  2320                           
  2321 ;; *************** function _putch *****************
  2322 ;; Defined at:
  2323 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;  c               1    wreg     unsigned char 
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;  c               1    0[COMRAM] unsigned char 
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  1    wreg      void 
  2330 ;; Registers used:
  2331 ;;		wreg
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2341 ;;Total ram usage:        0 bytes
  2342 ;; Hardware stack levels used: 1
  2343 ;; Hardware stack levels required when called: 2
  2344 ;; This function calls:
  2345 ;;		Nothing
  2346 ;; This function is called by:
  2347 ;;		_fputc
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351                           	psect	text11
  2352   0021B8                     __ptext11:
  2353                           	callstack 0
  2354   0021B8                     _putch:
  2355                           	callstack 23
  2356   0021B8  0012               	return		;funcret
  2357   0021BA                     __end_of_putch:
  2358                           	callstack 0
  2359                           
  2360 ;; *************** function _abs *****************
  2361 ;; Defined at:
  2362 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;  a               2   23[COMRAM] int 
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;		None
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  2   23[COMRAM] int 
  2369 ;; Registers used:
  2370 ;;		wreg, status,2, status,0
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2376 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2378 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2379 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2380 ;;Total ram usage:        4 bytes
  2381 ;; Hardware stack levels used: 1
  2382 ;; Hardware stack levels required when called: 2
  2383 ;; This function calls:
  2384 ;;		Nothing
  2385 ;; This function is called by:
  2386 ;;		_dtoa
  2387 ;; This function uses a non-reentrant model
  2388 ;;
  2389                           
  2390                           	psect	text12
  2391   001F44                     __ptext12:
  2392                           	callstack 0
  2393   001F44                     _abs:
  2394                           	callstack 23
  2395   001F44  BE19               	btfsc	(abs@a+1)^0,7,c
  2396   001F46  EFAF  F00F         	goto	u2110
  2397   001F4A  5019               	movf	(abs@a+1)^0,w,c
  2398   001F4C  E106               	bnz	u2111
  2399   001F4E  0418               	decf	abs@a^0,w,c
  2400   001F50  B0D8               	btfsc	status,0,c
  2401   001F52  EFAD  F00F         	goto	u2111
  2402   001F56  EFAF  F00F         	goto	u2110
  2403   001F5A                     u2111:
  2404   001F5A  EFBD  F00F         	goto	l1193
  2405   001F5E                     u2110:
  2406   001F5E  C018  F01A         	movff	abs@a,??_abs
  2407   001F62  C019  F01B         	movff	abs@a+1,??_abs+1
  2408   001F66  1E1A               	comf	??_abs^0,f,c
  2409   001F68  1E1B               	comf	(??_abs+1)^0,f,c
  2410   001F6A  4A1A               	infsnz	??_abs^0,f,c
  2411   001F6C  2A1B               	incf	(??_abs+1)^0,f,c
  2412   001F6E  C01A  F018         	movff	??_abs,?_abs
  2413   001F72  C01B  F019         	movff	??_abs+1,?_abs+1
  2414   001F76  EFC1  F00F         	goto	l1196
  2415   001F7A                     l1193:
  2416   001F7A  C018  F018         	movff	abs@a,?_abs
  2417   001F7E  C019  F019         	movff	abs@a+1,?_abs+1
  2418   001F82                     l1196:
  2419   001F82  0012               	return		;funcret
  2420   001F84                     __end_of_abs:
  2421                           	callstack 0
  2422                           
  2423 ;; *************** function ___aomod *****************
  2424 ;; Defined at:
  2425 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;  dividend        8    5[COMRAM] long long 
  2428 ;;  divisor         8   13[COMRAM] long long 
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;  sign            1   22[COMRAM] unsigned char 
  2431 ;;  counter         1   21[COMRAM] unsigned char 
  2432 ;; Return value:  Size  Location     Type
  2433 ;;                  8    5[COMRAM] long long 
  2434 ;; Registers used:
  2435 ;;		wreg, status,2, status,0
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2441 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2442 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2444 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2445 ;;Total ram usage:       18 bytes
  2446 ;; Hardware stack levels used: 1
  2447 ;; Hardware stack levels required when called: 2
  2448 ;; This function calls:
  2449 ;;		Nothing
  2450 ;; This function is called by:
  2451 ;;		_dtoa
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           	psect	text13
  2456   001296                     __ptext13:
  2457                           	callstack 0
  2458   001296                     ___aomod:
  2459                           	callstack 23
  2460   001296  0E00               	movlw	0
  2461   001298  6E17               	movwf	___aomod@sign^0,c
  2462   00129A  BE0D               	btfsc	(___aomod@dividend+7)^0,7,c
  2463   00129C  EF54  F009         	goto	u2030
  2464   0012A0  EF52  F009         	goto	u2031
  2465   0012A4                     u2031:
  2466   0012A4  EF66  F009         	goto	l2842
  2467   0012A8                     u2030:
  2468   0012A8  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  2469   0012AA  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  2470   0012AC  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  2471   0012AE  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  2472   0012B0  1E09               	comf	(___aomod@dividend+3)^0,f,c
  2473   0012B2  1E08               	comf	(___aomod@dividend+2)^0,f,c
  2474   0012B4  1E07               	comf	(___aomod@dividend+1)^0,f,c
  2475   0012B6  6C06               	negf	___aomod@dividend^0,c
  2476   0012B8  0E00               	movlw	0
  2477   0012BA  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  2478   0012BC  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  2479   0012BE  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  2480   0012C0  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  2481   0012C2  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  2482   0012C4  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  2483   0012C6  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  2484   0012C8  0E01               	movlw	1
  2485   0012CA  6E17               	movwf	___aomod@sign^0,c
  2486   0012CC                     l2842:
  2487   0012CC  BE15               	btfsc	(___aomod@divisor+7)^0,7,c
  2488   0012CE  EF6D  F009         	goto	u2040
  2489   0012D2  EF6B  F009         	goto	u2041
  2490   0012D6                     u2041:
  2491   0012D6  EF7D  F009         	goto	l2846
  2492   0012DA                     u2040:
  2493   0012DA  1E15               	comf	(___aomod@divisor+7)^0,f,c
  2494   0012DC  1E14               	comf	(___aomod@divisor+6)^0,f,c
  2495   0012DE  1E13               	comf	(___aomod@divisor+5)^0,f,c
  2496   0012E0  1E12               	comf	(___aomod@divisor+4)^0,f,c
  2497   0012E2  1E11               	comf	(___aomod@divisor+3)^0,f,c
  2498   0012E4  1E10               	comf	(___aomod@divisor+2)^0,f,c
  2499   0012E6  1E0F               	comf	(___aomod@divisor+1)^0,f,c
  2500   0012E8  6C0E               	negf	___aomod@divisor^0,c
  2501   0012EA  0E00               	movlw	0
  2502   0012EC  220F               	addwfc	(___aomod@divisor+1)^0,f,c
  2503   0012EE  2210               	addwfc	(___aomod@divisor+2)^0,f,c
  2504   0012F0  2211               	addwfc	(___aomod@divisor+3)^0,f,c
  2505   0012F2  2212               	addwfc	(___aomod@divisor+4)^0,f,c
  2506   0012F4  2213               	addwfc	(___aomod@divisor+5)^0,f,c
  2507   0012F6  2214               	addwfc	(___aomod@divisor+6)^0,f,c
  2508   0012F8  2215               	addwfc	(___aomod@divisor+7)^0,f,c
  2509   0012FA                     l2846:
  2510   0012FA  500E               	movf	___aomod@divisor^0,w,c
  2511   0012FC  100F               	iorwf	(___aomod@divisor+1)^0,w,c
  2512   0012FE  1010               	iorwf	(___aomod@divisor+2)^0,w,c
  2513   001300  1011               	iorwf	(___aomod@divisor+3)^0,w,c
  2514   001302  1012               	iorwf	(___aomod@divisor+4)^0,w,c
  2515   001304  1013               	iorwf	(___aomod@divisor+5)^0,w,c
  2516   001306  1014               	iorwf	(___aomod@divisor+6)^0,w,c
  2517   001308  1015               	iorwf	(___aomod@divisor+7)^0,w,c
  2518   00130A  B4D8               	btfsc	status,2,c
  2519   00130C  EF8A  F009         	goto	u2051
  2520   001310  EF8C  F009         	goto	u2050
  2521   001314                     u2051:
  2522   001314  EFD4  F009         	goto	l2862
  2523   001318                     u2050:
  2524   001318  0E01               	movlw	1
  2525   00131A  6E16               	movwf	___aomod@counter^0,c
  2526   00131C  EF9A  F009         	goto	l2852
  2527   001320                     l2850:
  2528   001320  90D8               	bcf	status,0,c
  2529   001322  360E               	rlcf	___aomod@divisor^0,f,c
  2530   001324  360F               	rlcf	(___aomod@divisor+1)^0,f,c
  2531   001326  3610               	rlcf	(___aomod@divisor+2)^0,f,c
  2532   001328  3611               	rlcf	(___aomod@divisor+3)^0,f,c
  2533   00132A  3612               	rlcf	(___aomod@divisor+4)^0,f,c
  2534   00132C  3613               	rlcf	(___aomod@divisor+5)^0,f,c
  2535   00132E  3614               	rlcf	(___aomod@divisor+6)^0,f,c
  2536   001330  3615               	rlcf	(___aomod@divisor+7)^0,f,c
  2537   001332  2A16               	incf	___aomod@counter^0,f,c
  2538   001334                     l2852:
  2539   001334  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  2540   001336  EF9F  F009         	goto	u2061
  2541   00133A  EFA1  F009         	goto	u2060
  2542   00133E                     u2061:
  2543   00133E  EF90  F009         	goto	l2850
  2544   001342                     u2060:
  2545   001342                     l2854:
  2546   001342  500E               	movf	___aomod@divisor^0,w,c
  2547   001344  5C06               	subwf	___aomod@dividend^0,w,c
  2548   001346  500F               	movf	(___aomod@divisor+1)^0,w,c
  2549   001348  5807               	subwfb	(___aomod@dividend+1)^0,w,c
  2550   00134A  5010               	movf	(___aomod@divisor+2)^0,w,c
  2551   00134C  5808               	subwfb	(___aomod@dividend+2)^0,w,c
  2552   00134E  5011               	movf	(___aomod@divisor+3)^0,w,c
  2553   001350  5809               	subwfb	(___aomod@dividend+3)^0,w,c
  2554   001352  5012               	movf	(___aomod@divisor+4)^0,w,c
  2555   001354  580A               	subwfb	(___aomod@dividend+4)^0,w,c
  2556   001356  5013               	movf	(___aomod@divisor+5)^0,w,c
  2557   001358  580B               	subwfb	(___aomod@dividend+5)^0,w,c
  2558   00135A  5014               	movf	(___aomod@divisor+6)^0,w,c
  2559   00135C  580C               	subwfb	(___aomod@dividend+6)^0,w,c
  2560   00135E  5015               	movf	(___aomod@divisor+7)^0,w,c
  2561   001360  580D               	subwfb	(___aomod@dividend+7)^0,w,c
  2562   001362  A0D8               	btfss	status,0,c
  2563   001364  EFB6  F009         	goto	u2071
  2564   001368  EFB8  F009         	goto	u2070
  2565   00136C                     u2071:
  2566   00136C  EFC8  F009         	goto	l2858
  2567   001370                     u2070:
  2568   001370  500E               	movf	___aomod@divisor^0,w,c
  2569   001372  5E06               	subwf	___aomod@dividend^0,f,c
  2570   001374  500F               	movf	(___aomod@divisor+1)^0,w,c
  2571   001376  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
  2572   001378  5010               	movf	(___aomod@divisor+2)^0,w,c
  2573   00137A  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
  2574   00137C  5011               	movf	(___aomod@divisor+3)^0,w,c
  2575   00137E  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
  2576   001380  5012               	movf	(___aomod@divisor+4)^0,w,c
  2577   001382  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
  2578   001384  5013               	movf	(___aomod@divisor+5)^0,w,c
  2579   001386  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
  2580   001388  5014               	movf	(___aomod@divisor+6)^0,w,c
  2581   00138A  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
  2582   00138C  5015               	movf	(___aomod@divisor+7)^0,w,c
  2583   00138E  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
  2584   001390                     l2858:
  2585   001390  90D8               	bcf	status,0,c
  2586   001392  3215               	rrcf	(___aomod@divisor+7)^0,f,c
  2587   001394  3214               	rrcf	(___aomod@divisor+6)^0,f,c
  2588   001396  3213               	rrcf	(___aomod@divisor+5)^0,f,c
  2589   001398  3212               	rrcf	(___aomod@divisor+4)^0,f,c
  2590   00139A  3211               	rrcf	(___aomod@divisor+3)^0,f,c
  2591   00139C  3210               	rrcf	(___aomod@divisor+2)^0,f,c
  2592   00139E  320F               	rrcf	(___aomod@divisor+1)^0,f,c
  2593   0013A0  320E               	rrcf	___aomod@divisor^0,f,c
  2594   0013A2  2E16               	decfsz	___aomod@counter^0,f,c
  2595   0013A4  EFA1  F009         	goto	l2854
  2596   0013A8                     l2862:
  2597   0013A8  5017               	movf	___aomod@sign^0,w,c
  2598   0013AA  B4D8               	btfsc	status,2,c
  2599   0013AC  EFDA  F009         	goto	u2081
  2600   0013B0  EFDC  F009         	goto	u2080
  2601   0013B4                     u2081:
  2602   0013B4  EFEC  F009         	goto	l2866
  2603   0013B8                     u2080:
  2604   0013B8  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  2605   0013BA  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  2606   0013BC  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  2607   0013BE  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  2608   0013C0  1E09               	comf	(___aomod@dividend+3)^0,f,c
  2609   0013C2  1E08               	comf	(___aomod@dividend+2)^0,f,c
  2610   0013C4  1E07               	comf	(___aomod@dividend+1)^0,f,c
  2611   0013C6  6C06               	negf	___aomod@dividend^0,c
  2612   0013C8  0E00               	movlw	0
  2613   0013CA  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  2614   0013CC  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  2615   0013CE  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  2616   0013D0  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  2617   0013D2  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  2618   0013D4  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  2619   0013D6  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  2620   0013D8                     l2866:
  2621   0013D8  C006  F006         	movff	___aomod@dividend,?___aomod
  2622   0013DC  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
  2623   0013E0  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
  2624   0013E4  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
  2625   0013E8  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
  2626   0013EC  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
  2627   0013F0  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
  2628   0013F4  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
  2629   0013F8  0012               	return		;funcret
  2630   0013FA                     __end_of___aomod:
  2631                           	callstack 0
  2632                           
  2633 ;; *************** function ___aodiv *****************
  2634 ;; Defined at:
  2635 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;  dividend        8    5[COMRAM] long long 
  2638 ;;  divisor         8   13[COMRAM] long long 
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;  quotient        8   23[COMRAM] long long 
  2641 ;;  sign            1   22[COMRAM] unsigned char 
  2642 ;;  counter         1   21[COMRAM] unsigned char 
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  8    5[COMRAM] long long 
  2645 ;; Registers used:
  2646 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2652 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2653 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2655 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2656 ;;Total ram usage:       26 bytes
  2657 ;; Hardware stack levels used: 1
  2658 ;; Hardware stack levels required when called: 2
  2659 ;; This function calls:
  2660 ;;		Nothing
  2661 ;; This function is called by:
  2662 ;;		_dtoa
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           	psect	text14
  2667   00110E                     __ptext14:
  2668                           	callstack 0
  2669   00110E                     ___aodiv:
  2670                           	callstack 23
  2671   00110E  0E00               	movlw	0
  2672   001110  6E17               	movwf	___aodiv@sign^0,c
  2673   001112  BE15               	btfsc	(___aodiv@divisor+7)^0,7,c
  2674   001114  EF90  F008         	goto	u1960
  2675   001118  EF8E  F008         	goto	u1961
  2676   00111C                     u1961:
  2677   00111C  EFA2  F008         	goto	l2798
  2678   001120                     u1960:
  2679   001120  1E15               	comf	(___aodiv@divisor+7)^0,f,c
  2680   001122  1E14               	comf	(___aodiv@divisor+6)^0,f,c
  2681   001124  1E13               	comf	(___aodiv@divisor+5)^0,f,c
  2682   001126  1E12               	comf	(___aodiv@divisor+4)^0,f,c
  2683   001128  1E11               	comf	(___aodiv@divisor+3)^0,f,c
  2684   00112A  1E10               	comf	(___aodiv@divisor+2)^0,f,c
  2685   00112C  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
  2686   00112E  6C0E               	negf	___aodiv@divisor^0,c
  2687   001130  0E00               	movlw	0
  2688   001132  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
  2689   001134  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
  2690   001136  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
  2691   001138  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
  2692   00113A  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
  2693   00113C  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
  2694   00113E  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
  2695   001140  0E01               	movlw	1
  2696   001142  6E17               	movwf	___aodiv@sign^0,c
  2697   001144                     l2798:
  2698   001144  BE0D               	btfsc	(___aodiv@dividend+7)^0,7,c
  2699   001146  EFA9  F008         	goto	u1970
  2700   00114A  EFA7  F008         	goto	u1971
  2701   00114E                     u1971:
  2702   00114E  EFBB  F008         	goto	l2804
  2703   001152                     u1970:
  2704   001152  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
  2705   001154  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
  2706   001156  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
  2707   001158  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
  2708   00115A  1E09               	comf	(___aodiv@dividend+3)^0,f,c
  2709   00115C  1E08               	comf	(___aodiv@dividend+2)^0,f,c
  2710   00115E  1E07               	comf	(___aodiv@dividend+1)^0,f,c
  2711   001160  6C06               	negf	___aodiv@dividend^0,c
  2712   001162  0E00               	movlw	0
  2713   001164  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
  2714   001166  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
  2715   001168  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
  2716   00116A  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
  2717   00116C  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
  2718   00116E  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
  2719   001170  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
  2720   001172  0E01               	movlw	1
  2721   001174  1A17               	xorwf	___aodiv@sign^0,f,c
  2722   001176                     l2804:
  2723   001176  EE20  F018         	lfsr	2,___aodiv@quotient
  2724   00117A  0E07               	movlw	7
  2725   00117C                     u1981:
  2726   00117C  6ADE               	clrf	postinc2,c
  2727   00117E  06E8               	decf	wreg,f,c
  2728   001180  E2FD               	bc	u1981
  2729   001182  500E               	movf	___aodiv@divisor^0,w,c
  2730   001184  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
  2731   001186  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
  2732   001188  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
  2733   00118A  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
  2734   00118C  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
  2735   00118E  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
  2736   001190  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
  2737   001192  B4D8               	btfsc	status,2,c
  2738   001194  EFCE  F008         	goto	u1991
  2739   001198  EFD0  F008         	goto	u1990
  2740   00119C                     u1991:
  2741   00119C  EF22  F009         	goto	l2826
  2742   0011A0                     u1990:
  2743   0011A0  0E01               	movlw	1
  2744   0011A2  6E16               	movwf	___aodiv@counter^0,c
  2745   0011A4  EFDE  F008         	goto	l2812
  2746   0011A8                     l2810:
  2747   0011A8  90D8               	bcf	status,0,c
  2748   0011AA  360E               	rlcf	___aodiv@divisor^0,f,c
  2749   0011AC  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
  2750   0011AE  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
  2751   0011B0  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
  2752   0011B2  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
  2753   0011B4  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
  2754   0011B6  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
  2755   0011B8  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
  2756   0011BA  2A16               	incf	___aodiv@counter^0,f,c
  2757   0011BC                     l2812:
  2758   0011BC  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  2759   0011BE  EFE3  F008         	goto	u2001
  2760   0011C2  EFE5  F008         	goto	u2000
  2761   0011C6                     u2001:
  2762   0011C6  EFD4  F008         	goto	l2810
  2763   0011CA                     u2000:
  2764   0011CA                     l2814:
  2765   0011CA  90D8               	bcf	status,0,c
  2766   0011CC  3618               	rlcf	___aodiv@quotient^0,f,c
  2767   0011CE  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
  2768   0011D0  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
  2769   0011D2  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
  2770   0011D4  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
  2771   0011D6  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
  2772   0011D8  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
  2773   0011DA  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
  2774   0011DC  500E               	movf	___aodiv@divisor^0,w,c
  2775   0011DE  5C06               	subwf	___aodiv@dividend^0,w,c
  2776   0011E0  500F               	movf	(___aodiv@divisor+1)^0,w,c
  2777   0011E2  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
  2778   0011E4  5010               	movf	(___aodiv@divisor+2)^0,w,c
  2779   0011E6  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
  2780   0011E8  5011               	movf	(___aodiv@divisor+3)^0,w,c
  2781   0011EA  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
  2782   0011EC  5012               	movf	(___aodiv@divisor+4)^0,w,c
  2783   0011EE  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
  2784   0011F0  5013               	movf	(___aodiv@divisor+5)^0,w,c
  2785   0011F2  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
  2786   0011F4  5014               	movf	(___aodiv@divisor+6)^0,w,c
  2787   0011F6  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
  2788   0011F8  5015               	movf	(___aodiv@divisor+7)^0,w,c
  2789   0011FA  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
  2790   0011FC  A0D8               	btfss	status,0,c
  2791   0011FE  EF03  F009         	goto	u2011
  2792   001202  EF05  F009         	goto	u2010
  2793   001206                     u2011:
  2794   001206  EF16  F009         	goto	l2822
  2795   00120A                     u2010:
  2796   00120A  500E               	movf	___aodiv@divisor^0,w,c
  2797   00120C  5E06               	subwf	___aodiv@dividend^0,f,c
  2798   00120E  500F               	movf	(___aodiv@divisor+1)^0,w,c
  2799   001210  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
  2800   001212  5010               	movf	(___aodiv@divisor+2)^0,w,c
  2801   001214  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
  2802   001216  5011               	movf	(___aodiv@divisor+3)^0,w,c
  2803   001218  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
  2804   00121A  5012               	movf	(___aodiv@divisor+4)^0,w,c
  2805   00121C  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
  2806   00121E  5013               	movf	(___aodiv@divisor+5)^0,w,c
  2807   001220  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
  2808   001222  5014               	movf	(___aodiv@divisor+6)^0,w,c
  2809   001224  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
  2810   001226  5015               	movf	(___aodiv@divisor+7)^0,w,c
  2811   001228  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
  2812   00122A  8018               	bsf	___aodiv@quotient^0,0,c
  2813   00122C                     l2822:
  2814   00122C  90D8               	bcf	status,0,c
  2815   00122E  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
  2816   001230  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
  2817   001232  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
  2818   001234  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
  2819   001236  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
  2820   001238  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
  2821   00123A  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
  2822   00123C  320E               	rrcf	___aodiv@divisor^0,f,c
  2823   00123E  2E16               	decfsz	___aodiv@counter^0,f,c
  2824   001240  EFE5  F008         	goto	l2814
  2825   001244                     l2826:
  2826   001244  5017               	movf	___aodiv@sign^0,w,c
  2827   001246  B4D8               	btfsc	status,2,c
  2828   001248  EF28  F009         	goto	u2021
  2829   00124C  EF2A  F009         	goto	u2020
  2830   001250                     u2021:
  2831   001250  EF3A  F009         	goto	l2830
  2832   001254                     u2020:
  2833   001254  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
  2834   001256  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
  2835   001258  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
  2836   00125A  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
  2837   00125C  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
  2838   00125E  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
  2839   001260  1E19               	comf	(___aodiv@quotient+1)^0,f,c
  2840   001262  6C18               	negf	___aodiv@quotient^0,c
  2841   001264  0E00               	movlw	0
  2842   001266  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
  2843   001268  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
  2844   00126A  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
  2845   00126C  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
  2846   00126E  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
  2847   001270  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
  2848   001272  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
  2849   001274                     l2830:
  2850   001274  C018  F006         	movff	___aodiv@quotient,?___aodiv
  2851   001278  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
  2852   00127C  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
  2853   001280  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
  2854   001284  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
  2855   001288  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
  2856   00128C  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
  2857   001290  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
  2858   001294  0012               	return		;funcret
  2859   001296                     __end_of___aodiv:
  2860                           	callstack 0
  2861                           
  2862 ;; *************** function ___lwdiv *****************
  2863 ;; Defined at:
  2864 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;  dividend        2    5[COMRAM] unsigned int 
  2867 ;;  divisor         2    7[COMRAM] unsigned int 
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;  quotient        2   10[COMRAM] unsigned int 
  2870 ;;  counter         1    9[COMRAM] unsigned char 
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  2    5[COMRAM] unsigned int 
  2873 ;; Registers used:
  2874 ;;		wreg, status,2, status,0
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2880 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2881 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2883 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2884 ;;Total ram usage:        7 bytes
  2885 ;; Hardware stack levels used: 1
  2886 ;; Hardware stack levels required when called: 2
  2887 ;; This function calls:
  2888 ;;		Nothing
  2889 ;; This function is called by:
  2890 ;;		_time2String
  2891 ;;		_LEDarray_disp_dec
  2892 ;;		_LEDarray_disp_PPM
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text15
  2897   001B40                     __ptext15:
  2898                           	callstack 0
  2899   001B40                     ___lwdiv:
  2900                           	callstack 27
  2901   001B40  0E00               	movlw	0
  2902   001B42  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  2903   001B44  0E00               	movlw	0
  2904   001B46  6E0B               	movwf	___lwdiv@quotient^0,c
  2905   001B48  5008               	movf	___lwdiv@divisor^0,w,c
  2906   001B4A  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2907   001B4C  B4D8               	btfsc	status,2,c
  2908   001B4E  EFAB  F00D         	goto	u2491
  2909   001B52  EFAD  F00D         	goto	u2490
  2910   001B56                     u2491:
  2911   001B56  EFD5  F00D         	goto	l944
  2912   001B5A                     u2490:
  2913   001B5A  0E01               	movlw	1
  2914   001B5C  6E0A               	movwf	___lwdiv@counter^0,c
  2915   001B5E  EFB5  F00D         	goto	l3118
  2916   001B62                     l3116:
  2917   001B62  90D8               	bcf	status,0,c
  2918   001B64  3608               	rlcf	___lwdiv@divisor^0,f,c
  2919   001B66  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2920   001B68  2A0A               	incf	___lwdiv@counter^0,f,c
  2921   001B6A                     l3118:
  2922   001B6A  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  2923   001B6C  EFBA  F00D         	goto	u2501
  2924   001B70  EFBC  F00D         	goto	u2500
  2925   001B74                     u2501:
  2926   001B74  EFB1  F00D         	goto	l3116
  2927   001B78                     u2500:
  2928   001B78                     l3120:
  2929   001B78  90D8               	bcf	status,0,c
  2930   001B7A  360B               	rlcf	___lwdiv@quotient^0,f,c
  2931   001B7C  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2932   001B7E  5008               	movf	___lwdiv@divisor^0,w,c
  2933   001B80  5C06               	subwf	___lwdiv@dividend^0,w,c
  2934   001B82  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  2935   001B84  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2936   001B86  A0D8               	btfss	status,0,c
  2937   001B88  EFC8  F00D         	goto	u2511
  2938   001B8C  EFCA  F00D         	goto	u2510
  2939   001B90                     u2511:
  2940   001B90  EFCF  F00D         	goto	l3128
  2941   001B94                     u2510:
  2942   001B94  5008               	movf	___lwdiv@divisor^0,w,c
  2943   001B96  5E06               	subwf	___lwdiv@dividend^0,f,c
  2944   001B98  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  2945   001B9A  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2946   001B9C  800B               	bsf	___lwdiv@quotient^0,0,c
  2947   001B9E                     l3128:
  2948   001B9E  90D8               	bcf	status,0,c
  2949   001BA0  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2950   001BA2  3208               	rrcf	___lwdiv@divisor^0,f,c
  2951   001BA4  2E0A               	decfsz	___lwdiv@counter^0,f,c
  2952   001BA6  EFBC  F00D         	goto	l3120
  2953   001BAA                     l944:
  2954   001BAA  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
  2955   001BAE  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2956   001BB2  0012               	return		;funcret
  2957   001BB4                     __end_of___lwdiv:
  2958                           	callstack 0
  2959                           
  2960 ;; *************** function _LCD_sendstring *****************
  2961 ;; Defined at:
  2962 ;;		line 109 in file "LCD.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  string          2    8[COMRAM] PTR unsigned char 
  2965 ;;		 -> main@strdate(100), 
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;		None
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  1    wreg      void 
  2970 ;; Registers used:
  2971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2977 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2980 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2981 ;;Total ram usage:        2 bytes
  2982 ;; Hardware stack levels used: 1
  2983 ;; Hardware stack levels required when called: 5
  2984 ;; This function calls:
  2985 ;;		_LCD_sendbyte
  2986 ;; This function is called by:
  2987 ;;		_time2String
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           	psect	text16
  2992   001FFC                     __ptext16:
  2993                           	callstack 0
  2994   001FFC                     _LCD_sendstring:
  2995                           	callstack 24
  2996   001FFC                     
  2997                           ;LCD.c: 111: {;LCD.c: 112:  while(*string != 0){
  2998   001FFC  EF0B  F010         	goto	l3046
  2999   002000                     l3042:
  3000                           
  3001                           ;LCD.c: 113:   LCD_sendbyte(*string++,1);
  3002   002000  0E01               	movlw	1
  3003   002002  6E07               	movwf	LCD_sendbyte@type^0,c
  3004   002004  C009  FFD9         	movff	LCD_sendstring@string,fsr2l
  3005   002008  C00A  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  3006   00200C  50DF               	movf	indf2,w,c
  3007   00200E  EC32  F010         	call	_LCD_sendbyte
  3008   002012  4A09               	infsnz	LCD_sendstring@string^0,f,c
  3009   002014  2A0A               	incf	(LCD_sendstring@string+1)^0,f,c
  3010   002016                     l3046:
  3011                           
  3012                           ;LCD.c: 112:  while(*string != 0){
  3013   002016  C009  FFD9         	movff	LCD_sendstring@string,fsr2l
  3014   00201A  C00A  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  3015   00201E  50DF               	movf	indf2,w,c
  3016   002020  A4D8               	btfss	status,2,c
  3017   002022  EF15  F010         	goto	u2421
  3018   002026  EF17  F010         	goto	u2420
  3019   00202A                     u2421:
  3020   00202A  EF00  F010         	goto	l3042
  3021   00202E                     u2420:
  3022   00202E  0012               	return		;funcret
  3023   002030                     __end_of_LCD_sendstring:
  3024                           	callstack 0
  3025                           
  3026 ;; *************** function _sunset *****************
  3027 ;; Defined at:
  3028 ;;		line 95 in file "Functions.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;		None
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;  sunset_time     2   16[COMRAM] int 
  3033 ;;  prevState       2   14[COMRAM] int 
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  2   11[COMRAM] int 
  3036 ;; Registers used:
  3037 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3043 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3044 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3045 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3046 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3047 ;;Total ram usage:        7 bytes
  3048 ;; Hardware stack levels used: 1
  3049 ;; Hardware stack levels required when called: 3
  3050 ;; This function calls:
  3051 ;;		___wmul
  3052 ;; This function is called by:
  3053 ;;		_main
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text17
  3058   001C24                     __ptext17:
  3059                           	callstack 0
  3060   001C24                     _sunset:
  3061                           	callstack 27
  3062   001C24                     
  3063                           ;Functions.c: 97:     int prevState = LATHbits.LATH3;
  3064   001C24  B680               	btfsc	128,3,c	;volatile
  3065   001C26  EF17  F00E         	goto	u2661
  3066   001C2A  EF1B  F00E         	goto	u2660
  3067   001C2E                     u2661:
  3068   001C2E  6A0E               	clrf	??_sunset^0,c
  3069   001C30  2A0E               	incf	??_sunset^0,f,c
  3070   001C32  EF1C  F00E         	goto	u2668
  3071   001C36                     u2660:
  3072   001C36  6A0E               	clrf	??_sunset^0,c
  3073   001C38                     u2668:
  3074   001C38  500E               	movf	??_sunset^0,w,c
  3075   001C3A  6E0F               	movwf	sunset@prevState^0,c
  3076   001C3C  6A10               	clrf	(sunset@prevState+1)^0,c
  3077                           
  3078                           ;Functions.c: 99:     if (16<=hour<=20)
  3079   001C3E  0E00               	movlw	0
  3080   001C40  6E12               	movwf	(sunset@sunset_time+1)^0,c
  3081   001C42  0E00               	movlw	0
  3082   001C44  6E11               	movwf	sunset@sunset_time^0,c
  3083   001C46                     
  3084                           ;Functions.c: 100:     {;Functions.c: 101:         if (prevState==0 && LATHbits.LATH3==1
      +                          )
  3085   001C46  500F               	movf	sunset@prevState^0,w,c
  3086   001C48  1010               	iorwf	(sunset@prevState+1)^0,w,c
  3087   001C4A  A4D8               	btfss	status,2,c
  3088   001C4C  EF2A  F00E         	goto	u2671
  3089   001C50  EF2C  F00E         	goto	u2670
  3090   001C54                     u2671:
  3091   001C54  EF44  F00E         	goto	l3294
  3092   001C58                     u2670:
  3093   001C58  A680               	btfss	128,3,c	;volatile
  3094   001C5A  EF31  F00E         	goto	u2681
  3095   001C5E  EF33  F00E         	goto	u2680
  3096   001C62                     u2681:
  3097   001C62  EF44  F00E         	goto	l3294
  3098   001C66                     u2680:
  3099   001C66                     
  3100                           ;Functions.c: 102:         {;Functions.c: 103:             sunset_time = seconds+(hour*3
      +                          600);
  3101   001C66  C0A1  F006         	movff	_hour,___wmul@multiplier
  3102   001C6A  C0A2  F007         	movff	_hour+1,___wmul@multiplier+1
  3103   001C6E  0E0E               	movlw	14
  3104   001C70  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  3105   001C72  0E10               	movlw	16
  3106   001C74  6E08               	movwf	___wmul@multiplicand^0,c
  3107   001C76  EC4A  F010         	call	___wmul	;wreg free
  3108   001C7A  0100               	movlb	0	; () banked
  3109   001C7C  51A3               	movf	_seconds& (0+255),w,b
  3110   001C7E  2406               	addwf	?___wmul^0,w,c
  3111   001C80  6E11               	movwf	sunset@sunset_time^0,c
  3112   001C82  51A4               	movf	(_seconds+1)& (0+255),w,b
  3113   001C84  2007               	addwfc	(?___wmul+1)^0,w,c
  3114   001C86  6E12               	movwf	(sunset@sunset_time+1)^0,c
  3115   001C88                     l3294:
  3116                           
  3117                           ;Functions.c: 106:     return sunset_time;
  3118   001C88  C011  F00C         	movff	sunset@sunset_time,?_sunset
  3119   001C8C  C012  F00D         	movff	sunset@sunset_time+1,?_sunset+1
  3120   001C90  0012               	return		;funcret
  3121   001C92                     __end_of_sunset:
  3122                           	callstack 0
  3123                           
  3124 ;; *************** function _sunrise *****************
  3125 ;; Defined at:
  3126 ;;		line 81 in file "Functions.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;		None
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;  sunrise_time    2   16[COMRAM] int 
  3131 ;;  prevState       2   14[COMRAM] int 
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  2   11[COMRAM] int 
  3134 ;; Registers used:
  3135 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3141 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3142 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3143 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3144 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3145 ;;Total ram usage:        7 bytes
  3146 ;; Hardware stack levels used: 1
  3147 ;; Hardware stack levels required when called: 3
  3148 ;; This function calls:
  3149 ;;		___wmul
  3150 ;; This function is called by:
  3151 ;;		_main
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           	psect	text18
  3156   001C92                     __ptext18:
  3157                           	callstack 0
  3158   001C92                     _sunrise:
  3159                           	callstack 27
  3160   001C92                     
  3161                           ;Functions.c: 83:     int prevState = LATHbits.LATH3;
  3162   001C92  B680               	btfsc	128,3,c	;volatile
  3163   001C94  EF4E  F00E         	goto	u2631
  3164   001C98  EF52  F00E         	goto	u2630
  3165   001C9C                     u2631:
  3166   001C9C  6A0E               	clrf	??_sunrise^0,c
  3167   001C9E  2A0E               	incf	??_sunrise^0,f,c
  3168   001CA0  EF53  F00E         	goto	u2638
  3169   001CA4                     u2630:
  3170   001CA4  6A0E               	clrf	??_sunrise^0,c
  3171   001CA6                     u2638:
  3172   001CA6  500E               	movf	??_sunrise^0,w,c
  3173   001CA8  6E0F               	movwf	sunrise@prevState^0,c
  3174   001CAA  6A10               	clrf	(sunrise@prevState+1)^0,c
  3175                           
  3176                           ;Functions.c: 85:     if (5<=hour<=8)
  3177   001CAC  0E00               	movlw	0
  3178   001CAE  6E12               	movwf	(sunrise@sunrise_time+1)^0,c
  3179   001CB0  0E00               	movlw	0
  3180   001CB2  6E11               	movwf	sunrise@sunrise_time^0,c
  3181   001CB4                     
  3182                           ;Functions.c: 86:     {;Functions.c: 87:         if (prevState==1 && LATHbits.LATH3==0)
  3183   001CB4  040F               	decf	sunrise@prevState^0,w,c
  3184   001CB6  1010               	iorwf	(sunrise@prevState+1)^0,w,c
  3185   001CB8  A4D8               	btfss	status,2,c
  3186   001CBA  EF61  F00E         	goto	u2641
  3187   001CBE  EF63  F00E         	goto	u2640
  3188   001CC2                     u2641:
  3189   001CC2  EF7B  F00E         	goto	l3282
  3190   001CC6                     u2640:
  3191   001CC6  B680               	btfsc	128,3,c	;volatile
  3192   001CC8  EF68  F00E         	goto	u2651
  3193   001CCC  EF6A  F00E         	goto	u2650
  3194   001CD0                     u2651:
  3195   001CD0  EF7B  F00E         	goto	l3282
  3196   001CD4                     u2650:
  3197   001CD4                     
  3198                           ;Functions.c: 88:         {;Functions.c: 89:             sunrise_time = seconds+(hour*36
      +                          00);
  3199   001CD4  C0A1  F006         	movff	_hour,___wmul@multiplier
  3200   001CD8  C0A2  F007         	movff	_hour+1,___wmul@multiplier+1
  3201   001CDC  0E0E               	movlw	14
  3202   001CDE  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  3203   001CE0  0E10               	movlw	16
  3204   001CE2  6E08               	movwf	___wmul@multiplicand^0,c
  3205   001CE4  EC4A  F010         	call	___wmul	;wreg free
  3206   001CE8  0100               	movlb	0	; () banked
  3207   001CEA  51A3               	movf	_seconds& (0+255),w,b
  3208   001CEC  2406               	addwf	?___wmul^0,w,c
  3209   001CEE  6E11               	movwf	sunrise@sunrise_time^0,c
  3210   001CF0  51A4               	movf	(_seconds+1)& (0+255),w,b
  3211   001CF2  2007               	addwfc	(?___wmul+1)^0,w,c
  3212   001CF4  6E12               	movwf	(sunrise@sunrise_time+1)^0,c
  3213   001CF6                     l3282:
  3214                           
  3215                           ;Functions.c: 92:     return sunrise_time;
  3216   001CF6  C011  F00C         	movff	sunrise@sunrise_time,?_sunrise
  3217   001CFA  C012  F00D         	movff	sunrise@sunrise_time+1,?_sunrise+1
  3218   001CFE  0012               	return		;funcret
  3219   001D00                     __end_of_sunrise:
  3220                           	callstack 0
  3221                           
  3222 ;; *************** function ___wmul *****************
  3223 ;; Defined at:
  3224 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;  multiplier      2    5[COMRAM] unsigned int 
  3227 ;;  multiplicand    2    7[COMRAM] unsigned int 
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;  product         2    9[COMRAM] unsigned int 
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  2    5[COMRAM] unsigned int 
  3232 ;; Registers used:
  3233 ;;		wreg, status,2, status,0, prodl, prodh
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3239 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3240 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3242 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3243 ;;Total ram usage:        6 bytes
  3244 ;; Hardware stack levels used: 1
  3245 ;; Hardware stack levels required when called: 2
  3246 ;; This function calls:
  3247 ;;		Nothing
  3248 ;; This function is called by:
  3249 ;;		_sunrise
  3250 ;;		_sunset
  3251 ;;		_ADC_lightMeter
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           	psect	text19
  3256   002094                     __ptext19:
  3257                           	callstack 0
  3258   002094                     ___wmul:
  3259                           	callstack 27
  3260   002094  5006               	movf	___wmul@multiplier^0,w,c
  3261   002096  0208               	mulwf	___wmul@multiplicand^0,c
  3262   002098  CFF3 F00A          	movff	prodl,___wmul@product
  3263   00209C  CFF4 F00B          	movff	prodh,___wmul@product+1
  3264   0020A0  5006               	movf	___wmul@multiplier^0,w,c
  3265   0020A2  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  3266   0020A4  50F3               	movf	243,w,c
  3267   0020A6  260B               	addwf	(___wmul@product+1)^0,f,c
  3268   0020A8  5007               	movf	(___wmul@multiplier+1)^0,w,c
  3269   0020AA  0208               	mulwf	___wmul@multiplicand^0,c
  3270   0020AC  50F3               	movf	243,w,c
  3271   0020AE  260B               	addwf	(___wmul@product+1)^0,f,c
  3272   0020B0  C00A  F006         	movff	___wmul@product,?___wmul
  3273   0020B4  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  3274   0020B8  0012               	return		;funcret
  3275   0020BA                     __end_of___wmul:
  3276                           	callstack 0
  3277                           
  3278 ;; *************** function _streetLightInit *****************
  3279 ;; Defined at:
  3280 ;;		line 12 in file "Functions.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;		None
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;		None
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      void 
  3287 ;; Registers used:
  3288 ;;		None
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3298 ;;Total ram usage:        0 bytes
  3299 ;; Hardware stack levels used: 1
  3300 ;; Hardware stack levels required when called: 2
  3301 ;; This function calls:
  3302 ;;		Nothing
  3303 ;; This function is called by:
  3304 ;;		_main
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           	psect	text20
  3309   0021AE                     __ptext20:
  3310                           	callstack 0
  3311   0021AE                     _streetLightInit:
  3312                           	callstack 28
  3313   0021AE                     
  3314                           ;Functions.c: 14:     LATHbits.LATH3 = 0;
  3315   0021AE  9680               	bcf	128,3,c	;volatile
  3316                           
  3317                           ;Functions.c: 15:     TRISHbits.TRISH3 = 0;
  3318   0021B0  9688               	bcf	136,3,c	;volatile
  3319                           
  3320                           ;Functions.c: 16:     LATDbits.LATD7 = 1;
  3321   0021B2  8E7C               	bsf	124,7,c	;volatile
  3322                           
  3323                           ;Functions.c: 17:     TRISDbits.TRISD7 = 0;
  3324   0021B4  9E84               	bcf	132,7,c	;volatile
  3325   0021B6  0012               	return		;funcret
  3326   0021B8                     __end_of_streetLightInit:
  3327                           	callstack 0
  3328                           
  3329 ;; *************** function _poweroff *****************
  3330 ;; Defined at:
  3331 ;;		line 61 in file "Functions.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;		None
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;		None
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  1    wreg      void 
  3338 ;; Registers used:
  3339 ;;		wreg, status,2, status,0
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3349 ;;Total ram usage:        0 bytes
  3350 ;; Hardware stack levels used: 1
  3351 ;; Hardware stack levels required when called: 2
  3352 ;; This function calls:
  3353 ;;		Nothing
  3354 ;; This function is called by:
  3355 ;;		_main
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           	psect	text21
  3360   001F84                     __ptext21:
  3361                           	callstack 0
  3362   001F84                     _poweroff:
  3363                           	callstack 28
  3364   001F84                     
  3365                           ;Functions.c: 64:         if (1 <= hour && hour < 5) {
  3366   001F84  0100               	movlb	0	; () banked
  3367   001F86  BFA2               	btfsc	(_hour+1)& (0+255),7,b
  3368   001F88  EFCE  F00F         	goto	u2611
  3369   001F8C  51A2               	movf	(_hour+1)& (0+255),w,b
  3370   001F8E  E108               	bnz	u2610
  3371   001F90  05A1               	decf	_hour& (0+255),w,b
  3372   001F92  A0D8               	btfss	status,0,c
  3373   001F94  EFCE  F00F         	goto	u2611
  3374   001F98  EFD0  F00F         	goto	u2610
  3375   001F9C                     u2611:
  3376   001F9C  EFDF  F00F         	goto	l373
  3377   001FA0                     u2610:
  3378   001FA0                     
  3379                           ; BSR set to: 0
  3380   001FA0  BFA2               	btfsc	(_hour+1)& (0+255),7,b
  3381   001FA2  EFDE  F00F         	goto	u2620
  3382   001FA6  51A2               	movf	(_hour+1)& (0+255),w,b
  3383   001FA8  E107               	bnz	u2621
  3384   001FAA  0E05               	movlw	5
  3385   001FAC  5DA1               	subwf	_hour& (0+255),w,b
  3386   001FAE  B0D8               	btfsc	status,0,c
  3387   001FB0  EFDC  F00F         	goto	u2621
  3388   001FB4  EFDE  F00F         	goto	u2620
  3389   001FB8                     u2621:
  3390   001FB8  EFDF  F00F         	goto	l373
  3391   001FBC                     u2620:
  3392   001FBC                     
  3393                           ; BSR set to: 0
  3394                           ;Functions.c: 65:             LATHbits.LATH3 = 0;
  3395   001FBC  9680               	bcf	128,3,c	;volatile
  3396   001FBE                     l373:
  3397                           
  3398                           ; BSR set to: 0
  3399   001FBE  0012               	return		;funcret
  3400   001FC0                     __end_of_poweroff:
  3401                           	callstack 0
  3402                           
  3403 ;; *************** function _increment *****************
  3404 ;; Defined at:
  3405 ;;		line 19 in file "Functions.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;		None
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;		None
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      void 
  3412 ;; Registers used:
  3413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3421 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3422 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3423 ;;Total ram usage:        2 bytes
  3424 ;; Hardware stack levels used: 1
  3425 ;; Hardware stack levels required when called: 3
  3426 ;; This function calls:
  3427 ;;		_LEDarray_disp_bin
  3428 ;; This function is called by:
  3429 ;;		_main
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text22
  3434   001548                     __ptext22:
  3435                           	callstack 0
  3436   001548                     _increment:
  3437                           	callstack 27
  3438   001548                     
  3439                           ;Functions.c: 21:     if (year%4 == 0)
  3440   001548  0E03               	movlw	3
  3441   00154A  0100               	movlb	0	; () banked
  3442   00154C  1599               	andwf	_year& (0+255),w,b
  3443   00154E  6E20               	movwf	??_increment^0,c
  3444   001550  0E00               	movlw	0
  3445   001552  159A               	andwf	(_year+1)& (0+255),w,b
  3446   001554  6E21               	movwf	(??_increment+1)^0,c
  3447   001556  5020               	movf	??_increment^0,w,c
  3448   001558  1021               	iorwf	(??_increment+1)^0,w,c
  3449   00155A  A4D8               	btfss	status,2,c
  3450   00155C  EFB2  F00A         	goto	u2541
  3451   001560  EFB4  F00A         	goto	u2540
  3452   001564                     u2541:
  3453   001564  EFBB  F00A         	goto	l3234
  3454   001568                     u2540:
  3455   001568                     
  3456                           ; BSR set to: 0
  3457                           ;Functions.c: 22:     {;Functions.c: 23:         month[1] = 29;
  3458   001568  0E00               	movlw	0
  3459   00156A  0101               	movlb	1	; () banked
  3460   00156C  6F8D               	movwf	(_month+3)& (0+255),b
  3461   00156E  0E1D               	movlw	29
  3462   001570  6F8C               	movwf	(_month+2)& (0+255),b
  3463                           
  3464                           ;Functions.c: 24:     }
  3465   001572  EFCF  F00A         	goto	l3238
  3466   001576                     l3234:
  3467                           
  3468                           ; BSR set to: 0
  3469   001576  0E03               	movlw	3
  3470   001578  1599               	andwf	_year& (0+255),w,b
  3471   00157A  6E20               	movwf	??_increment^0,c
  3472   00157C  0E00               	movlw	0
  3473   00157E  159A               	andwf	(_year+1)& (0+255),w,b
  3474   001580  6E21               	movwf	(??_increment+1)^0,c
  3475   001582  5020               	movf	??_increment^0,w,c
  3476   001584  1021               	iorwf	(??_increment+1)^0,w,c
  3477   001586  B4D8               	btfsc	status,2,c
  3478   001588  EFC8  F00A         	goto	u2551
  3479   00158C  EFCA  F00A         	goto	u2550
  3480   001590                     u2551:
  3481   001590  EFCF  F00A         	goto	l3238
  3482   001594                     u2550:
  3483   001594                     
  3484                           ; BSR set to: 0
  3485                           ;Functions.c: 26:     {;Functions.c: 27:         month[1] = 28;
  3486   001594  0E00               	movlw	0
  3487   001596  0101               	movlb	1	; () banked
  3488   001598  6F8D               	movwf	(_month+3)& (0+255),b
  3489   00159A  0E1C               	movlw	28
  3490   00159C  6F8C               	movwf	(_month+2)& (0+255),b
  3491   00159E                     l3238:
  3492                           
  3493                           ;Functions.c: 29:     if (seconds == 1)
  3494   00159E  0100               	movlb	0	; () banked
  3495   0015A0  05A3               	decf	_seconds& (0+255),w,b
  3496   0015A2  11A4               	iorwf	(_seconds+1)& (0+255),w,b
  3497   0015A4  A4D8               	btfss	status,2,c
  3498   0015A6  EFD7  F00A         	goto	u2561
  3499   0015AA  EFD9  F00A         	goto	u2560
  3500   0015AE                     u2561:
  3501   0015AE  EFDF  F00A         	goto	l3244
  3502   0015B2                     u2560:
  3503   0015B2                     
  3504                           ; BSR set to: 0
  3505                           ;Functions.c: 30:     {;Functions.c: 31:         hour++;
  3506   0015B2  4BA1               	infsnz	_hour& (0+255),f,b
  3507   0015B4  2BA2               	incf	(_hour+1)& (0+255),f,b
  3508   0015B6                     
  3509                           ; BSR set to: 0
  3510                           ;Functions.c: 33:         seconds = 0;
  3511   0015B6  0E00               	movlw	0
  3512   0015B8  6FA4               	movwf	(_seconds+1)& (0+255),b
  3513   0015BA  0E00               	movlw	0
  3514   0015BC  6FA3               	movwf	_seconds& (0+255),b
  3515   0015BE                     l3244:
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;Functions.c: 35:     if (hour == 2)
  3519   0015BE  0E02               	movlw	2
  3520   0015C0  19A1               	xorwf	_hour& (0+255),w,b
  3521   0015C2  11A2               	iorwf	(_hour+1)& (0+255),w,b
  3522   0015C4  A4D8               	btfss	status,2,c
  3523   0015C6  EFE7  F00A         	goto	u2571
  3524   0015CA  EFE9  F00A         	goto	u2570
  3525   0015CE                     u2571:
  3526   0015CE  EFF7  F00A         	goto	l3250
  3527   0015D2                     u2570:
  3528   0015D2                     
  3529                           ; BSR set to: 0
  3530                           ;Functions.c: 36:     {;Functions.c: 37:         day_of_year++;
  3531   0015D2  0101               	movlb	1	; () banked
  3532   0015D4  4BA4               	infsnz	_day_of_year& (0+255),f,b
  3533   0015D6  2BA5               	incf	(_day_of_year+1)& (0+255),f,b
  3534                           
  3535                           ;Functions.c: 39:         day_of_week++;
  3536   0015D8  0100               	movlb	0	; () banked
  3537   0015DA  4B9B               	infsnz	_day_of_week& (0+255),f,b
  3538   0015DC  2B9C               	incf	(_day_of_week+1)& (0+255),f,b
  3539                           
  3540                           ;Functions.c: 41:         day_of_month++;
  3541   0015DE  0101               	movlb	1	; () banked
  3542   0015E0  4BA2               	infsnz	_day_of_month& (0+255),f,b
  3543   0015E2  2BA3               	incf	(_day_of_month+1)& (0+255),f,b
  3544   0015E4                     
  3545                           ; BSR set to: 1
  3546                           ;Functions.c: 42:         hour = 0;
  3547   0015E4  0E00               	movlw	0
  3548   0015E6  0100               	movlb	0	; () banked
  3549   0015E8  6FA2               	movwf	(_hour+1)& (0+255),b
  3550   0015EA  0E00               	movlw	0
  3551   0015EC  6FA1               	movwf	_hour& (0+255),b
  3552   0015EE                     l3250:
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;Functions.c: 44:     if (day_of_week == 8)
  3556   0015EE  0E08               	movlw	8
  3557   0015F0  199B               	xorwf	_day_of_week& (0+255),w,b
  3558   0015F2  119C               	iorwf	(_day_of_week+1)& (0+255),w,b
  3559   0015F4  A4D8               	btfss	status,2,c
  3560   0015F6  EFFF  F00A         	goto	u2581
  3561   0015FA  EF01  F00B         	goto	u2580
  3562   0015FE                     u2581:
  3563   0015FE  EF05  F00B         	goto	l3254
  3564   001602                     u2580:
  3565   001602                     
  3566                           ; BSR set to: 0
  3567                           ;Functions.c: 45:     {;Functions.c: 46:         day_of_week = 1;
  3568   001602  0E00               	movlw	0
  3569   001604  6F9C               	movwf	(_day_of_week+1)& (0+255),b
  3570   001606  0E01               	movlw	1
  3571   001608  6F9B               	movwf	_day_of_week& (0+255),b
  3572   00160A                     l3254:
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;Functions.c: 48:     if (day_of_month == month[month_num-1]+1)
  3576   00160A  90D8               	bcf	status,0,c
  3577   00160C  359D               	rlcf	_month_num& (0+255),w,b
  3578   00160E  6ED9               	movwf	fsr2l,c
  3579   001610  359E               	rlcf	(_month_num+1)& (0+255),w,b
  3580   001612  6EDA               	movwf	fsr2h,c
  3581   001614  0E88               	movlw	low (_month+65534)
  3582   001616  26D9               	addwf	fsr2l,f,c
  3583   001618  0E01               	movlw	high (_month+65534)
  3584   00161A  22DA               	addwfc	fsr2h,f,c
  3585   00161C  CFDE F020          	movff	postinc2,??_increment
  3586   001620  CFDD F021          	movff	postdec2,??_increment+1
  3587   001624  0E01               	movlw	1
  3588   001626  2620               	addwf	??_increment^0,f,c
  3589   001628  0E00               	movlw	0
  3590   00162A  2221               	addwfc	(??_increment+1)^0,f,c
  3591   00162C  0101               	movlb	1	; () banked
  3592   00162E  51A2               	movf	_day_of_month& (0+255),w,b
  3593   001630  1820               	xorwf	??_increment^0,w,c
  3594   001632  E107               	bnz	u2591
  3595   001634  51A3               	movf	(_day_of_month+1)& (0+255),w,b
  3596   001636  1821               	xorwf	(??_increment+1)^0,w,c
  3597   001638  A4D8               	btfss	status,2,c
  3598   00163A  EF21  F00B         	goto	u2591
  3599   00163E  EF23  F00B         	goto	u2590
  3600   001642                     u2591:
  3601   001642  EF2A  F00B         	goto	l3260
  3602   001646                     u2590:
  3603   001646                     
  3604                           ; BSR set to: 1
  3605                           ;Functions.c: 49:     {;Functions.c: 50:         day_of_month = 1;
  3606   001646  0E00               	movlw	0
  3607   001648  6FA3               	movwf	(_day_of_month+1)& (0+255),b
  3608   00164A  0E01               	movlw	1
  3609   00164C  6FA2               	movwf	_day_of_month& (0+255),b
  3610   00164E                     
  3611                           ; BSR set to: 1
  3612                           ;Functions.c: 51:         month_num++;
  3613   00164E  0100               	movlb	0	; () banked
  3614   001650  4B9D               	infsnz	_month_num& (0+255),f,b
  3615   001652  2B9E               	incf	(_month_num+1)& (0+255),f,b
  3616   001654                     l3260:
  3617                           
  3618                           ;Functions.c: 53:     if (month_num == 13)
  3619   001654  0E0D               	movlw	13
  3620   001656  0100               	movlb	0	; () banked
  3621   001658  199D               	xorwf	_month_num& (0+255),w,b
  3622   00165A  119E               	iorwf	(_month_num+1)& (0+255),w,b
  3623   00165C  A4D8               	btfss	status,2,c
  3624   00165E  EF33  F00B         	goto	u2601
  3625   001662  EF35  F00B         	goto	u2600
  3626   001666                     u2601:
  3627   001666  EF3B  F00B         	goto	l3266
  3628   00166A                     u2600:
  3629   00166A                     
  3630                           ; BSR set to: 0
  3631                           ;Functions.c: 54:     {;Functions.c: 55:         month_num=1;
  3632   00166A  0E00               	movlw	0
  3633   00166C  6F9E               	movwf	(_month_num+1)& (0+255),b
  3634   00166E  0E01               	movlw	1
  3635   001670  6F9D               	movwf	_month_num& (0+255),b
  3636   001672                     
  3637                           ; BSR set to: 0
  3638                           ;Functions.c: 56:         year++;
  3639   001672  4B99               	infsnz	_year& (0+255),f,b
  3640   001674  2B9A               	incf	(_year+1)& (0+255),f,b
  3641   001676                     l3266:
  3642                           
  3643                           ; BSR set to: 0
  3644                           ;Functions.c: 58:     LEDarray_disp_bin(month[month_num-1]);
  3645   001676  90D8               	bcf	status,0,c
  3646   001678  359D               	rlcf	_month_num& (0+255),w,b
  3647   00167A  6ED9               	movwf	fsr2l,c
  3648   00167C  359E               	rlcf	(_month_num+1)& (0+255),w,b
  3649   00167E  6EDA               	movwf	fsr2h,c
  3650   001680  0E88               	movlw	low (_month+65534)
  3651   001682  26D9               	addwf	fsr2l,f,c
  3652   001684  0E01               	movlw	high (_month+65534)
  3653   001686  22DA               	addwfc	fsr2h,f,c
  3654   001688  CFDE F006          	movff	postinc2,LEDarray_disp_bin@number
  3655   00168C  CFDD F007          	movff	postdec2,LEDarray_disp_bin@number+1
  3656   001690  EC4B  F00B         	call	_LEDarray_disp_bin	;wreg free
  3657   001694  0012               	return		;funcret
  3658   001696                     __end_of_increment:
  3659                           	callstack 0
  3660                           
  3661 ;; *************** function _LEDarray_disp_bin *****************
  3662 ;; Defined at:
  3663 ;;		line 38 in file "LEDarray.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  number          2    5[COMRAM] unsigned int 
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;  ctr             2   29[COMRAM] int 
  3668 ;;  led_arr        18    9[COMRAM] int [9]
  3669 ;;  mask            2   27[COMRAM] int 
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  1    wreg      void 
  3672 ;; Registers used:
  3673 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3679 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3680 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3681 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3682 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3683 ;;Total ram usage:       26 bytes
  3684 ;; Hardware stack levels used: 1
  3685 ;; Hardware stack levels required when called: 2
  3686 ;; This function calls:
  3687 ;;		Nothing
  3688 ;; This function is called by:
  3689 ;;		_increment
  3690 ;;		_ADC_lightMeter
  3691 ;;		_LEDarray_disp_dec
  3692 ;;		_LEDarray_disp_PPM
  3693 ;;		_incrementseconds
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           	psect	text23
  3698   001696                     __ptext23:
  3699                           	callstack 0
  3700   001696                     _LEDarray_disp_bin:
  3701                           	callstack 27
  3702   001696                     
  3703                           ;LEDarray.c: 38: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 39: {;LEDarray.
      +                          c: 43:     int mask= 0b000000001;
  3704   001696  0E00               	movlw	0
  3705   001698  6E1D               	movwf	(LEDarray_disp_bin@mask+1)^0,c
  3706   00169A  0E01               	movlw	1
  3707   00169C  6E1C               	movwf	LEDarray_disp_bin@mask^0,c
  3708                           
  3709                           ;LEDarray.c: 44:     int led_arr[9];;LEDarray.c: 45:     for(int ctr=0;ctr<9;ctr++){
  3710   00169E  0E00               	movlw	0
  3711   0016A0  6E1F               	movwf	(LEDarray_disp_bin@ctr+1)^0,c
  3712   0016A2  0E00               	movlw	0
  3713   0016A4  6E1E               	movwf	LEDarray_disp_bin@ctr^0,c
  3714   0016A6                     l3022:
  3715                           
  3716                           ;LEDarray.c: 46:         if (number & mask)
  3717   0016A6  5006               	movf	LEDarray_disp_bin@number^0,w,c
  3718   0016A8  141C               	andwf	LEDarray_disp_bin@mask^0,w,c
  3719   0016AA  6E08               	movwf	??_LEDarray_disp_bin^0,c
  3720   0016AC  5007               	movf	(LEDarray_disp_bin@number+1)^0,w,c
  3721   0016AE  141D               	andwf	(LEDarray_disp_bin@mask+1)^0,w,c
  3722   0016B0  6E09               	movwf	(??_LEDarray_disp_bin+1)^0,c
  3723   0016B2  5008               	movf	??_LEDarray_disp_bin^0,w,c
  3724   0016B4  1009               	iorwf	(??_LEDarray_disp_bin+1)^0,w,c
  3725   0016B6  B4D8               	btfsc	status,2,c
  3726   0016B8  EF60  F00B         	goto	u2311
  3727   0016BC  EF62  F00B         	goto	u2310
  3728   0016C0                     u2311:
  3729   0016C0  EF71  F00B         	goto	l3026
  3730   0016C4                     u2310:
  3731   0016C4                     
  3732                           ;LEDarray.c: 47:             led_arr[ctr]=1;
  3733   0016C4  90D8               	bcf	status,0,c
  3734   0016C6  341E               	rlcf	LEDarray_disp_bin@ctr^0,w,c
  3735   0016C8  6ED9               	movwf	fsr2l,c
  3736   0016CA  341F               	rlcf	(LEDarray_disp_bin@ctr+1)^0,w,c
  3737   0016CC  6EDA               	movwf	fsr2h,c
  3738   0016CE  0E0A               	movlw	low LEDarray_disp_bin@led_arr
  3739   0016D0  26D9               	addwf	fsr2l,f,c
  3740   0016D2  0E00               	movlw	high LEDarray_disp_bin@led_arr
  3741   0016D4  22DA               	addwfc	fsr2h,f,c
  3742   0016D6  0E01               	movlw	1
  3743   0016D8  6EDE               	movwf	postinc2,c
  3744   0016DA  0E00               	movlw	0
  3745   0016DC  6EDD               	movwf	postdec2,c
  3746   0016DE  EF7E  F00B         	goto	l3028
  3747   0016E2                     l3026:
  3748                           
  3749                           ;LEDarray.c: 50:             led_arr[ctr]=0;
  3750   0016E2  90D8               	bcf	status,0,c
  3751   0016E4  341E               	rlcf	LEDarray_disp_bin@ctr^0,w,c
  3752   0016E6  6ED9               	movwf	fsr2l,c
  3753   0016E8  341F               	rlcf	(LEDarray_disp_bin@ctr+1)^0,w,c
  3754   0016EA  6EDA               	movwf	fsr2h,c
  3755   0016EC  0E0A               	movlw	low LEDarray_disp_bin@led_arr
  3756   0016EE  26D9               	addwf	fsr2l,f,c
  3757   0016F0  0E00               	movlw	high LEDarray_disp_bin@led_arr
  3758   0016F2  22DA               	addwfc	fsr2h,f,c
  3759   0016F4  0E00               	movlw	0
  3760   0016F6  6EDE               	movwf	postinc2,c
  3761   0016F8  0E00               	movlw	0
  3762   0016FA  6EDD               	movwf	postdec2,c
  3763   0016FC                     l3028:
  3764                           
  3765                           ;LEDarray.c: 52:         mask<<=1;
  3766   0016FC  90D8               	bcf	status,0,c
  3767   0016FE  361C               	rlcf	LEDarray_disp_bin@mask^0,f,c
  3768   001700  361D               	rlcf	(LEDarray_disp_bin@mask+1)^0,f,c
  3769   001702                     
  3770                           ;LEDarray.c: 53:     }
  3771   001702  4A1E               	infsnz	LEDarray_disp_bin@ctr^0,f,c
  3772   001704  2A1F               	incf	(LEDarray_disp_bin@ctr+1)^0,f,c
  3773   001706  BE1F               	btfsc	(LEDarray_disp_bin@ctr+1)^0,7,c
  3774   001708  EF8F  F00B         	goto	u2321
  3775   00170C  501F               	movf	(LEDarray_disp_bin@ctr+1)^0,w,c
  3776   00170E  E109               	bnz	u2320
  3777   001710  0E09               	movlw	9
  3778   001712  5C1E               	subwf	LEDarray_disp_bin@ctr^0,w,c
  3779   001714  A0D8               	btfss	status,0,c
  3780   001716  EF8F  F00B         	goto	u2321
  3781   00171A  EF91  F00B         	goto	u2320
  3782   00171E                     u2321:
  3783   00171E  EF53  F00B         	goto	l3022
  3784   001722                     u2320:
  3785   001722                     
  3786                           ;LEDarray.c: 55:     LATGbits.LATG0 = led_arr[0];
  3787   001722  B00A               	btfsc	LEDarray_disp_bin@led_arr^0,0,c
  3788   001724  D002               	bra	u2335
  3789   001726  907F               	bcf	127,0,c	;volatile
  3790   001728  D001               	bra	u2336
  3791   00172A                     u2335:
  3792   00172A  807F               	bsf	127,0,c	;volatile
  3793   00172C                     u2336:
  3794                           
  3795                           ;LEDarray.c: 56:     LATGbits.LATG1 = led_arr[1];
  3796   00172C  B00C               	btfsc	(LEDarray_disp_bin@led_arr+2)^0,0,c
  3797   00172E  D002               	bra	u2345
  3798   001730  927F               	bcf	127,1,c	;volatile
  3799   001732  D001               	bra	u2346
  3800   001734                     u2345:
  3801   001734  827F               	bsf	127,1,c	;volatile
  3802   001736                     u2346:
  3803                           
  3804                           ;LEDarray.c: 57:     LATAbits.LATA2 = led_arr[2];
  3805   001736  B00E               	btfsc	(LEDarray_disp_bin@led_arr+4)^0,0,c
  3806   001738  D002               	bra	u2355
  3807   00173A  9479               	bcf	121,2,c	;volatile
  3808   00173C  D001               	bra	u2356
  3809   00173E                     u2355:
  3810   00173E  8479               	bsf	121,2,c	;volatile
  3811   001740                     u2356:
  3812                           
  3813                           ;LEDarray.c: 58:     LATFbits.LATF6 = led_arr[3];
  3814   001740  B010               	btfsc	(LEDarray_disp_bin@led_arr+6)^0,0,c
  3815   001742  D002               	bra	u2365
  3816   001744  9C7E               	bcf	126,6,c	;volatile
  3817   001746  D001               	bra	u2366
  3818   001748                     u2365:
  3819   001748  8C7E               	bsf	126,6,c	;volatile
  3820   00174A                     u2366:
  3821                           
  3822                           ;LEDarray.c: 59:     LATAbits.LATA4 = led_arr[4];
  3823   00174A  B012               	btfsc	(LEDarray_disp_bin@led_arr+8)^0,0,c
  3824   00174C  D002               	bra	u2375
  3825   00174E  9879               	bcf	121,4,c	;volatile
  3826   001750  D001               	bra	u2376
  3827   001752                     u2375:
  3828   001752  8879               	bsf	121,4,c	;volatile
  3829   001754                     u2376:
  3830                           
  3831                           ;LEDarray.c: 60:     LATAbits.LATA5 = led_arr[5];
  3832   001754  B014               	btfsc	(LEDarray_disp_bin@led_arr+10)^0,0,c
  3833   001756  D002               	bra	u2385
  3834   001758  9A79               	bcf	121,5,c	;volatile
  3835   00175A  D001               	bra	u2386
  3836   00175C                     u2385:
  3837   00175C  8A79               	bsf	121,5,c	;volatile
  3838   00175E                     u2386:
  3839                           
  3840                           ;LEDarray.c: 61:     LATFbits.LATF0 = led_arr[6];
  3841   00175E  B016               	btfsc	(LEDarray_disp_bin@led_arr+12)^0,0,c
  3842   001760  D002               	bra	u2395
  3843   001762  907E               	bcf	126,0,c	;volatile
  3844   001764  D001               	bra	u2396
  3845   001766                     u2395:
  3846   001766  807E               	bsf	126,0,c	;volatile
  3847   001768                     u2396:
  3848                           
  3849                           ;LEDarray.c: 62:     LATBbits.LATB0 = led_arr[7];
  3850   001768  B018               	btfsc	(LEDarray_disp_bin@led_arr+14)^0,0,c
  3851   00176A  D002               	bra	u2405
  3852   00176C  907A               	bcf	122,0,c	;volatile
  3853   00176E  D001               	bra	u2406
  3854   001770                     u2405:
  3855   001770  807A               	bsf	122,0,c	;volatile
  3856   001772                     u2406:
  3857                           
  3858                           ;LEDarray.c: 63:     LATBbits.LATB1 = led_arr[8];
  3859   001772  B01A               	btfsc	(LEDarray_disp_bin@led_arr+16)^0,0,c
  3860   001774  D002               	bra	u2415
  3861   001776  927A               	bcf	122,1,c	;volatile
  3862   001778  D001               	bra	u2416
  3863   00177A                     u2415:
  3864   00177A  827A               	bsf	122,1,c	;volatile
  3865   00177C                     u2416:
  3866   00177C  0012               	return		;funcret
  3867   00177E                     __end_of_LEDarray_disp_bin:
  3868                           	callstack 0
  3869                           
  3870 ;; *************** function _daylightsavings *****************
  3871 ;; Defined at:
  3872 ;;		line 120 in file "Functions.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;		None
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;		None
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  1    wreg      void 
  3879 ;; Registers used:
  3880 ;;		wreg, status,2, status,0
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3890 ;;Total ram usage:        0 bytes
  3891 ;; Hardware stack levels used: 1
  3892 ;; Hardware stack levels required when called: 2
  3893 ;; This function calls:
  3894 ;;		Nothing
  3895 ;; This function is called by:
  3896 ;;		_main
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           	psect	text24
  3901   001D68                     __ptext24:
  3902                           	callstack 0
  3903   001D68                     _daylightsavings:
  3904                           	callstack 28
  3905   001D68                     
  3906                           ;Functions.c: 122:     if (month_num ==3 && day_of_week==7 && 25<=day_of_month<=31)
  3907   001D68  0E03               	movlw	3
  3908   001D6A  0100               	movlb	0	; () banked
  3909   001D6C  199D               	xorwf	_month_num& (0+255),w,b
  3910   001D6E  119E               	iorwf	(_month_num+1)& (0+255),w,b
  3911   001D70  A4D8               	btfss	status,2,c
  3912   001D72  EFBD  F00E         	goto	u2711
  3913   001D76  EFBF  F00E         	goto	u2710
  3914   001D7A                     u2711:
  3915   001D7A  EFCB  F00E         	goto	l3316
  3916   001D7E                     u2710:
  3917   001D7E                     
  3918                           ; BSR set to: 0
  3919   001D7E  0E07               	movlw	7
  3920   001D80  199B               	xorwf	_day_of_week& (0+255),w,b
  3921   001D82  119C               	iorwf	(_day_of_week+1)& (0+255),w,b
  3922   001D84  A4D8               	btfss	status,2,c
  3923   001D86  EFC7  F00E         	goto	u2721
  3924   001D8A  EFC9  F00E         	goto	u2720
  3925   001D8E                     u2721:
  3926   001D8E  EFCB  F00E         	goto	l3316
  3927   001D92                     u2720:
  3928   001D92                     
  3929                           ; BSR set to: 0
  3930                           ;Functions.c: 123:     {;Functions.c: 124:         hour++;
  3931   001D92  4BA1               	infsnz	_hour& (0+255),f,b
  3932   001D94  2BA2               	incf	(_hour+1)& (0+255),f,b
  3933   001D96                     l3316:
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;Functions.c: 126:     if (month_num ==10 && day_of_week==7 && 25<=day_of_month<=31)
  3937   001D96  0E0A               	movlw	10
  3938   001D98  199D               	xorwf	_month_num& (0+255),w,b
  3939   001D9A  119E               	iorwf	(_month_num+1)& (0+255),w,b
  3940   001D9C  A4D8               	btfss	status,2,c
  3941   001D9E  EFD3  F00E         	goto	u2731
  3942   001DA2  EFD5  F00E         	goto	u2730
  3943   001DA6                     u2731:
  3944   001DA6  EFE2  F00E         	goto	l395
  3945   001DAA                     u2730:
  3946   001DAA                     
  3947                           ; BSR set to: 0
  3948   001DAA  0E07               	movlw	7
  3949   001DAC  199B               	xorwf	_day_of_week& (0+255),w,b
  3950   001DAE  119C               	iorwf	(_day_of_week+1)& (0+255),w,b
  3951   001DB0  A4D8               	btfss	status,2,c
  3952   001DB2  EFDD  F00E         	goto	u2741
  3953   001DB6  EFDF  F00E         	goto	u2740
  3954   001DBA                     u2741:
  3955   001DBA  EFE2  F00E         	goto	l395
  3956   001DBE                     u2740:
  3957   001DBE                     
  3958                           ; BSR set to: 0
  3959                           ;Functions.c: 127:     {;Functions.c: 128:         hour--;
  3960   001DBE  07A1               	decf	_hour& (0+255),f,b
  3961   001DC0  A0D8               	btfss	status,0,c
  3962   001DC2  07A2               	decf	(_hour+1)& (0+255),f,b
  3963   001DC4                     l395:
  3964                           
  3965                           ; BSR set to: 0
  3966   001DC4  0012               	return		;funcret
  3967   001DC6                     __end_of_daylightsavings:
  3968                           	callstack 0
  3969                           
  3970 ;; *************** function _day1_init *****************
  3971 ;; Defined at:
  3972 ;;		line 69 in file "Functions.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;		None
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;		None
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  1    wreg      void 
  3979 ;; Registers used:
  3980 ;;		wreg, status,2
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3990 ;;Total ram usage:        0 bytes
  3991 ;; Hardware stack levels used: 1
  3992 ;; Hardware stack levels required when called: 2
  3993 ;; This function calls:
  3994 ;;		Nothing
  3995 ;; This function is called by:
  3996 ;;		_main
  3997 ;; This function uses a non-reentrant model
  3998 ;;
  3999                           
  4000                           	psect	text25
  4001   001F02                     __ptext25:
  4002                           	callstack 0
  4003   001F02                     _day1_init:
  4004                           	callstack 28
  4005   001F02                     
  4006                           ;Functions.c: 71:     seconds = 0;
  4007   001F02  0E00               	movlw	0
  4008   001F04  0100               	movlb	0	; () banked
  4009   001F06  6FA4               	movwf	(_seconds+1)& (0+255),b
  4010   001F08  0E00               	movlw	0
  4011   001F0A  6FA3               	movwf	_seconds& (0+255),b
  4012                           
  4013                           ;Functions.c: 72:     hour = 0;
  4014   001F0C  0E00               	movlw	0
  4015   001F0E  6FA2               	movwf	(_hour+1)& (0+255),b
  4016   001F10  0E00               	movlw	0
  4017   001F12  6FA1               	movwf	_hour& (0+255),b
  4018                           
  4019                           ;Functions.c: 73:     day_of_year = 1;
  4020   001F14  0E00               	movlw	0
  4021   001F16  0101               	movlb	1	; () banked
  4022   001F18  6FA5               	movwf	(_day_of_year+1)& (0+255),b
  4023   001F1A  0E01               	movlw	1
  4024   001F1C  6FA4               	movwf	_day_of_year& (0+255),b
  4025                           
  4026                           ;Functions.c: 74:     day_of_month = 1;
  4027   001F1E  0E00               	movlw	0
  4028   001F20  6FA3               	movwf	(_day_of_month+1)& (0+255),b
  4029   001F22  0E01               	movlw	1
  4030   001F24  6FA2               	movwf	_day_of_month& (0+255),b
  4031                           
  4032                           ;Functions.c: 75:     day_of_week = 6;
  4033   001F26  0E00               	movlw	0
  4034   001F28  0100               	movlb	0	; () banked
  4035   001F2A  6F9C               	movwf	(_day_of_week+1)& (0+255),b
  4036   001F2C  0E06               	movlw	6
  4037   001F2E  6F9B               	movwf	_day_of_week& (0+255),b
  4038                           
  4039                           ;Functions.c: 76:     year = 2024;
  4040   001F30  0E07               	movlw	7
  4041   001F32  6F9A               	movwf	(_year+1)& (0+255),b
  4042   001F34  0EE8               	movlw	232
  4043   001F36  6F99               	movwf	_year& (0+255),b
  4044                           
  4045                           ;Functions.c: 77:     month_num = 1;
  4046   001F38  0E00               	movlw	0
  4047   001F3A  6F9E               	movwf	(_month_num+1)& (0+255),b
  4048   001F3C  0E01               	movlw	1
  4049   001F3E  6F9D               	movwf	_month_num& (0+255),b
  4050   001F40                     
  4051                           ; BSR set to: 0
  4052                           ;Functions.c: 78:     LATHbits.LATH3 = 1;
  4053   001F40  8680               	bsf	128,3,c	;volatile
  4054   001F42                     
  4055                           ; BSR set to: 0
  4056   001F42  0012               	return		;funcret
  4057   001F44                     __end_of_day1_init:
  4058                           	callstack 0
  4059                           
  4060 ;; *************** function _Timer0_init *****************
  4061 ;; Defined at:
  4062 ;;		line 7 in file "timers.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;		None
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;		None
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  1    wreg      void 
  4069 ;; Registers used:
  4070 ;;		wreg, status,2
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4080 ;;Total ram usage:        0 bytes
  4081 ;; Hardware stack levels used: 1
  4082 ;; Hardware stack levels required when called: 2
  4083 ;; This function calls:
  4084 ;;		Nothing
  4085 ;; This function is called by:
  4086 ;;		_main
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089                           
  4090                           	psect	text26
  4091   002128                     __ptext26:
  4092                           	callstack 0
  4093   002128                     _Timer0_init:
  4094                           	callstack 28
  4095   002128                     
  4096                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  4097   002128  50D6               	movf	214,w,c	;volatile
  4098   00212A  0B1F               	andlw	-225
  4099   00212C  0940               	iorlw	64
  4100   00212E  6ED6               	movwf	214,c	;volatile
  4101   002130                     
  4102                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  4103   002130  88D6               	bsf	214,4,c	;volatile
  4104                           
  4105                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  4106   002132  50D6               	movf	214,w,c	;volatile
  4107   002134  0BF0               	andlw	-16
  4108   002136  0908               	iorlw	8
  4109   002138  6ED6               	movwf	214,c	;volatile
  4110   00213A                     
  4111                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  4112   00213A  88D5               	bsf	213,4,c	;volatile
  4113                           
  4114                           ;timers.c: 15:     TMR0H=0b00001011;
  4115   00213C  0E0B               	movlw	11
  4116   00213E  6ED4               	movwf	212,c	;volatile
  4117                           
  4118                           ;timers.c: 16:     TMR0L=0b11011011;
  4119   002140  0EDB               	movlw	219
  4120   002142  6ED3               	movwf	211,c	;volatile
  4121   002144                     
  4122                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  4123   002144  8ED5               	bsf	213,7,c	;volatile
  4124   002146  0012               	return		;funcret
  4125   002148                     __end_of_Timer0_init:
  4126                           	callstack 0
  4127                           
  4128 ;; *************** function _LEDarray_init *****************
  4129 ;; Defined at:
  4130 ;;		line 10 in file "LEDarray.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;		None
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;		None
  4135 ;; Return value:  Size  Location     Type
  4136 ;;                  1    wreg      void 
  4137 ;; Registers used:
  4138 ;;		None
  4139 ;; Tracked objects:
  4140 ;;		On entry : 0/0
  4141 ;;		On exit  : 0/0
  4142 ;;		Unchanged: 0/0
  4143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4148 ;;Total ram usage:        0 bytes
  4149 ;; Hardware stack levels used: 1
  4150 ;; Hardware stack levels required when called: 2
  4151 ;; This function calls:
  4152 ;;		Nothing
  4153 ;; This function is called by:
  4154 ;;		_main
  4155 ;; This function uses a non-reentrant model
  4156 ;;
  4157                           
  4158                           	psect	text27
  4159   0020BA                     __ptext27:
  4160                           	callstack 0
  4161   0020BA                     _LEDarray_init:
  4162                           	callstack 28
  4163   0020BA                     
  4164                           ;LEDarray.c: 13:     TRISGbits.TRISG0 = 0;
  4165   0020BA  9087               	bcf	135,0,c	;volatile
  4166                           
  4167                           ;LEDarray.c: 14:     TRISGbits.TRISG1 = 0;
  4168   0020BC  9287               	bcf	135,1,c	;volatile
  4169                           
  4170                           ;LEDarray.c: 15:     TRISAbits.TRISA2 = 0;
  4171   0020BE  9481               	bcf	129,2,c	;volatile
  4172                           
  4173                           ;LEDarray.c: 16:     TRISFbits.TRISF6 = 0;
  4174   0020C0  9C86               	bcf	134,6,c	;volatile
  4175                           
  4176                           ;LEDarray.c: 17:     TRISAbits.TRISA4 = 0;
  4177   0020C2  9881               	bcf	129,4,c	;volatile
  4178                           
  4179                           ;LEDarray.c: 18:     TRISAbits.TRISA5 = 0;
  4180   0020C4  9A81               	bcf	129,5,c	;volatile
  4181                           
  4182                           ;LEDarray.c: 19:     TRISFbits.TRISF0 = 0;
  4183   0020C6  9086               	bcf	134,0,c	;volatile
  4184                           
  4185                           ;LEDarray.c: 20:     TRISBbits.TRISB0 = 0;
  4186   0020C8  9082               	bcf	130,0,c	;volatile
  4187                           
  4188                           ;LEDarray.c: 21:     TRISBbits.TRISB1 = 0;
  4189   0020CA  9282               	bcf	130,1,c	;volatile
  4190                           
  4191                           ;LEDarray.c: 24:     LATGbits.LATG0 = 0;
  4192   0020CC  907F               	bcf	127,0,c	;volatile
  4193                           
  4194                           ;LEDarray.c: 25:     LATGbits.LATG1 = 0;
  4195   0020CE  927F               	bcf	127,1,c	;volatile
  4196                           
  4197                           ;LEDarray.c: 26:     LATAbits.LATA2 = 0;
  4198   0020D0  9479               	bcf	121,2,c	;volatile
  4199                           
  4200                           ;LEDarray.c: 27:     LATFbits.LATF6 = 0;
  4201   0020D2  9C7E               	bcf	126,6,c	;volatile
  4202                           
  4203                           ;LEDarray.c: 28:     LATAbits.LATA4 = 0;
  4204   0020D4  9879               	bcf	121,4,c	;volatile
  4205                           
  4206                           ;LEDarray.c: 29:     LATAbits.LATA5 = 0;
  4207   0020D6  9A79               	bcf	121,5,c	;volatile
  4208                           
  4209                           ;LEDarray.c: 30:     LATFbits.LATF0 = 0;
  4210   0020D8  907E               	bcf	126,0,c	;volatile
  4211                           
  4212                           ;LEDarray.c: 31:     LATBbits.LATB0 = 0;
  4213   0020DA  907A               	bcf	122,0,c	;volatile
  4214                           
  4215                           ;LEDarray.c: 32:     LATBbits.LATB1 = 0;
  4216   0020DC  927A               	bcf	122,1,c	;volatile
  4217   0020DE  0012               	return		;funcret
  4218   0020E0                     __end_of_LEDarray_init:
  4219                           	callstack 0
  4220                           
  4221 ;; *************** function _LCD_setline *****************
  4222 ;; Defined at:
  4223 ;;		line 95 in file "LCD.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;  line            1    wreg     unsigned char 
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;  line            1    8[COMRAM] unsigned char 
  4228 ;; Return value:  Size  Location     Type
  4229 ;;                  1    wreg      void 
  4230 ;; Registers used:
  4231 ;;		wreg, status,2, status,0, cstack
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4238 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4240 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4241 ;;Total ram usage:        1 bytes
  4242 ;; Hardware stack levels used: 1
  4243 ;; Hardware stack levels required when called: 5
  4244 ;; This function calls:
  4245 ;;		_LCD_sendbyte
  4246 ;; This function is called by:
  4247 ;;		_main
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           	psect	text28
  4252   002030                     __ptext28:
  4253                           	callstack 0
  4254   002030                     _LCD_setline:
  4255                           	callstack 25
  4256                           
  4257                           ;incstack = 0
  4258                           ;LCD_setline@line stored from wreg
  4259   002030  6E09               	movwf	LCD_setline@line^0,c
  4260   002032                     
  4261                           ;LCD.c: 96:     if(line&0b01)
  4262   002032  A009               	btfss	LCD_setline@line^0,0,c
  4263   002034  EF1E  F010         	goto	u2521
  4264   002038  EF20  F010         	goto	u2520
  4265   00203C                     u2521:
  4266   00203C  EF25  F010         	goto	l3220
  4267   002040                     u2520:
  4268   002040                     
  4269                           ;LCD.c: 97:     {;LCD.c: 98:         LCD_sendbyte(0x80,0);
  4270   002040  0E00               	movlw	0
  4271   002042  6E07               	movwf	LCD_sendbyte@type^0,c
  4272   002044  0E80               	movlw	128
  4273   002046  EC32  F010         	call	_LCD_sendbyte
  4274   00204A                     l3220:
  4275                           
  4276                           ;LCD.c: 100:     if(line&0b10)
  4277   00204A  A209               	btfss	LCD_setline@line^0,1,c
  4278   00204C  EF2A  F010         	goto	u2531
  4279   002050  EF2C  F010         	goto	u2530
  4280   002054                     u2531:
  4281   002054  EF31  F010         	goto	l438
  4282   002058                     u2530:
  4283   002058                     
  4284                           ;LCD.c: 101:     {;LCD.c: 102:         LCD_sendbyte(0xC0,0);
  4285   002058  0E00               	movlw	0
  4286   00205A  6E07               	movwf	LCD_sendbyte@type^0,c
  4287   00205C  0EC0               	movlw	192
  4288   00205E  EC32  F010         	call	_LCD_sendbyte
  4289   002062                     l438:
  4290   002062  0012               	return		;funcret
  4291   002064                     __end_of_LCD_setline:
  4292                           	callstack 0
  4293                           
  4294 ;; *************** function _LCD_Init *****************
  4295 ;; Defined at:
  4296 ;;		line 53 in file "LCD.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;		None
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;		None
  4301 ;; Return value:  Size  Location     Type
  4302 ;;                  1    wreg      void 
  4303 ;; Registers used:
  4304 ;;		wreg, status,2, status,0, cstack
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4312 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4313 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4314 ;;Total ram usage:        2 bytes
  4315 ;; Hardware stack levels used: 1
  4316 ;; Hardware stack levels required when called: 5
  4317 ;; This function calls:
  4318 ;;		_LCD_sendbyte
  4319 ;;		_LCD_sendnibble
  4320 ;; This function is called by:
  4321 ;;		_main
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           
  4325                           	psect	text29
  4326   00190C                     __ptext29:
  4327                           	callstack 0
  4328   00190C                     _LCD_Init:
  4329                           	callstack 25
  4330   00190C                     
  4331                           ;LCD.c: 57:     TRISCbits.TRISC2 = 0;
  4332   00190C  9483               	bcf	131,2,c	;volatile
  4333                           
  4334                           ;LCD.c: 58:     TRISCbits.TRISC6 = 0;
  4335   00190E  9C83               	bcf	131,6,c	;volatile
  4336                           
  4337                           ;LCD.c: 60:     TRISBbits.TRISB3 = 0;
  4338   001910  9682               	bcf	130,3,c	;volatile
  4339                           
  4340                           ;LCD.c: 61:     TRISBbits.TRISB2 = 0;
  4341   001912  9482               	bcf	130,2,c	;volatile
  4342                           
  4343                           ;LCD.c: 62:     TRISEbits.TRISE1 = 0;
  4344   001914  9285               	bcf	133,1,c	;volatile
  4345                           
  4346                           ;LCD.c: 63:     TRISEbits.TRISE3 = 0;
  4347   001916  9685               	bcf	133,3,c	;volatile
  4348                           
  4349                           ;LCD.c: 65:     LATBbits.LATB3 = 0;
  4350   001918  967A               	bcf	122,3,c	;volatile
  4351                           
  4352                           ;LCD.c: 66:     LATBbits.LATB2 = 0;
  4353   00191A  947A               	bcf	122,2,c	;volatile
  4354                           
  4355                           ;LCD.c: 67:     LATEbits.LATE1 = 0;
  4356   00191C  927D               	bcf	125,1,c	;volatile
  4357                           
  4358                           ;LCD.c: 68:     LATEbits.LATE3 = 0;
  4359   00191E  967D               	bcf	125,3,c	;volatile
  4360                           
  4361                           ;LCD.c: 70:     LATCbits.LATC2 = 0;
  4362   001920  947B               	bcf	123,2,c	;volatile
  4363                           
  4364                           ;LCD.c: 71:     LATCbits.LATC6 = 0;
  4365   001922  9C7B               	bcf	123,6,c	;volatile
  4366   001924                     
  4367                           ;LCD.c: 72:     _delay((unsigned long)((40)*(64000000/4000.0)));
  4368   001924  0E04               	movlw	4
  4369   001926  6E0A               	movwf	(??_LCD_Init+1)^0,c
  4370   001928  0E40               	movlw	64
  4371   00192A  6E09               	movwf	??_LCD_Init^0,c
  4372   00192C  0E26               	movlw	38
  4373   00192E                     u2807:
  4374   00192E  2EE8               	decfsz	wreg,f,c
  4375   001930  D7FE               	bra	u2807
  4376   001932  2E09               	decfsz	??_LCD_Init^0,f,c
  4377   001934  D7FC               	bra	u2807
  4378   001936  2E0A               	decfsz	(??_LCD_Init+1)^0,f,c
  4379   001938  D7FA               	bra	u2807
  4380   00193A  D000               	nop2	
  4381   00193C                     
  4382                           ;LCD.c: 77:     LCD_sendnibble(0b0011);
  4383   00193C  0E03               	movlw	3
  4384   00193E  EC80  F00E         	call	_LCD_sendnibble
  4385   001942                     
  4386                           ;LCD.c: 78:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  4387   001942  0ED5               	movlw	213
  4388   001944                     u2817:
  4389   001944  2EE8               	decfsz	wreg,f,c
  4390   001946  D7FE               	bra	u2817
  4391   001948  F000               	nop	
  4392   00194A                     
  4393                           ;LCD.c: 79:     LCD_sendbyte(0b00101100,0);
  4394   00194A  0E00               	movlw	0
  4395   00194C  6E07               	movwf	LCD_sendbyte@type^0,c
  4396   00194E  0E2C               	movlw	44
  4397   001950  EC32  F010         	call	_LCD_sendbyte
  4398   001954                     
  4399                           ;LCD.c: 80:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  4400   001954  0ED5               	movlw	213
  4401   001956                     u2827:
  4402   001956  2EE8               	decfsz	wreg,f,c
  4403   001958  D7FE               	bra	u2827
  4404   00195A  F000               	nop	
  4405   00195C                     
  4406                           ;LCD.c: 81:     LCD_sendbyte(0b00101100,0);
  4407   00195C  0E00               	movlw	0
  4408   00195E  6E07               	movwf	LCD_sendbyte@type^0,c
  4409   001960  0E2C               	movlw	44
  4410   001962  EC32  F010         	call	_LCD_sendbyte
  4411   001966                     
  4412                           ;LCD.c: 82:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  4413   001966  0ED5               	movlw	213
  4414   001968                     u2837:
  4415   001968  2EE8               	decfsz	wreg,f,c
  4416   00196A  D7FE               	bra	u2837
  4417   00196C  F000               	nop	
  4418   00196E                     
  4419                           ;LCD.c: 83:     LCD_sendbyte(0b00001100,0);
  4420   00196E  0E00               	movlw	0
  4421   001970  6E07               	movwf	LCD_sendbyte@type^0,c
  4422   001972  0E0C               	movlw	12
  4423   001974  EC32  F010         	call	_LCD_sendbyte
  4424   001978                     
  4425                           ;LCD.c: 84:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  4426   001978  0ED5               	movlw	213
  4427   00197A                     u2847:
  4428   00197A  2EE8               	decfsz	wreg,f,c
  4429   00197C  D7FE               	bra	u2847
  4430   00197E  F000               	nop	
  4431   001980                     
  4432                           ;LCD.c: 85:     LCD_sendbyte(0b00000001,0);
  4433   001980  0E00               	movlw	0
  4434   001982  6E07               	movwf	LCD_sendbyte@type^0,c
  4435   001984  0E01               	movlw	1
  4436   001986  EC32  F010         	call	_LCD_sendbyte
  4437   00198A                     
  4438                           ;LCD.c: 86:     _delay((unsigned long)((1.53)*(64000000/4000.0)));
  4439   00198A  0E20               	movlw	32
  4440   00198C  6E09               	movwf	??_LCD_Init^0,c
  4441   00198E  0ECA               	movlw	202
  4442   001990                     u2857:
  4443   001990  2EE8               	decfsz	wreg,f,c
  4444   001992  D7FE               	bra	u2857
  4445   001994  2E09               	decfsz	??_LCD_Init^0,f,c
  4446   001996  D7FC               	bra	u2857
  4447   001998                     
  4448                           ;LCD.c: 87:     LCD_sendbyte(0b00000111,0);
  4449   001998  0E00               	movlw	0
  4450   00199A  6E07               	movwf	LCD_sendbyte@type^0,c
  4451   00199C  0E07               	movlw	7
  4452   00199E  EC32  F010         	call	_LCD_sendbyte
  4453   0019A2                     
  4454                           ;LCD.c: 88:     LCD_sendbyte(0b00001100,0);
  4455   0019A2  0E00               	movlw	0
  4456   0019A4  6E07               	movwf	LCD_sendbyte@type^0,c
  4457   0019A6  0E0C               	movlw	12
  4458   0019A8  EC32  F010         	call	_LCD_sendbyte
  4459   0019AC  0012               	return		;funcret
  4460   0019AE                     __end_of_LCD_Init:
  4461                           	callstack 0
  4462                           
  4463 ;; *************** function _LCD_sendbyte *****************
  4464 ;; Defined at:
  4465 ;;		line 36 in file "LCD.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;  Byte            1    wreg     unsigned char 
  4468 ;;  type            1    6[COMRAM] unsigned char 
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;  Byte            1    7[COMRAM] unsigned char 
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  1    wreg      void 
  4473 ;; Registers used:
  4474 ;;		wreg, status,2, status,0, cstack
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4480 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4481 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4483 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4484 ;;Total ram usage:        2 bytes
  4485 ;; Hardware stack levels used: 1
  4486 ;; Hardware stack levels required when called: 4
  4487 ;; This function calls:
  4488 ;;		_LCD_sendnibble
  4489 ;; This function is called by:
  4490 ;;		_LCD_Init
  4491 ;;		_LCD_setline
  4492 ;;		_LCD_sendstring
  4493 ;;		_LCD_scroll
  4494 ;; This function uses a non-reentrant model
  4495 ;;
  4496                           
  4497                           	psect	text30
  4498   002064                     __ptext30:
  4499                           	callstack 0
  4500   002064                     _LCD_sendbyte:
  4501                           	callstack 24
  4502                           
  4503                           ;incstack = 0
  4504                           ;LCD_sendbyte@Byte stored from wreg
  4505   002064  6E08               	movwf	LCD_sendbyte@Byte^0,c
  4506   002066                     
  4507                           ;LCD.c: 37:     if(type&0b1)
  4508   002066  A007               	btfss	LCD_sendbyte@type^0,0,c
  4509   002068  EF38  F010         	goto	u2291
  4510   00206C  EF3A  F010         	goto	u2290
  4511   002070                     u2291:
  4512   002070  EF3D  F010         	goto	l428
  4513   002074                     u2290:
  4514   002074                     
  4515                           ;LCD.c: 38:     {;LCD.c: 39:         LATCbits.LATC6 = 1;
  4516   002074  8C7B               	bsf	123,6,c	;volatile
  4517                           
  4518                           ;LCD.c: 40:     }
  4519   002076  EF3E  F010         	goto	l3000
  4520   00207A                     l428:
  4521                           
  4522                           ;LCD.c: 42:     {;LCD.c: 43:         (LATCbits.LATC6 = 0);
  4523   00207A  9C7B               	bcf	123,6,c	;volatile
  4524   00207C                     l3000:
  4525                           
  4526                           ;LCD.c: 45:     LCD_sendnibble(Byte>>4);
  4527   00207C  3808               	swapf	LCD_sendbyte@Byte^0,w,c
  4528   00207E  0B0F               	andlw	15
  4529   002080  EC80  F00E         	call	_LCD_sendnibble
  4530   002084                     
  4531                           ;LCD.c: 46:     LCD_sendnibble(Byte);
  4532   002084  5008               	movf	LCD_sendbyte@Byte^0,w,c
  4533   002086  EC80  F00E         	call	_LCD_sendnibble
  4534   00208A                     
  4535                           ;LCD.c: 47:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  4536   00208A  0EA0               	movlw	160
  4537   00208C                     u2867:
  4538   00208C  D000               	nop2	
  4539   00208E  2EE8               	decfsz	wreg,f,c
  4540   002090  D7FD               	bra	u2867
  4541   002092  0012               	return		;funcret
  4542   002094                     __end_of_LCD_sendbyte:
  4543                           	callstack 0
  4544                           
  4545 ;; *************** function _LCD_sendnibble *****************
  4546 ;; Defined at:
  4547 ;;		line 17 in file "LCD.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;  number          1    wreg     unsigned char 
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;  number          1    5[COMRAM] unsigned char 
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  1    wreg      void 
  4554 ;; Registers used:
  4555 ;;		wreg, cstack
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4562 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4564 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4565 ;;Total ram usage:        1 bytes
  4566 ;; Hardware stack levels used: 1
  4567 ;; Hardware stack levels required when called: 3
  4568 ;; This function calls:
  4569 ;;		_LCD_E_TOG
  4570 ;; This function is called by:
  4571 ;;		_LCD_sendbyte
  4572 ;;		_LCD_Init
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           	psect	text31
  4577   001D00                     __ptext31:
  4578                           	callstack 0
  4579   001D00                     _LCD_sendnibble:
  4580                           	callstack 24
  4581                           
  4582                           ;incstack = 0
  4583                           ;LCD_sendnibble@number stored from wreg
  4584   001D00  6E06               	movwf	LCD_sendnibble@number^0,c
  4585   001D02                     
  4586                           ;LCD.c: 20:     if(number&0b0001) LATBbits.LATB3=1;
  4587   001D02  A006               	btfss	LCD_sendnibble@number^0,0,c
  4588   001D04  EF86  F00E         	goto	u2221
  4589   001D08  EF88  F00E         	goto	u2220
  4590   001D0C                     u2221:
  4591   001D0C  EF8B  F00E         	goto	l417
  4592   001D10                     u2220:
  4593   001D10  867A               	bsf	122,3,c	;volatile
  4594   001D12  EF8C  F00E         	goto	l2950
  4595   001D16                     l417:
  4596   001D16  967A               	bcf	122,3,c	;volatile
  4597   001D18                     l2950:
  4598                           
  4599                           ;LCD.c: 22:     if(number&0b0010) LATBbits.LATB2=1;
  4600   001D18  A206               	btfss	LCD_sendnibble@number^0,1,c
  4601   001D1A  EF91  F00E         	goto	u2231
  4602   001D1E  EF93  F00E         	goto	u2230
  4603   001D22                     u2231:
  4604   001D22  EF96  F00E         	goto	l419
  4605   001D26                     u2230:
  4606   001D26  847A               	bsf	122,2,c	;volatile
  4607   001D28  EF97  F00E         	goto	l2954
  4608   001D2C                     l419:
  4609   001D2C  947A               	bcf	122,2,c	;volatile
  4610   001D2E                     l2954:
  4611                           
  4612                           ;LCD.c: 24:     if(number&0b0100) LATEbits.LATE3=1;
  4613   001D2E  A406               	btfss	LCD_sendnibble@number^0,2,c
  4614   001D30  EF9C  F00E         	goto	u2241
  4615   001D34  EF9E  F00E         	goto	u2240
  4616   001D38                     u2241:
  4617   001D38  EFA1  F00E         	goto	l421
  4618   001D3C                     u2240:
  4619   001D3C  867D               	bsf	125,3,c	;volatile
  4620   001D3E  EFA2  F00E         	goto	l2958
  4621   001D42                     l421:
  4622   001D42  967D               	bcf	125,3,c	;volatile
  4623   001D44                     l2958:
  4624                           
  4625                           ;LCD.c: 26:     if(number&0b1000) LATEbits.LATE1=1;
  4626   001D44  A606               	btfss	LCD_sendnibble@number^0,3,c
  4627   001D46  EFA7  F00E         	goto	u2251
  4628   001D4A  EFA9  F00E         	goto	u2250
  4629   001D4E                     u2251:
  4630   001D4E  EFAC  F00E         	goto	l423
  4631   001D52                     u2250:
  4632   001D52  827D               	bsf	125,1,c	;volatile
  4633   001D54  EFAD  F00E         	goto	l2962
  4634   001D58                     l423:
  4635   001D58  927D               	bcf	125,1,c	;volatile
  4636   001D5A                     l2962:
  4637                           
  4638                           ;LCD.c: 28:     LCD_E_TOG();
  4639   001D5A  ECD0  F010         	call	_LCD_E_TOG	;wreg free
  4640   001D5E                     
  4641                           ;LCD.c: 29:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  4642   001D5E  0E1A               	movlw	26
  4643   001D60                     u2877:
  4644   001D60  2EE8               	decfsz	wreg,f,c
  4645   001D62  D7FE               	bra	u2877
  4646   001D64  D000               	nop2	
  4647   001D66  0012               	return		;funcret
  4648   001D68                     __end_of_LCD_sendnibble:
  4649                           	callstack 0
  4650                           
  4651 ;; *************** function _LCD_E_TOG *****************
  4652 ;; Defined at:
  4653 ;;		line 8 in file "LCD.c"
  4654 ;; Parameters:    Size  Location     Type
  4655 ;;		None
  4656 ;; Auto vars:     Size  Location     Type
  4657 ;;		None
  4658 ;; Return value:  Size  Location     Type
  4659 ;;                  1    wreg      void 
  4660 ;; Registers used:
  4661 ;;		wreg
  4662 ;; Tracked objects:
  4663 ;;		On entry : 0/0
  4664 ;;		On exit  : 0/0
  4665 ;;		Unchanged: 0/0
  4666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4671 ;;Total ram usage:        0 bytes
  4672 ;; Hardware stack levels used: 1
  4673 ;; Hardware stack levels required when called: 2
  4674 ;; This function calls:
  4675 ;;		Nothing
  4676 ;; This function is called by:
  4677 ;;		_LCD_sendnibble
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           
  4681                           	psect	text32
  4682   0021A0                     __ptext32:
  4683                           	callstack 0
  4684   0021A0                     _LCD_E_TOG:
  4685                           	callstack 24
  4686   0021A0                     
  4687                           ;LCD.c: 9:     LATCbits.LATC2=1;
  4688   0021A0  847B               	bsf	123,2,c	;volatile
  4689   0021A2                     
  4690                           ;LCD.c: 10:     _delay((unsigned long)((2)*(64000000/4000000.0)));
  4691   0021A2  0E0A               	movlw	10
  4692   0021A4                     u2887:
  4693   0021A4  2EE8               	decfsz	wreg,f,c
  4694   0021A6  D7FE               	bra	u2887
  4695   0021A8  D000               	nop2	
  4696   0021AA                     
  4697                           ;LCD.c: 11:     LATCbits.LATC2=0;
  4698   0021AA  947B               	bcf	123,2,c	;volatile
  4699   0021AC  0012               	return		;funcret
  4700   0021AE                     __end_of_LCD_E_TOG:
  4701                           	callstack 0
  4702                           
  4703 ;; *************** function _Interrupts_init *****************
  4704 ;; Defined at:
  4705 ;;		line 10 in file "interrupts.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;		None
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;		None
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  1    wreg      void 
  4712 ;; Registers used:
  4713 ;;		None
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4723 ;;Total ram usage:        0 bytes
  4724 ;; Hardware stack levels used: 1
  4725 ;; Hardware stack levels required when called: 2
  4726 ;; This function calls:
  4727 ;;		Nothing
  4728 ;; This function is called by:
  4729 ;;		_main
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           	psect	text33
  4734   00218E                     __ptext33:
  4735                           	callstack 0
  4736   00218E                     _Interrupts_init:
  4737                           	callstack 28
  4738   00218E                     
  4739                           ;interrupts.c: 14:     PIE2bits.C1IE=1;
  4740   00218E  010E               	movlb	14	; () banked
  4741   002190  812B               	bsf	43,0,b	;volatile
  4742                           
  4743                           ;interrupts.c: 15:     PIE0bits.TMR0IE=1;
  4744   002192  8B29               	bsf	41,5,b	;volatile
  4745                           
  4746                           ;interrupts.c: 16:     IPR2bits.C1IP = 1;
  4747   002194  8121               	bsf	33,0,b	;volatile
  4748                           
  4749                           ;interrupts.c: 17:     IPR0bits.TMR0IP = 0;
  4750   002196  9B1F               	bcf	31,5,b	;volatile
  4751                           
  4752                           ;interrupts.c: 18:     INTCONbits.IPEN=1;
  4753   002198  8AF2               	bsf	242,5,c	;volatile
  4754                           
  4755                           ;interrupts.c: 19:     INTCONbits.PEIE=1;
  4756   00219A  8CF2               	bsf	242,6,c	;volatile
  4757                           
  4758                           ;interrupts.c: 20:     INTCONbits.GIE=1;
  4759   00219C  8EF2               	bsf	242,7,c	;volatile
  4760   00219E                     
  4761                           ; BSR set to: 14
  4762   00219E  0012               	return		;funcret
  4763   0021A0                     __end_of_Interrupts_init:
  4764                           	callstack 0
  4765                           
  4766 ;; *************** function _Comp1_init_rising_edge *****************
  4767 ;; Defined at:
  4768 ;;		line 24 in file "comparator.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;		None
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;		None
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  1    wreg      void 
  4775 ;; Registers used:
  4776 ;;		wreg, status,2, cstack
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4786 ;;Total ram usage:        0 bytes
  4787 ;; Hardware stack levels used: 1
  4788 ;; Hardware stack levels required when called: 3
  4789 ;; This function calls:
  4790 ;;		_DAC_init
  4791 ;; This function is called by:
  4792 ;;		_main
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           	psect	text34
  4797   0020E0                     __ptext34:
  4798                           	callstack 0
  4799   0020E0                     _Comp1_init_rising_edge:
  4800                           	callstack 27
  4801   0020E0                     
  4802                           ;comparator.c: 26:     TRISFbits.TRISF7=1;
  4803   0020E0  8E86               	bsf	134,7,c	;volatile
  4804   0020E2                     
  4805                           ;comparator.c: 27:     CM1NCHbits.NCH=0b011;
  4806   0020E2  010E               	movlb	14	; () banked
  4807   0020E4  51D2               	movf	210,w,b	;volatile
  4808   0020E6  0BF8               	andlw	-8
  4809   0020E8  0903               	iorlw	3
  4810   0020EA  6FD2               	movwf	210,b	;volatile
  4811                           
  4812                           ;comparator.c: 28:     CM1PCHbits.PCH=0b101;
  4813   0020EC  51D3               	movf	211,w,b	;volatile
  4814   0020EE  0BF8               	andlw	-8
  4815   0020F0  0905               	iorlw	5
  4816   0020F2  6FD3               	movwf	211,b	;volatile
  4817   0020F4                     
  4818                           ; BSR set to: 14
  4819                           ;comparator.c: 29:     CM1CON0bits.HYS=1;
  4820   0020F4  83D0               	bsf	208,1,b	;volatile
  4821   0020F6                     
  4822                           ; BSR set to: 14
  4823                           ;comparator.c: 30:     CM1CON0bits.POL=1;
  4824   0020F6  89D0               	bsf	208,4,b	;volatile
  4825   0020F8                     
  4826                           ; BSR set to: 14
  4827                           ;comparator.c: 31:     CM1CON1bits.INTP=1;
  4828   0020F8  83D1               	bsf	209,1,b	;volatile
  4829   0020FA                     
  4830                           ; BSR set to: 14
  4831                           ;comparator.c: 32:     DAC_init();
  4832   0020FA  ECBD  F010         	call	_DAC_init	;wreg free
  4833   0020FE                     
  4834                           ;comparator.c: 33:     CM1CON0bits.EN=1;
  4835   0020FE  010E               	movlb	14	; () banked
  4836   002100  8FD0               	bsf	208,7,b	;volatile
  4837   002102                     
  4838                           ; BSR set to: 14
  4839   002102  0012               	return		;funcret
  4840   002104                     __end_of_Comp1_init_rising_edge:
  4841                           	callstack 0
  4842                           
  4843 ;; *************** function _Comp1_init_falling_edge *****************
  4844 ;; Defined at:
  4845 ;;		line 37 in file "comparator.c"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;		None
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;		None
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  1    wreg      void 
  4852 ;; Registers used:
  4853 ;;		wreg, status,2, cstack
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4863 ;;Total ram usage:        0 bytes
  4864 ;; Hardware stack levels used: 1
  4865 ;; Hardware stack levels required when called: 3
  4866 ;; This function calls:
  4867 ;;		_DAC_init
  4868 ;; This function is called by:
  4869 ;;		_main
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           
  4873                           	psect	text35
  4874   002104                     __ptext35:
  4875                           	callstack 0
  4876   002104                     _Comp1_init_falling_edge:
  4877                           	callstack 27
  4878   002104                     
  4879                           ;comparator.c: 39:     TRISFbits.TRISF7=1;
  4880   002104  8E86               	bsf	134,7,c	;volatile
  4881   002106                     
  4882                           ;comparator.c: 40:     CM1NCHbits.NCH=0b011;
  4883   002106  010E               	movlb	14	; () banked
  4884   002108  51D2               	movf	210,w,b	;volatile
  4885   00210A  0BF8               	andlw	-8
  4886   00210C  0903               	iorlw	3
  4887   00210E  6FD2               	movwf	210,b	;volatile
  4888                           
  4889                           ;comparator.c: 41:     CM1PCHbits.PCH=0b101;
  4890   002110  51D3               	movf	211,w,b	;volatile
  4891   002112  0BF8               	andlw	-8
  4892   002114  0905               	iorlw	5
  4893   002116  6FD3               	movwf	211,b	;volatile
  4894   002118                     
  4895                           ; BSR set to: 14
  4896                           ;comparator.c: 42:     CM1CON0bits.HYS=1;
  4897   002118  83D0               	bsf	208,1,b	;volatile
  4898   00211A                     
  4899                           ; BSR set to: 14
  4900                           ;comparator.c: 43:     CM1CON0bits.POL=1;
  4901   00211A  89D0               	bsf	208,4,b	;volatile
  4902   00211C                     
  4903                           ; BSR set to: 14
  4904                           ;comparator.c: 44:     CM1CON1bits.INTN=1;
  4905   00211C  81D1               	bsf	209,0,b	;volatile
  4906   00211E                     
  4907                           ; BSR set to: 14
  4908                           ;comparator.c: 45:     DAC_init();
  4909   00211E  ECBD  F010         	call	_DAC_init	;wreg free
  4910   002122                     
  4911                           ;comparator.c: 46:     CM1CON0bits.EN=1;
  4912   002122  010E               	movlb	14	; () banked
  4913   002124  8FD0               	bsf	208,7,b	;volatile
  4914   002126                     
  4915                           ; BSR set to: 14
  4916   002126  0012               	return		;funcret
  4917   002128                     __end_of_Comp1_init_falling_edge:
  4918                           	callstack 0
  4919                           
  4920 ;; *************** function _DAC_init *****************
  4921 ;; Defined at:
  4922 ;;		line 7 in file "comparator.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;		None
  4925 ;; Auto vars:     Size  Location     Type
  4926 ;;		None
  4927 ;; Return value:  Size  Location     Type
  4928 ;;                  1    wreg      void 
  4929 ;; Registers used:
  4930 ;;		wreg, status,2
  4931 ;; Tracked objects:
  4932 ;;		On entry : 0/0
  4933 ;;		On exit  : 0/0
  4934 ;;		Unchanged: 0/0
  4935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4940 ;;Total ram usage:        0 bytes
  4941 ;; Hardware stack levels used: 1
  4942 ;; Hardware stack levels required when called: 2
  4943 ;; This function calls:
  4944 ;;		Nothing
  4945 ;; This function is called by:
  4946 ;;		_Comp1_init_rising_edge
  4947 ;;		_Comp1_init_falling_edge
  4948 ;; This function uses a non-reentrant model
  4949 ;;
  4950                           
  4951                           	psect	text36
  4952   00217A                     __ptext36:
  4953                           	callstack 0
  4954   00217A                     _DAC_init:
  4955                           	callstack 27
  4956   00217A                     
  4957                           ;comparator.c: 9:     DAC1CON0bits.PSS=0b00;
  4958   00217A  0EF3               	movlw	-13
  4959   00217C  010E               	movlb	14	; () banked
  4960   00217E  17C6               	andwf	198,f,b	;volatile
  4961   002180                     
  4962                           ; BSR set to: 14
  4963                           ;comparator.c: 10:     DAC1CON0bits.NSS=0b0;
  4964   002180  91C6               	bcf	198,0,b	;volatile
  4965                           
  4966                           ;comparator.c: 14:     DAC1CON1bits.DAC1R=20;
  4967   002182  51C7               	movf	199,w,b	;volatile
  4968   002184  0BE0               	andlw	-32
  4969   002186  0914               	iorlw	20
  4970   002188  6FC7               	movwf	199,b	;volatile
  4971   00218A                     
  4972                           ; BSR set to: 14
  4973                           ;comparator.c: 15:     DAC1CON0bits.DAC1EN=1;
  4974   00218A  8FC6               	bsf	198,7,b	;volatile
  4975   00218C                     
  4976                           ; BSR set to: 14
  4977   00218C  0012               	return		;funcret
  4978   00218E                     __end_of_DAC_init:
  4979                           	callstack 0
  4980                           
  4981 ;; *************** function _ADC_init *****************
  4982 ;; Defined at:
  4983 ;;		line 11 in file "ADC.c"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;		None
  4986 ;; Auto vars:     Size  Location     Type
  4987 ;;		None
  4988 ;; Return value:  Size  Location     Type
  4989 ;;                  1    wreg      void 
  4990 ;; Registers used:
  4991 ;;		wreg, status,2
  4992 ;; Tracked objects:
  4993 ;;		On entry : 0/0
  4994 ;;		On exit  : 0/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5001 ;;Total ram usage:        0 bytes
  5002 ;; Hardware stack levels used: 1
  5003 ;; Hardware stack levels required when called: 2
  5004 ;; This function calls:
  5005 ;;		Nothing
  5006 ;; This function is called by:
  5007 ;;		_main
  5008 ;; This function uses a non-reentrant model
  5009 ;;
  5010                           
  5011                           	psect	text37
  5012   002148                     __ptext37:
  5013                           	callstack 0
  5014   002148                     _ADC_init:
  5015                           	callstack 28
  5016   002148                     
  5017                           ;ADC.c: 13:     TRISAbits.TRISA3=1;
  5018   002148  8681               	bsf	129,3,c	;volatile
  5019                           
  5020                           ;ADC.c: 14:     ANSELAbits.ANSELA3=1;
  5021   00214A  010E               	movlb	14	; () banked
  5022   00214C  8792               	bsf	146,3,b	;volatile
  5023                           
  5024                           ;ADC.c: 17:     ADREFbits.ADNREF = 0;
  5025   00214E  010F               	movlb	15	; () banked
  5026   002150  9958               	bcf	88,4,b	;volatile
  5027   002152                     
  5028                           ; BSR set to: 15
  5029                           ;ADC.c: 18:     ADREFbits.ADPREF = 0b00;
  5030   002152  0EFC               	movlw	-4
  5031   002154  1758               	andwf	88,f,b	;volatile
  5032                           
  5033                           ;ADC.c: 19:     ADPCH=0b11;
  5034   002156  0E03               	movlw	3
  5035   002158  6F5F               	movwf	95,b	;volatile
  5036   00215A                     
  5037                           ; BSR set to: 15
  5038                           ;ADC.c: 20:     ADCON0bits.ADFM = 0;
  5039   00215A  9460               	bcf	96,2,c	;volatile
  5040   00215C                     
  5041                           ; BSR set to: 15
  5042                           ;ADC.c: 21:     ADCON0bits.ADCS = 1;
  5043   00215C  8860               	bsf	96,4,c	;volatile
  5044   00215E                     
  5045                           ; BSR set to: 15
  5046                           ;ADC.c: 22:     ADCON0bits.ADON = 1;
  5047   00215E  8E60               	bsf	96,7,c	;volatile
  5048   002160                     
  5049                           ; BSR set to: 15
  5050   002160  0012               	return		;funcret
  5051   002162                     __end_of_ADC_init:
  5052                           	callstack 0
  5053                           
  5054 ;; *************** function _LowISR *****************
  5055 ;; Defined at:
  5056 ;;		line 37 in file "interrupts.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;		None
  5059 ;; Auto vars:     Size  Location     Type
  5060 ;;		None
  5061 ;; Return value:  Size  Location     Type
  5062 ;;                  1    wreg      void 
  5063 ;; Registers used:
  5064 ;;		wreg, status,2, status,0
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5072 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5073 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5074 ;;Total ram usage:        4 bytes
  5075 ;; Hardware stack levels used: 1
  5076 ;; Hardware stack levels required when called: 1
  5077 ;; This function calls:
  5078 ;;		Nothing
  5079 ;; This function is called by:
  5080 ;;		Interrupt level 1
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           	psect	intcodelo
  5085   000018                     __pintcodelo:
  5086                           	callstack 0
  5087   000018                     _LowISR:
  5088                           	callstack 20
  5089                           
  5090                           ; BSR set to: 15
  5091                           ;incstack = 0
  5092   000018  8055               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  5093   00001A  CFD8 F003          	movff	status,??_LowISR+1
  5094   00001E  CFE8 F004          	movff	wreg,??_LowISR+2
  5095   000022  CFE0 F005          	movff	bsr,??_LowISR+3
  5096   000026                     
  5097                           ;interrupts.c: 39:     if(PIR0bits.TMR0IF){
  5098   000026  010E               	movlb	14	; () banked
  5099   000028  AB33               	btfss	51,5,b	;volatile
  5100   00002A  EF19  F000         	goto	i1u186_21
  5101   00002E  EF1B  F000         	goto	i1u186_20
  5102   000032                     i1u186_21:
  5103   000032  EF24  F000         	goto	i1l2722
  5104   000036                     i1u186_20:
  5105   000036                     
  5106                           ; BSR set to: 14
  5107                           ;interrupts.c: 40:         seconds++;
  5108   000036  0100               	movlb	0	; () banked
  5109   000038  4BA3               	infsnz	_seconds& (0+255),f,b
  5110   00003A  2BA4               	incf	(_seconds+1)& (0+255),f,b
  5111   00003C                     
  5112                           ; BSR set to: 0
  5113                           ;interrupts.c: 41:         TMR0H=00001011;
  5114   00003C  0E09               	movlw	9
  5115   00003E  6ED4               	movwf	212,c	;volatile
  5116   000040                     
  5117                           ; BSR set to: 0
  5118                           ;interrupts.c: 42:         TMR0L=11011011;
  5119   000040  0EC3               	movlw	195
  5120   000042  6ED3               	movwf	211,c	;volatile
  5121   000044                     
  5122                           ; BSR set to: 0
  5123                           ;interrupts.c: 43:         PIR0bits.TMR0IF = 0;
  5124   000044  010E               	movlb	14	; () banked
  5125   000046  9B33               	bcf	51,5,b	;volatile
  5126   000048                     i1l2722:
  5127                           
  5128                           ; BSR set to: 14
  5129                           ;interrupts.c: 46:     if(seconds==5)
  5130   000048  0E05               	movlw	5
  5131   00004A  0100               	movlb	0	; () banked
  5132   00004C  19A3               	xorwf	_seconds& (0+255),w,b
  5133   00004E  11A4               	iorwf	(_seconds+1)& (0+255),w,b
  5134   000050  A4D8               	btfss	status,2,c
  5135   000052  EF2D  F000         	goto	i1u187_21
  5136   000056  EF2F  F000         	goto	i1u187_20
  5137   00005A                     i1u187_21:
  5138   00005A  EF40  F000         	goto	i1l205
  5139   00005E                     i1u187_20:
  5140   00005E                     
  5141                           ; BSR set to: 0
  5142                           ;interrupts.c: 47:     {;interrupts.c: 48:         LATDbits.LATD7 = !LATDbits.LATD7;
  5143   00005E  AE7C               	btfss	124,7,c	;volatile
  5144   000060  EF34  F000         	goto	i1u188_21
  5145   000064  EF38  F000         	goto	i1u188_20
  5146   000068                     i1u188_21:
  5147   000068  6A02               	clrf	??_LowISR^0,c
  5148   00006A  2A02               	incf	??_LowISR^0,f,c
  5149   00006C  EF39  F000         	goto	i1u189_28
  5150   000070                     i1u188_20:
  5151   000070  6A02               	clrf	??_LowISR^0,c
  5152   000072                     i1u189_28:
  5153   000072  3202               	rrcf	??_LowISR^0,f,c
  5154   000074  3202               	rrcf	??_LowISR^0,f,c
  5155   000076  507C               	movf	124,w,c	;volatile
  5156   000078  1802               	xorwf	??_LowISR^0,w,c
  5157   00007A  0B7F               	andlw	-129
  5158   00007C  1802               	xorwf	??_LowISR^0,w,c
  5159   00007E  6E7C               	movwf	124,c	;volatile
  5160   000080                     i1l205:
  5161                           
  5162                           ;interrupts.c: 50:     if (hour==5)
  5163   000080  0E05               	movlw	5
  5164   000082  0100               	movlb	0	; () banked
  5165   000084  19A1               	xorwf	_hour& (0+255),w,b
  5166   000086  11A2               	iorwf	(_hour+1)& (0+255),w,b
  5167   000088  A4D8               	btfss	status,2,c
  5168   00008A  EF49  F000         	goto	i1u190_21
  5169   00008E  EF4B  F000         	goto	i1u190_20
  5170   000092                     i1u190_21:
  5171   000092  EF4C  F000         	goto	i1l207
  5172   000096                     i1u190_20:
  5173   000096                     
  5174                           ; BSR set to: 0
  5175                           ;interrupts.c: 51:     {;interrupts.c: 52:         LATHbits.LATH3 = 1;
  5176   000096  8680               	bsf	128,3,c	;volatile
  5177   000098                     i1l207:
  5178                           
  5179                           ; BSR set to: 0
  5180   000098  C005  FFE0         	movff	??_LowISR+3,bsr
  5181   00009C  C004  FFE8         	movff	??_LowISR+2,wreg
  5182   0000A0  C003  FFD8         	movff	??_LowISR+1,status
  5183   0000A4  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5184   0000A6  0010               	retfie	
  5185   0000A8                     __end_of_LowISR:
  5186                           	callstack 0
  5187                           
  5188 ;; *************** function _HighISR *****************
  5189 ;; Defined at:
  5190 ;;		line 28 in file "interrupts.c"
  5191 ;; Parameters:    Size  Location     Type
  5192 ;;		None
  5193 ;; Auto vars:     Size  Location     Type
  5194 ;;		None
  5195 ;; Return value:  Size  Location     Type
  5196 ;;                  1    wreg      void 
  5197 ;; Registers used:
  5198 ;;		wreg, status,2, status,0
  5199 ;; Tracked objects:
  5200 ;;		On entry : 0/0
  5201 ;;		On exit  : 0/0
  5202 ;;		Unchanged: 0/0
  5203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5206 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5207 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5208 ;;Total ram usage:        1 bytes
  5209 ;; Hardware stack levels used: 1
  5210 ;; This function calls:
  5211 ;;		Nothing
  5212 ;; This function is called by:
  5213 ;;		Interrupt level 2
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217                           	psect	intcode
  5218   000008                     __pintcode:
  5219                           	callstack 0
  5220   000008                     _HighISR:
  5221                           	callstack 20
  5222                           
  5223                           ; BSR set to: 0
  5224                           ;incstack = 0
  5225   000008  8255               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5226   00000A  EFE0  F00F         	goto	int_func
  5227                           
  5228                           	psect	intcode_body
  5229   001FC0                     __pintcode_body:
  5230                           	callstack 20
  5231   001FC0                     int_func:
  5232                           	callstack 20
  5233   001FC0                     
  5234                           ;interrupts.c: 30:         if(PIR2bits.C1IF){
  5235   001FC0  010E               	movlb	14	; () banked
  5236   001FC2  A135               	btfss	53,0,b	;volatile
  5237   001FC4  EFE6  F00F         	goto	i2u90_41
  5238   001FC8  EFE8  F00F         	goto	i2u90_40
  5239   001FCC                     i2u90_41:
  5240   001FCC  EFFC  F00F         	goto	i2l199
  5241   001FD0                     i2u90_40:
  5242   001FD0                     
  5243                           ; BSR set to: 14
  5244                           ;interrupts.c: 31:         LATHbits.LATH3 = !LATHbits.LATH3;
  5245   001FD0  A680               	btfss	128,3,c	;volatile
  5246   001FD2  EFED  F00F         	goto	i2u91_41
  5247   001FD6  EFF1  F00F         	goto	i2u91_40
  5248   001FDA                     i2u91_41:
  5249   001FDA  6A01               	clrf	??_HighISR^0,c
  5250   001FDC  2A01               	incf	??_HighISR^0,f,c
  5251   001FDE  EFF2  F00F         	goto	i2u92_48
  5252   001FE2                     i2u91_40:
  5253   001FE2  6A01               	clrf	??_HighISR^0,c
  5254   001FE4                     i2u92_48:
  5255   001FE4  4601               	rlncf	??_HighISR^0,f,c
  5256   001FE6  4601               	rlncf	??_HighISR^0,f,c
  5257   001FE8  4601               	rlncf	??_HighISR^0,f,c
  5258   001FEA  5080               	movf	128,w,c	;volatile
  5259   001FEC  1801               	xorwf	??_HighISR^0,w,c
  5260   001FEE  0BF7               	andlw	-9
  5261   001FF0  1801               	xorwf	??_HighISR^0,w,c
  5262   001FF2  6E80               	movwf	128,c	;volatile
  5263   001FF4                     
  5264                           ;interrupts.c: 32:         PIR2bits.C1IF=0;
  5265   001FF4  010E               	movlb	14	; () banked
  5266   001FF6  9135               	bcf	53,0,b	;volatile
  5267   001FF8                     i2l199:
  5268                           
  5269                           ; BSR set to: 14
  5270   001FF8  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5271   001FFA  0011               	retfie		f
  5272   001FFC                     __end_of_HighISR:
  5273                           	callstack 0
  5274                           
  5275                           	psect	rparam
  5276   000000                     
  5277                           	psect	temp
  5278   000055                     btemp:
  5279                           	callstack 0
  5280   000055                     	ds	1
  5281   000000                     int$flags	set	btemp
  5282   000000                     wtemp8	set	btemp+1
  5283   000000                     ttemp5	set	btemp+1
  5284   000000                     ttemp6	set	btemp+4
  5285   000000                     ttemp7	set	btemp+8
  5286                           
  5287                           	psect	idloc
  5288                           
  5289                           ;Config register IDLOC0 @ 0x200000
  5290                           ;	unspecified, using default values
  5291   200000                     	org	2097152
  5292   200000  0FFF               	dw	4095
  5293                           
  5294                           ;Config register IDLOC1 @ 0x200002
  5295                           ;	unspecified, using default values
  5296   200002                     	org	2097154
  5297   200002  0FFF               	dw	4095
  5298                           
  5299                           ;Config register IDLOC2 @ 0x200004
  5300                           ;	unspecified, using default values
  5301   200004                     	org	2097156
  5302   200004  0FFF               	dw	4095
  5303                           
  5304                           ;Config register IDLOC3 @ 0x200006
  5305                           ;	unspecified, using default values
  5306   200006                     	org	2097158
  5307   200006  0FFF               	dw	4095
  5308                           
  5309                           ;Config register IDLOC4 @ 0x200008
  5310                           ;	unspecified, using default values
  5311   200008                     	org	2097160
  5312   200008  0FFF               	dw	4095
  5313                           
  5314                           ;Config register IDLOC5 @ 0x20000A
  5315                           ;	unspecified, using default values
  5316   20000A                     	org	2097162
  5317   20000A  0FFF               	dw	4095
  5318                           
  5319                           ;Config register IDLOC6 @ 0x20000C
  5320                           ;	unspecified, using default values
  5321   20000C                     	org	2097164
  5322   20000C  0FFF               	dw	4095
  5323                           
  5324                           ;Config register IDLOC7 @ 0x20000E
  5325                           ;	unspecified, using default values
  5326   20000E                     	org	2097166
  5327   20000E  0FFF               	dw	4095
  5328                           
  5329                           	psect	config
  5330                           
  5331                           ;Config register CONFIG1L @ 0x300000
  5332                           ;	External Oscillator mode Selection bits
  5333                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5334                           ;	Power-up default value for COSC bits
  5335                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5336   300000                     	org	3145728
  5337   300000  AA                 	db	170
  5338                           
  5339                           ;Config register CONFIG1H @ 0x300001
  5340                           ;	unspecified, using default values
  5341                           ;	Clock Out Enable bit
  5342                           ;	CLKOUTEN = 0x1, unprogrammed default
  5343                           ;	Clock Switch Enable bit
  5344                           ;	CSWEN = 0x1, unprogrammed default
  5345                           ;	Fail-Safe Clock Monitor Enable bit
  5346                           ;	FCMEN = 0x1, unprogrammed default
  5347   300001                     	org	3145729
  5348   300001  FF                 	db	255
  5349                           
  5350                           ;Config register CONFIG2L @ 0x300002
  5351                           ;	unspecified, using default values
  5352                           ;	Master Clear Enable bit
  5353                           ;	MCLRE = 0x1, unprogrammed default
  5354                           ;	Power-up Timer Enable bit
  5355                           ;	PWRTE = 0x1, unprogrammed default
  5356                           ;	Low-power BOR enable bit
  5357                           ;	LPBOREN = 0x1, unprogrammed default
  5358                           ;	Brown-out Reset Enable bits
  5359                           ;	BOREN = 0x3, unprogrammed default
  5360   300002                     	org	3145730
  5361   300002  FF                 	db	255
  5362                           
  5363                           ;Config register CONFIG2H @ 0x300003
  5364                           ;	unspecified, using default values
  5365                           ;	Brown Out Reset Voltage selection bits
  5366                           ;	BORV = 0x3, unprogrammed default
  5367                           ;	ZCD Disable bit
  5368                           ;	ZCD = 0x1, unprogrammed default
  5369                           ;	PPSLOCK bit One-Way Set Enable bit
  5370                           ;	PPS1WAY = 0x1, unprogrammed default
  5371                           ;	Stack Full/Underflow Reset Enable bit
  5372                           ;	STVREN = 0x1, unprogrammed default
  5373                           ;	Debugger Enable bit
  5374                           ;	DEBUG = 0x1, unprogrammed default
  5375                           ;	Extended Instruction Set Enable bit
  5376                           ;	XINST = 0x1, unprogrammed default
  5377   300003                     	org	3145731
  5378   300003  FF                 	db	255
  5379                           
  5380                           ;Config register CONFIG3L @ 0x300004
  5381                           ;	WDT Period Select bits
  5382                           ;	WDTCPS = 0x1F, unprogrammed default
  5383                           ;	WDT operating mode
  5384                           ;	WDTE = OFF, WDT Disabled
  5385   300004                     	org	3145732
  5386   300004  9F                 	db	159
  5387                           
  5388                           ;Config register CONFIG3H @ 0x300005
  5389                           ;	unspecified, using default values
  5390                           ;	WDT Window Select bits
  5391                           ;	WDTCWS = 0x7, unprogrammed default
  5392                           ;	WDT input clock selector
  5393                           ;	WDTCCS = 0x7, unprogrammed default
  5394   300005                     	org	3145733
  5395   300005  FF                 	db	255
  5396                           
  5397                           ;Config register CONFIG4L @ 0x300006
  5398                           ;	unspecified, using default values
  5399                           ;	Write Protection Block 0
  5400                           ;	WRT0 = 0x1, unprogrammed default
  5401                           ;	Write Protection Block 1
  5402                           ;	WRT1 = 0x1, unprogrammed default
  5403                           ;	Write Protection Block 2
  5404                           ;	WRT2 = 0x1, unprogrammed default
  5405                           ;	Write Protection Block 3
  5406                           ;	WRT3 = 0x1, unprogrammed default
  5407                           ;	Write Protection Block 3
  5408                           ;	WRT4 = 0x1, unprogrammed default
  5409                           ;	Write Protection Block 3
  5410                           ;	WRT5 = 0x1, unprogrammed default
  5411                           ;	Write Protection Block 3
  5412                           ;	WRT6 = 0x1, unprogrammed default
  5413                           ;	Write Protection Block 3
  5414                           ;	WRT7 = 0x1, unprogrammed default
  5415   300006                     	org	3145734
  5416   300006  FF                 	db	255
  5417                           
  5418                           ;Config register CONFIG4H @ 0x300007
  5419                           ;	unspecified, using default values
  5420                           ;	Configuration Register Write Protection bit
  5421                           ;	WRTC = 0x1, unprogrammed default
  5422                           ;	Boot Block Write Protection bit
  5423                           ;	WRTB = 0x1, unprogrammed default
  5424                           ;	Data EEPROM Write Protection bit
  5425                           ;	WRTD = 0x1, unprogrammed default
  5426                           ;	Scanner Enable bit
  5427                           ;	SCANE = 0x1, unprogrammed default
  5428                           ;	Low Voltage Programming Enable bit
  5429                           ;	LVP = 0x1, unprogrammed default
  5430   300007                     	org	3145735
  5431   300007  FF                 	db	255
  5432                           
  5433                           ;Config register CONFIG5L @ 0x300008
  5434                           ;	unspecified, using default values
  5435                           ;	UserNVM Program Memory Code Protection bit
  5436                           ;	CP = 0x1, unprogrammed default
  5437                           ;	DataNVM Memory Code Protection bit
  5438                           ;	CPD = 0x1, unprogrammed default
  5439   300008                     	org	3145736
  5440   300008  FF                 	db	255
  5441                           
  5442                           ;Config register CONFIG5H @ 0x300009
  5443                           ;	unspecified, using default values
  5444   300009                     	org	3145737
  5445   300009  FF                 	db	255
  5446                           
  5447                           ;Config register CONFIG6L @ 0x30000A
  5448                           ;	unspecified, using default values
  5449                           ;	Table Read Protection Block 0
  5450                           ;	EBTR0 = 0x1, unprogrammed default
  5451                           ;	Table Read Protection Block 1
  5452                           ;	EBTR1 = 0x1, unprogrammed default
  5453                           ;	Table Read Protection Block 2
  5454                           ;	EBTR2 = 0x1, unprogrammed default
  5455                           ;	Table Read Protection Block 3
  5456                           ;	EBTR3 = 0x1, unprogrammed default
  5457                           ;	Table Read Protection Block 4
  5458                           ;	EBTR4 = 0x1, unprogrammed default
  5459                           ;	Table Read Protection Block 5
  5460                           ;	EBTR5 = 0x1, unprogrammed default
  5461                           ;	Table Read Protection Block 6
  5462                           ;	EBTR6 = 0x1, unprogrammed default
  5463                           ;	Table Read Protection Block 7
  5464                           ;	EBTR7 = 0x1, unprogrammed default
  5465   30000A                     	org	3145738
  5466   30000A  FF                 	db	255
  5467                           
  5468                           ;Config register CONFIG6H @ 0x30000B
  5469                           ;	unspecified, using default values
  5470                           ;	Boot Block Table Read Protection bit
  5471                           ;	EBTRB = 0x1, unprogrammed default
  5472   30000B                     	org	3145739
  5473   30000B  FF                 	db	255
  5474                           tosu	equ	0xFFF
  5475                           tosh	equ	0xFFE
  5476                           tosl	equ	0xFFD
  5477                           stkptr	equ	0xFFC
  5478                           pclatu	equ	0xFFB
  5479                           pclath	equ	0xFFA
  5480                           pcl	equ	0xFF9
  5481                           tblptru	equ	0xFF8
  5482                           tblptrh	equ	0xFF7
  5483                           tblptrl	equ	0xFF6
  5484                           tablat	equ	0xFF5
  5485                           prodh	equ	0xFF4
  5486                           prodl	equ	0xFF3
  5487                           indf0	equ	0xFEF
  5488                           postinc0	equ	0xFEE
  5489                           postdec0	equ	0xFED
  5490                           preinc0	equ	0xFEC
  5491                           plusw0	equ	0xFEB
  5492                           fsr0h	equ	0xFEA
  5493                           fsr0l	equ	0xFE9
  5494                           wreg	equ	0xFE8
  5495                           indf1	equ	0xFE7
  5496                           postinc1	equ	0xFE6
  5497                           postdec1	equ	0xFE5
  5498                           preinc1	equ	0xFE4
  5499                           plusw1	equ	0xFE3
  5500                           fsr1h	equ	0xFE2
  5501                           fsr1l	equ	0xFE1
  5502                           bsr	equ	0xFE0
  5503                           indf2	equ	0xFDF
  5504                           postinc2	equ	0xFDE
  5505                           postdec2	equ	0xFDD
  5506                           preinc2	equ	0xFDC
  5507                           plusw2	equ	0xFDB
  5508                           fsr2h	equ	0xFDA
  5509                           fsr2l	equ	0xFD9
  5510                           status	equ	0xFD8

Data Sizes:
    Strings     19
    Constant    124
    Data        24
    BSS         49
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     79      84
    BANK0           160     57      69
    BANK1           256    100     166
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2102$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@strdate(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2049$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2049$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    time2String@buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@strdate(BANK1[100]), 

    LCD_sendstring@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@strdate(BANK1[100]), 


Critical Paths under _main in COMRAM

    _main->_time2String
    _timeadjuster->_sunrise
    _timeadjuster->_sunset
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_sendstring->_LCD_sendbyte
    _sunset->___wmul
    _sunrise->___wmul
    _increment->_LEDarray_disp_bin
    _LCD_setline->_LCD_sendbyte
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_time2String
    _time2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               200   200      0   16638
                                              0 BANK1    100   100      0
                           _ADC_init
            _Comp1_init_falling_edge
             _Comp1_init_rising_edge
                    _Interrupts_init
                           _LCD_Init
                        _LCD_setline
                      _LEDarray_init
                        _Timer0_init
                          _day1_init
                    _daylightsavings
                          _increment
                           _poweroff
                    _streetLightInit
                            _sunrise
                             _sunset
                        _time2String
                       _timeadjuster
 ---------------------------------------------------------------------------------
 (1) _timeadjuster                                         8     4      4    1121
                                             18 COMRAM     8     4      4
                            ___awdiv
                            _sunrise (ARG)
                             _sunset (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     805
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _time2String                                         14     2     12   10337
                                             77 COMRAM     2     2      0
                                             45 BANK0     12     0     12
                     _LCD_sendstring
                            ___lwdiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             31    15     16    7316
                                             16 BANK0     29    13     16
                            ___lwdiv (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6830
                                             75 COMRAM     2     2      0
                                             10 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           23    17      6    6369
                                             67 COMRAM     8     2      6
                                              0 BANK0     10    10      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    4802
                                             32 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2533
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1177
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     857
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     961
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_sendstring                                       2     0      2    1272
                                              8 COMRAM     2     0      2
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _sunset                                               7     5      2     843
                                             11 COMRAM     7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _sunrise                                              7     5      2     843
                                             11 COMRAM     7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     772
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _streetLightInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _poweroff                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _increment                                            2     2      0    1025
                                             31 COMRAM     2     2      0
                  _LEDarray_disp_bin
 ---------------------------------------------------------------------------------
 (2) _LEDarray_disp_bin                                   26    24      2    1025
                                              5 COMRAM    26    24      2
 ---------------------------------------------------------------------------------
 (1) _daylightsavings                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _day1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_setline                                          1     1      0    1179
                                              8 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    1241
                                              8 COMRAM     2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendbyte                                         2     1      1    1117
                                              6 COMRAM     2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (4) _LCD_sendnibble                                       1     1      0     124
                                              5 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (5) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init_rising_edge                               0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (1) _Comp1_init_falling_edge                              0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _LowISR                                              4     4      0       0
                                              1 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _HighISR                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Comp1_init_falling_edge
     _DAC_init
   _Comp1_init_rising_edge
     _DAC_init
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_setline
     _LCD_sendbyte
   _LEDarray_init
   _Timer0_init
   _day1_init
   _daylightsavings
   _increment
     _LEDarray_disp_bin
   _poweroff
   _streetLightInit
   _sunrise
     ___wmul
   _sunset
     ___wmul
   _time2String
     _LCD_sendstring
       _LCD_sendbyte
     ___lwdiv
     _sprintf
       ___lwdiv (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _timeadjuster
     ___awdiv
     _sunrise (ARG)
     _sunset (ARG)

 _LowISR (ROOT)

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     64      A6       7       64.8%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     39      45       5       43.1%
BITBIGSFRlhlhh      84      0       0      38        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4F      54       1       89.4%
BITBIGSFRllhh       5C      0       0      41        0.0%
BITBIGSFRhhll       4A      0       0      34        0.0%
BITBIGSFRlhll       33      0       0      40        0.0%
BITBIGSFRllllll     30      0       0      47        0.0%
BITBIGSFRhhlhh      1B      0       0      33        0.0%
BITBIGSFRlhhhhl     14      0       0      35        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRlhlhll      8      0       0      39        0.0%
BITBIGSFRllllh       7      0       0      45        0.0%
BITBIGSFRllhll       7      0       0      43        0.0%
BITBIGSFRlhhl        6      0       0      37        0.0%
BITBIGSFRlhhhl       3      0       0      36        0.0%
BITBIGSFRllhlh       1      0       0      42        0.0%
BITBIGSFRlllllh      1      0       0      46        0.0%
BITBIGSFRlllh        1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13F      48        0.0%
DATA                 0      0     13F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Nov 08 03:28:33 2022

                             _L1 0E59                               _L2 0E55  
                             _L3 0E51                               _L4 0E4D  
                             _L5 0E49                               _L6 0E45  
                             l35 2160                               _P1 0E41  
                             _P2 0E3D                               _P3 0E39  
                             _P4 0E35                               l81 20DE  
                             _P5 0E31                               l85 1722  
                             l88 177C                     ___awdiv@sign 000B  
                             _bp 0E69                               _cp 0E1D  
                             bsr 000FE0              ___wmul@multiplicand 0008  
              ??_Interrupts_init 0006                              l130 218C  
                            l133 2102                              l136 2126  
                            l308 2146                              l421 1D42  
                            l414 21AC                              l430 2092  
                            l423 1D58                              l193 219E  
                            l425 1D66                              l417 1D16  
                            l433 19AC                              l450 1AC4  
                            l419 1D2C                              l428 207A  
                            l444 202E                              l373 1FBE  
                            l453 20B8                              l381 1CFE  
                            l438 2062                              l358 21B6  
                            l390 1C22                              l376 1F42  
                            l369 1694                              l386 1C90  
                            l395 1DC4                              l580 13F8  
                            l567 1294                              l684 190A  
                            l951 1BB2                              l944 1BAA  
__end_of_Comp1_init_falling_edge 2128          __end_of_streetLightInit 21B8  
                            _lg2 0E2D                              _abs 1F44  
                            _pad 1AC6                              _ovt 0E21  
                            wreg 000FE8                             l1131 1E6C  
                           ?_abs 0018                             l3000 207C  
                           l1208 1846                             l1216 1F00  
                           l1153 1AE8                             l3002 2084  
                           l1162 0F1C                             l3010 1E96  
                           l3004 208A                             l1164 0F24  
                           l3012 1EB2                             l3100 18E4  
                           l1157 1B3E                             l1165 0F6A  
                           l3030 1702                             l3022 16A6  
                           l3110 1B40                             l3006 1E6E  
                           l3102 18EA                             l1183 1546  
                           l3200 195C                             l3032 1706  
                           l3024 16C4                             l3016 1696  
                           l3040 1FFC                             l3120 1B78  
                           l3112 1B48                             l1176 110C  
                           l3008 1E7A                             l3104 18FA  
                           l1193 1F7A                             l1409 21B8  
                           l3034 217A                             l3210 198A  
                           l3202 1966                             l3026 16E2  
                           l3042 2000                             l3130 1BA4  
                           l3122 1B7E                             l3114 1B5A  
                           l3050 1E2E                             l3106 1902  
                           l3140 215E                             l3132 2148  
                           l3036 2180                             l3212 1998  
                           l3204 196E                             l3220 204A  
                           l3028 16FC                             l3060 2094  
                           l3044 2012                             l3124 1B94  
                           l3116 1B62                             l1196 1F82  
                           l3052 1E36                             l3300 1BBC  
                           l1189 1EBC                             l3134 2152  
                           l3038 218A                             l3150 20F6  
                           l3214 19A2                             l3206 1978  
                           l3222 2058                             l3142 20BA  
                           l3310 1D68                             l3230 1548  
                           l3062 20B0                             l3046 2016  
                           l3126 1B9C                             l3118 1B6A  
                           l3054 1E3E                             l3070 185A  
                           l3302 1BDC                             l3136 215A  
                           l3160 2106                             l3152 20F8  
                           l3144 20E0                             l3208 1980  
                           l3216 2032                             l3320 1DBE  
                           l3312 1D7E                             l3240 15B2  
                           l3232 1568                             l3128 1B9E  
                           l3056 1E5A                             l3048 1E1C  
                           l3224 1A46                             l3080 1880  
                           l3072 1862                             l3304 1BEC  
                           l3138 215C                             l3170 2122  
                           l3162 2118                             l3154 20FA  
                           l3146 20E2                             l3218 2040  
                           l3314 1D92                             l3250 15EE  
                           l3242 15B6                             l3234 1576  
                           l3226 1AA0                             l3090 18B8  
                           l3082 1888                             l3074 1866  
                           l3066 1848                             l3306 1C02  
                           l3164 211A                             l3156 20FE  
                           l3148 20F4                             l3172 218E  
                           l3180 213A                             l3316 1D96  
                           l3260 1654                             l3252 1602  
                           l3244 15BE                             l3236 1594  
                           l3228 1AAC                             l3092 18BE  
                           l3084 189A                             l3076 1874  
                           l3068 184C                             l3308 1C1A  
                           l3166 211C                             l3158 2104  
                           l3190 1924                             l3182 2144  
                           l3318 1DAA                             l3262 166A  
                           l3254 160A                             l3246 15D2  
                           l3238 159E                             l3270 1FA0  
                           l3174 21AE                             l3094 18D4  
                           l3086 18A2                             l3078 187C  
                           l3168 211E                             l3192 193C  
                           l3176 2128                             l3184 1F02  
                           l3264 1672                             l3256 1646  
                           l3248 15E4                             l3272 1FBC  
                           l3280 1CD4                             l2800 1152  
                           l3096 18DC                             l3088 18AA  
                           l3194 1942                             l3178 2130  
                           l3186 1F40                             l3266 1676  
                           l3258 164E                             l3282 1CF6  
                           l3274 1C92                             l3290 1C58  
                           l2810 11A8                             l2802 1172  
                           l3098 18DE                             l3370 19BA  
                           l3196 194A                             l3188 190C  
                           l3268 1F84                             l3276 1CB4  
                           l3292 1C66                             l2820 122A  
                           l2812 11BC                             l2804 1176  
                           l2900 0ED6                             l3380 19D8  
                           l3372 19BE                             l3198 1954  
                           l3278 1CC6                             l3294 1C88  
                           l3286 1C24                             l2830 1274  
                           l2822 122C                             l2814 11CA  
                           l2806 1182                             l2910 0F42  
                           l2902 0EF6                             l3390 1A1E  
                           l3382 1A0E                             l3374 19C2  
                           l3366 19AE                             l3288 1C46  
                           l2824 123E                             l2816 11DC  
                           l2808 11A0                             l2840 12C8  
                           l2920 0F7C                             l2912 0F52  
                           l2904 0F10                             l3392 1A3A  
                           l3384 1A12                             l3376 19CE  
                           l3368 19B6                             l2818 120A  
                           l2826 1244                             l2850 1320  
                           l2842 12CC                             l2834 1296  
                           l2770 1790                             l2922 0F82  
                           l2930 1074                             l2914 0F5E  
                           l2906 0F2C                             l3298 1BB4  
                           l3386 1A16                             l3378 19D2  
                           l2828 1254                             l2860 13A2  
                           l2852 1334                             l2844 12DA  
                           l2836 129A                             l2772 17A2  
                           l2940 10DC                             l2932 108E  
                           l2924 1004                             l2916 0F66  
                           l2908 0F3C                             l3388 1A1A  
                           l2950 1D18                             l2790 110E  
                           l2854 1342                             l2862 13A8  
                           l2846 12FA                             l2838 12A8  
                           l2774 17AC                             l2782 1EBE  
                           l2870 1AC6                             l2942 10EC  
                           l2934 10AC                             l2926 100A  
                           l2918 0F72                             ?_pad 0016  
                           l2960 1D52                             l2952 1D26  
                           l2792 1112                             l2864 13B8  
                           l2856 1370                             l2848 1318  
                           l2776 17CA                             l2768 177E  
                           l2784 1ECA                             l2880 1B0C  
                           l2872 1AD4                             l2936 10C6  
                           l2928 1010                             l2890 21A2  
                           l2962 1D5A                             l2954 1D2E  
                           l2946 1D02                             l2794 1120  
                           l2866 13D8                             l2858 1390  
                           l2778 1800                             l2786 1EDC  
                           l2882 1B2A                             l2874 1AE0  
                           l2938 10D6                             l2970 142C  
                           l2892 21AA                             l2964 1D5E  
                           l2956 1D3C                             l2948 1D10  
                           l2796 1140                             l2884 1F44  
                           l2788 1EE0                             l2876 1AF4  
                           l2980 1484                             l2972 1438  
                           l2958 1D44                             l2798 1144  
                           l2886 1F5E                             l2878 1B08  
                           l2894 0E92                             l2982 14DC  
                           l2974 143C                             l2990 151E  
                           l2966 13FA                             l2888 21A0  
                           l2896 0EB2                             l2976 144C  
                           l2968 141E                             l2898 0EC6  
                           l2986 150C                             l2978 1468  
                           l2996 2066                             l2998 2074  
                           STR_1 0E7D                             u2000 11CA  
                           u2001 11C6                             u2010 120A  
                           u2011 1206                             u2020 1254  
                           u2100 1B2A                             u2021 1250  
                           u2101 1B26                             u2030 12A8  
                           u2110 1F5E                             u2031 12A4  
                           u2111 1F5A                             u2040 12DA  
                           u2200 10C6                             u2120 0EC2  
                           u2041 12D6                             u2201 10C2  
                           u2121 0EBC                             u2050 1318  
                           u2210 10D6                             u2130 0EC4  
                           u2051 1314                             u2211 10D2  
                           u2220 1D10                             u2060 1342  
                           u2140 0ED6                             u2300 1EB2  
                           u2221 1D0C                             u2061 133E  
                           u2141 0ED2                             u2301 1EAE  
                           u2230 1D26                             u2310 16C4  
                           u2070 1370                             u2150 0F10  
                           u2231 1D22                             u2311 16C0  
                           u2071 136C                             u2151 0F0C  
                           u2240 1D3C                             u2320 1722  
                           u2080 13B8                             u2160 0F3C  
                           u2241 1D38                             u2321 171E  
                           u2081 13B4                             u2161 0F38  
                           u2250 1D52                             u2090 1AD4  
                           u2170 0F52                             u2251 1D4E  
                           u2091 1AD0                             u2171 0F4E  
                           u2420 202E                             u2500 1B78  
                           u2180 108E                             u2260 141E  
                           u2405 1770                             u2421 202A  
                           u2501 1B74                             u2181 108A  
                           u2261 141A                             u2406 1772  
                           u2510 1B94                             u2190 10AC  
                           u2270 1468                             u2430 185A  
                           u2415 177A                             u2335 172A  
                           u2511 1B90                             u2191 10A8  
                           u2271 1464                             u2431 1856  
                           u2520 2040                             u2416 177C  
                           u2336 172C                             u2600 166A  
                           u2280 1484                             u2440 1874  
                           u2521 203C                             u2345 1734  
                           u2601 1666                             u2281 1480  
                           u2441 1870                             u2290 2074  
                           u2530 2058                             u2346 1736  
                           u2610 1FA0                             u2450 189A  
                           u2291 2070                             u2531 2054  
                           u2355 173E                             u2611 1F9C  
                           u2451 1896                             u2356 1740  
                           u2540 1568                             u2620 1FBC  
                           u2460 18B8                             u2700 1C1A  
                           u2365 1748                             u2541 1564  
                           u2621 1FB8                             u2461 18B4  
                           u2701 1C16                             u2710 1D7E  
                           u2366 174A                             u2550 1594  
                           u2630 1CA4                             u1910 1790  
                           u2470 18D4                             u2711 1D7A  
                           u2375 1752                             u2551 1590  
                           u2631 1C9C                             u1911 178C  
                           u2471 18D0                             u2720 1D92  
                           u2376 1754                             u2560 15B2  
                           u2640 1CC6                             u1920 17A2  
                           u2480 18FA                             u2721 1D8E  
                           u2385 175C                             u2561 15AE  
                           u2641 1CC2                             u1921 179E  
                           u2481 18F6                             u2730 1DAA  
                           u2386 175E                             u2570 15D2  
                           u2650 1CD4                             u2490 1B5A  
                           u1930 17CA                             u2731 1DA6  
                           u2395 1766                             u2571 15CE  
                           u2651 1CD0                             u2491 1B56  
                           u1931 17C6                             u2740 1DBE  
                           u2396 1768                             u2580 1602  
                           u2660 1C36                             u1940 1800  
                           u2741 1DBA                             u2581 15FE  
                           u2661 1C2E                             u1941 17FC  
                           u2590 1646                             u2638 1CA6  
                           u2670 1C58                             u1950 1F00  
                           u2807 192E                             u2591 1642  
                           u2671 1C54                             u1951 1EFC  
                           u2680 1C66                             u1960 1120  
                           u2817 1944                             u2681 1C62  
                           u1961 111C                             u1970 1152  
                           u2690 1C02                             u2827 1956  
                           u1971 114E                             u2691 1BFE  
                           u2668 1C38                             u2837 1968  
                           u1981 117C                             u1990 11A0  
                           u2847 197A                             u1991 119C  
                           u2857 1990                             u2867 208C  
                           u2877 1D60                             u2797 1AB6  
                           u2887 21A4                             abs@a 0018  
                           _dbuf 016A                             _cp_h 0E79  
                           _cp_l 0E75                             _dp_h 0E09  
                           _dp_l 0E01                             _main 19AE  
                           _dtoa 0E92                             _huge 0E61  
                           _hour 00A1                             _prec 0052  
                           _year 0099                             pad@i 001D  
                           pad@p 001A                             _tiny 0E5D  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           indf2 000FDF                             fsr1l 000FE1  
                           pad@w 001F                             fsr2l 000FD9  
                           btemp 0055                     ?_LCD_setline 0001  
                           prodh 000FF4                             prodl 000FF3  
                           start 00A8                 __end_of_ADC_init 2162  
                    main@strdate 0100                 __end_of_DAC_init 218E  
                __end_of_HighISR 1FFC                     ___param_bank 000000  
                          ??_abs 001A                            ??_pad 001C  
               __end_of_LCD_Init 19AE                  __end_of___aodiv 1296  
                          ?_main 0001                            ?_dtoa 0021  
                __end_of___aomod 13FA                            _ADPCH 000F5F  
                __end_of___awdiv 190C                  ___awdiv@divisor 0008  
                __end_of___lwdiv 1BB4                            i1l205 0080  
                          i1l207 0098                            i2l199 1FF8  
                ___awdiv@counter 000A                     vfpfcnvrt@fmt 0046  
                          _TMR0H 000FD4                            _TMR0L 000FD3  
                _daylightsavings 1D68                            _lg2_h 0E29  
                          _lg2_l 0E25                            _flags 0054  
                          _errno 0168                            _ivln2 0E19  
                          _fputc 177E                            _fputs 1EBE  
                __end_of_ivln2_h 0E75                  __end_of_ivln2_l 0E19  
                          _two24 0E65                            _month 018A  
                          pad@fp 0016                            _width 0050  
                          _putch 21B8                            dtoa@d 0023  
                          dtoa@i 0042                            dtoa@n 0039  
                          dtoa@p 0035                            dtoa@s 0041  
                          dtoa@w 0037                    ?_LCD_sendbyte 0007  
                          tablat 000FF5          timeadjuster@sunset_time 0015  
                          ttemp5 0056                            ttemp6 0059  
                          ttemp7 005D                            status 000FD8  
                          wtemp8 0056                  __end_of_sprintf 1E6E  
                __end_of_sunrise 1D00                  __initialization 1DC6  
                   __end_of_cp_h 0E7D                     __end_of_cp_l 0E79  
                   __end_of_dp_h 0E11                     __end_of_dp_l 0E09  
                   __end_of_main 1A46                     __end_of_dtoa 110E  
                   __end_of_huge 0E65                     __end_of_tiny 0E61  
              __end_of_LCD_E_TOG 21AE                           ??_main 0050  
                         ??_dtoa 002B                    __activetblptr 000001  
               ?_streetLightInit 0001                     ?_time2String 008D  
                         ?_fputc 0006                           ?_fputs 000F  
                         _ADRESH 000F64                   ??_LCD_sendbyte 0008  
               ___awdiv@dividend 0006                           ?_putch 0001  
                         i1l2720 0044                           i1l2712 0026  
                         i1l2714 0036                           i1l2722 0048  
                         i1l2724 005E                           i1l2716 003C  
                         i1l2726 0096                           i1l2718 0040  
                         i2l2060 1FD0                           i2l2062 1FF4  
                         i2l2058 1FC0                        ??_HighISR 0001  
              _LEDarray_disp_bin 1696                           _LowISR 0018  
             ?_LEDarray_disp_bin 0006                    ??_Timer0_init 0006  
                   vfprintf@cfmt 004C                        ??___aodiv 0016  
                      ??___aomod 0016                           ___wmul 2094  
                      ??___awdiv 000A                        ??___lwdiv 000A  
          LEDarray_disp_bin@mask 001C          __end_of_daylightsavings 1DC6  
            ??_LEDarray_disp_bin 0008                           clear_0 1DEC  
               ___awdiv@quotient 000C                           isa$std 000001  
                         pad@buf 0018                           dtoa@fp 0021  
                         _sunset 1C24                           fputc@c 0006  
              sunset@sunset_time 0011                           fputs@c 0013  
                         fputs@i 0014                           fputs@s 000F  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                      ?_ADC_init 0001                 __end_of_poweroff 1FC0  
                         putch@c 0001                        ?_DAC_init 0001  
               __end_of_vfprintf 1EBE         timeadjuster@sunrise_time 0013  
               _tiny@sqrtf$F2315 0E11                        ??_sprintf 004E  
                      ??_sunrise 000E        __end_of_LEDarray_disp_bin 177E  
                     __accesstop 0060          __end_of__initialization 1E0A  
                      ?_LCD_Init 0001         ??_Comp1_init_rising_edge 0006  
                  ___rparam_used 000001                    _LEDarray_init 20BA  
                _Interrupts_init 218E                   __pcstackCOMRAM 0001  
                   __pidataBANK1 2162                    __end_of_lg2_h 0E2D  
                  __end_of_lg2_l 0E29                    __end_of_ivln2 0E1D  
                  __end_of_fputc 1848                    __end_of_fputs 1F02  
                  __end_of_two24 0E69                    __end_of_putch 21BA  
                     __end_of_L1 0E5D                       __end_of_L2 0E59  
                     __end_of_L3 0E55                       __end_of_L4 0E51  
                     __end_of_L5 0E4D                       __end_of_L6 0E49  
                     __end_of_P1 0E45                       __end_of_P2 0E41  
                     __end_of_P3 0E3D                       __end_of_P4 0E39  
                     __end_of_P5 0E35              __end_of_Timer0_init 2148  
                     __end_of_bp 0E71                       __end_of_cp 0E21  
                     ??_ADC_init 0006                       ??_DAC_init 0006  
                        ??_fputc 000A                          ??_fputs 0013  
                        ??_putch 0006                       __pbssBANK0 009F  
                     __pbssBANK1 0164                       ??_LCD_Init 0009  
                 _LCD_sendnibble 1D00                   ?_LEDarray_init 0001  
            sunrise@sunrise_time 0011                   _LCD_sendstring 1FFC  
                        ?_LowISR 0001                     _day_of_month 01A2  
         timeadjuster@adjustment 0019                          ?___wmul 0006  
           __end_of_LCD_sendbyte 2094                 ?_daylightsavings 0001  
                        ?_sunset 000C                __end_of_day1_init 1F44  
                     _comp_check 009F                          i2u90_40 1FD0  
                        i2u90_41 1FCC                          i2u91_40 1FE2  
                        i2u91_41 1FDA                          i2u92_48 1FE4  
         __end_of_LCD_sendnibble 1D68          __end_of_Interrupts_init 21A0  
               sunrise@prevState 000F                          _HighISR 0008  
         __end_of_LCD_sendstring 2030                        _ADREFbits 000F58  
        _Comp1_init_falling_edge 2104                          __Hparam 0000  
                        __Lparam 0000                      _Timer0_init 2128  
                        ___aodiv 110E                          ___aomod 1296  
                        ___awdiv 1848                        ?_poweroff 0001  
                        ___lwdiv 1B40                        ?_vfprintf 006A  
                   __psmallconst 0E00                          __pcinit 1DC6  
                        __ramtop 0E00                          __ptext0 19AE  
                        __ptext1 1BB4                          __ptext2 1848  
                        __ptext3 1A46                          __ptext4 1E1C  
                        __ptext5 1E6E                          __ptext6 13FA  
                        __ptext7 0E92                          __ptext8 1AC6  
                        __ptext9 1EBE                __end_of_increment 1696  
                        _ivln2_h 0E71                          _ivln2_l 0E15  
                        _seconds 00A3                        _LCD_E_TOG 21A0  
                LCD_setline@line 0009                          _sprintf 1E1C  
                 __pintcode_body 1FC0                          _sunrise 1C92  
           end_of_initialization 1E0A                  ?_LCD_sendnibble 0001  
                  ?_timeadjuster 0013                          fputc@fp 0008  
                ??_LEDarray_init 0006                          int_func 1FC0  
                        fputs@fp 0011                  ?_LCD_sendstring 0009  
              __end_of_vfpfcnvrt 1548                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
               vfpfcnvrt@convarg 0060         __end_of_tiny@sqrtf$F2315 0E15  
                     ??_poweroff 0006                       ??_vfprintf 004C  
         _Comp1_init_rising_edge 20E0                       ?_LCD_E_TOG 0001  
                      _TRISAbits 000F81                        _TRISBbits 000F82  
                      _TRISCbits 000F83                        _TRISDbits 000F84  
                      _TRISEbits 000F85                        _TRISFbits 000F86  
                      _TRISGbits 000F87                        _TRISHbits 000F88  
                 ??_timeadjuster 0017        ??_Comp1_init_falling_edge 0006  
                    _CM1CON0bits 000ED0                      _CM1CON1bits 000ED1  
               ?_Interrupts_init 0001                  sunset@prevState 000F  
                 __end_of_LowISR 00A8                      vfpfcnvrt@ap 0048  
                    vfpfcnvrt@cp 0068                      vfpfcnvrt@fp 0044  
                 __end_of___wmul 20BA             LCD_sendnibble@number 0006  
                 __end_of_sunset 1C92              start_initialization 1DC6  
                    __end_of_lg2 0E31                      __end_of_abs 1F84  
                    __end_of_pad 1B40                      __end_of_ovt 0E25  
                   _LCD_sendbyte 2064                    ??_LCD_setline 0009  
                       ??_LowISR 0002                      vfprintf@fmt 006C  
           LEDarray_disp_bin@ctr 001E             LCD_sendstring@string 0009  
                       ??___wmul 000A                      __pdataBANK1 018A  
                       ??_sunset 000E                      __pbssCOMRAM 0050  
                    ??_LCD_E_TOG 0006                    __pcstackBANK0 0060  
                  __pcstackBANK1 0100                 ___aodiv@dividend 0006  
                      _day1_init 1F02                         ?_HighISR 0001  
                      __pnvBANK0 0099                        __pnvBANK1 01A2  
              ??_streetLightInit 0006                 ___lwdiv@dividend 0006  
                      _dtoa$2130 0033                     ?_Timer0_init 0001  
                    _day_of_week 009B                      _day_of_year 01A4  
                      __pintcode 0008                         ?___aodiv 0006  
                       ?___aomod 0006                         ?___awdiv 0006  
               ___aodiv@quotient 0018         LEDarray_disp_bin@led_arr 000A  
            __end_of_LCD_setline 2064                         ?___lwdiv 0006  
           __end_of_timeadjuster 1C24                      __pintcodelo 0018  
                      fabsf@F465 0164                      __smallconst 0E00  
                  ??_time2String 004E                 ??_LCD_sendnibble 0006  
                       _ADC_init 2148                        _increment 1548  
                       _DAC_init 217A                 ___lwdiv@quotient 000B  
                     ?_day1_init 0001                 ??_LCD_sendstring 000B  
                       ?_sprintf 0070                         ?_sunrise 000C  
               LCD_sendbyte@Byte 0008                         _LCD_Init 190C  
               LCD_sendbyte@type 0007                   ___wmul@product 000A  
                       _LATAbits 000F79                         _LATBbits 000F7A  
                       _LATCbits 000F7B                         _LATDbits 000F7C  
                       _LATEbits 000F7D                         _LATFbits 000F7E  
                       _LATGbits 000F7F                         _LATHbits 000F80  
                       _IPR0bits 000E1F                         _PIE0bits 000E29  
                       _IPR2bits 000E21                         _PIE2bits 000E2B  
                       i1u190_20 0096                         i1u190_21 0092  
                       i1u186_20 0036                         i1u186_21 0032  
                       i1u187_20 005E                         i1u187_21 005A  
                       i1u188_20 0070                         i1u188_21 0068  
                       i1u189_28 0072                         _PIR0bits 000E33  
                       _PIR2bits 000E35                        _month_num 009D  
                   time2String@d 0093                     time2String@h 008F  
                   time2String@m 0095                     time2String@s 0091  
                   time2String@y 0097          ?_Comp1_init_rising_edge 0001  
                      _vfpfcnvrt 13FA                       _ADCON0bits 000F60  
              ___wmul@multiplier 0006            timeadjuster@solarnoon 0017  
                     ?_increment 0001                       _CM1NCHbits 000ED2  
                     _CM1PCHbits 000ED3                        copy_data0 1DDA  
            __end_of_time2String 1AC6            __end_of_LEDarray_init 20E0  
                    _LCD_setline 2030                         __Hrparam 0000  
                     vfprintf@ap 006E                         __Lrparam 0000  
                     vfprintf@fp 006A                     __Lsmallconst 0E00  
 __end_of_Comp1_init_rising_edge 2104                       ?_vfpfcnvrt 0044  
                ___aodiv@divisor 000E                  ___aodiv@counter 0016  
                     _ANSELAbits 000E92                       sprintf@fmt 0072  
                     _T0CON0bits 000FD5                       _T0CON1bits 000FD6  
                ___lwdiv@divisor 0008                  ___lwdiv@counter 000A  
                       __ptext10 177E                         __ptext11 21B8  
                       __ptext20 21AE                         __ptext12 1F44  
                       __ptext21 1F84                         __ptext13 1296  
                       __ptext30 2064                         __ptext22 1548  
                       __ptext14 110E                         __ptext31 1D00  
                       __ptext23 1696                         __ptext15 1B40  
                       __ptext32 21A0                         __ptext24 1D68  
                       __ptext16 1FFC                         __ptext33 218E  
                       __ptext25 1F02                         __ptext17 1C24  
                       __ptext34 20E0                         __ptext26 2128  
                       __ptext18 1C92                         __ptext35 2104  
                       __ptext27 20BA                         __ptext19 2094  
                       __ptext36 217A                         __ptext28 2030  
                       __ptext37 2148                         __ptext29 190C  
                    ??_day1_init 0006          LEDarray_disp_bin@number 0006  
              ??_daylightsavings 0006                         isa$xinst 000000  
                       int$flags 0055                         _poweroff 1F84  
                       _vfprintf 1E6E                 ___aomod@dividend 0006  
                     _INTCONbits 000FF2                      _time2String 1A46  
                    ??_increment 0020         ?_Comp1_init_falling_edge 0001  
                _streetLightInit 21AE                         intlevel1 0000  
                       intlevel2 0000                        sprintf@ap 0080  
                   _timeadjuster 1BB4                     _DAC1CON0bits 000EC6  
                   _DAC1CON1bits 000EC7                   time2String@buf 008D  
                ___aomod@divisor 000E                      ??_vfpfcnvrt 004A  
                ___aomod@counter 0016                         sprintf@f 0082  
                       sprintf@s 0070                     ___aodiv@sign 0017  
                   ___aomod@sign 0017  
